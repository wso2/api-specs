openapi: 3.0.1
servers:
  - url: https://api.ote-godaddy.com/
info:
  x-ballerina-display:
    label: GoDaddy Domains
    iconPath: "icon.png"
  version: v1
  title: Godaddy Domains API
  description: >-
    This is a generated connector for [GoDaddy Domains API
    v1](https://developer.godaddy.com/doc/endpoint/domains) OpenAPI
    specification. The GoDaddy Domains API provides capability to access GoDaddy
    operations related to domains.
  x-ballerina-init-description: >-
    The connector initialization requires setting the API credentials.  Create a
    [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following [this
    guide](https://developer.godaddy.com/getstarted).
  x-marketplace-tags:
    - name: Featured
      description: Featured APIs are hand-picked for display purposes.  
tags:
  - name: v1
    description: ''
  - name: v2
    description: ''
paths:
  /v1/domains:
    get:
      tags:
        - v1
      summary: Retrieve a list of Domains for the specified Shopper
      operationId: listDomains
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID whose domains are to be retrieved
          schema:
            type: string
        - name: statuses
          in: query
          description: Only include results with `status` value in the specified set
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - ACTIVE
                - AWAITING_CLAIM_ACK
                - AWAITING_DOCUMENT_AFTER_TRANSFER
                - AWAITING_DOCUMENT_AFTER_UPDATE_ACCOUNT
                - AWAITING_DOCUMENT_UPLOAD
                - AWAITING_FAILED_TRANSFER_WHOIS_PRIVACY
                - AWAITING_PAYMENT
                - AWAITING_RENEWAL_TRANSFER_IN_COMPLETE
                - AWAITING_TRANSFER_IN_ACK
                - AWAITING_TRANSFER_IN_AUTH
                - AWAITING_TRANSFER_IN_AUTO
                - AWAITING_TRANSFER_IN_WHOIS
                - AWAITING_TRANSFER_IN_WHOIS_FIX
                - AWAITING_VERIFICATION_ICANN
                - AWAITING_VERIFICATION_ICANN_MANUAL
                - CANCELLED
                - CANCELLED_HELD
                - CANCELLED_REDEEMABLE
                - CANCELLED_TRANSFER
                - CONFISCATED
                - DISABLED_SPECIAL
                - EXCLUDED_INVALID_CLAIM_FIREHOSE
                - EXPIRED_REASSIGNED
                - FAILED_BACKORDER_CAPTURE
                - FAILED_DROP_IMMEDIATE_THEN_ADD
                - FAILED_PRE_REGISTRATION
                - FAILED_REDEMPTION
                - FAILED_REDEMPTION_REPORT
                - FAILED_REGISTRATION
                - FAILED_REGISTRATION_FIREHOSE
                - FAILED_RESTORATION_REDEMPTION_MOCK
                - FAILED_SETUP
                - FAILED_TRANSFER_IN
                - FAILED_TRANSFER_IN_BAD_STATUS
                - FAILED_TRANSFER_IN_REGISTRY
                - HELD_COURT_ORDERED
                - HELD_DISPUTED
                - HELD_EXPIRATION_PROTECTION
                - HELD_EXPIRED_REDEMPTION_MOCK
                - HELD_REGISTRAR_ADD
                - HELD_REGISTRAR_REMOVE
                - HELD_SHOPPER
                - HELD_TEMPORARY
                - LOCKED_ABUSE
                - LOCKED_COPYRIGHT
                - LOCKED_REGISTRY
                - LOCKED_SUPER
                - PARKED_AND_HELD
                - PARKED_EXPIRED
                - PARKED_VERIFICATION_ICANN
                - PENDING_ABORT_CANCEL_SETUP
                - PENDING_AGREEMENT_PRE_REGISTRATION
                - PENDING_APPLY_RENEWAL_CREDITS
                - PENDING_BACKORDER_CAPTURE
                - PENDING_BLOCKED_REGISTRY
                - PENDING_CANCEL_REGISTRANT_PROFILE
                - PENDING_COMPLETE_REDEMPTION_WITHOUT_RECEIPT
                - PENDING_COMPLETE_REGISTRANT_PROFILE
                - PENDING_COO
                - PENDING_COO_COMPLETE
                - PENDING_DNS
                - PENDING_DNS_ACTIVE
                - PENDING_DNS_INACTIVE
                - PENDING_DOCUMENT_VALIDATION
                - PENDING_DOCUMENT_VERIFICATION
                - PENDING_DROP_IMMEDIATE
                - PENDING_DROP_IMMEDIATE_THEN_ADD
                - PENDING_EPP_CREATE
                - PENDING_EPP_DELETE
                - PENDING_EPP_UPDATE
                - PENDING_ESCALATION_REGISTRY
                - PENDING_EXPIRATION
                - PENDING_EXPIRATION_RESPONSE
                - PENDING_EXPIRATION_SYNC
                - PENDING_EXPIRED_REASSIGNMENT
                - PENDING_EXPIRE_AUTO_ADD
                - PENDING_EXTEND_REGISTRANT_PROFILE
                - PENDING_FAILED_COO
                - PENDING_FAILED_EPP_CREATE
                - PENDING_FAILED_HELD
                - PENDING_FAILED_PURCHASE_PREMIUM
                - PENDING_FAILED_RECONCILE_FIREHOSE
                - PENDING_FAILED_REDEMPTION_WITHOUT_RECEIPT
                - PENDING_FAILED_RELEASE_PREMIUM
                - PENDING_FAILED_RENEW_EXPIRATION_PROTECTION
                - PENDING_FAILED_RESERVE_PREMIUM
                - PENDING_FAILED_SUBMIT_FIREHOSE
                - PENDING_FAILED_TRANSFER_ACK_PREMIUM
                - PENDING_FAILED_TRANSFER_IN_ACK_PREMIUM
                - PENDING_FAILED_TRANSFER_IN_PREMIUM
                - PENDING_FAILED_TRANSFER_PREMIUM
                - PENDING_FAILED_TRANSFER_SUBMIT_PREMIUM
                - PENDING_FAILED_UNLOCK_PREMIUM
                - PENDING_FAILED_UPDATE_API
                - PENDING_FRAUD_VERIFICATION
                - PENDING_FRAUD_VERIFIED
                - PENDING_GET_CONTACTS
                - PENDING_GET_HOSTS
                - PENDING_GET_NAME_SERVERS
                - PENDING_GET_STATUS
                - PENDING_HOLD_ESCROW
                - PENDING_HOLD_REDEMPTION
                - PENDING_LOCK_CLIENT_REMOVE
                - PENDING_LOCK_DATA_QUALITY
                - PENDING_LOCK_THEN_HOLD_REDEMPTION
                - PENDING_PARKING_DETERMINATION
                - PENDING_PARK_INVALID_WHOIS
                - PENDING_PARK_INVALID_WHOIS_REMOVAL
                - PENDING_PURCHASE_PREMIUM
                - PENDING_RECONCILE
                - PENDING_RECONCILE_FIREHOSE
                - PENDING_REDEMPTION
                - PENDING_REDEMPTION_REPORT
                - PENDING_REDEMPTION_REPORT_COMPLETE
                - PENDING_REDEMPTION_REPORT_SUBMITTED
                - PENDING_REDEMPTION_WITHOUT_RECEIPT
                - PENDING_REDEMPTION_WITHOUT_RECEIPT_MOCK
                - PENDING_RELEASE_PREMIUM
                - PENDING_REMOVAL
                - PENDING_REMOVAL_HELD
                - PENDING_REMOVAL_PARKED
                - PENDING_REMOVAL_UNPARK
                - PENDING_RENEWAL
                - PENDING_RENEW_EXPIRATION_PROTECTION
                - PENDING_RENEW_INFINITE
                - PENDING_RENEW_LOCKED
                - PENDING_RENEW_WITHOUT_RECEIPT
                - PENDING_REPORT_REDEMPTION_WITHOUT_RECEIPT
                - PENDING_RESERVE_PREMIUM
                - PENDING_RESET_VERIFICATION_ICANN
                - PENDING_RESPONSE_FIREHOSE
                - PENDING_RESTORATION
                - PENDING_RESTORATION_INACTIVE
                - PENDING_RESTORATION_REDEMPTION_MOCK
                - PENDING_RETRY_EPP_CREATE
                - PENDING_RETRY_HELD
                - PENDING_SEND_AUTH_CODE
                - PENDING_SETUP
                - PENDING_SETUP_ABANDON
                - PENDING_SETUP_AGREEMENT_LANDRUSH
                - PENDING_SETUP_AGREEMENT_SUNRISE2_A
                - PENDING_SETUP_AGREEMENT_SUNRISE2_B
                - PENDING_SETUP_AGREEMENT_SUNRISE2_C
                - PENDING_SETUP_AUTH
                - PENDING_SETUP_DNS
                - PENDING_SETUP_FAILED
                - PENDING_SETUP_REVIEW
                - PENDING_SETUP_SUNRISE
                - PENDING_SETUP_SUNRISE_PRE
                - PENDING_SETUP_SUNRISE_RESPONSE
                - PENDING_SUBMIT_FAILURE
                - PENDING_SUBMIT_FIREHOSE
                - PENDING_SUBMIT_HOLD_FIREHOSE
                - PENDING_SUBMIT_HOLD_LANDRUSH
                - PENDING_SUBMIT_HOLD_SUNRISE
                - PENDING_SUBMIT_LANDRUSH
                - PENDING_SUBMIT_RESPONSE_FIREHOSE
                - PENDING_SUBMIT_RESPONSE_LANDRUSH
                - PENDING_SUBMIT_RESPONSE_SUNRISE
                - PENDING_SUBMIT_SUCCESS_FIREHOSE
                - PENDING_SUBMIT_SUCCESS_LANDRUSH
                - PENDING_SUBMIT_SUCCESS_SUNRISE
                - PENDING_SUBMIT_SUNRISE
                - PENDING_SUBMIT_WAITING_LANDRUSH
                - PENDING_SUCCESS_PRE_REGISTRATION
                - PENDING_SUSPENDED_DATA_QUALITY
                - PENDING_TRANSFER_ACK_PREMIUM
                - PENDING_TRANSFER_IN
                - PENDING_TRANSFER_IN_ACK
                - PENDING_TRANSFER_IN_ACK_PREMIUM
                - PENDING_TRANSFER_IN_BAD_REGISTRANT
                - PENDING_TRANSFER_IN_CANCEL
                - PENDING_TRANSFER_IN_CANCEL_REGISTRY
                - PENDING_TRANSFER_IN_COMPLETE_ACK
                - PENDING_TRANSFER_IN_DELETE
                - PENDING_TRANSFER_IN_LOCK
                - PENDING_TRANSFER_IN_NACK
                - PENDING_TRANSFER_IN_NOTIFICATION
                - PENDING_TRANSFER_IN_PREMIUM
                - PENDING_TRANSFER_IN_RELEASE
                - PENDING_TRANSFER_IN_RESPONSE
                - PENDING_TRANSFER_IN_UNDERAGE
                - PENDING_TRANSFER_OUT
                - PENDING_TRANSFER_OUT_ACK
                - PENDING_TRANSFER_OUT_NACK
                - PENDING_TRANSFER_OUT_PREMIUM
                - PENDING_TRANSFER_OUT_UNDERAGE
                - PENDING_TRANSFER_OUT_VALIDATION
                - PENDING_TRANSFER_PREMIUM
                - PENDING_TRANSFER_PREMUIM
                - PENDING_TRANSFER_SUBMIT_PREMIUM
                - PENDING_UNLOCK_DATA_QUALITY
                - PENDING_UNLOCK_PREMIUM
                - PENDING_UPDATE
                - PENDING_UPDATED_REGISTRANT_DATA_QUALITY
                - PENDING_UPDATE_ACCOUNT
                - PENDING_UPDATE_API
                - PENDING_UPDATE_API_RESPONSE
                - PENDING_UPDATE_AUTH
                - PENDING_UPDATE_CONTACTS
                - PENDING_UPDATE_CONTACTS_PRIVACY
                - PENDING_UPDATE_DNS
                - PENDING_UPDATE_DNS_SECURITY
                - PENDING_UPDATE_ELIGIBILITY
                - PENDING_UPDATE_EPP_CONTACTS
                - PENDING_UPDATE_MEMBERSHIP
                - PENDING_UPDATE_OWNERSHIP
                - PENDING_UPDATE_OWNERSHIP_AUTH_AUCTION
                - PENDING_UPDATE_OWNERSHIP_HELD
                - PENDING_UPDATE_REGISTRANT
                - PENDING_UPDATE_REPO
                - PENDING_VALIDATION_DATA_QUALITY
                - PENDING_VERIFICATION_FRAUD
                - PENDING_VERIFICATION_STATUS
                - PENDING_VERIFY_REGISTRANT_DATA_QUALITY
                - RESERVED
                - RESERVED_PREMIUM
                - REVERTED
                - SUSPENDED_VERIFICATION_ICANN
                - TRANSFERRED_OUT
                - UNLOCKED_ABUSE
                - UNLOCKED_SUPER
                - UNPARKED_AND_UNHELD
                - UPDATED_OWNERSHIP
                - UPDATED_OWNERSHIP_HELD
        - name: statusGroups
          in: query
          description: >-
            Only include results with `status` value in any of the specified
            groups
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - INACTIVE
                - PRE_REGISTRATION
                - REDEMPTION
                - RENEWABLE
                - VERIFICATION_ICANN
                - VISIBLE
        - name: limit
          in: query
          description: Maximum number of domains to return
          schema:
            maximum: 1000
            minimum: 1
            type: integer
        - name: marker
          in: query
          description: Marker Domain to use as the offset in results
          schema:
            type: string
        - name: includes
          in: query
          description: Optional details to be included in the response
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - authCode
                - contacts
                - nameServers
        - name: modifiedDate
          in: query
          description: >-
            Only include results that have been modified since the specified
            date
          schema:
            type: string
            format: iso-datetime
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSummary'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSummary'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSummary'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSummary'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSummary'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Limit must have a value no greater than 1000
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/agreements:
    get:
      tags:
        - v1
      summary: >-
        Retrieve the legal agreement(s) required to purchase the specified TLD
        and add-ons
      operationId: getAgreement
      parameters:
        - name: X-Market-Id
          in: header
          description: >-
            Unique identifier of the Market used to retrieve/translate Legal
            Agreements
          schema:
            type: string
            format: bcp-47
            default: en-US
        - name: tlds
          in: query
          description: list of TLDs whose legal agreements are to be retrieved
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: privacy
          in: query
          description: Whether or not privacy has been requested
          required: true
          schema:
            type: boolean
        - name: forTransfer
          in: query
          description: Whether or not domain tranfer has been requested
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalAgreement'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalAgreement'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalAgreement'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalAgreement'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalAgreement'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/available:
    get:
      tags:
        - v1
      summary: Determine whether or not the specified domain is available for purchase
      operationId: getDomainAvailability
      parameters:
        - name: domain
          in: query
          description: Domain name whose availability is to be checked
          required: true
          schema:
            type: string
        - name: checkType
          in: query
          description: Optimize for time ('FAST') or accuracy ('FULL')
          schema:
            type: string
            default: FAST
            enum:
              - FAST
              - FULL
              - fast
              - full
        - name: forTransfer
          in: query
          description: >-
            Whether or not to include domains available for transfer. If set to
            True, checkType is ignored
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAvailableResponse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainAvailableResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainAvailableResponse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainAvailableResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainAvailableResponse'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Cannot convert domain label error<br>Domain is missing IDN
            script<br>Domain segment ends with dash<br>Domain starts with
            dashbr>Domain uses unsupported IDN script<br>FQDN fails generic
            validity regex<br>Invalid character(s) error<br>Invalid tld
            error<br>Non-IDN domain name must not have dashes at the third and
            fourth position<br>Reserved name error<br>domain must be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - v1
      summary: >-
        Determine whether or not the specified domains are available for
        purchase
      operationId: getDomainsAvailabilityBulk
      parameters:
        - name: checkType
          in: query
          description: Optimize for time ('FAST') or accuracy ('FULL')
          schema:
            type: string
            default: FAST
            enum:
              - FAST
              - FULL
              - fast
              - full
      requestBody:
        description: Domain names for which to check availability
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
          application/xml:
            schema:
              type: array
              items:
                type: string
          text/xml:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulk'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulk'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulk'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulk'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulk'
        '203':
          description: Request was partially successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulkMixed'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulkMixed'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulkMixed'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulkMixed'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainAvailableBulkMixed'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Cannot convert domain label error<br>Domain is missing IDN
            script<br>Domain segment ends with dash<br>Domain starts with
            dash<br>Domain uses unsupported IDN script<br>FQDN fails generic
            validity regex<br>Invalid character(s) error<br>Invalid tld
            error<br>Non-IDN domain name must not have dashes at the third and
            fourth position<br>Reserved name error<br>Reserved name
            error<br>domain must be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: domains
  /v1/domains/contacts/validate:
    post:
      tags:
        - v1
      summary: >-
        Validate the request body using the Domain Contact Validation Schema for
        specified domains.
      description: >-
        All contacts specified in request will be validated against all domains
        specifed in "domains". As an alternative, you can also pass in tlds,
        with the exception of `uk`, which requires full domain names
      operationId: validateContacts
      parameters:
        - name: X-Private-Label-Id
          in: header
          description: PrivateLabelId to operate as, if different from JWT
          schema:
            type: integer
            default: 1
        - name: marketId
          in: query
          description: >-
            MarketId in which the request is being made, and for which responses
            should be localized
          schema:
            type: string
            format: bcp-47
            default: en-US
      requestBody:
        description: An instance document expected for domains contacts validation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsContactsBulk'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainsContactsBulk'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainsContactsBulk'
        required: true
      responses:
        '200':
          description: No response was specified
          content: {}
        '204':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Request body doesn't fulfill schema, see details in `fields`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDomainContactsValidate'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorDomainContactsValidate'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDomainContactsValidate'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorDomainContactsValidate'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorDomainContactsValidate'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/purchase:
    post:
      tags:
        - v1
      summary: Purchase and register the specified Domain
      operationId: purchaseDomain
      parameters:
        - name: X-Shopper-Id
          in: header
          description: The Shopper for whom the domain should be purchased
          schema:
            type: string
      requestBody:
        description: >-
          An instance document expected to match the JSON schema returned by
          `./schema/{tld}`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainPurchase'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainPurchase'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainPurchase'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            domain must be specified<br>Based on restrictions declared in JSON
            schema returned by `./schema/{tld}`<br>Cannot convert domain label
            error<br>Domain is missing IDN script<br>Domain segment ends with
            dash<br>Domain starts with dash<br>Domain uses unsupported IDN
            script<br>FQDN fails generic validity regex<br>Invalid character(s)
            error<br>Invalid tld error<br>Non-IDN domain name must not have
            dashes at the third and fourth position<br>Reserved name
            error<br>`body` must be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/purchase/schema/{tld}:
    get:
      tags:
        - v1
      summary: >-
        Retrieve the schema to be submitted when registering a Domain for the
        specified TLD
      operationId: RetrieveSchema
      parameters:
        - name: tld
          in: path
          description: The Top-Level Domain whose schema should be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
            application/javascript:
              schema:
                $ref: '#/components/schemas/JsonSchema'
            application/xml:
              schema:
                $ref: '#/components/schemas/JsonSchema'
            text/javascript:
              schema:
                $ref: '#/components/schemas/JsonSchema'
            text/xml:
              schema:
                $ref: '#/components/schemas/JsonSchema'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`tld` must be specified'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/purchase/validate:
    post:
      tags:
        - v1
      summary: >-
        Validate the request body using the Domain Purchase Schema for the
        specified TLD
      operationId: validateRequestBody
      requestBody:
        description: >-
          An instance document expected to match the JSON schema returned by
          `./schema/{tld}`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainPurchase'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainPurchase'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainPurchase'
        required: true
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Based on restrictions declared in JSON schema returned by
            `./schema/{tld}`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/suggest:
    get:
      tags:
        - v1
      summary: >-
        Suggest alternate Domain names based on a seed Domain, a set of
        keywords, or the shopper's purchase history
      operationId: suggestDomainNames
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID for which the suggestions are being generated
          schema:
            type: string
        - name: query
          in: query
          description: >-
            Domain name or set of keywords for which alternative domain names
            will be suggested
          schema:
            type: string
        - name: country
          in: query
          description: >-
            Two-letter ISO country code to be used as a hint for target
            region<br/><br/>

            NOTE: These are sample values, there are many

            <a href="http://www.iso.org/iso/country_codes.htm">more</a>
          schema:
            type: string
            format: iso-country-code
            enum:
              - AC
              - AD
              - AE
              - AF
              - AG
              - AI
              - AL
              - AM
              - AO
              - AQ
              - AR
              - AS
              - AT
              - AU
              - AW
              - AX
              - AZ
              - BA
              - BB
              - BD
              - BE
              - BF
              - BG
              - BH
              - BI
              - BJ
              - BM
              - BN
              - BO
              - BQ
              - BR
              - BS
              - BT
              - BV
              - BW
              - BY
              - BZ
              - CA
              - CC
              - CD
              - CF
              - CG
              - CH
              - CI
              - CK
              - CL
              - CM
              - CN
              - CO
              - CR
              - CV
              - CW
              - CX
              - CY
              - CZ
              - DE
              - DJ
              - DK
              - DM
              - DO
              - DZ
              - EC
              - EE
              - EG
              - EH
              - ER
              - ES
              - ET
              - FI
              - FJ
              - FK
              - FM
              - FO
              - FR
              - GA
              - GB
              - GD
              - GE
              - GF
              - GG
              - GH
              - GI
              - GL
              - GM
              - GN
              - GP
              - GQ
              - GR
              - GS
              - GT
              - GU
              - GW
              - GY
              - HK
              - HM
              - HN
              - HR
              - HT
              - HU
              - ID
              - IE
              - IL
              - IM
              - IN
              - IO
              - IQ
              - IS
              - IT
              - JE
              - JM
              - JO
              - JP
              - KE
              - KG
              - KH
              - KI
              - KM
              - KN
              - KR
              - KV
              - KW
              - KY
              - KZ
              - LA
              - LB
              - LC
              - LI
              - LK
              - LR
              - LS
              - LT
              - LU
              - LV
              - LY
              - MA
              - MC
              - MD
              - ME
              - MG
              - MH
              - MK
              - ML
              - MM
              - MN
              - MO
              - MP
              - MQ
              - MR
              - MS
              - MT
              - MU
              - MV
              - MW
              - MX
              - MY
              - MZ
              - NA
              - NC
              - NE
              - NF
              - NG
              - NI
              - NL
              - 'NO'
              - NP
              - NR
              - NU
              - NZ
              - OM
              - PA
              - PE
              - PF
              - PG
              - PH
              - PK
              - PL
              - PM
              - PN
              - PR
              - PS
              - PT
              - PW
              - PY
              - QA
              - RE
              - RO
              - RS
              - RU
              - RW
              - SA
              - SB
              - SC
              - SE
              - SG
              - SH
              - SI
              - SJ
              - SK
              - SL
              - SM
              - SN
              - SO
              - SR
              - ST
              - SV
              - SX
              - SZ
              - TC
              - TD
              - TF
              - TG
              - TH
              - TJ
              - TK
              - TL
              - TM
              - TN
              - TO
              - TP
              - TR
              - TT
              - TV
              - TW
              - TZ
              - UA
              - UG
              - UM
              - US
              - UY
              - UZ
              - VA
              - VC
              - VE
              - VG
              - VI
              - VN
              - VU
              - WF
              - WS
              - YE
              - YT
              - ZA
              - ZM
              - ZW
        - name: city
          in: query
          description: Name of city to be used as a hint for target region
          schema:
            type: string
            format: city-name
        - name: sources
          in: query
          description: >-
            Sources to be queried<br/><br/><ul>

            <li><strong>CC_TLD</strong> - Varies the TLD using Country
            Codes</li>

            <li><strong>EXTENSION</strong> - Varies the TLD</li>

            <li><strong>KEYWORD_SPIN</strong> - Identifies keywords and then
            rotates each one</li>

            <li><strong>PREMIUM</strong> - Includes variations with premium
            prices</li></ul>
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CC_TLD
                - EXTENSION
                - KEYWORD_SPIN
                - PREMIUM
                - cctld
                - extension
                - keywordspin
                - premium
        - name: tlds
          in: query
          description: >-
            Top-level domains to be included in suggestions<br/><br/>

            NOTE: These are sample values, there are many

            <a
            href="http://www.godaddy.com/tlds/gtld.aspx#domain_search_form">more</a>
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: lengthMax
          in: query
          description: Maximum length of second-level domain
          schema:
            type: integer
        - name: lengthMin
          in: query
          description: Minimum length of second-level domain
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of suggestions to return
          schema:
            type: integer
        - name: waitMs
          in: query
          description: |-
            Maximum amount of time, in milliseconds, to wait for responses
            If elapses, return the results compiled up to that point
          schema:
            type: integer
            format: integer-positive
            default: 1000
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSuggestion'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSuggestion'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSuggestion'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSuggestion'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainSuggestion'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`query` must be specified'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/tlds:
    get:
      tags:
        - v1
      summary: Retrieves a list of TLDs supported and enabled for sale
      operationId: listTLDs
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TldSummary'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TldSummary'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TldSummary'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TldSummary'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TldSummary'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/{domain}:
    get:
      tags:
        - v1
      summary: Retrieve details for the specified Domain
      operationId: getDomainDetail
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID expected to own the specified domain
          schema:
            type: string
        - name: domain
          in: path
          description: Domain name whose details are to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainDetail'
        '203':
          description: >-
            Request was partially successful, see verifications.status for
            further detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainDetail'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`domain` must be specified'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - v1
      summary: Cancel a purchased domain
      operationId: cancelDomain
      parameters:
        - name: domain
          in: path
          description: Domain to cancel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The domain does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Unknown domain error<br>At least two apex (aka @) `nameServers` must
            be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - v1
      summary: Update details for the specified Domain
      operationId: updateDomain
      parameters:
        - name: domain
          in: path
          description: Domain whose details are to be updated
          required: true
          schema:
            type: string
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper for whom Domain is to be updated. NOTE: This is only
            required if you are a Reseller managing a domain purchased outside
            the scope of your reseller account. For instance, if you're a
            Reseller, but purchased a Domain via http://www.godaddy.com
          schema:
            type: string
      requestBody:
        description: Changes to apply to existing Domain
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainUpdate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainUpdate'
        required: true
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Specified Subaccount not owned by authenticated Shopper
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: The given domain is not eligible to have its nameservers changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            At least two apex (aka @) `nameServers` must be specified<br>Failed
            to update nameservers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/{domain}/contacts:
    patch:
      tags:
        - v1
      summary: Update domain
      operationId: updateContacts
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper for whom domain contacts are to be updated. NOTE: This is
            only required if you are a Reseller managing a domain purchased
            outside the scope of your reseller account. For instance, if you're
            a Reseller, but purchased a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose Contacts are to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Changes to apply to existing Contacts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainContacts'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainContacts'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainContacts'
        required: true
      responses:
        '200':
          description: No response was specified
          content: {}
        '204':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Domain not found<br>Identity document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`domain` is not a valid Domain name'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: contacts
  /v1/domains/{domain}/privacy:
    delete:
      tags:
        - v1
      summary: Submit a privacy cancellation request for the given domain
      operationId: cancelPrivacy
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID of the owner of the domain
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose privacy is to be cancelled
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The domain does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Customer has purchased Domain Ownership Protection and the domain
            has expired<br>The domain status does not allow performing the
            operation<br>Unknown domain error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/{domain}/privacy/purchase:
    post:
      tags:
        - v1
      summary: Purchase privacy for a specified domain
      operationId: purchasePrivacy
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID of the owner of the domain
          schema:
            type: string
        - name: domain
          in: path
          description: Domain for which to purchase privacy
          required: true
          schema:
            type: string
      requestBody:
        description: Options for purchasing privacy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivacyPurchase'
          application/xml:
            schema:
              $ref: '#/components/schemas/PrivacyPurchase'
          text/xml:
            schema:
              $ref: '#/components/schemas/PrivacyPurchase'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: The domain status does not allow performing the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            End-user must read and consent to all of the following legal
            agreements<br>`domain` must match `sld.tld`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/{domain}/records:
    put:
      tags:
        - v1
      summary: Replace all DNS Records for the specified Domain
      operationId: replaceDNSRecords
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper ID which owns the domain. NOTE: This is only required if you
            are a Reseller managing a domain purchased outside the scope of your
            reseller account. For instance, if you're a Reseller, but purchased
            a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose DNS Records are to be replaced
          required: true
          schema:
            type: string
      requestBody:
        description: DNS Records to replace whatever currently exists
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecord'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecord'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecord'
        required: true
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            `domain` is not a valid Domain name<br>`record` does not fulfill the
            schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: records
    patch:
      tags:
        - v1
      summary: Add the specified DNS Records to the specified Domain
      operationId: addDNSRecord
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper ID which owns the domain. NOTE: This is only required if you
            are a Reseller managing a domain purchased outside the scope of your
            reseller account. For instance, if you're a Reseller, but purchased
            a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose DNS Records are to be augmented
          required: true
          schema:
            type: string
      requestBody:
        description: DNS Records to add to whatever currently exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArrayOfDNSRecord'
          application/xml:
            schema:
              $ref: '#/components/schemas/ArrayOfDNSRecord'
          text/xml:
            schema:
              $ref: '#/components/schemas/ArrayOfDNSRecord'
        required: true
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`domain` is not a valid Domain name'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: records
  /v1/domains/{domain}/records/{type}/{name}:
    get:
      tags:
        - v1
      summary: >-
        Retrieve DNS Records for the specified Domain, optionally with the
        specified Type and/or Name
      operationId: getDNSRecord
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper ID which owns the domain. NOTE: This is only required if you
            are a Reseller managing a domain purchased outside the scope of your
            reseller account. For instance, if you're a Reseller, but purchased
            a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose DNS Records are to be retrieved
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: DNS Record Type for which DNS Records are to be retrieved
          required: true
          schema:
            type: string
            enum:
              - A
              - AAAA
              - CNAME
              - MX
              - NS
              - SOA
              - SRV
              - TXT
        - name: name
          in: path
          description: DNS Record Name for which DNS Records are to be retrieved
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: Number of results to skip for pagination
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: integer
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNSRecord'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNSRecord'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNSRecord'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNSRecord'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DNSRecord'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            `record` does not fulfill the schema<br>`domain` is not a valid
            Domain name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - v1
      summary: >-
        Replace all DNS Records for the specified Domain with the specified Type
        and Name
      operationId: replaceDNSRecordTypeName
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper ID which owns the domain. NOTE: This is only required if you
            are a Reseller managing a domain purchased outside the scope of your
            reseller account. For instance, if you're a Reseller, but purchased
            a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose DNS Records are to be replaced
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: DNS Record Type for which DNS Records are to be replaced
          required: true
          schema:
            type: string
            enum:
              - A
              - AAAA
              - CNAME
              - MX
              - NS
              - SOA
              - SRV
              - TXT
        - name: name
          in: path
          description: DNS Record Name for which DNS Records are to be replaced
          required: true
          schema:
            type: string
      requestBody:
        description: DNS Records to replace whatever currently exists
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecordCreateTypeName'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecordCreateTypeName'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecordCreateTypeName'
        required: true
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`record` does not fulfill the schema'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: records
    delete:
      tags:
        - v1
      summary: >-
        Delete all DNS Records for the specified Domain with the specified Type
        and Name
      operationId: deleteDNSRecordTypeName
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper ID which owns the domain. NOTE: This is only required if you
            are a Reseller managing a domain purchased outside the scope of your
            reseller account. For instance, if you're a Reseller, but purchased
            a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose DNS Records are to be deleted
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: DNS Record Type for which DNS Records are to be deleted
          required: true
          schema:
            type: string
            enum:
              - A
              - AAAA
              - CNAME
              - MX
              - SRV
              - TXT
        - name: name
          in: path
          description: DNS Record Name for which DNS Records are to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Domain not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: The given domain is not eligible to have its records changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`domain` is not a valid Domain name'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/domains/{domain}/records/{type}:
    put:
      tags:
        - v1
      summary: Replace all DNS Records for the specified Domain with the specified Type
      operationId: replaceDNSRecordType
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper ID which owns the domain. NOTE: This is only required if you
            are a Reseller managing a domain purchased outside the scope of your
            reseller account. For instance, if you're a Reseller, but purchased
            a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose DNS Records are to be replaced
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: DNS Record Type for which DNS Records are to be replaced
          required: true
          schema:
            type: string
            enum:
              - A
              - AAAA
              - CNAME
              - MX
              - NS
              - SOA
              - SRV
              - TXT
      requestBody:
        description: DNS Records to replace whatever currently exists
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecordCreateType'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecordCreateType'
          text/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DNSRecordCreateType'
        required: true
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`record` does not fulfill the schema'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: records
  /v1/domains/{domain}/renew:
    post:
      tags:
        - v1
      summary: Renew the specified Domain
      operationId: renewDomain
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper for whom Domain is to be renewed. NOTE: This is only
            required if you are a Reseller managing a domain purchased outside
            the scope of your reseller account. For instance, if you're a
            Reseller, but purchased a Domain via http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain to renew
          required: true
          schema:
            type: string
      requestBody:
        description: Options for renewing existing Domain
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRenew'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainRenew'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainRenew'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: The domain status does not allow performing the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            End-user must read and consent to all of the following legal
            agreements<br>`domain` must match `sld.tld`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/{domain}/transfer:
    post:
      tags:
        - v1
      summary: Purchase and start or restart transfer process
      operationId: startOrRestartTransferInProcess
      parameters:
        - name: X-Shopper-Id
          in: header
          description: The Shopper to whom the domain should be transfered
          schema:
            type: string
        - name: domain
          in: path
          description: Domain to transfer in
          required: true
          schema:
            type: string
      requestBody:
        description: Details for domain transfer purchase
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainTransferIn'
          application/xml:
            schema:
              $ref: '#/components/schemas/DomainTransferIn'
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainTransferIn'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/javascript:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainPurchaseResponse'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: '`domain` (domain) isn''t available for transfer'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Based on restrictions declared in JSON schema returned by
            `./schema/{tld}`<br>Cannot convert domain label error<br>Domain is
            missing IDN script<br>Domain segment ends with dash<br>Domain starts
            with dash<br>Domain uses unsupported IDN script<br>End-user must
            read and consent to all of the following legal agreements<br>FQDN
            fails generic validity regex<br>Invalid character(s)
            error<br>Invalid period range<br>Invalid tld error<br>Non-IDN domain
            name must not have dashes at the third and fourth
            position<br>Reserved name error<br>`authCode` cannot be
            empty<br>`domain` must match `sld.tld`<br>domain must be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /v1/domains/{domain}/verifyRegistrantEmail:
    post:
      tags:
        - v1
      summary: Re-send Contact E-mail Verification for specified Domain
      operationId: verifyEmail
      parameters:
        - name: X-Shopper-Id
          in: header
          description: >-
            Shopper for whom domain contact e-mail should be verified. NOTE:
            This is only required if you are a Reseller managing a domain
            purchased outside the scope of your reseller account. For instance,
            if you're a Reseller, but purchased a Domain via
            http://www.godaddy.com
          schema:
            type: string
        - name: domain
          in: path
          description: Domain whose Contact E-mail should be verified.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`domain` is not a valid Domain name'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/customers/{customerId}/domains/forwards/{fqdn}:
    get:
      tags:
        - v2
      summary: Retrieve the forwarding information for the given fqdn
      description: >-
        <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as
        **customerId**.  **shopperId** is a number of max length 10 digits
        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: getDomainsForwards
      parameters:
        - name: customerId
          in: path
          description: >-
            The Customer identifier<br/> Note: For API Resellers, performing
            actions on behalf of your customers, you need to specify the
            Subaccount you're operating on behalf of; otherwise use your shopper
            id.
          required: true
          schema:
            type: string
        - name: fqdn
          in: path
          description: >-
            The fully qualified domain name whose forwarding details are to be
            retrieved.
          required: true
          schema:
            type: string
        - name: includeSubs
          in: query
          description: >-
            Optionally include all sub domains if the fqdn specified is a domain
            and not a sub domain.
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainForwarding'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: A valid `fqdn` must be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - v2
      summary: Modify the forwarding information for the given fqdn
      description: >-
        <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as
        **customerId**.  **shopperId** is a number of max length 10 digits
        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: putDomainsForwards
      parameters:
        - name: customerId
          in: path
          description: >-
            The Customer identifier<br/> Note: For API Resellers, performing
            actions on behalf of your customers, you need to specify the
            Subaccount you're operating on behalf of; otherwise use your shopper
            id.
          required: true
          schema:
            type: string
        - name: fqdn
          in: path
          description: >-
            The fully qualified domain name whose forwarding details are to be
            modified.
          required: true
          schema:
            type: string
      requestBody:
        description: Domain forwarding rule to create or replace on the fqdn
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainForwardingCreate'
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: The domain status does not allow performing the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Request body doesn't fulfill schema, see details in `fields`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
    delete:
      tags:
        - v2
      summary: Submit a forwarding cancellation request for the given fqdn
      description: >-
        <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as
        **customerId**.  **shopperId** is a number of max length 10 digits
        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: deleteDomainsForwards
      parameters:
        - name: customerId
          in: path
          description: >-
            The Customer identifier<br/> Note: For API Resellers, performing
            actions on behalf of your customers, you need to specify the
            Subaccount you're operating on behalf of; otherwise use your shopper
            id.
          required: true
          schema:
            type: string
        - name: fqdn
          in: path
          description: >-
            The fully qualified domain name whose forwarding details are to be
            deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: The domain status does not allow performing the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: A valid `fqdn` must be specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:       
      type: apiKey
      in: header  
      name: Authorization
      description: Represents API Key 'Authorization'
  schemas:
    Address:
      required:
        - address1
        - city
        - country
        - postalCode
        - state
      type: object
      properties:
        address1:
          type: string
          format: street-address
        address2:
          type: string
          format: street-address2
        city:
          type: string
          format: city-name
        country:
          type: string
          description: >-
            Two-letter ISO country code to be used as a hint for target
            region<br/><br/>

            NOTE: These are sample values, there are many

            <a href='http://www.iso.org/iso/country_codes.htm'>more</a>
          format: iso-country-code
          default: US
          enum:
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CR
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KR
            - KV
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SE
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - ST
            - SV
            - SX
            - SZ
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - YE
            - YT
            - ZA
            - ZM
            - ZW
        postalCode:
          type: string
          description: Postal or zip code
          format: postal-code
        state:
          type: string
          description: State or province or territory
          format: state-province-territory
    ArrayOfDNSRecord:
      type: array
      items:
        $ref: '#/components/schemas/DNSRecord'
    Consent:
      required:
        - agreedAt
        - agreedBy
        - agreementKeys
      type: object
      properties:
        agreedAt:
          type: string
          description: >-
            Timestamp indicating when the end-user consented to these legal
            agreements
          format: iso-datetime
        agreedBy:
          type: string
          description: >-
            Originating client IP address of the end-user's computer when they
            consented to these legal agreements
        agreementKeys:
          type: array
          description: >-
            Unique identifiers of the legal agreements to which the end-user has
            agreed, as returned from the/domains/agreements endpoint
          items:
            type: string
    ConsentDomainUpdate:
      required:
        - agreedAt
        - agreedBy
        - agreementKeys
      type: object
      properties:
        agreedAt:
          type: string
          description: Timestamp indicating when the end-user consented to these agreements
          format: iso-datetime
        agreedBy:
          type: string
          description: >-
            Originating client IP address of the end-user's computer when they
            consented to the agreements
        agreementKeys:
          type: array
          description: >-
            Unique identifiers of the agreements to which the end-user has
            agreed, as required by the elements being
            updated<br/><ul><li><strong style='margin-left:
            12px;'>EXPOSE_WHOIS</strong> - Required when the exposeWhois field
            is updated to true</li></ul>
          items:
            type: string
            enum:
              - EXPOSE_WHOIS
    Contact:
      required:
        - addressMailing
        - email
        - nameFirst
        - nameLast
        - phone
      type: object
      properties:
        addressMailing:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          format: email
        fax:
          type: string
          format: phone
        jobTitle:
          type: string
        nameFirst:
          type: string
          format: person-name
        nameLast:
          type: string
          format: person-name
        nameMiddle:
          type: string
        organization:
          type: string
          format: organization-name
        phone:
          type: string
          format: phone
    DNSRecord:
      required:
        - data
        - name
        - type
      type: object
      properties:
        data:
          type: string
        name:
          type: string
          format: domain
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Service port (SRV only)
        priority:
          type: integer
          description: Record priority (MX and SRV only)
          format: integer-positive
        protocol:
          type: string
          description: Service protocol (SRV only)
        service:
          type: string
          description: Service type (SRV only)
        ttl:
          type: integer
          format: integer-positive
        type:
          type: string
          enum:
            - A
            - AAAA
            - CNAME
            - MX
            - NS
            - SOA
            - SRV
            - TXT
        weight:
          type: integer
          description: Record weight (SRV only)
          format: integer-positive
    DNSRecordCreateType:
      required:
        - data
        - name
      type: object
      properties:
        data:
          type: string
        name:
          type: string
          format: domain
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Service port (SRV only)
        priority:
          type: integer
          description: Record priority (MX and SRV only)
          format: integer-positive
        protocol:
          type: string
          description: Service protocol (SRV only)
        service:
          type: string
          description: Service type (SRV only)
        ttl:
          type: integer
          format: integer-positive
        weight:
          type: integer
          description: Record weight (SRV only)
          format: integer-positive
    DNSRecordCreateTypeName:
      required:
        - data
      type: object
      properties:
        data:
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Service port (SRV only)
        priority:
          type: integer
          description: Record priority (MX and SRV only)
          format: integer-positive
        protocol:
          type: string
          description: Service protocol (SRV only)
        service:
          type: string
          description: Service type (SRV only)
        ttl:
          type: integer
          format: integer-positive
        weight:
          type: integer
          description: Record weight (SRV only)
          format: integer-positive
    DomainAvailableBulk:
      required:
        - domains
      type: object
      properties:
        domains:
          type: array
          description: Domain available response array
          items:
            $ref: '#/components/schemas/DomainAvailableResponse'
    DomainAvailableBulkMixed:
      required:
        - domains
      type: object
      properties:
        domains:
          type: array
          description: Domain available response array
          items:
            $ref: '#/components/schemas/DomainAvailableResponse'
        errors:
          type: array
          description: Errors encountered while performing a domain available check
          items:
            $ref: '#/components/schemas/DomainAvailableError'
    DomainAvailableError:
      required:
        - code
        - domain
        - path
        - status
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        domain:
          type: string
          description: Domain name
        message:
          type: string
          description: Human-readable, English description of the error
        path:
          type: string
          description: >-
            <ul>

            <li style='margin-left: 12px;'>JSONPath referring to a field
            containing an error</li>

            <strong style='margin-left: 12px;'>OR</strong>

            <li style='margin-left: 12px;'>JSONPath referring to a field that
            refers to an object containing an error, with more detail in
            `pathRelated`</li>

            </ul>
          format: json-path
        status:
          type: integer
          description: HTTP status code that would return for a single check
    DomainAvailableResponse:
      required:
        - available
        - definitive
        - domain
      type: object
      properties:
        available:
          type: boolean
          description: Whether or not the domain name is available
        currency:
          type: string
          description: >-
            Currency in which the `price` is listed. Only returned if tld is
            offered
          format: iso-currency-code
          default: USD
        definitive:
          type: boolean
          description: >-
            Whether or not the `available` answer has been definitively verified
            with the registry
        domain:
          type: string
          description: Domain name
        period:
          type: integer
          description: >-
            Number of years included in the price. Only returned if tld is
            offered
          format: integer-positive
        price:
          type: integer
          description: >-
            Price of the domain excluding taxes or fees. Only returned if tld is
            offered
          format: currency-micro-unit
    DomainContacts:
      required:
        - contactRegistrant
      type: object
      properties:
        contactAdmin:
          $ref: '#/components/schemas/Contact'
        contactBilling:
          $ref: '#/components/schemas/Contact'
        contactRegistrant:
          $ref: '#/components/schemas/Contact'
        contactTech:
          $ref: '#/components/schemas/Contact'
    DomainDetail:
      required:
        - authCode
        - contactAdmin
        - contactBilling
        - contactRegistrant
        - contactTech
        - createdAt
        - domain
        - domainId
        - expirationProtected
        - holdRegistrar
        - locked
        - nameServers
        - privacy
        - renewAuto
        - renewDeadline
        - status
        - transferProtected
      type: object
      properties:
        authCode:
          type: string
          description: Authorization code for transferring the Domain
        contactAdmin:
          $ref: '#/components/schemas/Contact'
        contactBilling:
          $ref: '#/components/schemas/Contact'
        contactRegistrant:
          $ref: '#/components/schemas/Contact'
        contactTech:
          $ref: '#/components/schemas/Contact'
        createdAt:
          type: string
          description: Date and time when this domain was created
          format: date-time
        deletedAt:
          type: string
          description: Date and time when this domain was deleted
          format: date-time
        transferAwayEligibleAt:
          type: string
          description: Date and time when this domain is eligible to transfer
          format: date-time
        domain:
          type: string
          description: Name of the domain
        domainId:
          type: number
          description: Unique identifier for this Domain
          format: double
        expirationProtected:
          type: boolean
          description: Whether or not the domain is protected from expiration
        expires:
          type: string
          description: Date and time when this domain will expire
          format: date-time
        exposeWhois:
          type: boolean
          description: >-
            Whether or not the domain contact details should be shown in the
            WHOIS
        holdRegistrar:
          type: boolean
          description: Whether or not the domain is on-hold by the registrar
        locked:
          type: boolean
          description: Whether or not the domain is locked to prevent transfers
        nameServers:
          type: array
          description: Fully-qualified domain names for DNS servers
          items:
            type: string
            format: host-name
        privacy:
          type: boolean
          description: Whether or not the domain has privacy protection
        renewAuto:
          type: boolean
          description: Whether or not the domain is configured to automatically renew
        renewDeadline:
          type: string
          description: Date the domain must renew on
          format: date-time
        status:
          type: string
          description: >-
            Processing status of the domain<br/><ul>

            <li><strong style='margin-left: 12px;'>ACTIVE</strong> - All is
            well</li>

            <li><strong style='margin-left: 12px;'>AWAITING*</strong> - System
            is waiting for the end-user to complete an action</li>

            <li><strong style='margin-left: 12px;'>CANCELLED*</strong> - Domain
            has been cancelled, and may or may not be reclaimable</li>

            <li><strong style='margin-left: 12px;'>CONFISCATED</strong> - Domain
            has been confiscated, usually for abuse, chargeback, or fraud</li>

            <li><strong style='margin-left: 12px;'>DISABLED*</strong> - Domain
            has been disabled</li>

            <li><strong style='margin-left: 12px;'>EXCLUDED*</strong> - Domain
            has been excluded from Firehose registration</li>

            <li><strong style='margin-left: 12px;'>EXPIRED*</strong> - Domain
            has expired</li>

            <li><strong style='margin-left: 12px;'>FAILED*</strong> - Domain has
            failed a required action, and the system is no longer retrying</li>

            <li><strong style='margin-left: 12px;'>HELD*</strong> - Domain has
            been placed on hold, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>LOCKED*</strong> - Domain has
            been locked, and likely requires intervention from Support</li>

            <li><strong style='margin-left: 12px;'>PARKED*</strong> - Domain has
            been parked, and likely requires intervention from Support</li>

            <li><strong style='margin-left: 12px;'>PENDING*</strong> - Domain is
            working its way through an automated workflow</li>

            <li><strong style='margin-left: 12px;'>RESERVED*</strong> - Domain
            is reserved, and likely requires intervention from Support</li>

            <li><strong style='margin-left: 12px;'>REVERTED</strong> - Domain
            has been reverted, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>SUSPENDED*</strong> - Domain
            has been suspended, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>TRANSFERRED*</strong> -
            Domain has been transferred out</li>

            <li><strong style='margin-left: 12px;'>UNKNOWN</strong> - Domain is
            in an unknown state</li>

            <li><strong style='margin-left: 12px;'>UNLOCKED*</strong> - Domain
            has been unlocked, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>UNPARKED*</strong> - Domain
            has been unparked, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>UPDATED*</strong> - Domain
            ownership has been transferred to another account</li>

            </ul>
        subaccountId:
          type: string
          description: Reseller subaccount shopperid who can manage the domain
        transferProtected:
          type: boolean
          description: Whether or not the domain is protected from transfer
        verifications:
          $ref: '#/components/schemas/VerificationsDomain'
    DomainPurchase:
      required:
        - consent
        - domain
      type: object
      properties:
        consent:
          $ref: '#/components/schemas/Consent'
        contactAdmin:
          $ref: '#/components/schemas/Contact'
        contactBilling:
          $ref: '#/components/schemas/Contact'
        contactRegistrant:
          $ref: '#/components/schemas/Contact'
        contactTech:
          $ref: '#/components/schemas/Contact'
        domain:
          type: string
          description: >-
            For internationalized domain names with non-ascii characters, the
            domain name is converted to punycode before format and pattern
            validation rules are checked
          format: domain
        nameServers:
          type: array
          items:
            type: string
            format: host-name
        period:
          maximum: 10
          minimum: 1
          type: integer
          format: integer-positive
        privacy:
          type: boolean
          default: false
        renewAuto:
          type: boolean
          default: true
    DomainPurchaseResponse:
      required:
        - itemCount
        - orderId
        - total
      type: object
      properties:
        currency:
          type: string
          description: Currency in which the `total` is listed
          format: iso-currency-code
          default: USD
        itemCount:
          type: integer
          description: Number items included in the order
          format: integer-positive
        orderId:
          type: integer
          description: Unique identifier of the order processed to purchase the domain
          format: integer-positive
        total:
          type: integer
          description: Total cost of the domain and any selected add-ons
          format: currency-micro-unit
    DomainRenew:
      type: object
      properties:
        period:
          maximum: 10
          minimum: 1
          type: integer
          description: >-
            Number of years to extend the Domain. Must not exceed maximum for
            TLD. When omitted, defaults to `period` specified during original
            purchase
          format: integer-positive
    DomainSuggestion:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
          description: Suggested domain name
    DomainSummary:
      required:
        - contactRegistrant
        - createdAt
        - domain
        - domainId
        - expirationProtected
        - holdRegistrar
        - locked
        - privacy
        - renewAuto
        - renewDeadline
        - status
        - transferProtected
      type: object
      properties:
        authCode:
          type: string
          description: Authorization code for transferring the Domain
        contactAdmin:
          $ref: '#/components/schemas/Contact'
        contactBilling:
          $ref: '#/components/schemas/Contact'
        contactRegistrant:
          $ref: '#/components/schemas/Contact'
        contactTech:
          $ref: '#/components/schemas/Contact'
        createdAt:
          type: string
          description: Date and time when this domain was created
          format: date-time
        deletedAt:
          type: string
          description: Date and time when this domain was deleted
          format: date-time
        transferAwayEligibleAt:
          type: string
          description: Date and time when this domain is eligible to transfer
          format: date-time
        domain:
          type: string
          description: Name of the domain
        domainId:
          type: number
          description: Unique identifier for this Domain
          format: double
        expirationProtected:
          type: boolean
          description: Whether or not the domain is protected from expiration
        expires:
          type: string
          description: Date and time when this domain will expire
          format: date-time
        exposeWhois:
          type: boolean
          description: >-
            Whether or not the domain contact details should be shown in the
            WHOIS
        holdRegistrar:
          type: boolean
          description: Whether or not the domain is on-hold by the registrar
        locked:
          type: boolean
          description: Whether or not the domain is locked to prevent transfers
        nameServers:
          type: array
          description: Fully-qualified domain names for DNS servers
          items:
            type: string
            format: host-name
        privacy:
          type: boolean
          description: Whether or not the domain has privacy protection
        renewAuto:
          type: boolean
          description: Whether or not the domain is configured to automatically renew
        renewDeadline:
          type: string
          description: Date the domain must renew on
          format: date-time
        renewable:
          type: boolean
          description: Whether or not the domain is eligble for renewal based on status
        status:
          type: string
          description: >-
            Processing status of the domain<br/><ul>

            <li><strong style='margin-left: 12px;'>ACTIVE</strong> - All is
            well</li>

            <li><strong style='margin-left: 12px;'>AWAITING*</strong> - System
            is waiting for the end-user to complete an action</li>

            <li><strong style='margin-left: 12px;'>CANCELLED*</strong> - Domain
            has been cancelled, and may or may not be reclaimable</li>

            <li><strong style='margin-left: 12px;'>CONFISCATED</strong> - Domain
            has been confiscated, usually for abuse, chargeback, or fraud</li>

            <li><strong style='margin-left: 12px;'>DISABLED*</strong> - Domain
            has been disabled</li>

            <li><strong style='margin-left: 12px;'>EXCLUDED*</strong> - Domain
            has been excluded from Firehose registration</li>

            <li><strong style='margin-left: 12px;'>EXPIRED*</strong> - Domain
            has expired</li>

            <li><strong style='margin-left: 12px;'>FAILED*</strong> - Domain has
            failed a required action, and the system is no longer retrying</li>

            <li><strong style='margin-left: 12px;'>HELD*</strong> - Domain has
            been placed on hold, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>LOCKED*</strong> - Domain has
            been locked, and likely requires intervention from Support</li>

            <li><strong style='margin-left: 12px;'>PARKED*</strong> - Domain has
            been parked, and likely requires intervention from Support</li>

            <li><strong style='margin-left: 12px;'>PENDING*</strong> - Domain is
            working its way through an automated workflow</li>

            <li><strong style='margin-left: 12px;'>RESERVED*</strong> - Domain
            is reserved, and likely requires intervention from Support</li>

            <li><strong style='margin-left: 12px;'>REVERTED</strong> - Domain
            has been reverted, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>SUSPENDED*</strong> - Domain
            has been suspended, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>TRANSFERRED*</strong> -
            Domain has been transferred out</li>

            <li><strong style='margin-left: 12px;'>UNKNOWN</strong> - Domain is
            in an unknown state</li>

            <li><strong style='margin-left: 12px;'>UNLOCKED*</strong> - Domain
            has been unlocked, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>UNPARKED*</strong> - Domain
            has been unparked, and likely requires intervention from
            Support</li>

            <li><strong style='margin-left: 12px;'>UPDATED*</strong> - Domain
            ownership has been transferred to another account</li>

            </ul>
        transferProtected:
          type: boolean
          description: Whether or not the domain is protected from transfer
    DomainForwardingMask:
      type: object
      properties:
        title:
          type: string
          description: Displays at the top of the browser window and in search results.
        description:
          type: string
          description: >-
            A short description of your website to display in search engine
            results.
        keywords:
          type: string
          description: >-
            A list of comma-separated keywords that describes the content and
            purpose of your website.
    DomainForwardingCreate:
      required:
        - type
        - url
      type: object
      properties:
        type:
          type: string
          description: >-
            The type of fowarding to implement<br/><ul><li><strong
            style='margin-left: 12px;'>MASKED</strong> - Prevents the forwarded
            domain or subdomain URL from displaying in the browser's address
            bar.</li><li><strong style='margin-left:
            12px;'>REDIRECT_PERMANENT*</strong> - Redirects to the url you
            specified in the forwardTo field using a `301 Moved Permanently`
            HTTP response. The HTTP 301 response code tells user-agents
            (including search engines) that the location has permanently
            moved.</li><li><strong style='margin-left:
            12px;'>REDIRECT_TEMPORARY</strong> - Redirects to the url you
            specified in the forwardTo field using a `302 Found` HTTP response.
            The HTTP 302 response code tells user-agents (including search
            engines) that the location has temporarily moved.</li></ul>
          default: REDIRECT_PERMANENT
          enum:
            - MASKED
            - REDIRECT_PERMANENT
            - REDIRECT_TEMPORARY
        url:
          type: string
          description: >-
            Forwards http(s) traffic to this destination url (ex.
            http://www.somedomain.com/)
          format: url
        mask:
          $ref: '#/components/schemas/DomainForwardingMask'
    DomainForwarding:
      required:
        - fqdn
        - type
        - url
      type: object
      properties:
        fqdn:
          type: string
          description: >-
            The fqdn (domain or sub domain) to forward (ex somedomain.com or
            sub.somedomain.com)
        type:
          type: string
          description: >-
            The type of fowarding to implement<br/><ul><li><strong
            style='margin-left: 12px;'>MASKED</strong> - Prevents the forwarded
            domain or subdomain URL from displaying in the browser's address
            bar.</li><li><strong style='margin-left:
            12px;'>REDIRECT_PERMANENT*</strong> - Redirects to the url you
            specified in the forwardTo field using a `301 Moved Permanently`
            HTTP response. The HTTP 301 response code tells user-agents
            (including search engines) that the location has permanently
            moved.</li><li><strong style='margin-left:
            12px;'>REDIRECT_TEMPORARY</strong> - Redirects to the url you
            specified in the forwardTo field using a `302 Found` HTTP response.
            The HTTP 302 response code tells user-agents (including search
            engines) that the location has temporarily moved.</li></ul>
          default: REDIRECT_PERMANENT
          enum:
            - MASKED
            - REDIRECT_PERMANENT
            - REDIRECT_TEMPORARY
        url:
          type: string
          description: >-
            Forwards http(s) traffic to this destination url (ex.
            http://www.somedomain.com/)
          format: url
        mask:
          $ref: '#/components/schemas/DomainForwardingMask'
    DomainTransferIn:
      required:
        - authCode
        - consent
      type: object
      properties:
        authCode:
          type: string
          description: Authorization code from registrar for transferring a domain
        consent:
          $ref: '#/components/schemas/Consent'
        period:
          maximum: 10
          minimum: 1
          type: integer
          description: >-
            Can be more than 1 but no more than 10 years total including current
            registration length
          format: integer-positive
        privacy:
          type: boolean
          description: Whether or not privacy has been requested
          default: false
        renewAuto:
          type: boolean
          description: >-
            Whether or not the domain should be configured to automatically
            renew
          default: true
        contactAdmin:
          $ref: '#/components/schemas/Contact'
        contactBilling:
          $ref: '#/components/schemas/Contact'
        contactRegistrant:
          $ref: '#/components/schemas/Contact'
        contactTech:
          $ref: '#/components/schemas/Contact'
    DomainUpdate:
      type: object
      properties:
        locked:
          type: boolean
          description: Whether or not the domain should be locked to prevent transfers
        nameServers:
          type: array
          description: >-
            Fully-qualified domain names for Name Servers to associate with the
            domain
          items:
            type: object
            format: host-name
        renewAuto:
          type: boolean
          description: >-
            Whether or not the domain should be configured to automatically
            renew
        subaccountId:
          type: string
          description: Reseller subaccount shopperid who can manage the domain
        exposeWhois:
          type: boolean
          description: >-
            Whether or not the domain contact details should be shown in the
            WHOIS
        consent:
          $ref: '#/components/schemas/ConsentDomainUpdate'
    DomainsContactsBulk:
      required:
        - domains
      type: object
      properties:
        contactAdmin:
          $ref: '#/components/schemas/Contact'
        contactBilling:
          $ref: '#/components/schemas/Contact'
        contactPresence:
          $ref: '#/components/schemas/Contact'
        contactRegistrant:
          $ref: '#/components/schemas/Contact'
        contactTech:
          $ref: '#/components/schemas/Contact'
        domains:
          type: array
          description: >-
            An array of domain names to be validated against. Alternatively, you
            can specify the extracted tlds. However, full domain names are
            required if the tld is `uk`
          items:
            type: string
            format: domain
        entityType:
          type: string
          description: Canadian Presence Requirement (CA)
          enum:
            - ABORIGINAL
            - ASSOCIATION
            - CITIZEN
            - CORPORATION
            - EDUCATIONAL
            - GOVERNMENT
            - HOSPITAL
            - INDIAN_BAND
            - LEGAL_REPRESENTATIVE
            - LIBRARY_ARCHIVE_MUSEUM
            - MARK_REGISTERED
            - MARK_TRADE
            - PARTNERSHIP
            - POLITICAL_PARTY
            - RESIDENT_PERMANENT
            - TRUST
            - UNION
    Error:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorField'
        message:
          type: string
          description: Human-readable, English description of the error
    ErrorDomainContactsValidate:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorFieldDomainContactsValidate'
        message:
          type: string
          description: Human-readable, English description of the error
        stack:
          type: array
          description: >-
            Stack trace indicating where the error occurred.<br/>NOTE: This
            attribute <strong>MAY</strong> be included for Development and Test
            environments. However, it <strong>MUST NOT</strong> be exposed from
            OTE nor Production systems
          items:
            type: string
    ErrorField:
      required:
        - code
        - path
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        message:
          type: string
          description: >-
            Human-readable, English description of the problem with the contents
            of the field
        path:
          type: string
          description: >-
            <ul>

            <li style='margin-left: 12px;'>JSONPath referring to a field
            containing an error</li>

            <strong style='margin-left: 12px;'>OR</strong>

            <li style='margin-left: 12px;'>JSONPath referring to a field that
            refers to an object containing an error, with more detail in
            `pathRelated`</li>

            </ul>
          format: json-path
        pathRelated:
          type: string
          description: >-
            JSONPath referring to a field containing an error, which is
            referenced by `path`
          format: json-path
    ErrorFieldDomainContactsValidate:
      required:
        - code
        - domains
        - path
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        domains:
          type: array
          description: >-
            An array of domain names the error is for. If tlds are specified in
            the request, `domains` will contain tlds. For example, if `domains`
            in request is ["test1.com", "test2.uk", "net"], and the field is
            invalid for com and net, then one of the `fields` in response will
            have ["test1.com", "net"] as `domains`
          items:
            type: string
        message:
          type: string
          description: >-
            Human-readable, English description of the problem with the contents
            of the field
        path:
          type: string
          description: >-
            1) JSONPath referring to the field within the data containing an
            error<br/>or<br/>2) JSONPath referring to an object containing an
            error
          format: json-path
        pathRelated:
          type: string
          description: >-
            JSONPath referring to the field on the object referenced by `path`
            containing an error
          format: json-path
    ErrorLimit:
      required:
        - code
        - retryAfterSec
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorField'
        message:
          type: string
          description: Human-readable, English description of the error
        retryAfterSec:
          type: integer
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
    JsonDataType:
      required:
        - type
      type: object
      properties:
        format:
          type: string
        pattern:
          type: string
        type:
          type: string
    JsonProperty:
      required:
        - required
        - type
      type: object
      properties:
        defaultValue:
          type: string
        format:
          type: string
        items:
          type: object
          properties: {}
        maxItems:
          type: integer
        maximum:
          type: integer
        minItems:
          type: integer
        minimum:
          type: integer
        pattern:
          type: string
        required:
          type: boolean
        type:
          type: string
    JsonSchema:
      required:
        - id
        - models
        - properties
        - required
      type: object
      properties:
        id:
          type: string
        models:
          type: object
          properties: {}
        properties:
          type: object
          properties: {}
        required:
          type: array
          items:
            type: string
    LegalAgreement:
      required:
        - agreementKey
        - content
        - title
      type: object
      properties:
        agreementKey:
          type: string
          description: Unique identifier for the legal agreement
        content:
          type: string
          description: Contents of the legal agreement, suitable for embedding
        title:
          type: string
          description: Title of the legal agreement
        url:
          type: string
          description: URL to a page containing the legal agreement
          format: url
    PrivacyPurchase:
      required:
        - consent
      type: object
      properties:
        consent:
          $ref: '#/components/schemas/Consent'
    RealNameValidation:
      type: object
      properties:
        status:
          type: string
          enum:
            - APPROVED
            - PENDING
            - PENDING_ASSOCIATION_WITH_DOMAIN
            - PENDING_SUBMISSION_TO_VERIFICATION_SERVICE
            - PENDING_VERIFICATION_SERVICE_REPLY
            - PENDING_SUBMISSION_TO_REGISTRY
            - PENDING_REGISTRY_REPLY
            - PENDING_DOMAIN_UPDATE
            - REJECTED
    TldSummary:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string
          description: Name of the top-level domain
          format: tld
        type:
          type: string
          description: Type of the top-level domain
          default: GENERIC
          enum:
            - COUNTRY_CODE
            - GENERIC
    VerificationDomainName:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: Status of the domain name verification
          enum:
            - APPROVED
            - PENDING
            - REJECTED
            - UNABLE_TO_RETRIEVE_STATUS
    VerificationRealName:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: >-
            Status of the real name verification<br/><ul> <li><strong
            style='margin-left: 12px;'>APPROVED</strong> - All is well</li>
            <li><strong style='margin-left: 12px;'>PENDING</strong> - Real name
            verification is working its way through the workflow</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_DOCUMENT_OUTDATED</strong> - Local government
            verification shows there is a newer version of your document. 
            Upload the latest version of the document and retry real name
            verification</li> <li><strong style='margin-left:
            12px;'>REJECTED_EXPIRED_BUSINESS_LICENSE</strong> - Business license
            is expired</li> <li><strong style='margin-left:
            12px;'>REJECTED_EXPIRED_ORGANIZATION_CODE</strong> - Organization
            code certificate number has expired</li> <li><strong
            style='margin-left: 12px;'>REJECTED_ILLEGIBLE_DOCUMENT_NAME</strong>
            - There isn’t a clear name on your uploaded document, please upload
            a different document to retry real name verification</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_ILLEGIBLE_IDENTIFICATION</strong> - Registrant
            identification is not clear.  Upload a better image to retry</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_INCOMPLETE_IDENTIFICATION</strong> - Registrant
            identification is incomplete</li> <li><strong style='margin-left:
            12px;'>REJECTED_INCOMPLETE_REGISTRATION_LETTER</strong> -
            Registration letter is incomplete</li> <li><strong
            style='margin-left:
            12px;'>REJECTED_INCONSISTENT_IDENTITY_CARD</strong> - Provided
            identity card is inconsistent with the identity card on record</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_INCONSISTENT_ORGANIZATION_CODE</strong> - Provided
            organization information is inconsistent with the results obtained
            using the submitted organization code</li> <li><strong
            style='margin-left:
            12px;'>REJECTED_INCONSISTENT_REGISTRANT_NAME</strong> - Name on the
            registrant identification does not match the name in the system</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_INVALID_BUSINESS_LICENSE_OR_ORGANIZATION_CODE</strong>
            - Your document contains an invalid business license or organization
            code certificate number</li> <li><strong style='margin-left:
            12px;'>REJECTED_INVALID_DOCUMENT</strong> - Document is invalid. 
            Please upload another document to retry real name verification</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_MISMATCH_BUSINESS_ID</strong> - Business id does not
            match the business id in the document</li> <li><strong
            style='margin-left: 12px;'>REJECTED_MISMATCH_BUSINESS_NAME</strong>
            - Business name does not match the business name in the
            document</li> <li><strong style='margin-left:
            12px;'>REJECTED_MISMATCH_DOCUMENT_ID</strong> - Document id does not
            match the id in the document</li> <li><strong style='margin-left:
            12px;'>REJECTED_MISMATCH_DOCUMENT_NAME</strong> - Document name does
            not match the name in the document</li> <li><strong
            style='margin-left: 12px;'>REJECTED_MISMATCH_DOCUMENT_TYPE</strong>
            - Document type does not match the document</li> <li><strong
            style='margin-left:
            12px;'>REJECTED_MISMATCH_REGISTRANT_INFO</strong> - The information
            provided for the registrant does not match the document</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_MISMATCH_REGISTRANT_LOCALITY</strong> - Registrant
            region is overseas, but a local identity document was provided</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_MISMATCH_REGISTRANT_NAME</strong> - Registrant name
            has been changed, so the request must be resubmitted</li>
            <li><strong style='margin-left:
            12px;'>REJECTED_UNABLE_TO_OPEN</strong> - Registrant identification
            could not be opened.  Please upload the document again to retry real
            name verification</li> <li><strong style='margin-left:
            12px;'>REJECTED_UNABLE_TO_VERIFY</strong> - Unable to initiate
            verification.  Please upload the document again to retry real name
            verification</li> <li><strong style='margin-left:
            12px;'>REJECTED_UNKNOWN_ERROR</strong> - Document was rejected due
            to an unknown error. For more information, contact customer
            support</li> <li><strong style='margin-left:
            12px;'>UNABLE_TO_RETRIEVE_STATUS</strong> - Unable to retrieve
            status for the real name verification process.  Retry, if this
            status persists, contact customer support</li> </ul>
          enum:
            - APPROVED
            - PENDING
            - REJECTED_DOCUMENT_OUTDATED
            - REJECTED_EXPIRED_BUSINESS_LICENSE
            - REJECTED_EXPIRED_ORGANIZATION_CODE
            - REJECTED_ILLEGIBLE_DOCUMENT_NAME
            - REJECTED_ILLEGIBLE_IDENTIFICATION
            - REJECTED_INCOMPLETE_IDENTIFICATION
            - REJECTED_INCOMPLETE_REGISTRATION_LETTER
            - REJECTED_INCONSISTENT_IDENTITY_CARD
            - REJECTED_INCONSISTENT_ORGANIZATION_CODE
            - REJECTED_INCONSISTENT_REGISTRANT_NAME
            - REJECTED_INVALID_BUSINESS_LICENSE_OR_ORGANIZATION_CODE
            - REJECTED_INVALID_DOCUMENT
            - REJECTED_MISMATCH_BUSINESS_ID
            - REJECTED_MISMATCH_BUSINESS_NAME
            - REJECTED_MISMATCH_DOCUMENT_ID
            - REJECTED_MISMATCH_DOCUMENT_NAME
            - REJECTED_MISMATCH_DOCUMENT_TYPE
            - REJECTED_MISMATCH_REGISTRANT_INFO
            - REJECTED_MISMATCH_REGISTRANT_LOCALITY
            - REJECTED_MISMATCH_REGISTRANT_NAME
            - REJECTED_UNABLE_TO_OPEN
            - REJECTED_UNABLE_TO_VERIFY
            - REJECTED_UNKNOWN_ERROR
            - UNABLE_TO_RETRIEVE_STATUS
    VerificationsDomain:
      type: object
      properties:
        domainName:
          $ref: '#/components/schemas/VerificationDomainName'
        realName:
          $ref: '#/components/schemas/VerificationRealName'
    domain:
      type: object
      properties:
        id:
          type: number
          format: double
