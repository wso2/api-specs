openapi: 3.0.0
info:
  x-ballerina-display:
    label: Shippit
    iconPath: "icon.png"
  title: Shippit
  version: 3.0.20201008
  description: |
    This is a generated connector for [Shippit API v3.0.20201008](https://developer.shippit.com) OpenAPI specification.
    Shippit powers simpler delivery for e-commerce retailers of all shapes and sizes.
    It fulfil orders and track shipments anywhere you are, anytime you like. 
    Itâ€™s cloud-based multi-carrier shipping software for retailers that takes the guesswork out of shipping decisions.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
  
    Create a [Shippit account](https://www.shippit.com) and obtain tokens by following [this guide](https://developer.shippit.com/#section/Authentication).
  termsOfService: https://www.shippit.com/terms/
  contact:
    url: https://support.shippit.com
    email: support@shippit.com
  x-logo:
    url: >-
      https://dewicach69fxy.cloudfront.net/wp-content/uploads/logos/shippit-logo-invert.png
    backgroundColor: '#0089D0'
    altText: Shippit
    href: https://www.shippit.com/
servers:
  - url: https://app.staging.shippit.com/api/3
    description: Shippit API Staging
  - url: https://app.shippit.com/api/3
    description: Shippit API Production
paths:
  /orders:
    description: ''
    post:
      requestBody:
        description: Passes an Order object under the `order` field.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
              example:
                order:
                  user_attributes:
                    email: test@shippit.com
                    first_name: John
                    last_name: Smith
                  parcel_attributes:
                    - depth: 0.13
                      length: 0.1
                      location: C123
                      price: 12.12
                      qty: 1
                      sku: EWPE123123
                      title: Super awesome red tshirt
                      weight: 2.1
                      width: 0.11
                      product_line_id: 1234
                      origin_country_code: CN
                  authority_to_leave: false
                  courier_type: standard
                  delivery_address: 1 Union Street
                  delivery_postcode: 2009
                  delivery_state: NSW
                  delivery_suburb: Pyrmont
                  delivery_instructions: Special instructions for the order go here
                  receiver_contact_number: 67108864
                  receiver_name: Adam
                  retailer_invoice: '#23201005'
            examples:
              Order with minimum required fields:
                value:
                  order:
                    courier_type: standard
                    delivery_address: 1 Union Street
                    delivery_postcode: '2009'
                    delivery_state: NSW
                    delivery_suburb: Pyrmont
                    authority_to_leave: 'Yes'
                    parcel_attributes:
                      - qty: 1
                        weight: 2.1
                    user_attributes:
                      email: test@shippit.com
                      first_name: John
                      last_name: Smith
              Order request with optional fields:
                value:
                  order:
                    user_attributes:
                      email: test@shippit.com
                      first_name: John
                      last_name: Smith
                    parcel_attributes:
                      - depth: 0.13
                        length: 0.1
                        location: C123
                        price: '12.12'
                        qty: 1
                        sku: EWPE123123
                        title: Super awesome red tshirt
                        weight: 2.1
                        width: 0.11
                        product_line_id: '1234'
                        origin_country_code: CN
                        packed: 1
                      - depth: 0.13
                        length: 0.1
                        location: B22
                        price: '1.21'
                        qty: 7
                        sku: EWPE123123
                        title: Super awesome blue tshirt
                        weight: 2.1
                        width: 0.11
                        dangerous_goods_code: ID8000
                        dangerous_goods_text: >-
                          ID8000 Consumer commodities - Dangerous Goods as per
                          attached DGD
                        product_line_id: '1235'
                        packed: 1
                    authority_to_leave: 'No'
                    courier_type: standard
                    delivery_address: 1 Union Street
                    delivery_postcode: '2009'
                    delivery_state: NSW
                    delivery_suburb: Pyrmont
                    delivery_instructions: Special instructions for the order go here
                    receiver_contact_number: '0400000000'
                    receiver_name: Adam
                    retailer_invoice: '#23201005'
                    retailer_reference: '#23201005'
              Order request using product_attributes:
                value:
                  order:
                    user_attributes:
                      email: test@shippit.com
                      first_name: John
                      last_name: Smith
                    parcel_attributes:
                      - weight: 4.4
                      - weight: 8.8
                    product_attributes:
                      - quantity: 10
                        title: Super awesome red tshirt
                      - quantity: 20
                        title: Super awesome blue tshirt
                    authority_to_leave: 'No'
                    courier_type: standard
                    delivery_address: 1 Union Street
                    delivery_postcode: '2009'
                    delivery_state: NSW
                    delivery_suburb: Pyrmont
              Priority Order request:
                value:
                  order:
                    courier_type: priority
                    delivery_address: 1 Union Street
                    delivery_postcode: '2009'
                    delivery_state: NSW
                    delivery_suburb: Pyrmont
                    authority_to_leave: 'Yes'
                    delivery_date: '2016-07-26T00:00:00.000Z'
                    delivery_window: 16:00-19:00
                    parcel_attributes:
                      - qty: 1
                        weight: 2.1
                    user_attributes:
                      email: test@shippit.com
                      first_name: John
                      last_name: Smith
              Tracking Order without tracking histories:
                value:
                  order:
                    delivery_address: 1 Union Street
                    delivery_postcode: '2099'
                    delivery_state: NSW
                    delivery_suburb: Dee Why
                    delivery_country_code: au
                    courier_allocation: CouriersPlease
                    courier_job_id: SAMPLE-LN-111
                    authority_to_leave: 'Yes'
                    tracking_only: true
                    parcel_attributes:
                      - qty: 1
                        weight: 2.1
                        label_number: SAMPLE-LN-111001
                    user_attributes:
                      email: test@shippit.com
                      first_name: John
                      last_name: Smith
              Tracking Order with tracking histories:
                value:
                  order:
                    delivery_address: 1 Union Street
                    delivery_postcode: '2099'
                    delivery_state: NSW
                    delivery_suburb: Dee Why
                    delivery_country_code: au
                    courier_allocation: CouriersPlease
                    courier_job_id: SAMPLE-LN-111
                    authority_to_leave: 'Yes'
                    tracking_only: true
                    parcel_attributes:
                      - qty: 1
                        weight: 2.1
                        label_number: SAMPLE-LN-111001
                    user_attributes:
                      email: test@shippit.com
                      first_name: John
                      last_name: Smith
                    tracking_histories:
                      - status: order_placed
                        timestamp: '2018-10-10T05:28:12.693Z'
                      - status: ready_for_pickup
                        timestamp: '2018-10-11T05:28:12.693Z'
        required: true
      tags:
        - Order
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
              examples:
                Example Order Response:
                  value:
                    response:
                      courier_delivery_instructions: special instructions
                      courier_job_id: '30734876324'
                      courier_name: eParcel
                      delivery_address: 1 Union Street
                      delivery_instructions: test special instructions
                      delivery_postcode: '2009'
                      delivery_state: NSW
                      delivery_suburb: Pyrmont
                      id: 26599
                      parcel_attributes:
                        - depth: 0.13
                          length: 0.1
                          qty: 1
                          weight: 16.8
                          width: 0.11
                      products:
                        - title: Industrial Paint Stripper
                          price: 29.13
                          sku: 0.1
                          tariff_code: '000999'
                          dangerous_goods_code: ID8000
                          dangerous_goods_text: >-
                            ID8000 Consumer commodities - Dangerous Goods as per
                            attached DGD
                          origin_country_code: TH
                          quantity: 1
                      price: '0.0'
                      processing_state: created
                      receiver_contact_number: '0400000000'
                      receiver_name: Josh
                      retailer_invoice: '#23201005'
                      slug: ppu38wz2tdonj
                      state: processing
                      tracking_number: PPu38Wz2TdoNj
                      user_attributes:
                        email: test@shippit.com
                        first_name: jon
                        last_name: smith
                        mobile: '0413084048'
          description: Successful order response
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '403':
          $ref: '#/components/responses/InvalidMerchantAccountErrorResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderValidationErrorResponse'
          description: >-
            Returned when `validate` is set to `true` and the order address is
            not valid.


            Will specify which input fields failed validation and may give a
            `suggested_address` form if one is found.
        '500':
          $ref: '#/components/responses/UnknownErrorResponse'
      security:
        - AuthToken: []
      operationId: createOrder
      summary: Create an Order
      description: "Submits an Order to be created on Shippit.\r\n\r\nAt minimum, an Order requires a delivery location, user details, and parcel details. Shippit will then generate the order, allocate the courier, and fill in the origin location based on the provided info and merchant configuration on Shippit.\r\n\r\nNote that the required fields for an Order can vary depending on the type of order, the requested courier, whether it is local or international, etcetera.\r\n\r\nThere is a maximum of 1000 parcels per quote request.\r\n\r\n\r\n---\r\n\r\n### Order Lifecycle\r\n#### Standard and Express Lifecycle\r\n| Web UI action | API call     | State on completion         | Where seen in UI   |\r\n|---------------|--------------|-----------------------------|--------------------|\r\n| Add order     | POST order   | New Order                   | New Orders page    |\r\n| Confirm order | GET label    | Ready to Ship               | Ready to Ship page |\r\n| Cancel order  | DELETE order | Cancelled                   | not visible        |\r\n| Book order    | POST book    | Booked                      | Track page         |\r\n\r\n#### Click and Collect Lifecycle\r\n| Web UI action | API call     | State on completion         | Where seen in UI   |\r\n|---------------|--------------|-----------------------------|--------------------|\r\n| N/A           | POST order   | Packing order               | New Orders page    |\r\n| Label         | GET label    | Packing order               | New Orders page    |\r\n| Cancel order  | DELETE order | Cancelled                   | not visible        |\r\n| Book order    | POST book    | Booked                      | Track page         |\r\n\r\nUnlike standard / express orders, click and collect orders do not proceed to the Ready to Ship page. They remain in the New Orders page until you call either the Book API or click the Label button.\r\n\r\n#### Priority Order Lifecycle\r\n| Web UI action | API call     | State on completion         | Where seen in UI   |\r\n|---------------|--------------|-----------------------------|--------------------|\r\n| N/A           | POST order   | Packing order               | New Orders page    |\r\n| Label         | GET label    | Booked                      | Track page         |\r\n| Cancel order  | DELETE order | Cancelled                   | not visible        |\r\n\r\nUnlike standard / express orders, priority orders do not need the book call. They are automatically booked by Shippit on the delivery date.\r\n\r\nPriority orders will remain on the New Orders page until dismissed by clicking the Label button or the GET label API call is made.\r\n\r\n\r\n### Order validation\r\nIf the `validate` field is passed and set to `true`, then the order is not saved unless Shippit can validate the destination suburb and postcode to be a valid combination. If a valid combination is not found, Shippit will return a suggested address.\r\n\r\n### Manual or Automatic Courier selection\r\nYou can allocate a courier to an order in one of two ways: you can manually specify the courier as part of the order, or you can allow Shippit to automatically allocate a courier for you.\r\n\r\nTo manually specify a courier, pass the `courier_allocation` field with the identifier of the courier (see below).\r\n\r\nTo have Shippit allocate the courier for you, pass the `courier_type` field to specify the type of couriers that Shippit can choose from to allocate for you. This is used to stand for a service level such as `standard`, `express`, `priority`, `click_and_collect`.\r\n\r\n\r\n### Specifying Parcels and Products\r\nShippit needs to know the specifications of the products you want shipped and what parcels to use in shipping them. There is a maximum of 1000 parcels per quote request.\r\n\r\nIn the simplest case, this can be specified by a `parcel_attributes` field, which contains a list of Parcel specifications. Each item specifies the number, dimensions, and other information about the products being shipped, and the associated parcel. In this case, each parcel contains one type of product.\r\n\r\nFor more complex shipping arrangements, you can additionally specify a `product_attributes` field, which contains a list of Product specifications. In this case, the `parcel_attributes` will no longer contain product information such as `qty`. Each item under `product_attributes` would specify the number, dimensions, and other information about the products; while each item under `parcel_attributes` would separately specify the dimensions of the parcels. By mixing parcel and product specifications, you can define arbitrary groupings of products into parcels.\r\n\r\nThe number of parcels is further determined by the `Allocate each item in an order to a separate carton` setting in the Shippit administration page. If this is enabled, then each item will be assigned a separate parcel according to its dimensions. If this is disabled, then Shippit may combine multiple product or parcel specifications into one.\r\n\r\n\r\n### Standard orders vs tracking orders\r\nIn a standard order, Shippit will book the courier given the provided information and provide tracking information and notifications for the merchant and recipient on the status of the order.\r\n\r\nIf you've already booked and allocated a courier to your consignment outside of Shippit, however, you can still use Shippit to provide tracking and notifications for the order. This is called a **tracking order**. In this case, you're only using Shippit for the tracking and notifications, and not for carrier booking.\r\n\r\nCreating a tracking order is the same as creating a standard order, only that you have to provide additional attributes so that Shippit can match the the courier's internal info to shippit. Note the following attributes:\r\n\r\n- `tracking_only` _required_ -- true - this makes this order a tracking order.\r\n- `courier_allocation` _required_ -- the name of the courier in charge of the item.\r\n- `courier_job_id` -- the ID assigned by some carriers to the shipment / consignment.\r\n- `parcel_attributes` -> `label_number` _required_ -- the label assigned by the carrier system to a parcel, used by Shippit to match the parcel number against the carrier's parcel number\r\n- `tracking_histories` -- one or two optional status events that will be added to the tracking page for the benefit of the recipient.\r\n\r\n#### Passing tracking histories\r\nIn a tracking order, you can choose to pass tracking histories for the benefit of the recipient. These are shown to the recipient in the tracking page to inform them of the status of when the order has been processed.\r\n\r\nThese items have just two fields, a `status` field and a `timestamp` in UTC format, to indicate to the recipient events  such as `order_placement` and `ready_for_pickup`. The `status` informs the user of the Order's state at that point in time and can be either `order_placed` or `ready_for_pickup`. The `timestamp` indicates when that change happened. The following tracking history entries are recommended to be placed:\r\n\r\n- `order_placed` - set to the time when you received the order on your system.\r\n- `ready_for_pickup` - set to the time when you book the order on Shippit.\r\n\r\nIf no `tracking_histories` entries are passed, Shippit will generate an initial tracking history for the order, set to `ready_for_pickup` at the point when Shippit received the API request.\r\n\r\n### Authority to leave\r\n* When using 500g satchels,\r\n  * When specifying ```No```, you must have ```Satchel 500g (A5)``` enabled in your settings (Settings > Pick & Pack > Automatic Package Sorting > Carrier Default Presets). \r\n  * When specifying ```Yes```, you must have ```Satchel 500g ATL (A5)``` enabled in your settings (Settings > Pick & Pack > Automatic Package Sorting > Carrier Default Presets).\r\n  * If nothing is specified, we assume ATL = ```No```\r\n\r\n* Note that the final ATL value also depends on how couriers are allocated and if users manually override the ATL option in the UI. It is important when confirming quotes that the ATL is set as desired.\r\n\r\n"
  /orders/{tracking_number}:
    delete:
      tags:
        - Order
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDeleteResponse'
              examples:
                Example successfully cancelled Order:
                  value:
                    response:
                      id: 33
                      tracking_number: PPuqD0J0uLslM
                      state: cancelled
                      processing_state: ' processing_cancelled'
                      delivery_address: 1 Union Street
                      delivery_suburb: Pyrmont
                      delivery_postcode: '2009'
                      receiver_name: Francois
                      receiver_contact_number: '0404342342'
                      courier_name: eParcel International
                      slug: ppuqd0j0ulslm
                      price: '0.0'
                      retailer_invoice: SO42637
                      courier_job_id: ABC0100023
                      user_attributes:
                        email: test@shippit.com
                        first_name: John
                        last_name: Smith
                      parcel_attributes:
                        - qty: 1
                          length: 0.325
                          width: 0.205
                          depth: 0.03
                          weight: 0.5
          description: Returns the Order with state = `cancelled`
        '403':
          $ref: '#/components/responses/InvalidMerchantAccountErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDeleteErrorResponse'
              examples:
                Example failed cancellation of Order:
                  value:
                    error: order_cannot_be_cancelled
                    error_description: >-
                      The requested order is currently in a state that cannot be
                      cancelled
                    order_state: in_transit
          description: >-
            Returns an error indicating that the Order could not be cancelled,
            and stating the reason why.
      security:
        - AuthToken: []
      operationId: cancelOrder
      summary: Cancel an Order
      description: >-
        Cancels an Order in Shippit using the tracking number.


        The API first checks if the Order can be cancelled, ie., if its current
        state allows it, then returns an immediate response. If the Order is
        successfully cancelled, the API will answer with the Order with its
        state updated as `cancelled`. If it cannot be cancelled, it will throw a
        `422` error.
    parameters:
      - name: tracking_number
        description: The tracking number of the Order.
        schema:
          type: string
        in: path
        required: true
  /orders/{tracking_number}/label:
    get:
      tags:
        - Order
        - Label
      parameters:
        - name: tracking_number
          description: The tracking number of the Order.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResponse'
              examples:
                Example Successful Label Response:
                  value:
                    response:
                      id: 5044
                      order:
                        courier_delivery_instructions: 'Authority to Leave. '
                        courier_job_id: SHP0100002
                        delivery_address: 37 Manorvale Pde
                        delivery_instructions: ''
                        delivery_postcode: '3030'
                        delivery_state: VIC
                        delivery_suburb: Werribee
                        id: 9972
                        invoice_number: INV-1384
                        parcels:
                          - depth: 0.19
                            length: 0.38
                            name: ''
                            weight: 1
                            width: 0.29
                            label_number: SHP010000201000930803
                            courier_data:
                              product_code: X123
                              pickup_zone: SYD
                              dropoff_zone: MEL
                        products:
                          - title: Industrial Paint Stripper
                            price: 29.13
                            sku: 0.1
                            quantity: 1
                            tariff_code: '000999'
                            dangerous_goods_code: ID8000
                            dangerous_goods_text: >-
                              ID8000 Consumer commodities - Dangerous Goods as
                              per attached DGD
                            origin_country_code: TH
                        price: '15.95'
                        receiver_contact_number: ''
                        receiver_language_code: EN
                        receiver_name: Jane Doe
                        retailer_invoice: ''
                        slug: ppkfqy44u8nff
                        state: completed
                        tracking_number: PPKFqy44U8Nff
                        user:
                          email: jane.doe@shippit.com
                          first_name: Jane
                          last_name: 'Doe '
                          mobile: ''
                        customs_documents_require_printing: false
                        documents:
                          archive_awb:
                            url: >-
                              https://shippit-web-production.s3.amazonaws.com/uploads/order/archive_document/15870762/archive_581833317220190318-2852-yi07y0.PDF
                            page_size: a6
                            file_type: pdf
                          customs_invoice:
                            url: >-
                              https://shippit-web-production.s3.amazonaws.com/uploads/order/customs_invoice/361690/commercial_invoice_3073489348620190218-6221-mxrhx4.pdf
                            page_size: a3
                            file_type: pdf
                          dangerous_goods_declaration:
                            url: >-
                              https://shippit-web-production.s3.amazonaws.com/uploads/order/dangerous_goods_declaration/361690/dangerous_goods_declaration_3073489348620140318-6220-11vib5y.pdf
                            page_size: a3
                            file_type: pdf
                          shipping_label:
                            url: >-
                              https://shippit-production.s3.amazonaws.com/uploads/label/attachment/5044/PPKFqy44U8Nff.pdf
                            page_size: a6
                            file_type: pdf
                      qualified_url: >-
                        https://shippit-production.s3.amazonaws.com/uploads/label/attachment/5044/PPKFqy44U8Nff.pdf
          description: Returns an Order and related label information.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
              examples:
                Example Order not found response:
                  value:
                    error: order_not_found
                    error_description: The requested order could not be found.
          description: >-
            Returns an error indicating that the Order could not be found in
            Shippit
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorResponse'
              examples:
                Example Unprocessable Label:
                  value:
                    error: order_not_available_to_label
                    error_description: >-
                      The requested order has not been processed, please try
                      again.
          description: >-
            Returns an error indicating that the Order cannot yet be processed
            for labelling.


            Typically this is because the Order has yet to be processed or
            allocatated a courier.
      security:
        - AuthToken: []
      operationId: getOrderLabel
      summary: Get Label information for an Order
      description: >-
        Retrieves labelling information for an Order using the tracking number.


        The labelling information for an Order can only be retrieved once the
        Order has been processed and allocated a courier, which may take some
        time after the Order has been placed. If the Order is yet to be
        processed, you will get a `422` Unprocessable response.
    parameters:
      - name: tracking_number
        description: The tracking number of the Order
        schema:
          type: string
        in: path
        required: true
  /orders/{tracking_number}/tracking:
    get:
      tags:
        - Order
        - Track
      parameters:
        - name: tracking_number
          description: The tracking number of the Order
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingResponse'
              examples:
                Example Tracking Response:
                  value:
                    response:
                      tracking_number: PP39TBECV7QSSPK
                      tracking_url: http://www.shippit.com/track/pp39tbecv7qsspk
                      success: true
                      track:
                        - status: Completed
                          date: '2015-04-03T00:00:00.000Z'
                          timestamp: 58985
                          status_owner: Bonds Couriers
                        - status: With Driver
                          date: '2015-04-03T00:00:00.000Z'
                          timestamp: 55385
                          status_owner: Bonds Couriers
                        - status: In Transit
                          date: '2015-04-03T00:00:00.000Z'
                          timestamp: 55325
                          status_owner: Bonds Couriers
                        - status: Ready For Pick Up
                          date: '2015-04-03T00:00:00.000Z'
                          timestamp: 49400
                          status_owner: Harold's Harpoons
                        - status: Despatch In Progress
                          date: '2015-04-03T00:00:00.000Z'
                          timestamp: 36603
                          status_owner: Harold's Harpoons
                        - status: Order Placed
                          date: '2015-04-03T00:00:00.000Z'
                          timestamp: '07:23:32'
                          status_owner: Harold's Harpoons
          description: Returns tracking info related to the Order
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingErrorResponse'
              examples:
                Error Tracking Number does not exist:
                  value:
                    error:
                      order_id:
                        - Sorry, the tracking number you entered does not exist.
                    error_description: The data given to this server does not meet our criteria.
                    success: false
          description: Returns an error if the provided tracking number does not exist
      operationId: trackOrder
      summary: Track Order
      description: >-
        This sends a tracking request to the API to retrieve the status of an
        Order.


        This uses a pull-based model of Order tracking, which sends tracking
        info on each request. If you would like to use a push-based model where
        you automatically receive messages on Order status changes, you can
        subscribe to the `Tracking Webhook` instead.
    parameters:
      - name: tracking_number
        description: The tracking number of the order
        schema:
          type: string
        in: path
        required: true
  /quotes:
    post:
      requestBody:
        description: Quote request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
              required:
                - dropoff_suburb
                - dropoff_postcode
                - parcel_attributes
              properties:
                dropoff_suburb:
                  description: The destination suburb for the quote.
                  required:
                    - dropoff_suburb
                  type: string
                  example: Surry Hills
                dropoff_state:
                  description: >-
                    The destination state for the quote. **Required** when
                    `dropoff_country_code` is unassigned or set to AU.
                  type: string
                  example: NSW
                dropoff_postcode:
                  description: The destination postcode for the quote.
                  type: string
                  example: 2010
                dropoff_country_code:
                  description: >-
                    The destination country code for the quote in `ISO03166
                    Alpha-2` format.  If unassigned or set to AU,
                    `dropoff_state` is required.
                  default: AU
                  type: string
                  example: AU
                order_date:
                  description: >-
                    Optional date for the quote, this is only relevant to
                    priority orders.
                  type: string
                  example: '2018-08-01T00:00:00.000Z'
                return_all_quotes:
                  description: >-
                    If set to `true`, the system returns all quotes instead of
                    only the cheapeast or the fastest quote as per merchant
                    settings.
                  default: false
                  type: boolean
                  example: true
                dutiable_amount:
                  description: The declared value for customs when shipping international.
                  type: number
                  example: 199.95
                parcel_attributes:
                  description: >-
                    An array of items for the quote.   **Note** that only `qty`
                    and `weight` are required.
                  type: array
                  items:
                    required:
                      - qty
                      - weight
                    type: object
                    properties:
                      qty:
                        description: Number of items in the parcel.
                        type: integer
                        example: 1
                      weight:
                        description: Parcel weight in kilograms.
                        type: string
                        example: 19.4
                      length:
                        description: Parcel length in meters.
                        type: string
                        example: 0.1
                      width:
                        description: Parcel width in meters.
                        type: string
                        example: 0.1
                      depth:
                        description: Parcel depth in meters.
                        type: string
                        example: 0.1
                      dangerous_goods_text:
                        description: Dangerous good attributes are optional strings.
                        type: string
              example:
                quote:
                  dropoff_suburb: Surry Hills
                  dropoff_state: NSW
                  dropoff_postcode: 2010
                  dropoff_country_code: AU
                  return_all_quotes: true
                  parcel_attributes:
                    - qty: 1
                      weight: 0.5
                      length: 0.1
                      width: 0.2
                      depth: 0.1
            examples:
              Example Quote Request:
                value:
                  quote:
                    dropoff_postcode: '2000'
                    dropoff_state: NSW
                    dropoff_suburb: Sydney
                    parcel_attributes:
                      - qty: 1
                        weight: 1
        required: true
      tags:
        - Quote
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
                title: Live Quote Response
                properties:
                  count:
                    description: Number of quotes retrieved.
                    type: integer
                  response:
                    type: object
                    properties:
                      success:
                        description: XXXX
                        type: boolean
                        example: true
                      courier_type:
                        description: Courier name.
                        type: string
                        example: CouriersPlease
                      service_level:
                        description: The courier service level offered.
                        type: string
                        example: standard
                  quotes:
                    type: object
                    properties:
                      price:
                        description: The courier price for the delivery.
                        type: number
                        example: 7.79
                      estimated_transit_time:
                        description: >-
                          The estimated time for the delivery.  This is provided
                          for standard and express deliveries.
                        type: string
                        example: 3 business days
                      delivery_date:
                        type: string
                      delivery_window:
                        type: string
                      delivery_window_desc:
                        type: string
                example:
                  count: 3
                  response:
                    - success: true
                      courier_type: CouriersPlease
                      service_level: standard
                      quotes:
                        - price: 7.79
                          estimated_transit_time: 1 business day
                    - success: true
                      courier_type: Eparcel
                      service_level: standard
                      quotes:
                        - price: 17.14
                          estimated_transit_time: 2 business days
                    - success: true
                      courier_type: Bonds
                      service_level: priority
                      quotes:
                        - delivery_date: '2014-08-08T00:00:00.000Z'
                          delivery_window: 13:29-16:29
                          delivery_window_desc: 1PM-4AM
                          price: 24.24
                    - delivery_date: '2014-08-08T00:00:00.000Z'
                      delivery_window: 16:00-19:00
                      delivery_window_desc: 4PM-7PM
                      price: 24.24
              examples:
                Successfully Generated Quote:
                  value:
                    response:
                      - courier_type: CouriersPlease
                        quotes:
                          - price: 20.4
                            estimated_transit_time: 3 business days
                        service_level: standard
                        success: true
                      - courier_type: eParcelExpress
                        quotes:
                          - price: 30.4
                            estimated_transit_time: 1 business day
                        service_level: express
                        success: true
                      - courier_type: Priority
                        quotes:
                          - delivery_date: '2014-09-18T00:00:00.000Z'
                            delivery_window: 07:00-10:00
                            delivery_window_desc: 7AM-10AM
                            price: 24.24
                            courier_type: Bonds
                          - delivery_date: '2014-09-18T00:00:00.000Z'
                            delivery_window: 10:00-13:00
                            delivery_window_desc: 10AM-1PM
                            price: 24.24
                            courier_type: AlliedExpressP2P
                        service_level: priority
                        success: true
                    count: 3
          description: Successful quote response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteErrorResponse'
            text/html: {}
          description: >-
            Returned when a quote request cannot be generated at all.


            Note that if a quote request to a carrier _can_ be generated, but
            one or more carriers cannot respond to the quote, then the quote
            request succeeds and this response is not given. The status of each
            individual quote would then be determined from the response body.
            This response is only returned when the quote request cannot be
            processed.


            If returned as text/html, will be blank.
        '403':
          $ref: '#/components/responses/InvalidMerchantAccountErrorResponse'
        '500':
          $ref: '#/components/responses/UnknownErrorResponse'
      security:
        - AuthToken: []
      operationId: getQuote
      summary: Retrieve Quote
      description: >-
        Submits a request for Quotes from different couriers on Shippit.


        At minimum, a Quote requires a delivery location and information on the
        parcels being delivered. However, different couriers and delivery
        methods can require additional fields to satisfy their requirements.
        There is a maximum of 1000 parcels per quote request.


        ### Listing all quotes vs listing a single quote

        By default, Shippit will return a quote from the fastest / cheapest
        courier. However, for the purposes of showing different options, such as
        in a courier selection page, you may want to have Shippit display all
        quotes. To do this, pass the `return_all_quotes` field as true.


        Note that the quotes returned are filtered based on the requirements
        given by different couriers. Depending on the info submitted in the
        order and the carrier settings in the Shippit admin page, you may not
        see quotes from all configured carriers.
  /merchant:
    summary: >-
      The merchant settings API allows you to query and update the current
      settings for your merchant account.
    get:
      tags:
        - Merchant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantResponse'
              examples:
                Example Merchant Response:
                  value:
                    response:
                      store_name: New Store Name
                      company_name: Harold Pty Ltd
                      contact_name: Robert
                      contact_phone: '0400000000'
                      shipping_cart_method_name: ''
                      preparation_time: 60
                      website_url: www.haroldsharpoons.com.au
                      address_1: 110 Rex Road
                      suburb: Sydney
                      state: NSW
                      postcode: '2000'
                      country_code: AU
          description: Returns an object representing your merchant account settings.
        '403':
          $ref: '#/components/responses/InvalidMerchantAccountErrorResponse'
      security:
        - AuthToken: []
      operationId: getMerchant
      summary: Get Merchant settings
    patch:
      requestBody:
        description: Merchant request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantRequest'
            examples:
              Example Merchant settings change:
                value:
                  merchant:
                    store_name: New Store Name
        required: true
      tags:
        - Merchant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantResponse'
              examples:
                Updated merchant account:
                  value:
                    response:
                      store_name: Harolds Harpoons
                      company_name: Harold Pty Ltd
                      contact_name: Robert
                      contact_phone: '0400000000'
                      shipping_cart_method_name: ''
                      preparation_time: 60
                      website_url: www.haroldsharpoons.com.au
                      address_1: 110 Rex Road
                      suburb: Sydney
                      state: NSW
                      postcode: '2000'
                      country_code: AU
          description: The updated merchant account.
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '403':
          $ref: '#/components/responses/InvalidMerchantAccountErrorResponse'
        '500':
          $ref: '#/components/responses/UnknownErrorResponse'
      operationId: updateMerchant
      summary: Update Merchant settings
      description: >-
        Given an object with the desired settings to update, will update the
        Merchant settings on Shippit
  /webhook:
    post:
      requestBody:
        description: Updated status info about the Order sent by the webhook.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
            examples:
              Example Tracking Webhook Status:
                value:
                  tracking_number: PPYvZCTod5bkD
                  tracking_url: http://www.shippit.com/track/ppyvzctod5bkd
                  current_state: completed
                  retailer_order_number: WEYFEW232
                  courier_name: Couriers Please
                  courier_job_id: CPAVZUZ0001749
                  delivery_address: 115 Campbell Drive
                  delivery_suburb: Wahroonga
                  delivery_postcode: '2076'
                  delivery_state: NSW
                  merchant_url: myshopify.storename.com
                  status_history:
                    - status: completed
                      time: '2016-04-26T19:36:32.000Z'
                    - status: with_driver
                      time: '2016-04-26T18:36:32.000Z'
                    - status: in_transit
                      time: '2016-04-26T17:36:32.000Z'
                    - status: ready_for_pickup
                      time: '2016-04-26T16:36:11.000Z'
                    - status: despatch_in_progress
                      time: '2016-04-26T16:27:35.000Z'
                    - status: order_placed
                      time: '2016-04-26T16:25:04.000Z'
                  products:
                    - quantity: 1
                      sku: EWPE123123
                      title: Super awesome red tshirt
                      product_line_id: '1234'
                    - quantity: 7
                      sku: EWPE123123
                      title: Super awesome blue tshirt
                      product_line_id: '1235'
        required: true
      tags:
        - Track
      responses:
        '200':
          description: >-
            The response (success) the webhook expects from your application
            endpoint.
      operationId: trackOrderHook
      summary: Webhook
      description: >
        Shippit will send status updates on orders to a URL you have configured
        in the Shippit admin page.


        This can be configured at `Settings` -> `Integrations` -> `Webhook URL`
        at the Shippit admin.


        If configured, Shippit will send POST requests to the URL set here with
        updates on an Order's status as it progresses.


        ---

        ### Best practices for using webhooks


        **Event types**


        Your webhook implementation should be configured to action only the
        types of events required by your integration. Actioning for extra events
        (or all events) is not recommended as we may add new events at anytime


        **Handle duplicate events**


        Webhook endpoints might occasionally receive the same event more than
        once. We advise you to guard against duplicated event receipts by making
        your event processing idempotent. One way of doing this is logging the
        events youâ€™ve processed, and then not processing already-logged events.


        **Order of events**


        Shippit does not guarantee delivery of events in the order in which they
        are generated. 
  /book:
    description: ''
    post:
      requestBody:
        description: An array of Order tracking numbers to book
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
            examples:
              Example Book Request:
                value:
                  orders:
                    - PPKNpNhR0A5Ud
                    - PP2ZlACi2vtxNY
                    - PPKNpNhR0A5Ud
        required: true
      tags:
        - Book
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
              examples:
                Example Successful Book Response:
                  value:
                    response:
                      - courier: eParcel Express
                        manifest: ABC0000214
                        manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
                        order_count: 2
                        success: true
                      - courier: Fastway
                        manifest: FW20160721215
                        manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
                        order_count: 2
                        success: true
                      - courier: Couriers Please
                        manifest: JJJ20160721216
                        manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
                        order_count: 4
                        success: true
                      - courier: eParcel
                        manifest: ABC0000217
                        manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
                        order_count: 2
                        success: true
                    count: 4
                Error Book Response - could not be found:
                  value:
                    response:
                      - error: orders_not_available_to_book
                        error_description: >-
                          The requested orders could not be found. Please remove
                          and try again.
                        orders:
                          - invalid-tracking
                        success: false
                    count: 1
                Error Manifest failed:
                  value:
                    response:
                      - courier: Fastway
                        error: Manifest creation failed
                        manifest: FW20160721224
                        orders:
                          - ppd5q24mtuett
                        success: false
                      - courier: Couriers Please
                        error: Manifest creation failed
                        manifest: JJJ20160721225
                        orders:
                          - pp0myuwhnajn4
                        success: false
                    count: 2
          description: >-
            Returns the status of the bookings at each courier.


            This API will validate that all of the requested orders are accurate
            and ready to be booked, if all of the orders sent in cannot be
            booked, the response will detail which orders cannot be found. If
            this response is received, none of the order numbers sent in will
            have been booked. If a manifest fails to be generated, the response
            will include an array of orders on each manifest which were not
            booked.
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '403':
          $ref: '#/components/responses/InvalidMerchantAccountErrorResponse'
        '500':
          $ref: '#/components/responses/UnknownErrorResponse'
      security:
        - AuthToken: []
      operationId: bookOrder
      summary: Book Order
      description: >-
        Given an array of Orders, this will initiate a booking with their
        respective couriers.


        For Orders to be booked, they must first be labelled.
components:
  schemas:
    QuoteResponse:
      title: Root Type for QuoteResponse
      description: >-
        Represents a response to an QuoteRequest, which shows either the
        generated Quote object or an error code with a description of the error.
      type: object
      allOf:
        - type: object
          properties:
            response:
              description: The Quote returned by the carrier
              type: array
              items:
                $ref: '#/components/schemas/QuoteResult'
            count:
              description: Number of quote results returned.
              type: number
        - $ref: '#/components/schemas/DataResponse'
      example: |-
        {
            "response": [
                {
                    "courier_type": "CouriersPlease",
                    "error": null,
                    "quotes": [
                        {
                            "price": 20.4,
                            "estimated_transit_time": "3 business days"
                        }
                    ],
                    "service_level": "standard",
                    "success": true
                },
                {
                    "courier_type": "eParcelExpress",
                    "error": null,
                    "quotes": [
                        {
                            "price": 30.4,
                            "estimated_transit_time": "1 business day"
                        }
                    ],
                    "service_level": "express",
                    "success": true
                },
                {
                    "courier_type": "Priority",
                    "error": null,
                    "quotes": [
                        {
                            "delivery_date": "2014-09-18",
                            "delivery_window": "07:00-10:00",
                            "delivery_window_desc": "7AM-10AM",
                            "price": 24.24,
                            "courier_type": "Bonds"
                        },
                        {
                            "delivery_date": "2014-09-18",
                            "delivery_window": "10:00-13:00",
                            "delivery_window_desc": "10AM-1PM",
                            "price": "24.2",
                            "courier_type": "AlliedExpressP2P"
                        }
                    ],
                    "service_level": "priority",
                    "success": true
                }
            ],
            "count": 3
        }
    QuoteRequest:
      title: Root Type for QuoteRequest
      description: Represents a request for carrier Quotes from Shippit.
      required:
        - quote
      type: object
      properties:
        quote:
          $ref: '#/components/schemas/QuoteRequestDetails'
          description: A specification of the queries to include in the quote.
      example:
        quote:
          dropoff_postcode: some text
          dropoff_state: some text
          dropoff_suburb: some text
          parcel_attributes:
            qty: 76
            weight: 54
    MerchantRequest:
      title: Root Type for MerchantRequest
      description: Represents a request to update a merchant
      required:
        - merchant
      type: object
      properties:
        merchant:
          $ref: '#/components/schemas/Merchant'
          description: Fields to update on a merchant account.
          properties:
            store_name:
              type: string
      example: |-
        {
            "merchant": {
                "store_name": "New Store Name"
            }
        }
    BookRequest:
      title: Root Type for BookRequest
      description: >-
        The book API accepts an array of orders to book, this will initiate a
        booking with the respective carriers of the orders sent in. 
      required:
        - orders
      type: object
      properties:
        orders:
          description: >-
            an array of Shippit tracking numbers, corresponding to the orders
            which you would like to book.
          type: array
          items:
            type: string
      example: |
        {
            "orders": [
                "PPKNpNhR0A5Ud",
                "PP2ZlACi2vtxNY",
                "PPKNpNhR0A5Ud"
            ]
        }
    Book:
      description: >-
        The book API accepts an array of orders to book, this will initiate a
        booking with the respective carriers of the orders sent in. 
      type: object
    OrderRequest:
      title: Root Type for OrderRequest
      description: Represents a request to submit an order to shippit.
      required:
        - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderRequestOrder'
          description: The Order to create in shippit.
      example:
        order:
          courier_type: standard
          delivery_address: 1 Union Street
          delivery_postcode: '2009'
          delivery_state: NSW
          delivery_suburb: Pyrmont
          authority_to_leave: 'Yes'
          parcel_attributes:
            - qty: 1
              weight: 2.1
          user_attributes:
            email: test@shippit.com
            first_name: John
            last_name: Smith
    Merchant:
      title: Root Type for Merchant
      description: Represents a merchant account
      type: object
      properties:
        store_name:
          type: string
          description: Store name
        company_name:
          type: string
          description: Company name
        contact_name:
          type: string
          description: Contact name
        contact_phone:
          type: string
          description: Contact phone
        shipping_cart_method_name:
          type: string
          description: Shipping cart method name
        preparation_time:
          format: int32
          type: integer
          description: Preparation time
        website_url:
          type: string
          description: Website URL
        address_1:
          type: string
          description: Address
        suburb:
          type: string
          description: Suburb
        state:
          type: string
          description: State
        postcode:
          type: string
          description: Postcode
      example:
        store_name: New Store Name
        company_name: Harold Pty Ltd
        contact_name: Robert
        contact_phone: '0400000000'
        shipping_cart_method_name: ''
        preparation_time: 60
        website_url: www.haroldsharpoons.com.au
        address_1: 110 Rex Road
        suburb: Sydney
        state: NSW
        postcode: '2000'
    UserAttributes:
      title: Root Type for UserAttributes
      description: |
        Represents the customers details attached to the order.
      required:
        - first_name
        - email
      properties:
        email:
          description: the customer's email address
          type: string
        first_name:
          description: >
            the customer's first name. If ```last_name``` is not provided, then
            it is used as the customer's full name.
          type: string
        last_name:
          description: customer's last name
          type: string
        mobile:
          description: Mobile number of the user / receiver.
          type: string
      example:
        email: john.smith@shippit.com
        first_name: John
        last_name: Smith
    LabelDocument:
      title: Root Type for LabelDocument
      description: >-
        A Label or document in the Labels API, representing a printable document
        available on a public URL.
      type: object
      properties:
        url:
          description: >-
            URL to a printable PDF document.

            This is a [pre-signed
            URL](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html),
            generated by the Shippit platform to provide access to a secured
            document. The pre-signed URL remains valid for 7 days. If you need
            to access this document after expiration, please make another
            request for a new URL to be issued.
          type: string
        page_size:
          description: Page size
          type: string
        file_type:
          description: File type of the label
          type: string
        encoded_label:
          description: >-
            If you have ZPL for your account, printable ZPL data for the
            document.
          type: string
      example: "{\r\n  \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/customs_invoice/361690/commercial_invoice_3073489348620190218-6221-mxrhx4.pdf\",\r\n  \"page_size\": \"a3\",\r\n  \"file_type\": \"pdf\"\r\n}"
    Label:
      title: Root Type for Label
      description: Represents an Order and related labelling information
      required:
        - order
        - qualified_url
      type: object
      properties:
        data:
          description: Data
          type: object
        id:
          format: int32
          description: Shippit internal ID of the generated label.
          type: integer
        order:
          $ref: '#/components/schemas/OrderResponseOrder'
          description: The Order being labelled.
        qualified_url:
          description: >-
            URL to a printable label for the Order.

            This is a [pre-signed
            URL](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html),
            generated by the Shippit platform to provide access to a secured
            label. The pre-signed URL remains valid for 7 days. If you need to
            access this label after expiration, please make another request for
            a new URL to be issued.
          type: string
      example: "{\r\n    \"data\": null,\r\n    \"id\": 5044,\r\n    \"order\": {\r\n        \"courier_delivery_instructions\": \"Authority to Leave. \",\r\n        \"courier_type\": null,\r\n        \"courier_job_id\": \"SHP0100002\",\r\n        \"delivery_address\": \"37 Manorvale Pde\",\r\n        \"delivery_date\": null,\r\n        \"delivery_instructions\": \"\",\r\n        \"delivery_postcode\": \"3030\",\r\n        \"delivery_state\": \"VIC\",\r\n        \"delivery_district_city\": null,\r\n        \"delivery_suburb\": \"Werribee\",\r\n        \"delivery_window\": null,\r\n        \"id\": 9972,\r\n        \"invoice_number\": \"INV-1384\",\r\n        \"parcels\": [\r\n            {\r\n                \"depth\": 0.19,\r\n                \"length\": 0.38,\r\n                \"name\": \"\",\r\n                \"weight\": 1.0,\r\n                \"width\": 0.29,\r\n                \"label_number\": \"SHP010000201000930803\",\r\n                \"courier_data\": {\r\n                  \"product_code\": \"X123\",\r\n                  \"pickup_zone\": \"SYD\",\r\n                  \"dropoff_zone\": \"MEL\"\r\n                }\r\n            }\r\n        ],\r\n        \"products\": [\r\n            {\r\n                \"title\": \"Industrial Paint Stripper\",\r\n                \"price\": 29.13,\r\n                \"sku\": 0.1,\r\n                \"quantity\": 1,\r\n                \"tariff_code\": \"000999\",\r\n                \"dangerous_goods_code\": \"ID8000\",\r\n                \"dangerous_goods_text\": \"ID8000 Consumer commodities - Dangerous Goods as per attached DGD\",\r\n                \"origin_country_code\": \"TH\"\r\n            }\r\n        ],\r\n        \"price\": \"15.95\",\r\n        \"receiver_contact_number\": \"\",\r\n        \"receiver_language_code\": \"EN\",\r\n        \"receiver_name\": \"Jane Doe\",\r\n        \"retailer_invoice\": \"\",\r\n        \"slug\": \"ppkfqy44u8nff\",\r\n        \"state\": \"completed\",\r\n        \"tracking_number\": \"PPKFqy44U8Nff\",\r\n        \"user\": {\r\n            \"email\": \"jane.doe@shippit.com\",\r\n            \"first_name\": \"Jane\",\r\n            \"id\": 7808,\r\n            \"last_name\": \"Doe \",\r\n            \"mobile\": \"\"\r\n        },\r\n        \"customs_documents_require_printing\": false,\r\n        \"documents\": {\r\n            \"archive_awb\": {\r\n              \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/archive_document/15870762/archive_581833317220190318-2852-yi07y0.PDF\",\r\n              \"page_size\": \"a6\",\r\n              \"file_type\": \"pdf\"\r\n            },\r\n            \"customs_invoice\": {\r\n              \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/customs_invoice/361690/commercial_invoice_3073489348620190218-6221-mxrhx4.pdf\",\r\n              \"page_size\": \"a3\",\r\n              \"file_type\": \"pdf\"\r\n            },\r\n            \"dangerous_goods_declaration\": {\r\n              \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/dangerous_goods_declaration/361690/dangerous_goods_declaration_3073489348620140318-6220-11vib5y.pdf\",\r\n              \"page_size\": \"a3\",\r\n              \"file_type\": \"pdf\"\r\n            },\r\n            \"shipping_label\": {\r\n              \"url\": \"https://shippit-production.s3.amazonaws.com/uploads/label/attachment/5044/PPKFqy44U8Nff.pdf\",\r\n              \"page_size\": \"a6\",\r\n              \"file_type\": \"pdf\"\r\n            }\r\n        }\r\n    },\r\n    \"qualified_url\": \"https://shippit-production.s3.amazonaws.com/uploads/label/attachment/5044/PPKFqy44U8Nff.pdf\"\r\n}"
    BookResponse:
      description: >-
        Represents a response to the Book API, which returns the status of
        booking the order at each courier.
      type: object
      properties:
        response:
          description: Array of booking statuses at each courier
          type: array
          items:
            $ref: '#/components/schemas/BookingStatus'
        error:
          description: >-
            Error code returned by Shippit


            For the book response, there can be errors at the top-level request
            or for individual orders booked.


            If the error occurs at the top-level request (order format,
            authorization), then this error code applies. Otherwise, the
            response will be successful and there will be individual errors
            applied in the body of each booked item.
          type: string
        error_description:
          description: Human-readable description of the top-level error encountered.
          type: string
        count:
          description: Number of items in the response
          type: integer
      example:
        response:
          - courier: eParcel Express
            manifest: ABC0000214
            manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
            order_count: 2
            success: true
          - courier: Fastway
            manifest: FW20160721215
            manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
            order_count: 2
            success: true
          - courier: Couriers Please
            manifest: JJJ20160721216
            manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
            order_count: 4
            success: true
          - courier: eParcel
            manifest: ABC0000217
            manifest_pdf: https://shippit.com/manifest20160721-96368-1tpowvr.pdf
            order_count: 2
            success: true
        count: 4
    BookingStatus:
      title: Root Type for BookingStatus
      description: Describes the status of booking an order at a courier
      type: object
      properties:
        courier:
          description: The courier where the booking was made
          type: string
        manifest:
          description: The Manifest ID of the booking
          type: string
        manifest_pdf:
          description: >-
            A URL to a printable copy of the shipping manifest. This is a
            [pre-signed
            URL](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html),
            generated by the Shippit platform to provide access to a secured
            document. The pre-signed URL remains valid for 7 days. If you need
            to access this document after expiration, please make another
            request for a new URL to be issued.
          type: string
        order_count:
          format: int32
          description: How many orders were included in this manifest.
          type: integer
        success:
          description: Whether or not the booking succeeded
          type: boolean
        orders:
          description: >-
            An array of order tracking numbers included in this status. Used to
            indicate which orders failed to manifest in the case where `success`
            = `false`.
          type: array
          items:
            type: string
        error:
          description: >-
            Error code that applies to the individual bookings / orders
            referenced.
          type: string
        error_description:
          description: >-
            Human-readable error message applied to the individual bookings /
            orders referenced.
          type: string
      example: |-
        {
            "courier": "eParcel Express",
            "manifest": "ABC0000214",
            "manifest_pdf": "https://shippit.com/manifest20160721-96368-1tpowvr.pdf",
            "order_count": 2,
            "success": true
        }
    QuoteRequestDetails:
      title: Root Type for quote
      description: A specification of the queries to include in the quote.
      required:
        - parcel_attributes
        - dropoff_postcode
        - dropoff_suburb
      type: object
      properties:
        dropoff_postcode:
          description: destination postcode for the quote
          type: string
        dropoff_state:
          description: >-
            destination state for the quote. **Required** when
            `dropoff_postcode` is unassigned or set to `AU`
          type: string
        dropoff_suburb:
          description: The dropoff suburb
          type: string
        parcel_attributes:
          description: >-
            An array of parcel specifications to be included in the quote.


            Each item can be used to specify the qty, dimensions, and other
            information about the products to be shipped, and the parcel used to
            ship it.


            At minimum, only the `qty` and `weight` fields are required. There
            is a maximum of 1000 parcels per quote request.
          type: array
          items:
            $ref: '#/components/schemas/Parcel'
        order_date:
          format: date
          description: delivery date for the order, required for `priority` orders
          type: string
        return_all_quotes:
          description: >-
            If set to `true`, the system returns all quotes instead of
            cheapest/fastest quote. Defaults to false.
          type: boolean
        dutiable_amount:
          description: >-
            ```conditional``` Declared value for customs when shipping
            international.


            Mandatory for International orders.
          type: number
        dropoff_country_code:
          description: >-
            The destination country code for the quote in `ISO 3166 Alpha-2`
            format. If unassigned, defaults to the country code of the
            merchant's primary location, or otherwise 'AU'
          type: string
      example: |-
        {
            "dropoff_postcode": "2000",
            "dropoff_state": "NSW",
            "dropoff_suburb": "Sydney",
            "parcel_attributes": [
                {
                    "qty": 1,
                    "weight": 1
                }
            ]
        }
    QuoteResult:
      title: Root Type for Quote
      description: Represents a Quote returned by a courier
      type: object
      properties:
        courier_type:
          description: The name of the courier or service level giving the quote.
          type: string
        error:
          description: Error response, if any, received from the carrier(s) during quoting.
          type: string
        quotes:
          description: List of quotes returned for the service level or carrier.
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        service_level:
          description: The service level associated with this quote or group of quotes.
          type: string
        success:
          description: >-
            Whether or not this service level was able to obtain a valid quote
            from the carrier(s).
          type: boolean
      example: "{\r\n    \"courier_type\": \"CouriersPlease\",\r\n    \"error\": null,\r\n    \"quotes\": [\r\n        {\r\n            \"price\": 20.4,\r\n            \"estimated_transit_time\": \"3 business days\"\r\n        }\r\n    ],\r\n    \"service_level\": \"standard\",\r\n    \"success\": true\r\n}"
    Quote:
      title: Root Type for Quote
      description: A quote returned by a carrier.
      type: object
      properties:
        delivery_date:
          format: date
          description: Estimated date of delivery for the order
          type: string
        delivery_window:
          description: >-
            For priority orders, machine-readable estimated range of times when
            the delivery could take place.
          type: string
        delivery_window_desc:
          description: >-
            For priority orders, human-readable estimated range of times when
            the delivery could take place.
          type: string
        price:
          description: Amount quoted by the carrier.
          type: number
        courier_type:
          description: >-
            `optional` If returned inside a quote response for a service level
            (e.g. `standard`), the carrier returning the quote. May be omitted
            if a specific carrier was requested.
          type: string
        estimated_transit_time:
          description: Estimated amount of time for the quote to arrive.
          type: string
      example:
        delivery_date: '2014-09-18T00:00:00.000Z'
        delivery_window: 07:00-10:00
        delivery_window_desc: 7AM-10AM
        price: 24.24
        courier_type: Bonds
    OrderResponseOrder:
      description: Represents an Order that was created in Shippit
      required:
        - tracking_number
        - slug
        - documents
      type: object
      allOf:
        - $ref: '#/components/schemas/Order'
      properties:
        tracking_number:
          description: >-
            Unique random ID assigned by Shippit to an order. This can be used
            as a reference for future API calls or support tickets.
          type: string
        slug:
          description: '`tracking_number` in lowercase.'
          type: string
        parcel_attributes:
          $ref: '#/components/schemas/OrderResponseOrderParcel'
          description: An array of parcel specifications that were created with the order.
        products:
          description: |-
            An array of product items specified in the order.

            If product information was not provided, this array will be blank.
          type: array
          items:
            $ref: '#/components/schemas/Product'
        tracking_url:
          description: The URL of the order's customer tracking page.
          type: string
        return:
          description: Whether or not the order is a return order.
          type: boolean
        id:
          description: Shippit internal numerical ID
          type: integer
        processing_state:
          description: Internal order status set and progressed by Shippit upon creation.
          type: string
        invoice_number:
          description: >-
            Internal link between an order and a Shippit invoice - will almost
            always be null on order creation.
        courier_delivery_instructions:
          description: >-
            Delivery instructions as sent to the courier. In most cases, this is
            the same as the `delivery_instructions` passed into the request.
            Some couriers, however, have a specific format expected when sending
            delivery instructions through their API. This will contain the
            actual delivery instructions that get sent through the courier API
            when booked.
          type: string
        courier_name:
          description: >-
            Human-readable name of the courier that has been allocated to the
            order, or `null` if the order hasn't been allocated yet.


            If you're creating orders by passing in `courier_type`, the courier
            will usually not be yet be assigned at order creation and you will
            get `null`. Courier allocation will be run as a background process
            depending on the merchant preferences, available couriers, and
            quotes returned by the couriers, which may take a few seconds to
            complete after order creation.


            If you're passing in a specific courier keyword in
            `courier_allocation`, this will reflect the courier that is
            specified.


            Note that the Shippit web user can also update the courier in
            between API calls. The final courier that has been assigned can be
            determined from the LABEL call.
          type: string
        price:
          description: >-
            The price that will be charged for the allocated order.


            If you're creating orders by passing in `courier_type`, the courier
            will usually not be yet be assigned at order creation and you will
            get `0`. Courier allocation will be run as a background process
            depending on the merchant preferences, available couriers, and
            quotes returned by the couriers, which may take a few seconds to
            complete after order creation.


            Note that the Shippit web user can also update the courier in
            between API calls. The final courier and quoted price can be
            determined from the LABEL call.


            If the quoted price is still `0` during the LABEL call, something
            likely went wrong with the courier selection and the order may need
            to be amended.
        customs_documents_require_printing:
          description: >-
            Whether or not customs documents, such as declarations, invoices,
            etc for the Order that should be printed and included with the
            shipment. By default this is `true` for International orders.
          type: boolean
        courier_type:
          description: >-
            The courier allocated to the order. See the ORDER CREATE
            `courier_allocation` API for available keywords.
          type: string
        tracking_histories:
          description: >-
            An array of Tracking History statuses that are are shown to the
            recipient as part of the order's history on the tracking page.
          type: array
          items:
            $ref: '#/components/schemas/OrderResponseTrackingHistory'
        state:
          description: The state of the order as progressed by the merchant.
          type: string
        user:
          $ref: '#/components/schemas/UserAttributes'
          description: Represents the recipient of the order
        documents:
          $ref: '#/components/schemas/OrderResponseOrderDocumentsHash'
          description: Documents attached to the label response
    OrderRequestOrder:
      description: Represents parameters that can be used to create an order in Shippit
      required:
        - parcel_attributes
      type: object
      allOf:
        - $ref: '#/components/schemas/Order'
      properties:
        parcel_attributes:
          description: >-
            An array of parcel specifications to be included in the order.


            There is a maximum of 1000 parcels per request.


            Each item can be used to specify the qty, dimensions, and other
            information about the products being shipped, and the parcel used to
            ship it. If the `Allocate ech item in an order to a separate carton`
            setting is enabled in the Shippit administration page, then each
            item will be assigned a separate parcel according to the dimensions
            given. Otherwise, Shippit may combine multiple items into a single
            parcel.


            If the `product_attributes` field is present, then product
            information will be specified in entries there, separate from the
            parcel information. In which case each parcel entry represents a
            single parcel. 
          type: array
          items:
            $ref: '#/components/schemas/OrderRequestOrderParcelAttributes'
        product_attributes:
          $ref: '#/components/schemas/Product'
          description: >-
            an array of product details. If this is present, each item in
            ```parcel_attributes``` represents a separate parcel, while each
            line in ```product_attributes``` represents a product line item.


            There is a maximum of 1000 parcels per request.
        authority_to_leave:
          description: >-
            whether or not the order can be left unattended at the delivery
            address, options are ```Yes``` or ```No```
          type: string
        cash_on_delivery_amount:
          description: >-
            Used by some carriers (e.g. `NinjaVan`) to indicate amount to be
            received on delivery for cash on delivery orders.
          type: number
        courier_type:
          description: >-
            The service level for the order, valid options are `standard`,
            `express`, `priority`, `click_and_collect`. If you use
            `courier_type` in your request, then Shippit will allocate the
            courier for the job at that service level. If you want to specify
            the courier in the request please use `courier_allocation` attribute
            instead.


            One of `courier_allocation` or `courier_type` is required. If
            omitted or invalid option is provided in the request, we will
            allocate an enabled courier that matches the default service level.
            The default service level is `standard` and can be configured by
            Shippit on request for a merchant. The available service level
            options are ```standard```, ```express``` and ```priority```. 
          type: string
        receiver_contact_number:
          description: >-
            ```conditional``` -- number of the person receiving the order, may
            be different than the user who purchased the order. Mandatory for
            International orders.
          type: string
        receiver_name:
          description: >-
            name of the person receiving the order if different than the user
            who purchased the order
          type: string
        retailer_invoice:
          description: >-
            Merchant invoice number - the customer-facing sales order reference
            of the order. This would be what the recipient sees on the shipping
            label, packslip, customs declaration, receipt, etc.
          type: string
        retailer_reference:
          description: >-
            Merchant reference id - if the merchant uses a separate internal
            reference id for the order, it can be placed here.
          type: string
        courier_allocation:
          description: >
            For ```courier_allocation```, the list of valid options are outlined
            below.


            - `AlliedExpressOvernight`

            - `AlliedExpressSameday`

            - `AlliedOvernightRoadExpress`

            - `AramexInternational`

            - `Bonds`

            - `ClickAndCollect`

            - `CouriersPlease`

            - `CouriersPleaseExpress`

            - `Dhl`

            - `DhlEcommerce`

            - `DhlExpress`

            - `DhlExpressInternational`

            - `Eparcel`

            - `EparcelExpress`

            - `EparcelInternational`

            - `EparcelInternationalExpress`

            - `Fastway`

            - `KerryExpress`

            - `KerryStandard`

            - `NewZealandPost`

            - `NewZealandPostExpress`

            - `NinjaVanExpress`

            - `NinjaVanStandard`

            - `PlainLabel`

            - `PlainLabelInternational`

            - `SekoExpress`

            - `SekoStandard`

            - `SingPost`

            - `Skybox`

            - `StarTrack`

            - `StarTrackPremium`

            - `Tnt`

            - `Toll`

            - `YelloOndemand`


            One of `courier_allocation` or `courier_type` is required. 


            If omitted or invalid option is provided in the request, we will
            allocate an enabled courier that matches the default service level.
            The default service level is `standard` and can be configured by
            Shippit on request for a merchant. The available service level
            options are ```standard```, ```express``` and ```priority```. 


            `courier_allocaiton` is required when `tracking_only` is set to
            `true`
          type: string
        receiver_language_code:
          description: >-
            Two-letter ISO 639-1 language code of the recipient. Used to
            determine the language of tracking notifications and other
            communications. Defaults to ```EN```
          type: string
        validate:
          description: >-
            when true, run validations against the submitted order and only save
            the order if the supplied parameters are valid. 

            Validations run
             - destination suburb and postcode checked against a list of known postcodes / suburbs. 
             - If a valid combination is not found, a suggested address will be returned.
          type: boolean
        product_currency:
          description: >-
            Three letter ISO 4217 currency code that applies to the order, which
            will be sent to the carrier and presented on the customs invoice.
            Defaults to ```AUD```
          type: string
        suppress_communications:
          description: >-
            if true, all notifications will be suppressed for this specific
            order
          type: boolean
        tracking_only:
          description: >-
            Whether the Order being passed is a **tracking order** or not.


            A **tracking order** is an order where the courier was allocated
            outside of Shippit, but was loaded into Shippit to take advantage of
            tracking and notifications. If this is present and set to `true`,
            this order is a tracking order.


            If it is set to ```true```, ```courier_allocation``` must be
            present.
          type: boolean
        tracking_histories:
          description: >-
            An array of Tracking History statuses that are are shown to the
            recipient as part of the order's history on the tracking page.
          type: array
          items:
            $ref: '#/components/schemas/OrderRequestOrderTrackingHistory'
        user_attributes:
          $ref: '#/components/schemas/UserAttributes'
          description: Represents the customer details attached to the order.
        features:
          description: >-
            Some carriers provide add-on services (features) which can be
            indicated in the order. These services are identified by a unique
            string and will depend on the carrier. To request these services,
            add a string to these field.

            Services supported at the moment:

            - `white_glove` (`Neway`, `DesignerTransport`)
          type: array
          items:
            type: string
        customer_shipping_fee_paid:
          description: >-
            Shipping fee paid by the customer.

            This is displayed on the commercial invoice for international orders
            to support accurate duties and tax calculation by customs. This fee
            is not related to the Shippit quote. When not provided, no shipping
            fee will be displayed on the commercial invoice.
          type: string
        description:
          description: >-
            Goods description for the order. May appear in labels for
            international orders. If not provided, defaults to the `type of
            goods` setting of the merchant account. Description is mandatory for
            international orders when `validate` is set to `true`.
          type: string
      example:
        user_attributes:
          email: test@shippit.com
          first_name: John
          last_name: Smith
        parcel_attributes:
          - depth: 0.13
            length: 0.1
            location: C123
            price: '12.12'
            qty: 1
            sku: EWPE123123
            title: Super awesome red tshirt
            weight: 2.1
            width: 0.11
            product_line_id: '1234'
            origin_country_code: CN
            packed: 1
          - depth: 0.13
            length: 0.1
            location: B22
            price: '1.21'
            qty: 7
            sku: EWPE123123
            title: Super awesome blue tshirt
            weight: 2.1
            width: 0.11
            dangerous_goods_code: ID8000
            dangerous_goods_text: ID8000 Consumer commodities - Dangerous Goods as per attached DGD
            product_line_id: '1235'
            packed: 1
        authority_to_leave: 'No'
        courier_type: standard
        delivery_address: 1 Union Street
        delivery_postcode: '2009'
        delivery_state: NSW
        delivery_suburb: Pyrmont
        delivery_instructions: Special instructions for the order go here
        receiver_contact_number: '0400000000'
        receiver_name: Adam
        retailer_invoice: '#23201005'
        retailer_reference: '#23201005'
    TrackingHistory:
      description: >-
        An event that tracks a change in `status` of a parcel's journey to
        fulfillment, with a `timestamp` of when the event happened.


        This can be either be provided by the merchant as part of a **tracking
        order** request, or returned by a **track** request.
      required:
        - status
        - timestamp
      type: object
      properties:
        status:
          description: The status of the order
          type: string
        timestamp:
          description: The date / time when the status change occurred.
          type: string
      example:
        status: order_placed
        date: '2020-08-07T00:00:00.000Z'
        timestamp: '09:00:00'
    TrackingResponseTrackingHistory:
      description: >-
        An event that tracks a change in `status` of a parcel's journey to
        fulfillment, with a `timestamp` of when the event happened.


        This can be either be provided by the merchant as part of a **tracking
        order** request, or returned by a **track** request.
      required:
        - date
        - status_owner
        - timestamp
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackingHistory'
      properties:
        date:
          format: date
          description: The `ISO-8601` date as `YYYY-MM-DD` when the event happened.
          type: string
        status_owner:
          description: The party responsible for the status change.
          type: string
        timestamp:
          description: The time in `HH:MM:SS` that the tracking event happened.
          type: string
      example:
        status: despatch_in_progress
        date: '2020-08-25T00:00:00.000Z'
        timestamp: 41285
        status_owner: Example Store Name
    OrderRequestOrderTrackingHistory:
      title: Order Request TrackingHistory
      description: >-
        An event that tracks a change in `status` of a parcel's journey to
        fulfillment, with a `timestamp` of when the event happened.


        This can be either be provided by the merchant as part of a **tracking
        order** request, or returned by a **track** request.
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackingHistory'
      properties:
        timestamp:
          format: date-time
          description: >-
            expected format: `ISO-8601` datetime, such as `YYYY-MM-DDThh:mm` or
            `YYYY-MM-DDThh:mm:ss+TZ`.


            The date-time when the status change occurred.
          type: string
      example:
        status: With Driver
        timestamp: '2015-04-03T18:20:30.450Z'
    Parcel:
      description: >-
        Represents a parcel attached to an order.


        ## parcels vs products

        How parcels relate to products is controlled by whether or not a
        **`product_attributes`** key is also defined. If a
        **`product_attributes`** is not defined, then the number of cartons is
        determined by the `Settings -> Pick & Pack -> Allocate each item in an
        order to a separate carton` option in Shippit, and the **`qty`** field
        will now specify either the number of parcels or products.


        If a **`product_attributes`** key is specified in the request, then the
        products can be specified separately from the parcels. In which case,
        the **`qty`** field should not be present: each parcel attributes object
        represents a separate parcel, and the number of products is specified in
        the **`product_attributes`** key. There is a maximum of 1000 parcels per
        request.
      type: object
      properties:
        weight:
          description: Weight of the parcel in kilos.
          type: number
        depth:
          description: Depth of the parcel in metres
          type: number
        length:
          description: Length of the parcel in metres
          type: number
        width:
          description: Width of the parcel in metres.
          type: number
        label_number:
          description: >-
            Parcel number in the carrier system.


            This is used when the order is a tracking order, to match the parcel
            number in a carrier against the parcel recorded in shippit.
          type: string
        qty:
          description: >-
            ```conditional``` -- The number of products specified by the entry.


            There is a maximum of 1000 parcels per quote request.


            Should not be present if a `product_attributes` key is present in
            the request.


            If `Allocate each item in an order to a separate carton` is enabled
            in Shippit, a separate parcel is generated for each product listed.
          type: number
      example:
        qty: 1
        length: 0.1
        width: 0.2
        depth: 0.2
        weight: 1
        dangerous_goods_code: ID8000
        dangerous_goods_text: ID8000 Consumer commodities - Dangerous Goods as per attached DGD
    OrderResponseTrackingHistory:
      description: >-
        For `tracking-only` orders, an object representing the tracking events
        provided in order creation.


        The object returned is in the following format:


        `{ "status_name": "ISO-8601-TIMESTAMP" }`.
      type: object
      example:
        despatch_in_progress: '2020-08-06T23:05:00.000Z'
    OrderRequestOrderParcelAttributes:
      title: Root Type for ParcelAttributes
      description: >-
        Represents a parcel attached to an order.


        ## parcels vs products

        How parcels relate to products is controlled by whether or not a
        **`product_attributes`** key is also defined. If a
        **`product_attributes`** is not defined, then the number of cartons is
        determined by the `Settings -> Pick & Pack -> Allocate each item in an
        order to a separate carton` option in Shippit, and the **`qty`** field
        will now specify either the number of parcels or products.


        If a **`product_attributes`** key is specified in the request, then the
        products can be specified separately from the parcels. In which case,
        the **`qty`** field should not be present: each parcel attributes object
        represents a separate parcel, and the number of products is specified in
        the **`product_attributes`** key. There is a maximum of 1000 parcels per
        request.
      type: object
      allOf:
        - $ref: '#/components/schemas/Parcel'
      properties:
        title:
          description: >-
            ```conditional``` -- Title or description of the product. Mandatory
            for international orders with specific couriers.
          type: string
        packed:
          description: >-
            The number of products packed; used in partial orders, or otherwise
            when the number of products in the parcel is less than the total in
            the order. If not present, set to product `quantity`.


            If this is present, at least 1 item should have packed greater than
            `0`.


            For international orders, all items should have packed greater than
            `0`.
          type: integer
        sku:
          description: >-
            ```conditional``` -- Stock Keeping Unit (SKU) code of the product,
            for stock keeping purposes. Mandatory on international orders with
            specific couriers.
          type: string
        product_line_id:
          description: >-
            Product line associated with product. Like SKU, this is also for
            stock keeping purposes, and can be used when SKU would not be enough
            (e.g. an order containing multiple lines with the same SKU)
          type: string
        origin_country_code:
          description: >-
            Two-letter country code (ISO 3166-1 Alpha-2) for the product's
            origin country. This is used in customs tracking for International
            shipments. Defaults to the home country of the Merchant.
          type: string
        location:
          description: Location of the product
          type: string
        dangerous_goods_code:
          description: >-
            This is the DG code required when making dangerous goods
            declarations.


            Before you can declare orders as having dangerous goods, you must
            first request for dangerous goods to enabled for your account.
            Contact Shippit Support or your account manager to have this
            enabled.


            DG surcharges are often charged on the weight of the order, so it is
            recommended to split your order into multiple orders if your order
            contains either:

            - both dangerous and non-dangerous goods, or

            - more than one dangerous goods code
          type: string
        dangerous_goods_text:
          description: Additional information related to dangerous goods being shipped
          type: string
        price:
          description: >-
            Unit price of each product line item. Used in the packing slip and
            customs declarations.
          type: number
      example:
        qty: 1
        length: 0.1
        width: 0.2
        depth: 0.2
        weight: 1
        dangerous_goods_code: ID8000
        dangerous_goods_text: ID8000 Consumer commodities - Dangerous Goods as per attached DGD
    Product:
      title: Product
      description: Represents a single product line item in an order.
      type: object
      properties:
        title:
          description: >-
            ```conditional``` -- Title or description of the product. Mandatory
            for international orders with specific couriers.
          type: string
        packed:
          description: >-
            The number of products packed; used in partial orders, or otherwise
            when the number of products in the parcel is less than the total in
            the order. If not present, set to product `quantity`.


            If this is present, at least 1 item should have packed greater than
            `0`.


            For international orders, all items should have packed greater than
            `0`.
          type: integer
        sku:
          description: >-
            ```conditional``` -- Stock Keeping Unit (SKU) code of the product,
            for stock keeping purposes. Mandatory on international orders with
            specific couriers.
          type: string
        product_line_id:
          description: >-
            Product line associated with product. Like SKU, this is also for
            stock keeping purposes, and can be used when SKU would not be enough
            (e.g. an order containing multiple lines with the same SKU)
          type: string
        origin_country_code:
          description: >-
            Two-letter country code (ISO 3166-1 Alpha-2) for the product's
            origin country. This is used in customs tracking for International
            shipments. Defaults to the home country of the Merchant.
          type: string
        location:
          description: Location of the product
          type: string
        dangerous_goods_code:
          description: >-
            This is the DG code required when making dangerous goods
            declarations.


            Before you can declare orders as having dangerous goods, you must
            first request for dangerous goods to enabled for your account.
            Contact Shippit Support or your account manager to have this
            enabled.


            DG surcharges are often charged on the weight of the order, so it is
            recommended to split your order into multiple orders if your order
            contains either:

            - both dangerous and non-dangerous goods, or

            - more than one dangerous goods code
          type: string
        dangerous_goods_text:
          description: Additional information related to dangerous goods being shipped
          type: string
        tariff_code:
          description: Tariff code for International orders declarations
          type: string
        quantity:
          description: The number of products ordered.
          type: integer
        price:
          description: >-
            Unit price of each product line item. Used in the packing slip and
            customs declarations.
          type: number
      example:
        quantity: 1
        dangerous_goods_code: ID8000
        dangerous_goods_text: ID8000 Consumer commodities - Dangerous Goods as per attached DGD
    WebhookRequest:
      title: Root Type for WebhookRequest
      description: ''
      type: object
      properties:
        tracking_number:
          type: string
        tracking_url:
          type: string
        current_state:
          description: >-
            Possible enumerations are `await_collection`, `awaiting_collection`,
            `awaiting_drop_off`, `cancelled`, `completed`, `parcel_completed`,
            `partially_completed`, `customs_awaiting_paym`, `customs_failed`,
            `customs_on_hold`, `damaged`, `delivery_attempted`,
            `delivery_failed`, `in_transit`, `insufficient_address`,
            `invalidated`, `lost`, `pickup_failed`, `processing`,
            `ready_for_pickup`, `return_booked`, `return_booking_failed`,
            `return_requested`, `returned_to_sender`, `untrackable`,
            `with_customs`, `with_driver`
          type: string
        retailer_order_number:
          type: string
        courier_name:
          type: string
        courier_job_id:
          type: string
        delivery_address:
          type: string
        delivery_suburb:
          type: string
        delivery_postcode:
          type: string
        delivery_state:
          type: string
        merchant_url:
          type: string
        status_history:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              time:
                format: date-time
                type: string
        products:
          type: array
          items:
            type: object
            properties:
              quantity:
                format: int32
                type: integer
              sku:
                type: string
              title:
                type: string
              product_line_id:
                type: string
      example:
        tracking_number: PPYvZCTod5bkD
        tracking_url: http://www.shippit.com/track/ppyvzctod5bkd
        current_state: completed
        retailer_order_number: WEYFEW232
        courier_name: Couriers Please
        courier_job_id: CPAVZUZ0001749
        delivery_address: 115 Campbell Drive
        delivery_suburb: Wahroonga
        delivery_postcode: '2076'
        delivery_state: NSW
        merchant_url: myshopify.storename.com
        status_history:
          - status: completed
            time: '2016-04-26T19:36:32.000Z'
          - status: with_driver
            time: '2016-04-26T18:36:32.000Z'
          - status: in_transit
            time: '2016-04-26T17:36:32.000Z'
          - status: ready_for_pickup
            time: '2016-04-26T16:36:11.000Z'
          - status: despatch_in_progress
            time: '2016-04-26T16:27:35.000Z'
          - status: order_placed
            time: '2016-04-26T16:25:04.000Z'
        products:
          - quantity: 1
            sku: EWPE123123
            title: Super awesome red tshirt
            product_line_id: '1234'
          - quantity: 7
            sku: EWPE123123
            title: Super awesome blue tshirt
            product_line_id: '1235'
    Order:
      title: Root Type for Order
      description: Represents an Order to be delivered by Shippit.
      required:
        - delivery_suburb
        - delivery_state
        - delivery_postcode
        - delivery_address
      type: object
      properties:
        delivery_address:
          description: delivery address for the order
          type: string
        delivery_postcode:
          description: delivery postcode for the order
          type: string
        delivery_state:
          description: >-
            delivery state for the order

            Australian States valid options are ```NSW```, ```QLD```, ```ACT```,
            ```WA```, ```NT```, ```SA```, ```VIC```, ```TAS```
          type: string
        delivery_suburb:
          description: delivery suburb for the order
          type: string
        delivery_instructions:
          description: >-
            special delivery instructions for the order, limited to 55
            characters
          type: string
        receiver_contact_number:
          description: >-
            ```conditional``` -- number of the person receiving the order, may
            be different than the user who purchased the order. Mandatory for
            International orders.
          type: string
        receiver_name:
          description: >-
            name of the person receiving the order if different than the user
            who purchased the order
          type: string
        retailer_invoice:
          description: >-
            Merchant invoice number - the customer-facing sales order reference
            of the order. This would be what the recipient sees on the shipping
            label, packslip, customs declaration, receipt, etc.
          type: string
        receiver_language_code:
          description: >-
            Two-letter ISO 639-1 language code of the recipient. Used to
            determine the language of tracking notifications and other
            communications. Defaults to ```EN```
          type: string
        delivery_date:
          format: date
          description: >-
            The date of the order for priority orders.


            The recommended format is in ISO-8601 `YYYY-MM-DD`, although the
            Shippit is flexible enough to parse `YYYY/MM/DD`.


            ```conditional``` -- specifies the date of the order for priority
            orders


            ```delivery_date``` must be in the future.
          type: string
        delivery_window:
          description: >-
            expected format: ```00:00-00:00```


            ```conditional``` -- specifies the time window of the order, to be
            used when sending a priority order


            ```delivery_window``` must be in the future.
          type: string
        courier_job_id:
          description: >-
            Used in **tracking_order**'s, the ID assigned by some carriers to
            the shipment / consignment.
          type: string
        delivery_country_code:
          description: >-
            The destination country code for the order in `ISO 3166 Alpha-2`
            format. If unassigned, defaults to the country code of the
            merchant's primary location, or otherwise 'AU'.
          type: string
        delivery_district_city:
          description: >-
            Used in some countries to add additional district city information
            in addition to the `delivery_suburb` and `delivery_state`. Most of
            this time this is determined using the `delivery_suburb` and
            `delivery_postcode`.
          type: string
      example: |-
        {
            "user_attributes": {
                "email": "test@shippit.com",
                "first_name": "John",
                "last_name": "Smith"
            },
            "parcel_attributes": [
                {
                    "depth": 0.13,
                    "length": 0.1,
                    "location": "C123",
                    "price": "12.12",
                    "qty": 1,
                    "sku": "EWPE123123",
                    "title": "Super awesome red tshirt",
                    "weight": 2.1,
                    "width": 0.11,
                    "product_line_id": "1234",
                    "origin_country_code": "CN",
                    "packed": 1
                },
                {
                    "depth": 0.13,
                    "length": 0.1,
                    "location": "B22",
                    "price": "1.21",
                    "qty": 7,
                    "sku": "EWPE123123",
                    "title": "Super awesome blue tshirt",
                    "weight": 2.1,
                    "width": 0.11,
                    "dangerous_goods_code": "ID8000",
                    "dangerous_goods_text": "ID8000 Consumer commodities - Dangerous Goods as per attached DGD",
                    "product_line_id": "1235",
                    "packed": 1
                }
            ],
            "authority_to_leave": "No",
            "courier_type": "standard",
            "delivery_address": "1 Union Street",
            "delivery_postcode": "2009",
            "delivery_state": "NSW",
            "delivery_suburb": "Pyrmont",
            "delivery_instructions": "Special instructions for the order go here",
            "receiver_contact_number": "0400000000",
            "receiver_name": "Adam",
            "retailer_invoice": "#23201005",
            "retailer_reference": "#23201005"
        }
    OrderDeleteResponse:
      description: A response to an Order DELETE request
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
    TrackingResponseOrder:
      title: Root Type for TrackingResponseOrder
      description: Order details returned by a tracking request
      type: object
      properties:
        tracking_number:
          description: Tracking number of the Order
          type: string
        tracking_url:
          description: >-
            URL presenting tracking info for the Order. This can be shown to the
            recipient to give them status updates on the Order.
          type: string
        success:
          description: >-
            Whether or not this tracking request was successful - should always
            be `true` as tracking errors will be returned at the top-level
            response.
          type: boolean
        error:
          description: >-
            Errors associated with the tracking request - should always be
            `null` as tracking errors will be returned at the top-level
            response.
          type: string
        track:
          description: >-
            A list of historical tracking statuses for the Order. This will at
            minimum list the order status, along with the date and time when it
            changed, and who was responsible for the status change.
          type: array
          items:
            $ref: '#/components/schemas/TrackingResponseTrackingHistory'
      example:
        tracking_number: PPdNSOmJxxfzz
        tracking_url: https://app.staging.shippit.com/track/ppdnsomjxxfzz
        success: true
        track:
          - status: despatch_in_progress
            date: '2020-08-28T00:00:00.000Z'
            timestamp: 48332
            status_owner: test-store-name
          - status: order_placed
            date: '2020-06-19T00:00:00.000Z'
            timestamp: 36243
            status_owner: test-store-name
    TrackingResponse:
      description: >-
        Represents a response to the Tracking API, which provides tracking info
        for a specific order.


        If successful, will return a response object with tracking information.
        Otherwise, will return an error code at the top-level.
      type: object
      allOf:
        - type: object
          properties:
            response:
              $ref: '#/components/schemas/TrackingResponseOrder'
              description: >-
                If the tracking request is successful, order details relevant to
                tracking.
        - $ref: '#/components/schemas/DataResponse'
      example:
        response:
          tracking_number: PP39TBECV7QSSPK
          tracking_url: http://www.shippit.com/track/pp39tbecv7qsspk
          success: true
          track:
            - status: completed
              date: '2015-04-03T00:00:00.000Z'
              timestamp: 58985
              status_owner: Bonds Couriers
            - status: with_driver
              date: '2015-04-03T00:00:00.000Z'
              timestamp: 55385
              status_owner: Bonds Couriers
            - status: in_transit
              date: '2015-04-03T00:00:00.000Z'
              timestamp: 55325
              status_owner: Bonds Couriers
            - status: ready_for_pickup
              date: '2015-04-03T00:00:00.000Z'
              timestamp: 49400
              status_owner: Harold's Harpoons
            - status: despatch_in_progress
              date: '2015-04-03T00:00:00.000Z'
              timestamp: 36603
              status_owner: Harold's Harpoons
            - status: order_placed
              date: '2015-04-03T00:00:00.000Z'
              timestamp: '07:23:32'
              status_owner: Harold's Harpoons
    DataResponse:
      description: Response message containing data.
      type: object
    MerchantResponse:
      title: Root Type for MerchantResponse
      description: >-
        Represents a response to the Merchant request API, which shows either
        the generated Merchant object, or an error code with a description of
        the error.
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/DataResponse'
      properties:
        response:
          $ref: '#/components/schemas/Merchant'
          description: Object representing the merchant account settings
      example:
        response:
          store_name: New Store Name
          company_name: Harold Pty Ltd
          contact_name: Robert
          contact_phone: '0400000000'
          shipping_cart_method_name: ''
          preparation_time: 60
          website_url: www.haroldsharpoons.com.au
          address_1: 110 Rex Road
          suburb: Sydney
          state: NSW
          postcode: '2000'
          country_code: AU
    OrderResponse:
      title: OrderResponse
      description: >-
        Represents a response to an OrderRequest, which shows either the
        generated order object or an error code with a description of the error.
      type: object
      allOf:
        - $ref: '#/components/schemas/DataResponse'
      properties:
        response:
          $ref: '#/components/schemas/OrderResponseOrder'
          description: Object representing the Order in shippit.
      example:
        response:
          courier_delivery_instructions: special instructions
          courier_job_id: '30734876324'
          courier_name: eParcel
          delivery_address: 1 Union Street
          delivery_instructions: test special instructions
          delivery_postcode: '2009'
          delivery_state: NSW
          delivery_suburb: Pyrmont
          id: 26599
          parcel_attributes:
            - depth: 0.13
              length: 0.1
              qty: 1
              weight: 16.8
              width: 0.11
          products:
            - title: Industrial Paint Stripper
              price: 29.13
              sku: 0.1
              tariff_code: '000999'
              dangerous_goods_code: ID8000
              dangerous_goods_text: >-
                ID8000 Consumer commodities - Dangerous Goods as per attached
                DGD
              origin_country_code: TH
              quantity: 1
          price: '0.0'
          processing_state: created
          receiver_contact_number: '0400000000'
          receiver_name: Josh
          retailer_invoice: '#23201005'
          slug: ppu38wz2tdonj
          state: processing
          tracking_number: PPu38Wz2TdoNj
          user_attributes:
            email: test@shippit.com
            first_name: jon
            last_name: smith
            mobile: '0413084048'
    LabelResponse:
      description: >-
        Represents a response to the Label API, which provides an Order and
        related label information
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/DataResponse'
      properties:
        response:
          $ref: '#/components/schemas/Label'
          description: Object representing the Label in Shippit
      example: "{\r\n    \"response\": {\r\n        \"data\": null,\r\n        \"id\": 5044,\r\n        \"order\": {\r\n            \"courier_delivery_instructions\": \"Authority to Leave. \",\r\n            \"courier_type\": null,\r\n            \"courier_job_id\": \"SHP0100002\",\r\n            \"delivery_address\": \"37 Manorvale Pde\",\r\n            \"delivery_date\": null,\r\n            \"delivery_instructions\": \"\",\r\n            \"delivery_postcode\": \"3030\",\r\n            \"delivery_state\": \"VIC\",\r\n            \"delivery_district_city\": null,\r\n            \"delivery_suburb\": \"Werribee\",\r\n            \"delivery_window\": null,\r\n            \"id\": 9972,\r\n            \"invoice_number\": \"INV-1384\",\r\n            \"parcels\": [\r\n                {\r\n                    \"depth\": 0.19,\r\n                    \"length\": 0.38,\r\n                    \"name\": \"\",\r\n                    \"weight\": 1.0,\r\n                    \"width\": 0.29,\r\n                    \"label_number\": \"SHP010000201000930803\",\r\n                    \"courier_data\": {\r\n                      \"product_code\": \"X123\",\r\n                      \"pickup_zone\": \"SYD\",\r\n                      \"dropoff_zone\": \"MEL\"\r\n                    }\r\n                }\r\n            ],\r\n            \"products\": [\r\n                {\r\n                    \"title\": 'Industrial Paint Stripper',\r\n                    \"price\": 29.13,\r\n                    \"sku\": 0.1,\r\n                    \"quantity\": 1,\r\n                    \"tariff_code\": \"000999\",\r\n                    \"dangerous_goods_code\": \"ID8000\",\r\n                    \"dangerous_goods_text\": \"ID8000 Consumer commodities - Dangerous Goods as per attached DGD\",\r\n                    \"origin_country_code\": \"TH\"\r\n                }\r\n            ],\r\n            \"price\": \"15.95\",\r\n            \"receiver_contact_number\": \"\",\r\n            \"receiver_language_code\": \"EN\",\r\n            \"receiver_name\": \"Jane Doe\",\r\n            \"retailer_invoice\": \"\",\r\n            \"slug\": \"ppkfqy44u8nff\",\r\n            \"state\": \"completed\",\r\n            \"tracking_number\": \"PPKFqy44U8Nff\",\r\n            \"user\": {\r\n                \"email\": \"jane.doe@shippit.com\",\r\n                \"first_name\": \"Jane\",\r\n                \"id\": 7808,\r\n                \"last_name\": \"Doe \",\r\n                \"mobile\": \"\"\r\n            },\r\n            \"customs_documents_require_printing\": false,\r\n            \"documents\": {\r\n                \"archive_awb\": {\r\n                  \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/archive_document/15870762/archive_581833317220190318-2852-yi07y0.PDF\",\r\n                  \"page_size\": 'a6',\r\n                  \"file_type\": 'pdf'\r\n                },\r\n                \"customs_invoice\": {\r\n                  \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/customs_invoice/361690/commercial_invoice_3073489348620190218-6221-mxrhx4.pdf\",\r\n                  \"page_size\": 'a3',\r\n                  \"file_type\": 'pdf'\r\n                },\r\n                \"dangerous_goods_declaration\": {\r\n                  \"url\": \"https://shippit-web-production.s3.amazonaws.com/uploads/order/dangerous_goods_declaration/361690/dangerous_goods_declaration_3073489348620140318-6220-11vib5y.pdf\",\r\n                  \"page_size\": 'a3',\r\n                  \"file_type\": 'pdf'\r\n                },\r\n                \"shipping_label\": {\r\n                  \"url\": \"https://shippit-production.s3.amazonaws.com/uploads/label/attachment/5044/PPKFqy44U8Nff.pdf\",\r\n                  \"page_size\": 'a6',\r\n                  \"file_type\": 'pdf'\r\n                }\r\n            }\r\n        },\r\n        \"qualified_url\": \"https://shippit-production.s3.amazonaws.com/uploads/label/attachment/5044/PPKFqy44U8Nff.pdf\"\r\n    }\r\n}"
    OrderResponseOrderDocumentsHash:
      title: OrderResponseOrderDocumentsHash
      description: >-
        A keyword hash of documents generated for an order. Usually populated
        during the LABEL call.
      type: object
      properties:
        archive_awb:
          $ref: '#/components/schemas/LabelDocument'
          description: Archive Airway Bill
        customs_invoice:
          $ref: '#/components/schemas/LabelDocument'
          description: Customs invoice. Generated for International orders.
        dangerous_goods_declaration:
          $ref: '#/components/schemas/LabelDocument'
          description: >-
            Dangerous goods declaration - generated for orders that have
            dangerous goods properties specified.
        packing_slip:
          $ref: '#/components/schemas/LabelDocument'
          description: Packing slip for the order.
        shipping_label:
          $ref: '#/components/schemas/LabelDocument'
          description: >-
            Shipping label for the order.


            If the merchant account was configured to have the label and packing
            slip combined into a single document, the `shipping_label` will
            print the label only without the packing slip.


            If the merchant account was configured to enable ZPL output, can
            contain an `encoded_label` field containing ZPL output.
      example:
        archive_awb:
          page_size: a4
          file_type: pdf
        customs_invoice:
          page_size: a4
          file_type: pdf
        dangerous_goods_declaration:
          page_size: a4
          file_type: pdf
        packing_slip:
          url: >-
            https://shippit-web-staging.s3-ap-southeast-2.amazonaws.com/uploads/packing_slip/attachment/123456/PP12345678.pdf
          page_size: a4_pickslip_and_label
          file_type: pdf
        shipping_label:
          url: >-
            https://shippit-web-staging.s3-ap-southeast-2.amazonaws.com/uploads/label/attachment/123456/PP12345678.pdf
          page_size: a6
          file_type: pdf
          encoded_label: ZPLDATA
    OrderResponseOrderParcel:
      title: Order Response Parcel specification
      description: Represents a parcel attached to an order.
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/Parcel'
      properties:
        qty:
          description: >-
            The number of parcels specified by the entry.


            Depending on how the merchant account is configured, the number of
            parcels generated may not match the number of parcel attributes
            passed in. By default, Shippit will try to combine all parcel
            attributes into a single parcel with the sum of the weights.


            However, if `Allocate each item in an order to a separate carton` is
            enabled, then Shippit will generate one parcel entry for each parcel
            entry sent in.
          type: number
      example:
        qty: 1
        length: 0.1
        width: 0.2
        depth: 0.2
        weight: 1
        dangerous_goods_code: ID8000
        dangerous_goods_text: ID8000 Consumer commodities - Dangerous Goods as per attached DGD
    OrderValidationErrorResponse:
      title: Root Type for OrderValidationErrorResponse
      description: >-
        Response message for order create requests with `validate` flag set to
        true.
      type: object
      allOf:
        - type: object
          properties:
            delivery_postcode:
              description: List of error messages related to the postcode.
              type: array
              items:
                type: string
            delivery_suburb:
              description: List of error messages related to the suburb.
              type: array
              items:
                type: string
            suggested_address:
              description: Suggested address, if one is found.
              type: object
              properties:
                suburb:
                  type: string
                  description: Suburb
                postcode:
                  type: string
                  description: Postcode
                state:
                  type: string
                  description: State
                country_code:
                  type: string
                  description: Country code
            delivery_country_code:
              description: List of error messages related to the country code.
              type: array
              items:
                type: string
            delivery_state:
              description: List of error messages related to the state.
              type: array
              items:
                type: string
            products:
              description: >-
                List of error messages related to the provided product
                information. Typically appears in international orders.
              type: array
              items:
                type: string
        - $ref: '#/components/schemas/GenericErrorResponse'
      example:
        error: invalid
        error_description: The details provided are invalid
        delivery_postcode:
          - is invalid for Australia and should follow the pattern 9999
        delivery_suburb:
          - Invalid suburb name for the postcode 20261
        suggested_address:
          suburb: bondi beach
          postcode: '2026'
          state: NSW
          country_code: au
    OrderDeleteErrorResponse:
      description: ''
      type: object
      allOf:
        - required:
            - order_state
          type: object
          properties:
            order_state:
              description: The current state of the order should a DELETE request fail
              type: string
        - $ref: '#/components/schemas/GenericErrorResponse'
    TrackingErrorResponse:
      title: Root Type for TrackingErrorResponse
      description: Error response returned in tracking requests
      type: object
      allOf:
        - required:
            - error
          type: object
          properties:
            error:
              $ref: '#/components/schemas/TrackingErrorResponseDetails'
              description: Error code returned by Shippit
              properties:
                order_id:
                  type: array
                  items:
                    type: string
            success:
              description: Returns `false`
              type: boolean
            error_description:
              description: Human-readable description of error encountered.
              type: string
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          order_id:
            - Sorry, the tracking number you entered does not exist.
        error_description: The data given to this server does not meet our criteria.
        success: false
    TrackingErrorResponseDetails:
      title: Root Type for TrackingResponseErrors
      description: >-
        A Hash of error codes returned by tracking response.


        Each error code is returned as a key, with an array of strings for each
        instance of the error.
      type: object
      properties:
        order_id:
          description: Indicates an order that cannot be found.
          type: array
          items:
            type: string
      example:
        order_id:
          - Sorry, the tracking number you entered does not exist.
    QuoteErrorResponse:
      title: Root Type for QuoteErrorResponse
      description: Request-level error response for the Quote API.
      type: object
      allOf:
        - type: object
          properties:
            success:
              description: Returns `false`.
              type: boolean
        - $ref: '#/components/schemas/GenericErrorResponse'
      example:
        error: bad_request
        error_description: Dutiable amount must be greater than 0 for international orders
        success: false
    GenericErrorResponse:
      title: ErrorResponse
      description: Response message containing an error.
      type: object
      allOf:
        - required:
            - error
          type: object
          properties:
            error:
              description: Error code returned by Shippit
              type: string
            error_description:
              description: Human-readable description of error encountered.
              type: string
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error: system
        error_description: An unknown error has occurred.
    ErrorResponse:
      title: ErrorResponse
      description: Response message containing an error.
      required:
        - error
      type: object
      properties:
        error:
          description: Error code returned by Shippit
        error_description:
          description: Human-readable response
          type: string
      example:
        error: system
        error_description: An unknown error has occurred.
  responses:
    UnknownErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponse'
          examples:
            Unknown Error:
              value:
                error: system
                error_description: An unknown error has occurred.
      description: >-
        Returned when an unknown error occurs.


        May be returned if Shippit has trouble with the combination of the input
        or merchant account configuration.
    BadRequestErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponse'
          examples:
            Generic Bad Request:
              value:
                error: bad_request
                error_description: The data given to this server does not meet our criteria.
        text/html:
          schema:
            type: string
      description: >-
        Returned when Shippit has a problem with the input parameters.


        Not all input errors can result in this error. Depending on the request,
        the error may be parsed as an unknown error or as part of the response
        body.


        If returned as text/html, will be blank.
    InvalidMerchantAccountErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponse'
          examples:
            Invalid Merchant Account:
              value:
                error: invalid_merchant_account
                error_description: An unknown error has occurred.
      description: Returned when the API key given does not match a valid merchant account.
    ResourceNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponse'
          examples:
            Not Found:
              value:
                error: not_found
                error_description: The requested resource could not be found.
      description: Returned when the given id could not be found.
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
tags:
  - name: Quote
    description: >-
      The Quote API will return a quote given a destination location and parcel
      attributes.
  - name: Order
    description: The Order API will submit an order to Shippit
  - name: Merchant
    description: >-
      The merchant settings API will allow you to query the current settings for
      your merchant account and to make updates to this via API.
  - name: Track
    description: >-
      The Track API will allow you to request tracking information or subscribe
      to our webhook.
  - name: Book
    description: The book API initiates a booking with the respective carriers.
  - name: Label
    description: The label API will return a URL to a label for an order.
