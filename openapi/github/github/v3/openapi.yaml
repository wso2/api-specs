openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
tags:
- name: actions
  description: Endpoints to manage GitHub Actions using the REST API.
- name: activity
  description: Activity APIs provide access to notifications, subscriptions, and timelines.
- name: apps
  description: Information for integrations and installations.
- name: billing
  description: Monitor charges and usage from Actions and Packages.
- name: checks
  description: Rich interactions with checks run by your integrations.
- name: code-scanning
  description: Retrieve code scanning alerts from a repository.
- name: codes-of-conduct
  description: Insight into codes of conduct for your communities.
- name: emojis
  description: List emojis available to use on GitHub.
- name: dependabot
  description: Endpoints to manage Dependabot.
- name: dependency-graph
  description: Endpoints to access Dependency Graph features.
- name: gists
  description: View, modify your gists.
- name: git
  description: Raw Git functionality.
- name: gitignore
  description: View gitignore templates
- name: issues
  description: Interact with GitHub Issues.
- name: licenses
  description: View various OSS licenses.
- name: markdown
  description: Render GitHub flavored markdown
- name: merge-queue
  description: Interact with GitHub Merge Queues.
- name: meta
  description: Endpoints that give information about the API.
- name: migrations
  description: Move projects to or from GitHub.
- name: oidc
  description: Endpoints to manage GitHub OIDC configuration using the REST API.
- name: orgs
  description: Interact with GitHub Orgs.
- name: packages
  description: Manage packages for authenticated users and organizations.
- name: projects
  description: Interact with GitHub Projects.
- name: pulls
  description: Interact with GitHub Pull Requests.
- name: rate-limit
  description: Check your current rate limit status
- name: reactions
  description: Interact with reactions to various GitHub entities.
- name: repos
  description: Interact with GitHub Repos.
- name: search
  description: Look for stuff on GitHub.
- name: secret-scanning
  description: Retrieve secret scanning alerts from a repository.
- name: teams
  description: Interact with GitHub Teams.
- name: users
  description: Interact with and view information about users and also current user.
- name: codespaces
  description: Endpoints to manage Codespaces using the REST API.
- name: copilot
  description: Endpoints to manage Copilot using the REST API.
- name: security-advisories
  description: Manage security advisories.
- name: interactions
  description: Owner or admin management of users interactions.
- name: classroom
  description: Interact with GitHub Classroom.
servers:
- url: https://api.github.com
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  "/":
    get:
      summary: GitHub API Root
      description: Get Hypermedia links to resources accessible in GitHub's REST API
      tags:
      - meta
      operationId: meta/root
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/root"
              examples:
                default:
                  "$ref": "#/components/examples/root"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#github-api-root
  "/advisories":
    get:
      summary: List global security advisories
      description: |-
        Lists all global security advisories that match the specified parameters. If no other parameters are defined, the request will return only GitHub-reviewed advisories that are not malware.

        By default, all responses will exclude advisories for malware, because malware are not standard vulnerabilities. To list advisories for malware, you must include the `type` parameter in your request, with the value `malware`. For more information about the different types of security advisories, see "[About the GitHub Advisory database](https://docs.github.com/code-security/security-advisories/global-security-advisories/about-the-github-advisory-database#about-types-of-security-advisories)."
      tags:
      - security-advisories
      operationId: security-advisories/list-global-advisories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/global-advisories#list-global-security-advisories
      parameters:
      - name: ghsa_id
        in: query
        description: If specified, only advisories with this GHSA (GitHub Security
          Advisory) identifier will be returned.
        schema:
          type: string
      - name: type
        in: query
        description: If specified, only advisories of this type will be returned.
          By default, a request with no other parameters defined will only return
          reviewed advisories that are not malware.
        schema:
          type: string
          enum:
          - reviewed
          - malware
          - unreviewed
          default: reviewed
      - name: cve_id
        description: If specified, only advisories with this CVE (Common Vulnerabilities
          and Exposures) identifier will be returned.
        in: query
        schema:
          type: string
      - name: ecosystem
        in: query
        description: If specified, only advisories for these ecosystems will be returned.
        schema:
          type: string
          enum:
          - actions
          - composer
          - erlang
          - go
          - maven
          - npm
          - nuget
          - other
          - pip
          - pub
          - rubygems
          - rust
      - name: severity
        in: query
        description: If specified, only advisories with these severities will be returned.
        schema:
          type: string
          enum:
          - unknown
          - low
          - medium
          - high
          - critical
      - name: cwes
        in: query
        description: |-
          If specified, only advisories with these Common Weakness Enumerations (CWEs) will be returned.

          Example: `cwes=79,284,22` or `cwes[]=79&cwes[]=284&cwes[]=22`
        schema:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
      - name: is_withdrawn
        in: query
        description: Whether to only return advisories that have been withdrawn.
        schema:
          type: boolean
      - name: affects
        in: query
        description: |-
          If specified, only return advisories that affect any of `package` or `package@version`. A maximum of 1000 packages can be specified.
          If the query parameter causes the URL to exceed the maximum URL length supported by your client, you must specify fewer packages.

          Example: `affects=package1,package2@1.0.0,package3@^2.0.0` or `affects[]=package1&affects[]=package2@1.0.0`
        schema:
          oneOf:
          - type: string
          - type: array
            maxItems: 1000
            items:
              type: string
      - name: published
        in: query
        description: |-
          If specified, only return advisories that were published on a date or date range.

          For more information on the syntax of the date range, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
        schema:
          type: string
      - name: updated
        in: query
        description: |-
          If specified, only return advisories that were updated on a date or date range.

          For more information on the syntax of the date range, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
        schema:
          type: string
      - name: modified
        description: |-
          If specified, only show advisories that were updated or published on a date or date range.

          For more information on the syntax of the date range, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
        in: query
        schema:
          type: string
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - "$ref": "#/components/parameters/direction"
      - name: per_page
        description: The number of results per page (max 100).
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 30
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - updated
          - published
          default: published
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/global-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/global-advisory-items"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: global-advisories
  "/advisories/{ghsa_id}":
    get:
      summary: Get a global security advisory
      description: Gets a global security advisory using its GitHub Security Advisory
        (GHSA) identifier.
      tags:
      - security-advisories
      operationId: security-advisories/get-global-advisory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/global-advisories#get-a-global-security-advisory
      parameters:
      - "$ref": "#/components/parameters/ghsa_id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/global-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/global-advisory"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: global-advisories
  "/app":
    get:
      summary: Get the authenticated app
      description: |-
        Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the "[List installations for the authenticated app](https://docs.github.com/rest/apps/apps#list-installations-for-the-authenticated-app)" endpoint.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#get-the-authenticated-app
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: apps
  "/app-manifests/{code}/conversions":
    post:
      summary: Create a GitHub App from a manifest
      description: Use this endpoint to complete the handshake necessary when implementing
        the [GitHub App Manifest flow](https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/).
        When you create a GitHub App with the manifest flow, you receive a temporary
        `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.
      tags:
      - apps
      operationId: apps/create-from-manifest
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#create-a-github-app-from-a-manifest
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/manifest-conversions"
              examples:
                default:
                  "$ref": "#/components/examples/integration-from-manifest"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/app/hook/config":
    get:
      summary: Get a webhook configuration for an app
      description: |-
        Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "[Creating a GitHub App](/developers/apps/creating-a-github-app)."

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-webhook-config-for-app
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/webhooks#get-a-webhook-configuration-for-an-app
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/webhook-config"
              examples:
                default:
                  "$ref": "#/components/examples/webhook-config"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for an app
      description: |-
        Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "[Creating a GitHub App](/developers/apps/creating-a-github-app)."

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/update-webhook-config-for-app
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/webhooks#update-a-webhook-configuration-for-an-app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  "$ref": "#/components/schemas/webhook-config-url"
                content_type:
                  "$ref": "#/components/schemas/webhook-config-content-type"
                secret:
                  "$ref": "#/components/schemas/webhook-config-secret"
                insecure_ssl:
                  "$ref": "#/components/schemas/webhook-config-insecure-ssl"
            examples:
              default:
                value:
                  content_type: json
                  insecure_ssl: '0'
                  secret: "********"
                  url: https://example.com/webhook
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/webhook-config"
              examples:
                default:
                  "$ref": "#/components/examples/webhook-config"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  "/app/hook/deliveries":
    get:
      summary: List deliveries for an app webhook
      description: |-
        Returns a list of webhook deliveries for the webhook configured for a GitHub App.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/webhooks#list-deliveries-for-an-app-webhook
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/cursor"
      - name: redelivery
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/hook-delivery-item"
              examples:
                default:
                  "$ref": "#/components/examples/hook-delivery-items"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  "/app/hook/deliveries/{delivery_id}":
    get:
      summary: Get a delivery for an app webhook
      description: |-
        Returns a delivery for the webhook configured for a GitHub App.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/webhooks#get-a-delivery-for-an-app-webhook
      parameters:
      - "$ref": "#/components/parameters/delivery-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook-delivery"
              examples:
                default:
                  "$ref": "#/components/examples/hook-delivery"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  "/app/hook/deliveries/{delivery_id}/attempts":
    post:
      summary: Redeliver a delivery for an app webhook
      description: |-
        Redeliver a delivery for the webhook configured for a GitHub App.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/webhooks#redeliver-a-delivery-for-an-app-webhook
      parameters:
      - "$ref": "#/components/parameters/delivery-id"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  "/app/installation-requests":
    get:
      summary: List installation requests for the authenticated app
      description: Lists all the pending installation requests for the authenticated
        GitHub App.
      tags:
      - apps
      operationId: apps/list-installation-requests-for-authenticated-app
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#list-installation-requests-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: List of integration installation requests
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration-installation-request"
              examples:
                exampleKey1:
                  "$ref": "#/components/examples/integration-installation-request-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: apps
  "/app/installations":
    get:
      summary: List installations for the authenticated app
      description: |-
        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.

        The permissions the installation has are included under the `permissions` key.
      tags:
      - apps
      operationId: apps/list-installations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#list-installations-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/since"
      - name: outdated
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: The permissions the installation has are included under the
            `permissions` key.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/base-installation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: apps
  "/app/installations/{installation_id}":
    get:
      summary: Get an installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find an installation's information using the installation id.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#get-an-installation-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/base-installation"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: apps
    delete:
      summary: Delete an installation for the authenticated app
      description: |-
        Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the "[Suspend an app installation](https://docs.github.com/rest/apps/apps#suspend-an-app-installation)" endpoint.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/delete-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#delete-an-installation-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/app/installations/{installation_id}/access_tokens":
    post:
      summary: Create an installation access token for an app
      description: |-
        Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/create-installation-access-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#create-an-installation-access-token-for-an-app
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                repositories:
                  description: List of repository names that the token should have
                    access to
                  type: array
                  items:
                    type: string
                    example: rails
                repository_ids:
                  description: List of repository IDs that the token should have access
                    to
                  example:
                  - 1
                  type: array
                  items:
                    type: integer
                permissions:
                  "$ref": "#/components/schemas/app-permissions"
            examples:
              default:
                value:
                  repository: Hello-World
                  permissions:
                    issues: write
                    contents: read
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation-token"
              examples:
                default:
                  "$ref": "#/components/examples/installation-token"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: apps
  "/app/installations/{installation_id}/suspended":
    put:
      summary: Suspend an app installation
      description: |-
        Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/suspend-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#suspend-an-app-installation
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
    delete:
      summary: Unsuspend an app installation
      description: |-
        Removes a GitHub App installation suspension.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/unsuspend-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#unsuspend-an-app-installation
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/applications/{client_id}/grant":
    delete:
      summary: Delete an app authorization
      description: |-
        OAuth and GitHub application owners can revoke a grant for their application and a specific user. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid OAuth `access_token` as an input parameter and the grant for the token's owner will be deleted.
        Deleting an application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      operationId: apps/delete-authorization
      tags:
      - apps
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/oauth-applications#delete-an-app-authorization
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the
                    GitHub API.
              required:
              - access_token
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  "/applications/{client_id}/token":
    post:
      summary: Check a token
      description: OAuth applications and GitHub applications with OAuth authorizations
        can use this API method for checking OAuth token validity without exceeding
        the normal rate limits for failed login attempts. Authentication works differently
        with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)
        to use this endpoint, where the username is the application `client_id` and
        the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.
      tags:
      - apps
      operationId: apps/check-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/oauth-applications#check-a-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth or GitHub application.
                  type: string
              required:
              - access_token
              type: object
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-with-user"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
    patch:
      summary: Reset a token
      description: OAuth applications and GitHub applications with OAuth authorizations
        can use this API method to reset a valid OAuth token without end-user involvement.
        Applications must save the "token" property in the response because changes
        take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the application's `client_id` and `client_secret`
        as the username and password. Invalid tokens will return `404 NOT FOUND`.
      tags:
      - apps
      operationId: apps/reset-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/oauth-applications#reset-a-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth or GitHub application.
                  type: string
              required:
              - access_token
              type: object
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/authorization-with-user"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
    delete:
      summary: Delete an app token
      description: OAuth  or GitHub application owners can revoke a single token for
        an OAuth application or a GitHub application with an OAuth authorization.
        You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the application's `client_id` and `client_secret`
        as the username and password.
      tags:
      - apps
      operationId: apps/delete-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/oauth-applications#delete-an-app-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the
                    GitHub API.
              required:
              - access_token
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  "/applications/{client_id}/token/scoped":
    post:
      summary: Create a scoped access token
      description: Use a non-scoped user access token to create a repository scoped
        and/or permission scoped user access token. You can specify which repositories
        the token can access and which permissions are granted to the token. You must
        use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)
        when accessing this endpoint, using the `client_id` and `client_secret` of
        the GitHub App as the username and password. Invalid tokens will return `404
        NOT FOUND`.
      tags:
      - apps
      operationId: apps/scope-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#create-a-scoped-access-token
      parameters:
      - "$ref": "#/components/parameters/client-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The access token used to authenticate to the GitHub
                    API.
                  example: e72e16c7e42f292c6912e7710c838347ae178b4a
                target:
                  description: The name of the user or organization to scope the user
                    access token to. **Required** unless `target_id` is specified.
                  type: string
                  example: octocat
                target_id:
                  description: The ID of the user or organization to scope the user
                    access token to. **Required** unless `target` is specified.
                  example: 1
                  type: integer
                repositories:
                  description: The list of repository names to scope the user access
                    token to. `repositories` may not be specified if `repository_ids`
                    is specified.
                  type: array
                  items:
                    type: string
                    example: rails
                repository_ids:
                  description: The list of repository IDs to scope the user access
                    token to. `repository_ids` may not be specified if `repositories`
                    is specified.
                  example:
                  - 1
                  type: array
                  items:
                    type: integer
                permissions:
                  "$ref": "#/components/schemas/app-permissions"
              required:
              - access_token
            examples:
              default:
                value:
                  access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
                  target: octocat
                  permissions:
                    metadata: read
                    issues: write
                    contents: read
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authorization"
              examples:
                default:
                  "$ref": "#/components/examples/scope-token"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/apps/{app_slug}":
    get:
      summary: Get an app
      description: |-
        **Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).

        If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-by-slug
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#get-an-app
      parameters:
      - "$ref": "#/components/parameters/app-slug"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: apps
  "/assignments/{assignment_id}":
    get:
      summary: Get an assignment
      description: Gets a GitHub Classroom assignment. Assignment will only be returned
        if the current user is an administrator of the GitHub Classroom for the assignment.
      tags:
      - classroom
      operationId: classroom/get-an-assignment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#get-an-assignment
      parameters:
      - "$ref": "#/components/parameters/assignment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/classroom-assignment"
              examples:
                default:
                  "$ref": "#/components/examples/classroom-assignment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  "/assignments/{assignment_id}/accepted_assignments":
    get:
      summary: List accepted assignments for an assignment
      description: Lists any assignment repositories that have been created by students
        accepting a GitHub Classroom assignment. Accepted assignments will only be
        returned if the current user is an administrator of the GitHub Classroom for
        the assignment.
      tags:
      - classroom
      operationId: classroom/list-accepted-assigments-for-an-assignment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#list-accepted-assignments-for-an-assignment
      parameters:
      - "$ref": "#/components/parameters/assignment-id"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/classroom-accepted-assignment"
              examples:
                default:
                  "$ref": "#/components/examples/classroom-accepted-assignment"
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  "/assignments/{assignment_id}/grades":
    get:
      summary: Get assignment grades
      description: Gets grades for a GitHub Classroom assignment. Grades will only
        be returned if the current user is an administrator of the GitHub Classroom
        for the assignment.
      tags:
      - classroom
      operationId: classroom/get-assignment-grades
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#get-assignment-grades
      parameters:
      - "$ref": "#/components/parameters/assignment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/classroom-assignment-grade"
              examples:
                default:
                  "$ref": "#/components/examples/classroom-assignment-grades"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  "/classrooms":
    get:
      summary: List classrooms
      description: Lists GitHub Classroom classrooms for the current user. Classrooms
        will only be returned if the current user is an administrator of one or more
        GitHub Classrooms.
      tags:
      - classroom
      operationId: classroom/list-classrooms
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#list-classrooms
      parameters:
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-classroom"
              examples:
                default:
                  "$ref": "#/components/examples/simple-classroom"
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  "/classrooms/{classroom_id}":
    get:
      summary: Get a classroom
      description: Gets a GitHub Classroom classroom for the current user. Classroom
        will only be returned if the current user is an administrator of the GitHub
        Classroom.
      tags:
      - classroom
      operationId: classroom/get-a-classroom
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#get-a-classroom
      parameters:
      - "$ref": "#/components/parameters/classroom-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/classroom"
              examples:
                default:
                  "$ref": "#/components/examples/classroom"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  "/classrooms/{classroom_id}/assignments":
    get:
      summary: List assignments for a classroom
      description: Lists GitHub Classroom assignments for a classroom. Assignments
        will only be returned if the current user is an administrator of the GitHub
        Classroom.
      tags:
      - classroom
      operationId: classroom/list-assignments-for-a-classroom
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#list-assignments-for-a-classroom
      parameters:
      - "$ref": "#/components/parameters/classroom-id"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-classroom-assignment"
              examples:
                default:
                  "$ref": "#/components/examples/simple-classroom-assignment"
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  "/codes_of_conduct":
    get:
      summary: Get all codes of conduct
      description: Returns array of all GitHub's codes of conduct.
      tags:
      - codes-of-conduct
      operationId: codes-of-conduct/get-all-codes-of-conduct
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codes-of-conduct/codes-of-conduct#get-all-codes-of-conduct
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-of-conduct"
              examples:
                default:
                  "$ref": "#/components/examples/code-of-conduct-simple-items"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codes-of-conduct
        subcategory: codes-of-conduct
  "/codes_of_conduct/{key}":
    get:
      summary: Get a code of conduct
      description: Returns information about the specified GitHub code of conduct.
      tags:
      - codes-of-conduct
      operationId: codes-of-conduct/get-conduct-code
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codes-of-conduct/codes-of-conduct#get-a-code-of-conduct
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-of-conduct"
              examples:
                default:
                  "$ref": "#/components/examples/code-of-conduct"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codes-of-conduct
        subcategory: codes-of-conduct
  "/emojis":
    get:
      summary: Get emojis
      description: Lists all the emojis available to use on GitHub.
      operationId: emojis/get
      tags:
      - emojis
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/emojis/emojis#get-emojis
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
              examples:
                default:
                  "$ref": "#/components/examples/emojis-get"
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: emojis
        subcategory: emojis
  "/enterprises/{enterprise}/dependabot/alerts":
    get:
      summary: List Dependabot alerts for an enterprise
      description: |-
        Lists Dependabot alerts for repositories that are owned by the specified enterprise.
        To use this endpoint, you must be a member of the enterprise, and you must use an
        access token with the `repo` scope or `security_events` scope.
        Alerts are only returned for organizations in the enterprise for which you are an organization owner or a security manager. For more information about security managers, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
      tags:
      - dependabot
      operationId: dependabot/list-alerts-for-enterprise
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/alerts#list-dependabot-alerts-for-an-enterprise
      parameters:
      - "$ref": "#/components/parameters/enterprise"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-states"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-severities"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-ecosystems"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-packages"
      - "$ref": "#/components/parameters/dependabot-alert-scope"
      - "$ref": "#/components/parameters/dependabot-alert-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - "$ref": "#/components/parameters/pagination-first"
      - "$ref": "#/components/parameters/pagination-last"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/dependabot-alert-with-repository"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-alerts-for-organization"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: dependabot
        subcategory: alerts
  "/enterprises/{enterprise}/secret-scanning/alerts":
    get:
      summary: List secret scanning alerts for an enterprise
      description: |-
        Lists secret scanning alerts for eligible repositories in an enterprise, from newest to oldest.
        To use this endpoint, you must be a member of the enterprise, and you must use an access token with the `repo` scope or `security_events` scope. Alerts are only returned for organizations in the enterprise for which you are an organization owner or a [security manager](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).
      tags:
      - secret-scanning
      operationId: secret-scanning/list-alerts-for-enterprise
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-an-enterprise
      parameters:
      - "$ref": "#/components/parameters/enterprise"
      - "$ref": "#/components/parameters/secret-scanning-alert-state"
      - "$ref": "#/components/parameters/secret-scanning-alert-secret-type"
      - "$ref": "#/components/parameters/secret-scanning-alert-resolution"
      - "$ref": "#/components/parameters/secret-scanning-alert-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-secret-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/organization-secret-scanning-alert-list"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: secret-scanning
        subcategory: secret-scanning
  "/events":
    get:
      summary: List public events
      description: We delay the public events feed by five minutes, which means the
        most recent event returned by the public events API actually occurred at least
        five minutes ago.
      tags:
      - activity
      operationId: activity/list-public-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/public-events-items"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/feeds":
    get:
      summary: Get feeds
      description: |-
        GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:

        *   **Timeline**: The GitHub global public timeline
        *   **User**: The public timeline for any user, using [URI template](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)
        *   **Current user public**: The public timeline for the authenticated user
        *   **Current user**: The private timeline for the authenticated user
        *   **Current user actor**: The private timeline for activity created by the authenticated user
        *   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.
        *   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.

        **Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.
      tags:
      - activity
      operationId: activity/get-feeds
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/feeds#get-feeds
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/feed"
              examples:
                default:
                  "$ref": "#/components/examples/feed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: feeds
  "/gists":
    get:
      summary: List gists for the authenticated user
      description: 'Lists the authenticated user''s gists or if called anonymously,
        this endpoint returns all public gists:'
      tags:
      - gists
      operationId: gists/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#list-gists-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
    post:
      summary: Create a gist
      description: |-
        Allows you to add a new gist with one or more files.

        **Note:** Don't name your files "gistfile" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.
      operationId: gists/create
      tags:
      - gists
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#create-a-gist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the gist
                  example: Example Ruby script
                  type: string
                files:
                  description: Names and content for the files that make up the gist
                  example:
                    hello.rb:
                      content: puts "Hello, World!"
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      content:
                        description: Content of the file
                        readOnly: false
                        type: string
                    required:
                    - content
                public:
                  oneOf:
                  - description: Flag indicating whether the gist is public
                    example: true
                    type: boolean
                    default: false
                  - type: string
                    example: 'true'
                    default: 'false'
                    enum:
                    - 'true'
                    - 'false'
              required:
              - files
              type: object
            examples:
              default:
                summary: Creating a gist
                value:
                  description: Example of a gist
                  public: false
                  files:
                    README.md:
                      content: Hello World
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-simple"
              examples:
                default:
                  "$ref": "#/components/examples/gist"
          headers:
            Location:
              example: https://api.github.com/gists/aa5a315d61ae9438b18d
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/public":
    get:
      summary: List public gists
      description: |-
        List public gists sorted by most recently updated to least recently updated.

        Note: With [pagination](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.
      tags:
      - gists
      operationId: gists/list-public
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#list-public-gists
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/starred":
    get:
      summary: List starred gists
      description: 'List the authenticated user''s starred gists:'
      tags:
      - gists
      operationId: gists/list-starred
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#list-starred-gists
      parameters:
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/{gist_id}":
    get:
      summary: Get a gist
      description: ''
      tags:
      - gists
      operationId: gists/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#get-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-simple"
              examples:
                default:
                  "$ref": "#/components/examples/gist"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden_gist"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
    patch:
      summary: Update a gist
      description: |-
        Allows you to update a gist's description and to update, delete, or rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.
        At least one of `description` or `files` is required.
      tags:
      - gists
      operationId: gists/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#update-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description of the gist.
                  example: Example Ruby script
                  type: string
                files:
                  description: |-
                    The gist files to be updated, renamed, or deleted. Each `key` must match the current filename
                    (including extension) of the targeted gist file. For example: `hello.py`.

                    To delete a file, set the whole file to null. For example: `hello.py : null`. The file will also be
                    deleted if the specified object does not contain at least one of `content` or `filename`.
                  example:
                    hello.rb:
                      content: blah
                      filename: goodbye.rb
                  type: object
                  additionalProperties:
                    type: object
                    nullable: true
                    properties:
                      content:
                        description: The new content of the file.
                        type: string
                      filename:
                        description: The new filename for the file.
                        type: string
                        nullable: true
              type: object
              nullable: true
            examples:
              updateGist:
                summary: Updating a gist
                value:
                  description: An updated gist description
                  files:
                    README.md:
                      content: Hello World from GitHub
              deleteFile:
                summary: Deleting a gist file
                value:
                  files: {}
              renameFile:
                summary: Renaming a gist file
                value:
                  files:
                    hello.py:
                      filename: goodbye.py
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-simple"
              examples:
                updateGist:
                  "$ref": "#/components/examples/gist"
                deleteFile:
                  "$ref": "#/components/examples/delete-gist-file"
                renameFile:
                  "$ref": "#/components/examples/rename-gist-file"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
    delete:
      summary: Delete a gist
      description: ''
      tags:
      - gists
      operationId: gists/delete
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#delete-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/{gist_id}/comments":
    get:
      summary: List gist comments
      description: ''
      tags:
      - gists
      operationId: gists/list-comments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/comments#list-gist-comments
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: comments
    post:
      summary: Create a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/create-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/comments#create-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The comment text.
                  type: string
                  maxLength: 65535
                  example: Body of the attachment
              type: object
              required:
              - body
            examples:
              default:
                summary: Creating a comment in a gist
                value:
                  body: This is a comment to a gist
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment"
          headers:
            Location:
              example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: comments
  "/gists/{gist_id}/comments/{comment_id}":
    get:
      summary: Get a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/get-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/comments#get-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden_gist"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: comments
    patch:
      summary: Update a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/update-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/comments#update-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The comment text.
                  type: string
                  maxLength: 65535
                  example: Body of the attachment
              type: object
              required:
              - body
            examples:
              default:
                summary: Updating a comment in a gist
                value:
                  body: This is an update to a comment in a gist
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-comment"
              examples:
                default:
                  "$ref": "#/components/examples/gist-comment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: comments
    delete:
      summary: Delete a gist comment
      description: ''
      tags:
      - gists
      operationId: gists/delete-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/comments#delete-a-gist-comment
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: comments
  "/gists/{gist_id}/commits":
    get:
      summary: List gist commits
      description: ''
      tags:
      - gists
      operationId: gists/list-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#list-gist-commits
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gist-commit"
              examples:
                default:
                  "$ref": "#/components/examples/gist-commit-items"
          headers:
            Link:
              example: <https://api.github.com/resource?page=2>; rel="next"
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/{gist_id}/forks":
    get:
      summary: List gist forks
      description: ''
      tags:
      - gists
      operationId: gists/list-forks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#list-gist-forks
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gist-simple"
              examples:
                default:
                  "$ref": "#/components/examples/gist-fork-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
    post:
      summary: Fork a gist
      description: ''
      tags:
      - gists
      operationId: gists/fork
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#fork-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist"
          headers:
            Location:
              example: https://api.github.com/gists/aa5a315d61ae9438b18d
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/{gist_id}/star":
    get:
      summary: Check if a gist is starred
      description: ''
      tags:
      - gists
      operationId: gists/check-is-starred
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#check-if-a-gist-is-starred
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      responses:
        '204':
          description: Response if gist is starred
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: Not Found if gist is not starred
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
    put:
      summary: Star a gist
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
      - gists
      operationId: gists/star
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#star-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
    delete:
      summary: Unstar a gist
      description: ''
      tags:
      - gists
      operationId: gists/unstar
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#unstar-a-gist
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gists/{gist_id}/{sha}":
    get:
      summary: Get a gist revision
      description: ''
      tags:
      - gists
      operationId: gists/get-revision
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#get-a-gist-revision
      parameters:
      - "$ref": "#/components/parameters/gist-id"
      - name: sha
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gist-simple"
              examples:
                default:
                  "$ref": "#/components/examples/gist"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/gitignore/templates":
    get:
      summary: Get all gitignore templates
      description: List all templates available to pass as an option when [creating
        a repository](https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user).
      operationId: gitignore/get-all-templates
      tags:
      - gitignore
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gitignore/gitignore#get-all-gitignore-templates
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - Actionscript
                  - Android
                  - AppceleratorTitanium
                  - Autotools
                  - Bancha
                  - C
                  - C++
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: gitignore
        subcategory: gitignore
  "/gitignore/templates/{name}":
    get:
      summary: Get a gitignore template
      description: |-
        The API also allows fetching the source of a single template.
        Use the raw [media type](https://docs.github.com/rest/overview/media-types/) to get the raw contents.
      operationId: gitignore/get-template
      tags:
      - gitignore
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gitignore/gitignore#get-a-gitignore-template
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gitignore-template"
              examples:
                default:
                  "$ref": "#/components/examples/gitignore-template"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: gitignore
        subcategory: gitignore
  "/installation/repositories":
    get:
      summary: List repositories accessible to the app installation
      description: |-
        List repositories that an app installation can access.

        You must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/list-repos-accessible-to-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/installations#list-repositories-accessible-to-the-app-installation
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/repository-paginated-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: installations
  "/installation/token":
    delete:
      summary: Revoke an installation access token
      description: |-
        Revokes the installation token you're using to authenticate as an installation and access this endpoint.

        Once an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the "[Create an installation access token for an app](https://docs.github.com/rest/apps/apps#create-an-installation-access-token-for-an-app)" endpoint.

        You must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
      - apps
      operationId: apps/revoke-installation-access-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/installations#revoke-an-installation-access-token
      parameters: []
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: installations
  "/issues":
    get:
      summary: List issues assigned to the authenticated user
      description: |-
        List issues assigned to the authenticated user across all visible repositories including owned repositories, member
        repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not
        necessarily assigned to you.


        **Note**: GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/pulls/pulls#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#list-issues-assigned-to-the-authenticated-user
      parameters:
      - name: filter
        description: Indicates which sorts of issues to return. `assigned` means issues
          assigned to you. `created` means issues created by you. `mentioned` means
          issues mentioning you. `subscribed` means issues you're subscribed to updates
          for. `all` or `repos` means all issues you can see, regardless of participation
          or creation.
        in: query
        required: false
        schema:
          type: string
          enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - repos
          - all
          default: assigned
      - name: state
        description: Indicates the state of the issues to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - name: collab
        in: query
        required: false
        schema:
          type: boolean
      - name: orgs
        in: query
        required: false
        schema:
          type: boolean
      - name: owned
        in: query
        required: false
        schema:
          type: boolean
      - name: pulls
        in: query
        required: false
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-with-repo-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: issues
  "/licenses":
    get:
      summary: Get all commonly used licenses
      description: Lists the most commonly used licenses on GitHub. For more information,
        see "[Licensing a repository ](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository)."
      tags:
      - licenses
      operationId: licenses/get-all-commonly-used
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/licenses/licenses#get-all-commonly-used-licenses
      parameters:
      - name: featured
        in: query
        required: false
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/license-simple"
              examples:
                default:
                  "$ref": "#/components/examples/license-simple-items"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: licenses
        subcategory: licenses
  "/licenses/{license}":
    get:
      summary: Get a license
      description: Gets information about a specific license. For more information,
        see "[Licensing a repository ](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository)."
      tags:
      - licenses
      operationId: licenses/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/licenses/licenses#get-a-license
      parameters:
      - name: license
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/license"
              examples:
                default:
                  "$ref": "#/components/examples/license"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: licenses
        subcategory: licenses
  "/markdown":
    post:
      summary: Render a Markdown document
      description: ''
      operationId: markdown/render
      tags:
      - markdown
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/markdown/markdown#render-a-markdown-document
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                text:
                  description: The Markdown text to render in HTML.
                  type: string
                mode:
                  description: The rendering mode.
                  enum:
                  - markdown
                  - gfm
                  default: markdown
                  example: markdown
                  type: string
                context:
                  description: The repository context to use when creating references
                    in `gfm` mode.  For example, setting `context` to `octo-org/octo-repo`
                    will change the text `#42` into an HTML link to issue 42 in the
                    `octo-org/octo-repo` repository.
                  type: string
              required:
              - text
              type: object
            examples:
              default:
                summary: Rendering markdown
                value:
                  text: Hello **world**
      responses:
        '200':
          description: Response
          headers:
            Content-Type:
              "$ref": "#/components/headers/content-type"
            Content-Length:
              example: '279'
              schema:
                type: string
            X-CommonMarker-Version:
              "$ref": "#/components/headers/x-common-marker-version"
          content:
            text/html:
              schema:
                type: string
              examples:
                default:
                  summary: Example response
                  value: "<p>Hello <strong>world</strong></p>"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: markdown
        subcategory: markdown
  "/markdown/raw":
    post:
      summary: Render a Markdown document in raw mode
      description: You must send Markdown as plain text (using a `Content-Type` header
        of `text/plain` or `text/x-markdown`) to this endpoint, rather than using
        JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/)
        is not supported and Markdown will be rendered in plain format like a README.md
        file. Markdown content must be 400 KB or less.
      operationId: markdown/render-raw
      tags:
      - markdown
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/markdown/markdown#render-a-markdown-document-in-raw-mode
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            examples:
              default:
                value:
                  text: Hello **world**
          text/x-markdown:
            schema:
              type: string
            examples:
              default:
                summary: Rendering markdown
                value:
                  text: Hello **world**
      responses:
        '200':
          description: Response
          headers:
            X-CommonMarker-Version:
              "$ref": "#/components/headers/x-common-marker-version"
          content:
            text/html:
              schema:
                type: string
              examples:
                default:
                  summary: Example response
                  value: "<p>Hello <strong>world</strong></p>"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: markdown
        subcategory: markdown
  "/marketplace_listing/accounts/{account_id}":
    get:
      summary: Get a subscription plan for an account
      description: |-
        Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
      - apps
      operationId: apps/get-subscription-plan-for-account
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#get-a-subscription-plan-for-an-account
      parameters:
      - "$ref": "#/components/parameters/account-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/marketplace-purchase"
              examples:
                default:
                  "$ref": "#/components/examples/marketplace-purchase"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          description: Not Found when the account has not purchased the listing
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/marketplace_listing/plans":
    get:
      summary: List plans
      description: |-
        Lists all plans that are part of your GitHub Marketplace listing.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
      - apps
      operationId: apps/list-plans
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#list-plans
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/marketplace-listing-plan"
              examples:
                default:
                  "$ref": "#/components/examples/marketplace-listing-plan-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/marketplace_listing/plans/{plan_id}/accounts":
    get:
      summary: List accounts for a plan
      description: |-
        Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
      - apps
      operationId: apps/list-accounts-for-plan
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#list-accounts-for-a-plan
      parameters:
      - "$ref": "#/components/parameters/plan-id"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: To return the oldest accounts first, set to `asc`. Ignored without
          the `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/marketplace-purchase"
              examples:
                default:
                  "$ref": "#/components/examples/marketplace-purchase-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/marketplace_listing/stubbed/accounts/{account_id}":
    get:
      summary: Get a subscription plan for an account (stubbed)
      description: |-
        Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
      - apps
      operationId: apps/get-subscription-plan-for-account-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#get-a-subscription-plan-for-an-account-stubbed
      parameters:
      - "$ref": "#/components/parameters/account-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/marketplace-purchase"
              examples:
                default:
                  "$ref": "#/components/examples/marketplace-purchase"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          description: Not Found when the account has not purchased the listing
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/marketplace_listing/stubbed/plans":
    get:
      summary: List plans (stubbed)
      description: |-
        Lists all plans that are part of your GitHub Marketplace listing.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
      - apps
      operationId: apps/list-plans-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#list-plans-stubbed
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/marketplace-listing-plan"
              examples:
                default:
                  "$ref": "#/components/examples/marketplace-listing-plan-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/marketplace_listing/stubbed/plans/{plan_id}/accounts":
    get:
      summary: List accounts for a plan (stubbed)
      description: |-
        Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
      - apps
      operationId: apps/list-accounts-for-plan-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#list-accounts-for-a-plan-stubbed
      parameters:
      - "$ref": "#/components/parameters/plan-id"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: To return the oldest accounts first, set to `asc`. Ignored without
          the `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/marketplace-purchase"
              examples:
                default:
                  "$ref": "#/components/examples/marketplace-purchase-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/meta":
    get:
      summary: Get GitHub meta information
      description: |-
        Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see "[About GitHub's IP addresses](https://docs.github.com/articles/about-github-s-ip-addresses/)."

        The API's response also includes a list of GitHub's domain names.

        The values shown in the documentation's response are example values. You must always query the API directly to get the latest values.

        **Note:** This endpoint returns both IPv4 and IPv6 addresses. However, not all features support IPv6. You should refer to the specific documentation for each feature to determine if IPv6 is supported.
      tags:
      - meta
      operationId: meta/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#get-apiname-meta-information
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/api-overview"
              examples:
                default:
                  "$ref": "#/components/examples/api-overview"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
  "/networks/{owner}/{repo}/events":
    get:
      summary: List public events for a network of repositories
      description: ''
      tags:
      - activity
      operationId: activity/list-public-events-for-repo-network
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events-for-a-network-of-repositories
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/public-repo-events-items"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/notifications":
    get:
      summary: List notifications for the authenticated user
      description: List all notifications for the current user, sorted by most recently
        updated.
      tags:
      - activity
      operationId: activity/list-notifications-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#list-notifications-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/all"
      - "$ref": "#/components/parameters/participating"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/before"
      - "$ref": "#/components/parameters/page"
      - name: per_page
        description: The number of results per page (max 50).
        in: query
        schema:
          type: integer
          default: 50
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/notification-thread"
              examples:
                default:
                  "$ref": "#/components/examples/thread-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    put:
      summary: Mark notifications as read
      description: Marks all notifications as "read" for the current user. If the
        number of notifications is too large to complete in one request, you will
        receive a `202 Accepted` status and GitHub will run an asynchronous process
        to mark notifications as "read." To check whether any "unread" notifications
        remain, you can use the [List notifications for the authenticated user](https://docs.github.com/rest/activity/notifications#list-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      tags:
      - activity
      operationId: activity/mark-notifications-as-read
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-notifications-as-read
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_read_at:
                  description: 'Describes the last point that notifications were checked.
                    Anything updated since this time will not be marked as read. If
                    you omit this parameter, all notifications are marked as read.
                    This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                    format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.'
                  type: string
                  format: date-time
                read:
                  description: Whether the notification has been read.
                  type: boolean
            examples:
              default:
                value:
                  last_read_at: '2022-06-10T00:00:00Z'
                  read: true
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/notification-read"
              examples:
                default:
                  "$ref": "#/components/examples/notifications-mark-read"
        '205':
          description: Reset Content
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  "/notifications/threads/{thread_id}":
    get:
      summary: Get a thread
      description: Gets information about a notification thread.
      tags:
      - activity
      operationId: activity/get-thread
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#get-a-thread
      parameters:
      - "$ref": "#/components/parameters/thread-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/notification-thread"
              examples:
                default:
                  "$ref": "#/components/examples/thread"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    patch:
      summary: Mark a thread as read
      description: 'Marks a thread as "read." Marking a thread as "read" is equivalent
        to clicking a notification in your notification inbox on GitHub: https://github.com/notifications.'
      tags:
      - activity
      operationId: activity/mark-thread-as-read
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-a-thread-as-read
      parameters:
      - "$ref": "#/components/parameters/thread-id"
      responses:
        '205':
          description: Reset Content
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  "/notifications/threads/{thread_id}/subscription":
    get:
      summary: Get a thread subscription for the authenticated user
      description: |-
        This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/rest/activity/watching#get-a-repository-subscription).

        Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.
      tags:
      - activity
      operationId: activity/get-thread-subscription-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#get-a-thread-subscription-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/thread-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/thread-subscription"
              examples:
                default:
                  "$ref": "#/components/examples/thread-subscription"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    put:
      summary: Set a thread subscription
      description: |-
        If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.

        You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.

        Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/rest/activity/notifications#delete-a-thread-subscription) endpoint.
      tags:
      - activity
      operationId: activity/set-thread-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#set-a-thread-subscription
      parameters:
      - "$ref": "#/components/parameters/thread-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                ignored:
                  description: Whether to block all notifications from a thread.
                  default: false
                  type: boolean
              type: object
            examples:
              default:
                value:
                  ignored: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/thread-subscription"
              examples:
                default:
                  "$ref": "#/components/examples/thread-subscription"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    delete:
      summary: Delete a thread subscription
      description: Mutes all future notifications for a conversation until you comment
        on the thread or get an **@mention**. If you are watching the repository of
        the thread, you will still receive notifications. To ignore future notifications
        for a repository you are watching, use the [Set a thread subscription](https://docs.github.com/rest/activity/notifications#set-a-thread-subscription)
        endpoint and set `ignore` to `true`.
      tags:
      - activity
      operationId: activity/delete-thread-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#delete-a-thread-subscription
      parameters:
      - "$ref": "#/components/parameters/thread-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  "/octocat":
    get:
      summary: Get Octocat
      description: Get the octocat as ASCII art
      tags:
      - meta
      operationId: meta/get-octocat
      parameters:
      - name: s
        in: query
        description: The words to show in Octocat's speech bubble
        schema:
          type: string
        required: false
      responses:
        '200':
          description: Response
          content:
            application/octocat-stream:
              schema:
                type: string
              examples:
                default:
                  "$ref": "#/components/examples/octocat"
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#get-octocat
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
  "/organizations":
    get:
      summary: List organizations
      description: |-
        Lists all organizations, in the order that they were created on GitHub.

        **Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers) to get the URL for the next page of organizations.
      tags:
      - orgs
      operationId: orgs/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-organizations
      parameters:
      - "$ref": "#/components/parameters/since-org"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple-items"
          headers:
            Link:
              example: <https://api.github.com/organizations?since=135>; rel="next"
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  "/orgs/{org}":
    get:
      summary: Get an organization
      description: |-
        To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://docs.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).

        GitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See "[Authenticating with GitHub Apps](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/)" for details. For an example response, see 'Response with GitHub plan information' below."
      tags:
      - orgs
      operationId: orgs/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#get-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-full"
              examples:
                default-response:
                  "$ref": "#/components/examples/organization-full"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
    patch:
      summary: Update an organization
      description: |-
        **Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).

        Enables an authenticated organization owner with the `admin:org` scope or the `repo` scope to update the organization's profile and member privileges.
      tags:
      - orgs
      operationId: orgs/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#update-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                billing_email:
                  type: string
                  description: Billing email address. This address is not publicized.
                company:
                  type: string
                  description: The company name.
                email:
                  type: string
                  description: The publicly visible email address.
                twitter_username:
                  type: string
                  description: The Twitter username of the company.
                location:
                  type: string
                  description: The location.
                name:
                  type: string
                  description: The shorthand name of the company.
                description:
                  type: string
                  description: The description of the company.
                has_organization_projects:
                  type: boolean
                  description: Whether an organization can use organization projects.
                has_repository_projects:
                  type: boolean
                  description: Whether repositories that belong to the organization
                    can use repository projects.
                default_repository_permission:
                  type: string
                  description: Default permission level members have for organization
                    repositories.
                  enum:
                  - read
                  - write
                  - admin
                  - none
                  default: read
                members_can_create_repositories:
                  type: boolean
                  description: Whether of non-admin organization members can create
                    repositories. **Note:** A parameter can override this parameter.
                    See `members_allowed_repository_creation_type` in this table for
                    details.
                  default: true
                members_can_create_internal_repositories:
                  type: boolean
                  description: Whether organization members can create internal repositories,
                    which are visible to all enterprise members. You can only allow
                    members to create internal repositories if your organization is
                    associated with an enterprise account using GitHub Enterprise
                    Cloud or GitHub Enterprise Server 2.20+. For more information,
                    see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                    in the GitHub Help documentation.
                members_can_create_private_repositories:
                  type: boolean
                  description: Whether organization members can create private repositories,
                    which are visible to organization members with permission. For
                    more information, see "[Restricting repository creation in your
                    organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                    in the GitHub Help documentation.
                members_can_create_public_repositories:
                  type: boolean
                  description: Whether organization members can create public repositories,
                    which are visible to anyone. For more information, see "[Restricting
                    repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                    in the GitHub Help documentation.
                members_allowed_repository_creation_type:
                  type: string
                  description: "Specifies which types of repositories non-admin organization
                    members can create. `private` is only available to repositories
                    that are part of an organization on GitHub Enterprise Cloud. \n**Note:**
                    This parameter is deprecated and will be removed in the future.
                    Its return value ignores internal repositories. Using this parameter
                    overrides values set in `members_can_create_repositories`. See
                    the parameter deprecation notice in the operation description
                    for details."
                  enum:
                  - all
                  - private
                  - none
                members_can_create_pages:
                  type: boolean
                  description: Whether organization members can create GitHub Pages
                    sites. Existing published sites will not be impacted.
                  default: true
                members_can_create_public_pages:
                  type: boolean
                  description: Whether organization members can create public GitHub
                    Pages sites. Existing published sites will not be impacted.
                  default: true
                members_can_create_private_pages:
                  type: boolean
                  description: Whether organization members can create private GitHub
                    Pages sites. Existing published sites will not be impacted.
                  default: true
                members_can_fork_private_repositories:
                  type: boolean
                  description: Whether organization members can fork private organization
                    repositories.
                  default: false
                web_commit_signoff_required:
                  type: boolean
                  description: Whether contributors to organization repositories are
                    required to sign off on commits they make through GitHub's web
                    interface.
                  default: false
                blog:
                  type: string
                  example: '"http://github.blog"'
                advanced_security_enabled_for_new_repositories:
                  type: boolean
                  description: |-
                    Whether GitHub Advanced Security is automatically enabled for new repositories.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.
                dependabot_alerts_enabled_for_new_repositories:
                  type: boolean
                  description: |-
                    Whether Dependabot alerts is automatically enabled for new repositories.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.
                dependabot_security_updates_enabled_for_new_repositories:
                  type: boolean
                  description: |-
                    Whether Dependabot security updates is automatically enabled for new repositories.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.
                dependency_graph_enabled_for_new_repositories:
                  type: boolean
                  description: |-
                    Whether dependency graph is automatically enabled for new repositories.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.
                secret_scanning_enabled_for_new_repositories:
                  type: boolean
                  description: |-
                    Whether secret scanning is automatically enabled for new repositories.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.
                secret_scanning_push_protection_enabled_for_new_repositories:
                  type: boolean
                  description: |-
                    Whether secret scanning push protection is automatically enabled for new repositories.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.
                secret_scanning_push_protection_custom_link_enabled:
                  type: boolean
                  description: Whether a custom link is shown to contributors who
                    are blocked from pushing a secret by push protection.
                secret_scanning_push_protection_custom_link:
                  type: string
                  description: If `secret_scanning_push_protection_custom_link_enabled`
                    is true, the URL that will be displayed to contributors who are
                    blocked from pushing a secret.
            examples:
              default:
                value:
                  billing_email: mona@github.com
                  company: GitHub
                  email: mona@github.com
                  twitter_username: github
                  location: San Francisco
                  name: github
                  description: GitHub, the company.
                  default_repository_permission: read
                  members_can_create_repositories: true
                  members_allowed_repository_creation_type: all
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-full"
              examples:
                default:
                  "$ref": "#/components/examples/organization-full"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/validation-error"
                - "$ref": "#/components/schemas/validation-error-simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
    delete:
      summary: Delete an organization
      description: |-
        Deletes an organization and all its repositories.

        The organization login will be unavailable for 90 days after deletion.

        Please review the Terms of Service regarding account deletion before using this endpoint:

        https://docs.github.com/site-policy/github-terms/github-terms-of-service
      operationId: orgs/delete
      tags:
      - orgs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#delete-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  "/orgs/{org}/actions/cache/usage":
    get:
      summary: Get GitHub Actions cache usage for an organization
      description: |-
        Gets the total GitHub Actions cache usage for an organization.
        The data fetched using this API is refreshed approximately every 5 minutes, so values returned from this endpoint may take at least 5 minutes to get updated.
        You must authenticate using an access token with the `read:org` scope to use this endpoint. GitHub Apps must have the `organization_admistration:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-actions-cache-usage-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#get-github-actions-cache-usage-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-cache-usage-org-enterprise"
              examples:
                default:
                  "$ref": "#/components/examples/actions-cache-usage-org-enterprise"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  "/orgs/{org}/actions/cache/usage-by-repository":
    get:
      summary: List repositories with GitHub Actions cache usage for an organization
      description: |-
        Lists repositories and their GitHub Actions cache usage for an organization.
        The data fetched using this API is refreshed approximately every 5 minutes, so values returned from this endpoint may take at least 5 minutes to get updated.
        You must authenticate using an access token with the `read:org` scope to use this endpoint. GitHub Apps must have the `organization_admistration:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-actions-cache-usage-by-repo-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#list-repositories-with-github-actions-cache-usage-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-cache-usage-by-repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/org-actions-cache-usage-by-repo"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  "/orgs/{org}/actions/oidc/customization/sub":
    get:
      summary: Get the customization template for an OIDC subject claim for an organization
      description: |-
        Gets the customization template for an OpenID Connect (OIDC) subject claim.
        You must authenticate using an access token with the `read:org` scope to use this endpoint.
        GitHub Apps must have the `organization_administration:write` permission to use this endpoint.
      tags:
      - oidc
      operationId: oidc/get-oidc-custom-sub-template-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/oidc#get-the-customization-template-for-an-oidc-subject-claim-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: A JSON serialized template for OIDC subject claim customization
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/oidc-custom-sub"
              examples:
                default:
                  "$ref": "#/components/examples/oidc-custom-sub"
      x-github:
        enabledForGitHubApps: true
        category: actions
        subcategory: oidc
    put:
      summary: Set the customization template for an OIDC subject claim for an organization
      description: |-
        Creates or updates the customization template for an OpenID Connect (OIDC) subject claim.
        You must authenticate using an access token with the `write:org` scope to use this endpoint.
        GitHub Apps must have the `admin:org` permission to use this endpoint.
      tags:
      - oidc
      operationId: oidc/update-oidc-custom-sub-template-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/oidc#set-the-customization-template-for-an-oidc-subject-claim-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/oidc-custom-sub"
            examples:
              default:
                "$ref": "#/components/examples/oidc-custom-sub"
      responses:
        '201':
          description: Empty response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: oidc
  "/orgs/{org}/actions/permissions":
    get:
      summary: Get GitHub Actions permissions for an organization
      description: |-
        Gets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/get-github-actions-permissions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-github-actions-permissions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-organization-permissions"
              examples:
                default:
                  "$ref": "#/components/examples/actions-organization-permissions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for an organization
      description: |-
        Sets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/set-github-actions-permissions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-github-actions-permissions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled_repositories:
                  "$ref": "#/components/schemas/enabled-repositories"
                allowed_actions:
                  "$ref": "#/components/schemas/allowed-actions"
              required:
              - enabled_repositories
            examples:
              default:
                value:
                  enabled_repositories: all
                  allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  "/orgs/{org}/actions/permissions/repositories":
    get:
      summary: List selected repositories enabled for GitHub Actions in an organization
      description: |-
        Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/list-selected-repositories-enabled-github-actions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#list-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/repository-paginated"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set selected repositories enabled for GitHub Actions in an organization
      description: |-
        Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/set-selected-repositories-enabled-github-actions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs to enable for GitHub Actions.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
              - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                  - 32
                  - 42
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  "/orgs/{org}/actions/permissions/repositories/{repository_id}":
    put:
      summary: Enable a selected repository for GitHub Actions in an organization
      description: |-
        Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/enable-selected-repository-github-actions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#enable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/repository-id"
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    delete:
      summary: Disable a selected repository for GitHub Actions in an organization
      description: |-
        Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/disable-selected-repository-github-actions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#disable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/repository-id"
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  "/orgs/{org}/actions/permissions/selected-actions":
    get:
      summary: Get allowed actions and reusable workflows for an organization
      description: |-
        Gets the selected actions and reusable workflows that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).""

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/get-allowed-actions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-allowed-actions-and-reusable-workflows-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/selected-actions"
              examples:
                default:
                  "$ref": "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions and reusable workflows for an organization
      description: |-
        Sets the actions and reusable workflows that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/set-allowed-actions-organization
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-allowed-actions-and-reusable-workflows-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/selected-actions"
            examples:
              selected_actions:
                "$ref": "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  "/orgs/{org}/actions/permissions/workflow":
    get:
      summary: Get default workflow permissions for an organization
      description: |-
        Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization,
        as well as whether GitHub Actions can submit approving pull request reviews. For more information, see
        "[Setting the permissions of the GITHUB_TOKEN for your organization](https://docs.github.com/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      tags:
      - actions
      operationId: actions/get-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-default-workflow-permissions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-get-default-workflow-permissions"
              examples:
                default:
                  "$ref": "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
    put:
      summary: Set default workflow permissions for an organization
      description: |-
        Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, and sets if GitHub Actions
        can submit approving pull request reviews. For more information, see
        "[Setting the permissions of the GITHUB_TOKEN for your organization](https://docs.github.com/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      tags:
      - actions
      operationId: actions/set-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-default-workflow-permissions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '204':
          description: Success response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/actions-set-default-workflow-permissions"
            examples:
              default:
                "$ref": "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
  "/orgs/{org}/actions/runners":
    get:
      summary: List self-hosted runners for an organization
      description: |-
        Lists all self-hosted runners configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/list-self-hosted-runners-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-self-hosted-runners-for-an-organization
      parameters:
      - name: name
        description: The name of a self-hosted runner.
        in: query
        schema:
          type: string
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/runner-response"
              examples:
                default:
                  "$ref": "#/components/examples/runner-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/downloads":
    get:
      summary: List runner applications for an organization
      description: |-
        Lists binaries for the runner application that you can download and run.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/list-runner-applications-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-runner-applications-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/runner-application"
              examples:
                default:
                  "$ref": "#/components/examples/runner-application-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/generate-jitconfig":
    post:
      summary: Create configuration for a just-in-time runner for an organization
      description: |-
        Generates a configuration that can be passed to the runner application at startup.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/generate-runner-jitconfig-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              - runner_group_id
              - labels
              properties:
                name:
                  type: string
                  description: The name of the new runner.
                runner_group_id:
                  type: integer
                  description: The ID of the runner group to register the runner to.
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    type: string
                  description: 'The names of the custom labels to add to the runner.
                    **Minimum items**: 1. **Maximum items**: 100.'
                work_folder:
                  type: string
                  description: The working directory to be used for job execution,
                    relative to the runner install directory.
                  default: _work
            examples:
              default:
                value:
                  name: New runner
                  runner_group_id: 1
                  labels:
                  - self-hosted
                  - X64
                  - macOS
                  - no-gpu
                  work_folder: _work
      responses:
        '201':
          "$ref": "#/components/responses/actions_runner_jitconfig"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/registration-token":
    post:
      summary: Create a registration token for an organization
      description: "Returns a token that you can pass to the `config` script. The
        token expires after one hour.\n\nYou must authenticate using an access token
        with the `admin:org` scope to use this endpoint.\nIf the repository is private,
        you must use an access token with the `repo` scope.\nGitHub Apps must have
        the `administration` permission for repositories and the `organization_self_hosted_runners`
        permission for organizations.\nAuthenticated users must have admin access
        to repositories or organizations, or the `manage_runners:enterprise` scope
        for enterprises, to use these endpoints.\n\nExample using registration token:
        \n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration
        token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org
        --token TOKEN\n```"
      tags:
      - actions
      operationId: actions/create-registration-token-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-registration-token-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authentication-token"
              examples:
                default:
                  "$ref": "#/components/examples/authentication-token"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/remove-token":
    post:
      summary: Create a remove token for an organization
      description: |-
        Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.

        Example using remove token:

        To remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this
        endpoint.

        ```
        ./config.sh remove --token TOKEN
        ```
      tags:
      - actions
      operationId: actions/create-remove-token-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-remove-token-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authentication-token"
              examples:
                default:
                  "$ref": "#/components/examples/authentication-token-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/{runner_id}":
    get:
      summary: Get a self-hosted runner for an organization
      description: |-
        Gets a specific self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/get-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/runner"
              examples:
                default:
                  "$ref": "#/components/examples/runner"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from an organization
      description: |-
        Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/delete-self-hosted-runner-from-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/{runner_id}/labels":
    get:
      summary: List labels for a self-hosted runner for an organization
      description: |-
        Lists all labels for a self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for an organization
      description: |-
        Add custom labels to a self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                  - gpu
                  - accelerated
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for an organization
      description: |-
        Remove all previous custom labels and set the new custom labels for a specific
        self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: The names of the custom labels to set for the runner.
                    You can pass an empty array to remove all custom labels.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                  - gpu
                  - accelerated
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for an organization
      description: |-
        Remove all custom labels from a self-hosted runner configured in an
        organization. Returns the remaining read-only labels from the runner.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-all-custom-labels-from-a-self-hosted-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels_readonly"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/runners/{runner_id}/labels/{name}":
    delete:
      summary: Remove a custom label from a self-hosted runner for an organization
      description: |-
        Remove a custom label from a self-hosted runner configured
        in an organization. Returns the remaining labels from the runner.

        This endpoint returns a `404 Not Found` status if the custom label is not
        present on the runner.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/runner-id"
      - "$ref": "#/components/parameters/runner-label-name"
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/orgs/{org}/actions/secrets":
    get:
      summary: List organization secrets
      description: |-
        Lists all secrets available in an organization without revealing their
        encrypted values.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/list-org-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-organization-secrets
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-actions-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/organization-actions-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/orgs/{org}/actions/secrets/public-key":
    get:
      summary: Get an organization public key
      description: |-
        Gets your public key, which you need to encrypt secrets. You need to
        encrypt a secret before you can create or update secrets.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/get-org-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-organization-public-key
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/actions-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/orgs/{org}/actions/secrets/{secret_name}":
    get:
      summary: Get an organization secret
      description: |-
        Gets a single organization secret without revealing its encrypted value.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/get-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-actions-secret"
              examples:
                default:
                  "$ref": "#/components/examples/organization-actions-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an organization secret
      description: |-
        Creates or updates an organization secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an organization public
                    key](https://docs.github.com/rest/actions/secrets#get-an-organization-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: Which type of organization repositories have access
                    to the organization secret. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the secret.
                  enum:
                  - all
                  - private
                  - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can manage the list of
                    selected repositories using the [List selected repositories for
                    an organization secret](https://docs.github.com/rest/actions/secrets#list-selected-repositories-for-an-organization-secret),
                    [Set selected repositories for an organization secret](https://docs.github.com/rest/actions/secrets#set-selected-repositories-for-an-organization-secret),
                    and [Remove selected repository from an organization secret](https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
              - visibility
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
                  visibility: selected
                  selected_repository_ids:
                  - 1296269
                  - 1296280
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an organization secret
      description: |-
        Deletes a secret in an organization using the secret name.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/delete-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#delete-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/orgs/{org}/actions/secrets/{secret_name}/repositories":
    get:
      summary: List selected repositories for an organization secret
      description: |-
        Lists all repositories that have been selected when the `visibility`
        for repository access to a secret is set to `selected`.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-selected-repositories-for-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/minimal-repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/public-repository-paginated"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Set selected repositories for an organization secret
      description: |-
        Replaces all repositories for an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you [Create
        or update an organization secret](https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret).

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#set-selected-repositories-for-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can add and remove individual
                    repositories using the [Add selected repository to an organization
                    secret](https://docs.github.com/rest/actions/secrets#add-selected-repository-to-an-organization-secret)
                    and [Remove selected repository from an organization secret](https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
              - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                  - 64780797
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}":
    put:
      summary: Add selected repository to an organization secret
      description: |-
        Adds a repository to an organization secret when the `visibility` for
        repository access is set to `selected`. The visibility is set when you [Create or
        update an organization secret](https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret).

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#add-selected-repository-to-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '409':
          description: Conflict when visibility type is not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: |-
        Removes a repository from an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you [Create
        or update an organization secret](https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret).

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response when repository was removed from the selected list
        '409':
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/orgs/{org}/actions/variables":
    get:
      summary: List organization variables
      description: |-
        Lists all organization variables.
        You must authenticate using an access token with the `admin:org` scope to use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `organization_actions_variables:read` organization permission to use this endpoint. Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/list-org-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-organization-variables
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variables-per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-actions-variable-response"
              examples:
                default:
                  "$ref": "#/components/examples/organization-actions-variables-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create an organization variable
      description: |-
        Creates an organization variable that you can reference in a GitHub Actions workflow.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:write` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/create-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#create-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
                visibility:
                  type: string
                  description: The type of repositories in the organization that can
                    access the variable. `selected` means only the repositories specified
                    by `selected_repository_ids` can access the variable.
                  enum:
                  - all
                  - private
                  - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    variable. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`.
                  items:
                    type: integer
              required:
              - name
              - value
              - visibility
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
                  visibility: selected
                  selected_repository_ids:
                  - 1296269
                  - 1296280
      responses:
        '201':
          description: Response when creating a variable
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/orgs/{org}/actions/variables/{name}":
    get:
      summary: Get an organization variable
      description: |-
        Gets a specific variable in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:read` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/get-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#get-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-actions-variable"
              examples:
                default:
                  "$ref": "#/components/examples/organization-actions-variable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update an organization variable
      description: |-
        Updates an organization variable that you can reference in a GitHub Actions workflow.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:write` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/update-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#update-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
                visibility:
                  type: string
                  description: The type of repositories in the organization that can
                    access the variable. `selected` means only the repositories specified
                    by `selected_repository_ids` can access the variable.
                  enum:
                  - all
                  - private
                  - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    variable. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`.
                  items:
                    type: integer
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
                  visibility: selected
                  selected_repository_ids:
                  - 1296269
                  - 1296280
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete an organization variable
      description: |-
        Deletes an organization variable using the variable name.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:write` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/delete-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#delete-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/orgs/{org}/actions/variables/{name}/repositories":
    get:
      summary: List selected repositories for an organization variable
      description: |-
        Lists all repositories that can access an organization variable
        that is available to selected repositories.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:read` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/list-selected-repos-for-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-selected-repositories-for-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/minimal-repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/public-repository-paginated"
        '409':
          description: Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    put:
      summary: Set selected repositories for an organization variable
      description: |-
        Replaces all repositories for an organization variable that is available
        to selected repositories. Organization variables that are available to selected
        repositories have their `visibility` field set to `selected`.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:write` organization permission to use this
        endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/set-selected-repos-for-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#set-selected-repositories-for-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: The IDs of the repositories that can access the organization
                    variable.
                  items:
                    type: integer
              required:
              - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                  - 64780797
      responses:
        '204':
          description: Response
        '409':
          description: Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}":
    put:
      summary: Add selected repository to an organization variable
      description: |-
        Adds a repository to an organization variable that is available to selected repositories.
        Organization variables that are available to selected repositories have their `visibility` field set to `selected`.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:write` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/add-selected-repo-to-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#add-selected-repository-to-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response
        '409':
          description: Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Remove selected repository from an organization variable
      description: |-
        Removes a repository from an organization variable that is
        available to selected repositories. Organization variables that are available to
        selected repositories have their `visibility` field set to `selected`.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have the `organization_actions_variables:write` organization permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/remove-selected-repo-from-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#remove-selected-repository-from-an-organization-variable
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/variable-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response
        '409':
          description: Response when the visibility of the variable is not set to
            `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/orgs/{org}/blocks":
    get:
      summary: List users blocked by an organization
      description: List the users blocked by an organization.
      tags:
      - orgs
      operationId: orgs/list-blocked-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#list-users-blocked-by-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
  "/orgs/{org}/blocks/{username}":
    get:
      summary: Check if a user is blocked by an organization
      description: Returns a 204 if the given user is blocked by the given organization.
        Returns a 404 if the organization is not blocking the user, or if the user
        account has been identified as spam by GitHub.
      tags:
      - orgs
      operationId: orgs/check-blocked-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#check-if-a-user-is-blocked-by-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: If the user is blocked
        '404':
          description: If the user is not blocked
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
    put:
      summary: Block a user from an organization
      description: Blocks the given user on behalf of the specified organization and
        returns a 204. If the organization cannot block the given user a 422 is returned.
      tags:
      - orgs
      operationId: orgs/block-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#block-a-user-from-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
    delete:
      summary: Unblock a user from an organization
      description: Unblocks the given user on behalf of the specified organization.
      tags:
      - orgs
      operationId: orgs/unblock-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#unblock-a-user-from-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
  "/orgs/{org}/code-scanning/alerts":
    get:
      summary: List code scanning alerts for an organization
      description: |-
        Lists code scanning alerts for the default branch for all eligible repositories in an organization. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

        To use this endpoint, you must be an owner or security manager for the organization, and you must use an access token with the `repo` scope or `security_events` scope.

        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have the `security_events` read permission to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#list-code-scanning-alerts-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/tool-name"
      - "$ref": "#/components/parameters/tool-guid"
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/direction"
      - name: state
        description: If specified, only code scanning alerts with this state will
          be returned.
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/code-scanning-alert-state-query"
      - name: sort
        description: The property by which to sort the results.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          default: created
      - name: severity
        description: If specified, only code scanning alerts with this severity will
          be returned.
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/code-scanning-alert-severity"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-scanning-organization-alert-items"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-organization-alert-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
  "/orgs/{org}/codespaces":
    get:
      summary: List codespaces for the organization
      description: |-
        Lists the codespaces associated to a specified organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-in-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#list-codespaces-for-the-organization
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-list"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
  "/orgs/{org}/codespaces/access":
    put:
      summary: Manage access control for organization codespaces
      description: |-
        Sets which users can access codespaces in an organization. This is synonymous with granting or revoking codespaces access permissions for users according to the visibility.
        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/set-codespaces-access
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#manage-access-control-for-organization-codespaces
      parameters:
      - "$ref": "#/components/parameters/org"
      deprecated: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                visibility:
                  type: string
                  description: Which users can access codespaces in the organization.
                    `disabled` means that no users can access codespaces in the organization.
                  enum:
                  - disabled
                  - selected_members
                  - all_members
                  - all_members_and_outside_collaborators
                selected_usernames:
                  type: array
                  description: The usernames of the organization members who should
                    have access to codespaces in the organization. Required when `visibility`
                    is `selected_members`. The provided list of usernames will replace
                    any existing value.
                  items:
                    type: string
                  maxItems: 100
              required:
              - visibility
            examples:
              default:
                value:
                  visibility: selected_members
                  selected_usernames:
                  - johnDoe
                  - atomIO
      responses:
        '204':
          description: Response when successfully modifying permissions.
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          description: Users are neither members nor collaborators of this organization.
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
  "/orgs/{org}/codespaces/access/selected_users":
    post:
      summary: Add users to Codespaces access for an organization
      description: |-
        Codespaces for the specified users will be billed to the organization.

        To use this endpoint, the access settings for the organization must be set to `selected_members`.
        For information on how to change this setting, see "[Manage access control for organization codespaces](https://docs.github.com/rest/codespaces/organizations#manage-access-control-for-organization-codespaces)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/set-codespaces-access-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#add-users-to-codespaces-access-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      deprecated: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_usernames:
                  type: array
                  description: The usernames of the organization members whose codespaces
                    be billed to the organization.
                  items:
                    type: string
                  maxItems: 100
              required:
              - selected_usernames
            examples:
              default:
                value:
                  selected_usernames:
                  - johnDoe
                  - atomIO
      responses:
        '204':
          description: Response when successfully modifying permissions.
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          description: Users are neither members nor collaborators of this organization.
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
    delete:
      summary: Remove users from Codespaces access for an organization
      description: |-
        Codespaces for the specified users will no longer be billed to the organization.

        To use this endpoint, the access settings for the organization must be set to `selected_members`.
        For information on how to change this setting, see "[Manage access control for organization codespaces](https://docs.github.com/rest/codespaces/organizations#manage-access-control-for-organization-codespaces)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/delete-codespaces-access-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#remove-users-from-codespaces-access-for-an-organization
      deprecated: true
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_usernames:
                  type: array
                  description: The usernames of the organization members whose codespaces
                    should not be billed to the organization.
                  items:
                    type: string
                  maxItems: 100
              required:
              - selected_usernames
            examples:
              default:
                value:
                  selected_usernames:
                  - johnDoe
                  - atomIO
      responses:
        '204':
          description: Response when successfully modifying permissions.
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          description: Users are neither members nor collaborators of this organization.
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
  "/orgs/{org}/codespaces/secrets":
    get:
      summary: List organization secrets
      description: |-
        Lists all Codespaces secrets available at the organization-level without revealing their encrypted values.
        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-org-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#list-organization-secrets
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-org-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/repo-codespaces-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
  "/orgs/{org}/codespaces/secrets/public-key":
    get:
      summary: Get an organization public key
      description: Gets a public key for an organization, which is required in order
        to encrypt secrets. You need to encrypt the value of a secret before you can
        create or update secrets. You must authenticate using an access token with
        the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-org-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#get-an-organization-public-key
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
  "/orgs/{org}/codespaces/secrets/{secret_name}":
    get:
      summary: Get an organization secret
      description: |-
        Gets an organization secret without revealing its encrypted value.
        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#get-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-org-secret"
              examples:
                default:
                  "$ref": "#/components/examples/repo-codespaces-secret"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
    put:
      summary: Create or update an organization secret
      description: |-
        Creates or updates an organization secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access
        token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#create-or-update-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: The value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an organization public
                    key](https://docs.github.com/rest/codespaces/organization-secrets#get-an-organization-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: The ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: Which type of organization repositories have access
                    to the organization secret. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the secret.
                  enum:
                  - all
                  - private
                  - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository IDs that can access the organization
                    secret. You can only provide a list of repository IDs when the
                    `visibility` is set to `selected`. You can manage the list of
                    selected repositories using the [List selected repositories for
                    an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#list-selected-repositories-for-an-organization-secret),
                    [Set selected repositories for an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#set-selected-repositories-for-an-organization-secret),
                    and [Remove selected repository from an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
              - visibility
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
                  visibility: selected
                  selected_repository_ids:
                  - 1296269
                  - 1296280
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
    delete:
      summary: Delete an organization secret
      description: Deletes an organization secret using the secret name. You must
        authenticate using an access token with the `admin:org` scope to use this
        endpoint.
      tags:
      - codespaces
      operationId: codespaces/delete-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#delete-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
  "/orgs/{org}/codespaces/secrets/{secret_name}/repositories":
    get:
      summary: List selected repositories for an organization secret
      description: Lists all repositories that have been selected when the `visibility`
        for repository access to a secret is set to `selected`. You must authenticate
        using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#list-selected-repositories-for-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/minimal-repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/public-repository-paginated"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
    put:
      summary: Set selected repositories for an organization secret
      description: Replaces all repositories for an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you
        [Create or update an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope to
        use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#set-selected-repositories-for-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can add and remove individual
                    repositories using the [Set selected repositories for an organization
                    secret](https://docs.github.com/rest/codespaces/organization-secrets#set-selected-repositories-for-an-organization-secret)
                    and [Remove selected repository from an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
              - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                  - 64780797
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
  "/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}":
    put:
      summary: Add selected repository to an organization secret
      description: Adds a repository to an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you
        [Create or update an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope to
        use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#add-selected-repository-to-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          description: Conflict when visibility type is not set to selected
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: Removes a repository from an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you
        [Create or update an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope to
        use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organization-secrets#remove-selected-repository-from-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response when repository was removed from the selected list
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          description: Conflict when visibility type not set to selected
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organization-secrets
  "/orgs/{org}/copilot/billing":
    get:
      summary: Get Copilot for Business seat information and settings for an organization
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

        Gets information about an organization's Copilot for Business subscription, including seat breakdown
        and code matching policies. To configure these settings, go to your organization's settings on GitHub.com.
        For more information, see "[Configuring GitHub Copilot settings in your organization](https://docs.github.com/copilot/configuring-github-copilot/configuring-github-copilot-settings-in-your-organization)".

        Only organization owners and members with admin permissions can configure and view details about the organization's Copilot for Business subscription. You must
        authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.
      tags:
      - copilot
      operationId: copilot/get-copilot-organization-details
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#get-copilot-for-business-seat-information-and-settings-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-organization-details"
              examples:
                default:
                  "$ref": "#/components/examples/copilot-organization-details"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
  "/orgs/{org}/copilot/billing/seats":
    get:
      summary: List all Copilot for Business seat assignments for an organization
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

        Lists all Copilot for Business seat assignments for an organization that are currently being billed (either active or pending cancellation at the start of the next billing cycle).

        Only organization owners and members with admin permissions can configure and view details about the organization's Copilot for Business subscription. You must
        authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.
      tags:
      - copilot
      operationId: copilot/list-copilot-seats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#list-all-copilot-for-business-seat-assignments-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/page"
      - name: per_page
        description: The number of results per page (max 100).
        in: query
        schema:
          type: integer
          default: 50
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-seat-details-response"
              examples:
                default:
                  "$ref": "#/components/examples/copilot-seats-list"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
  "/orgs/{org}/copilot/billing/selected_teams":
    post:
      summary: Add teams to the Copilot for Business subscription for an organization
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

         Purchases a GitHub Copilot for Business seat for all users within each specified team.
         The organization will be billed accordingly. For more information about Copilot for Business pricing, see "[About billing for GitHub Copilot for Business](https://docs.github.com/billing/managing-billing-for-github-copilot/about-billing-for-github-copilot#pricing-for-github-copilot-for-business)".

         Only organization owners and members with admin permissions can configure GitHub Copilot in their organization. You must
         authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.

         In order for an admin to use this endpoint, the organization must have a Copilot for Business subscription and a configured suggestion matching policy.
         For more information about setting up a Copilot for Business subscription, see "[Setting up a Copilot for Business subscription for your organization](https://docs.github.com/billing/managing-billing-for-github-copilot/managing-your-github-copilot-subscription-for-your-organization-or-enterprise#setting-up-a-copilot-for-business-subscription-for-your-organization)".
         For more information about setting a suggestion matching policy, see "[Configuring suggestion matching policies for GitHub Copilot in your organization](https://docs.github.com/copilot/configuring-github-copilot/configuring-github-copilot-settings-in-your-organization#configuring-suggestion-matching-policies-for-github-copilot-in-your-organization)".
      tags:
      - copilot
      operationId: copilot/add-copilot-for-business-seats-for-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#add-teams-to-the-copilot-for-business-subscription-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_teams:
                  type: array
                  description: List of team names within the organization to which
                    to grant access to GitHub Copilot.
                  items:
                    type: string
                  minItems: 1
              required:
              - selected_teams
            examples:
              default:
                value:
                  selected_teams:
                  - engteam1
                  - engteam2
                  - engteam3
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-seat-created"
              examples:
                default:
                  value:
                    seats_created: 5
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Copilot for Business is not enabled for this organization,
            billing has not been set up for this organization, a public code suggestions
            policy has not been set for this organization, or the organization's Copilot
            access setting is set to enable Copilot for all users or is unconfigured.
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
    delete:
      summary: Remove teams from the Copilot for Business subscription for an organization
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

        Cancels the Copilot for Business seat assignment for all members of each team specified.
        This will cause the members of the specified team(s) to lose access to GitHub Copilot at the end of the current billing cycle, and the organization will not be billed further for those users.

        For more information about Copilot for Business pricing, see "[About billing for GitHub Copilot for Business](https://docs.github.com/billing/managing-billing-for-github-copilot/about-billing-for-github-copilot#pricing-for-github-copilot-for-business)".

        For more information about disabling access to Copilot for Business, see "[Disabling access to GitHub Copilot for specific users in your organization](https://docs.github.com/copilot/configuring-github-copilot/configuring-github-copilot-settings-in-your-organization#disabling-access-to-github-copilot-for-specific-users-in-your-organization)".

        Only organization owners and members with admin permissions can configure GitHub Copilot in their organization. You must
        authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.
      tags:
      - copilot
      operationId: copilot/cancel-copilot-seat-assignment-for-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#remove-teams-from-the-copilot-for-business-subscription-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_teams:
                  type: array
                  description: The names of teams from which to revoke access to GitHub
                    Copilot.
                  items:
                    type: string
                  minItems: 1
              required:
              - selected_teams
            examples:
              default:
                value:
                  selected_teams:
                  - engteam1
                  - engteam2
                  - engteam3
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-seat-cancelled"
              examples:
                default:
                  value:
                    seats_cancelled: 5
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Copilot for Business is not enabled for this organization,
            billing has not been set up for this organization, a public code suggestions
            policy has not been set for this organization, or the organization's Copilot
            access setting is set to enable Copilot for all users or is unconfigured.
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
  "/orgs/{org}/copilot/billing/selected_users":
    post:
      summary: Add users to the Copilot for Business subscription for an organization
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

        Purchases a GitHub Copilot for Business seat for each user specified.
        The organization will be billed accordingly. For more information about Copilot for Business pricing, see "[About billing for GitHub Copilot for Business](https://docs.github.com/billing/managing-billing-for-github-copilot/about-billing-for-github-copilot#pricing-for-github-copilot-for-business)".

        Only organization owners and members with admin permissions can configure GitHub Copilot in their organization. You must
        authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.

        In order for an admin to use this endpoint, the organization must have a Copilot for Business subscription and a configured suggestion matching policy.
        For more information about setting up a Copilot for Business subscription, see "[Setting up a Copilot for Business subscription for your organization](https://docs.github.com/billing/managing-billing-for-github-copilot/managing-your-github-copilot-subscription-for-your-organization-or-enterprise#setting-up-a-copilot-for-business-subscription-for-your-organization)".
        For more information about setting a suggestion matching policy, see "[Configuring suggestion matching policies for GitHub Copilot in your organization](https://docs.github.com/copilot/configuring-github-copilot/configuring-github-copilot-settings-in-your-organization#configuring-suggestion-matching-policies-for-github-copilot-in-your-organization)".
      tags:
      - copilot
      operationId: copilot/add-copilot-for-business-seats-for-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#add-users-to-the-copilot-for-business-subscription-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_usernames:
                  type: array
                  description: The usernames of the organization members to be granted
                    access to GitHub Copilot.
                  items:
                    type: string
                  minItems: 1
              required:
              - selected_usernames
            examples:
              default:
                value:
                  selected_usernames:
                  - cooluser1
                  - hacker2
                  - octocat
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-seat-created"
              examples:
                default:
                  value:
                    seats_created: 5
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Copilot for Business is not enabled for this organization,
            billing has not been set up for this organization, a public code suggestions
            policy has not been set for this organization, or the organization's Copilot
            access setting is set to enable Copilot for all users or is unconfigured.
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
    delete:
      summary: Remove users from the Copilot for Business subscription for an organization
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

        Cancels the Copilot for Business seat assignment for each user specified.
        This will cause the specified users to lose access to GitHub Copilot at the end of the current billing cycle, and the organization will not be billed further for those users.

        For more information about Copilot for Business pricing, see "[About billing for GitHub Copilot for Business](https://docs.github.com/billing/managing-billing-for-github-copilot/about-billing-for-github-copilot#pricing-for-github-copilot-for-business)"

        For more information about disabling access to Copilot for Business, see "[Disabling access to GitHub Copilot for specific users in your organization](https://docs.github.com/copilot/configuring-github-copilot/configuring-github-copilot-settings-in-your-organization#disabling-access-to-github-copilot-for-specific-users-in-your-organization)".

        Only organization owners and members with admin permissions can configure GitHub Copilot in their organization. You must
        authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.
      tags:
      - copilot
      operationId: copilot/cancel-copilot-seat-assignment-for-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#remove-users-from-the-copilot-for-business-subscription-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_usernames:
                  type: array
                  description: The usernames of the organization members for which
                    to revoke access to GitHub Copilot.
                  items:
                    type: string
                  minItems: 1
              required:
              - selected_usernames
            examples:
              default:
                value:
                  selected_usernames:
                  - cooluser1
                  - hacker2
                  - octocat
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-seat-cancelled"
              examples:
                default:
                  value:
                    seats_cancelled: 5
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Copilot for Business is not enabled for this organization,
            billing has not been set up for this organization, a public code suggestions
            policy has not been set for this organization, the seat management setting
            is set to enable Copilot for all users or is unconfigured, or a user's
            seat cannot be cancelled because it was assigned to them via a team.
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
  "/orgs/{org}/dependabot/alerts":
    get:
      summary: List Dependabot alerts for an organization
      description: |-
        Lists Dependabot alerts for an organization.

        To use this endpoint, you must be an owner or security manager for the organization, and you must use an access token with the `repo` scope or `security_events` scope.

        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have **Dependabot alerts** read permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/alerts#list-dependabot-alerts-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-states"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-severities"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-ecosystems"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-packages"
      - "$ref": "#/components/parameters/dependabot-alert-scope"
      - "$ref": "#/components/parameters/dependabot-alert-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - "$ref": "#/components/parameters/pagination-first"
      - "$ref": "#/components/parameters/pagination-last"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/dependabot-alert-with-repository"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-alerts-for-organization"
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: alerts
  "/orgs/{org}/dependabot/secrets":
    get:
      summary: List organization secrets
      description: Lists all secrets available in an organization without revealing
        their encrypted values. You must authenticate using an access token with the
        `admin:org` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets`
        organization permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/list-org-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#list-organization-secrets
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-dependabot-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/organization-dependabot-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/orgs/{org}/dependabot/secrets/public-key":
    get:
      summary: Get an organization public key
      description: Gets your public key, which you need to encrypt secrets. You need
        to encrypt a secret before you can create or update secrets. You must authenticate
        using an access token with the `admin:org` scope to use this endpoint. GitHub
        Apps must have the `dependabot_secrets` organization permission to use this
        endpoint.
      tags:
      - dependabot
      operationId: dependabot/get-org-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#get-an-organization-public-key
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependabot-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/orgs/{org}/dependabot/secrets/{secret_name}":
    get:
      summary: Get an organization secret
      description: Gets a single organization secret without revealing its encrypted
        value. You must authenticate using an access token with the `admin:org` scope
        to use this endpoint. GitHub Apps must have the `dependabot_secrets` organization
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/get-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#get-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-dependabot-secret"
              examples:
                default:
                  "$ref": "#/components/examples/organization-dependabot-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    put:
      summary: Create or update an organization secret
      description: |-
        Creates or updates an organization secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access
        token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` organization
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#create-or-update-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an organization public
                    key](https://docs.github.com/rest/dependabot/secrets#get-an-organization-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: Which type of organization repositories have access
                    to the organization secret. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the secret.
                  enum:
                  - all
                  - private
                  - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can manage the list of
                    selected repositories using the [List selected repositories for
                    an organization secret](https://docs.github.com/rest/dependabot/secrets#list-selected-repositories-for-an-organization-secret),
                    [Set selected repositories for an organization secret](https://docs.github.com/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret),
                    and [Remove selected repository from an organization secret](https://docs.github.com/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: string
              required:
              - visibility
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
                  visibility: selected
                  selected_repository_ids:
                  - '1296269'
                  - '1296280'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    delete:
      summary: Delete an organization secret
      description: Deletes a secret in an organization using the secret name. You
        must authenticate using an access token with the `admin:org` scope to use
        this endpoint. GitHub Apps must have the `dependabot_secrets` organization
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/delete-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#delete-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/orgs/{org}/dependabot/secrets/{secret_name}/repositories":
    get:
      summary: List selected repositories for an organization secret
      description: Lists all repositories that have been selected when the `visibility`
        for repository access to a secret is set to `selected`. You must authenticate
        using an access token with the `admin:org` scope to use this endpoint. GitHub
        Apps must have the `dependabot_secrets` organization permission to use this
        endpoint.
      tags:
      - dependabot
      operationId: dependabot/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#list-selected-repositories-for-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/minimal-repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/public-repository-paginated"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    put:
      summary: Set selected repositories for an organization secret
      description: Replaces all repositories for an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you
        [Create or update an organization secret](https://docs.github.com/rest/dependabot/secrets#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope to
        use this endpoint. GitHub Apps must have the `dependabot_secrets` organization
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    secret. You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can add and remove individual
                    repositories using the [Set selected repositories for an organization
                    secret](https://docs.github.com/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret)
                    and [Remove selected repository from an organization secret](https://docs.github.com/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
              - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                  - 64780797
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}":
    put:
      summary: Add selected repository to an organization secret
      description: Adds a repository to an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you
        [Create or update an organization secret](https://docs.github.com/rest/dependabot/secrets#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope to
        use this endpoint. GitHub Apps must have the `dependabot_secrets` organization
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#add-selected-repository-to-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '409':
          description: Conflict when visibility type is not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: Removes a repository from an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you
        [Create or update an organization secret](https://docs.github.com/rest/dependabot/secrets#create-or-update-an-organization-secret).
        You must authenticate using an access token with the `admin:org` scope to
        use this endpoint. GitHub Apps must have the `dependabot_secrets` organization
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response when repository was removed from the selected list
        '409':
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/orgs/{org}/docker/conflicts":
    get:
      summary: Get list of conflicting packages during Docker migration for organization
      description: |-
        Lists all packages that are in a specific organization, are readable by the requesting user, and that encountered a conflict during a Docker migration.
        To use this endpoint, you must authenticate using an access token with the `read:packages` scope.
      tags:
      - packages
      operationId: packages/list-docker-migration-conflicting-packages-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-list-of-conflicting-packages-during-docker-migration-for-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/packages-for-org"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/events":
    get:
      summary: List public organization events
      description: ''
      tags:
      - activity
      operationId: activity/list-public-org-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-organization-events
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                200-response:
                  "$ref": "#/components/examples/public-org-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/orgs/{org}/failed_invitations":
    get:
      summary: List failed organization invitations
      description: The return hash contains `failed_at` and `failed_reason` fields
        which represent the time at which the invitation failed and the reason for
        the failure.
      tags:
      - orgs
      operationId: orgs/list-failed-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-failed-organization-invitations
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/organization-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/hooks":
    get:
      summary: List organization webhooks
      description: ''
      tags:
      - orgs
      operationId: orgs/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#list-organization-webhooks
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    post:
      summary: Create an organization webhook
      description: 'Here''s how you can create a hook that posts payloads in JSON
        format:'
      tags:
      - orgs
      operationId: orgs/create-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#create-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Must be passed as "web".
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      "$ref": "#/components/schemas/webhook-config-url"
                    content_type:
                      "$ref": "#/components/schemas/webhook-config-content-type"
                    secret:
                      "$ref": "#/components/schemas/webhook-config-secret"
                    insecure_ssl:
                      "$ref": "#/components/schemas/webhook-config-insecure-ssl"
                    username:
                      type: string
                      example: '"kdaigle"'
                    password:
                      type: string
                      example: '"password"'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads)
                    the hook is triggered for. Set to `["*"]` to receive all possible
                    events.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
              required:
              - name
              - config
            examples:
              default:
                value:
                  name: web
                  active: true
                  events:
                  - push
                  - pull_request
                  config:
                    url: http://example.com/webhook
                    content_type: json
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook"
          headers:
            Location:
              example: https://api.github.com/orgs/octocat/hooks/1
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}":
    get:
      summary: Get an organization webhook
      description: Returns a webhook configured in an organization. To get only the
        webhook `config` properties, see "[Get a webhook configuration for an organization](/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization)."
      tags:
      - orgs
      operationId: orgs/get-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#get-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    patch:
      summary: Update an organization webhook
      description: Updates a webhook configured in an organization. When you update
        a webhook, the `secret` will be overwritten. If you previously had a `secret`
        set, you must provide the same `secret` or set a new `secret` or the secret
        will be removed. If you are only updating individual webhook `config` properties,
        use "[Update a webhook configuration for an organization](/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization)."
      tags:
      - orgs
      operationId: orgs/update-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#update-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      "$ref": "#/components/schemas/webhook-config-url"
                    content_type:
                      "$ref": "#/components/schemas/webhook-config-content-type"
                    secret:
                      "$ref": "#/components/schemas/webhook-config-secret"
                    insecure_ssl:
                      "$ref": "#/components/schemas/webhook-config-insecure-ssl"
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads)
                    the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
                name:
                  type: string
                  example: '"web"'
            examples:
              default:
                value:
                  active: true
                  events:
                  - pull_request
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-hook"
              examples:
                default:
                  "$ref": "#/components/examples/org-hook-2"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    delete:
      summary: Delete an organization webhook
      description: ''
      tags:
      - orgs
      operationId: orgs/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#delete-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}/config":
    get:
      summary: Get a webhook configuration for an organization
      description: |-
        Returns the webhook configuration for an organization. To get more information about the webhook, including the `active` state and `events`, use "[Get an organization webhook ](/rest/orgs/webhooks#get-an-organization-webhook)."

        Access tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:read` permission.
      tags:
      - orgs
      operationId: orgs/get-webhook-config-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/webhook-config"
              examples:
                default:
                  "$ref": "#/components/examples/webhook-config"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for an organization
      description: |-
        Updates the webhook configuration for an organization. To update more information about the webhook, including the `active` state and `events`, use "[Update an organization webhook ](/rest/orgs/webhooks#update-an-organization-webhook)."

        Access tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:write` permission.
      tags:
      - orgs
      operationId: orgs/update-webhook-config-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  "$ref": "#/components/schemas/webhook-config-url"
                content_type:
                  "$ref": "#/components/schemas/webhook-config-content-type"
                secret:
                  "$ref": "#/components/schemas/webhook-config-secret"
                insecure_ssl:
                  "$ref": "#/components/schemas/webhook-config-insecure-ssl"
            examples:
              default:
                summary: Update an existing webhook
                value:
                  url: http://example.com/webhook
                  content_type: json
                  insecure_ssl: '0'
                  secret: "********"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/webhook-config"
              examples:
                default:
                  "$ref": "#/components/examples/webhook-config"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}/deliveries":
    get:
      summary: List deliveries for an organization webhook
      description: Returns a list of webhook deliveries for a webhook configured in
        an organization.
      tags:
      - orgs
      operationId: orgs/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#list-deliveries-for-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/cursor"
      - name: redelivery
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/hook-delivery-item"
              examples:
                default:
                  "$ref": "#/components/examples/hook-delivery-items"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}":
    get:
      summary: Get a webhook delivery for an organization webhook
      description: Returns a delivery for a webhook configured in an organization.
      tags:
      - orgs
      operationId: orgs/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#get-a-webhook-delivery-for-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      - "$ref": "#/components/parameters/delivery-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook-delivery"
              examples:
                default:
                  "$ref": "#/components/examples/hook-delivery"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts":
    post:
      summary: Redeliver a delivery for an organization webhook
      description: Redeliver a delivery for a webhook configured in an organization.
      tags:
      - orgs
      operationId: orgs/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#redeliver-a-delivery-for-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      - "$ref": "#/components/parameters/delivery-id"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/hooks/{hook_id}/pings":
    post:
      summary: Ping an organization webhook
      description: This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event)
        to be sent to the hook.
      tags:
      - orgs
      operationId: orgs/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#ping-an-organization-webhook
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  "/orgs/{org}/installation":
    get:
      summary: Get an organization installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the organization's installation information.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-org-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#get-an-organization-installation-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/orgs/{org}/installations":
    get:
      summary: List app installations for an organization
      description: Lists all GitHub Apps in an organization. The installation count
        includes all GitHub Apps installed on repositories in the organization. You
        must be an organization owner with `admin:read` scope to use this endpoint.
      tags:
      - orgs
      operationId: orgs/list-app-installations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-app-installations-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation-response"
              examples:
                default:
                  "$ref": "#/components/examples/installation-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  "/orgs/{org}/interaction-limits":
    get:
      summary: Get interaction restrictions for an organization
      description: Shows which type of GitHub user can interact with this organization
        and when the restriction expires. If there is no restrictions, you will see
        an empty response.
      tags:
      - interactions
      operationId: interactions/get-restrictions-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/orgs#get-interaction-restrictions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/interaction-limit-response-any"
              examples:
                default:
                  "$ref": "#/components/examples/interaction-limit-response"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: interactions
        subcategory: orgs
    put:
      summary: Set interaction restrictions for an organization
      description: Temporarily restricts interactions to a certain type of GitHub
        user in any public repository in the given organization. You must be an organization
        owner to set these restrictions. Setting the interaction limit at the organization
        level will overwrite any interaction limits that are set for individual repositories
        owned by the organization.
      tags:
      - interactions
      operationId: interactions/set-restrictions-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/orgs#set-interaction-restrictions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/interaction-limit"
            examples:
              default:
                value:
                  limit: collaborators_only
                  expiry: one_month
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/interaction-limit-response"
              examples:
                default:
                  "$ref": "#/components/examples/interaction-limit-response"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: interactions
        subcategory: orgs
    delete:
      summary: Remove interaction restrictions for an organization
      description: Removes all interaction restrictions from public repositories in
        the given organization. You must be an organization owner to remove restrictions.
      tags:
      - interactions
      operationId: interactions/remove-restrictions-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/orgs#remove-interaction-restrictions-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: interactions
        subcategory: orgs
  "/orgs/{org}/invitations":
    get:
      summary: List pending organization invitations
      description: 'The return hash contains a `role` field which refers to the Organization
        Invitation role and will be one of the following values: `direct_member`,
        `admin`, `billing_manager`, or `hiring_manager`. If the invitee is not a GitHub
        member, the `login` field in the return hash will be `null`.'
      tags:
      - orgs
      operationId: orgs/list-pending-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-pending-organization-invitations
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - name: role
        description: Filter invitations by their member role.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - admin
          - direct_member
          - billing_manager
          - hiring_manager
          default: all
      - name: invitation_source
        description: Filter invitations by their invitation source.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - member
          - scim
          default: all
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/organization-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    post:
      summary: Create an organization invitation
      description: |-
        Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - orgs
      operationId: orgs/create-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#create-an-organization-invitation
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invitee_id:
                  type: integer
                  description: "**Required unless you provide `email`**. GitHub user
                    ID for the person you are inviting."
                email:
                  type: string
                  description: "**Required unless you provide `invitee_id`**. Email
                    address of the person you are inviting, which can be an existing
                    GitHub user."
                role:
                  type: string
                  description: "The role for the new member. \n * `admin` - Organization
                    owners with full administrative rights to the organization and
                    complete access to all repositories and teams.  \n * `direct_member`
                    - Non-owner organization members with ability to see other members
                    and join teams by invitation.  \n * `billing_manager` - Non-owner
                    organization members with ability to manage the billing settings
                    of your organization."
                  enum:
                  - admin
                  - direct_member
                  - billing_manager
                  default: direct_member
                team_ids:
                  type: array
                  description: Specify IDs for the teams you want to invite new members
                    to.
                  items:
                    type: integer
            examples:
              default:
                value:
                  email: octocat@github.com
                  role: direct_member
                  team_ids:
                  - 12
                  - 26
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/organization-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/organization-invitation"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/invitations/{invitation_id}":
    delete:
      summary: Cancel an organization invitation
      description: |-
        Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications).
      tags:
      - orgs
      operationId: orgs/cancel-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#cancel-an-organization-invitation
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/invitation-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/invitations/{invitation_id}/teams":
    get:
      summary: List organization invitation teams
      description: List all teams associated with an invitation. In order to see invitations
        in an organization, the authenticated user must be an organization owner.
      tags:
      - orgs
      operationId: orgs/list-invitation-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-organization-invitation-teams
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/invitation-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/issues":
    get:
      summary: List organization issues assigned to the authenticated user
      description: |-
        List issues in an organization assigned to the authenticated user.

        **Note**: GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/pulls/pulls#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#list-organization-issues-assigned-to-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: filter
        description: Indicates which sorts of issues to return. `assigned` means issues
          assigned to you. `created` means issues created by you. `mentioned` means
          issues mentioning you. `subscribed` means issues you're subscribed to updates
          for. `all` or `repos` means all issues you can see, regardless of participation
          or creation.
        in: query
        required: false
        schema:
          type: string
          enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - repos
          - all
          default: assigned
      - name: state
        description: Indicates the state of the issues to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-with-repo-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: issues
  "/orgs/{org}/members":
    get:
      summary: List organization members
      description: List all users who are members of an organization. If the authenticated
        user is also a member of this organization then both concealed and public
        members will be returned.
      tags:
      - orgs
      operationId: orgs/list-members
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-organization-members
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: filter
        description: Filter members returned in the list. `2fa_disabled` means that
          only members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication)
          enabled will be returned. This options is only available for organization
          owners.
        in: query
        required: false
        schema:
          type: string
          enum:
          - 2fa_disabled
          - all
          default: all
      - name: role
        description: Filter members returned by their role.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - admin
          - member
          default: all
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/members/{username}":
    get:
      summary: Check organization membership for a user
      description: Check if a user is, publicly or privately, a member of the organization.
      tags:
      - orgs
      operationId: orgs/check-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#check-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if requester is an organization member and user is
            a member
        '302':
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members/pezra
              schema:
                type: string
        '404':
          description: Not Found if requester is an organization member and user is
            not a member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    delete:
      summary: Remove an organization member
      description: Removing a user from this list will remove them from all teams
        and they will no longer have any access to the organization's repositories.
      tags:
      - orgs
      operationId: orgs/remove-member
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#remove-an-organization-member
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/members/{username}/codespaces":
    get:
      summary: List codespaces for a user in organization
      description: |-
        Lists the codespaces that a member of an organization has for repositories in that organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-codespaces-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#list-codespaces-for-a-user-in-organization
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-list"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
  "/orgs/{org}/members/{username}/codespaces/{codespace_name}":
    delete:
      summary: Delete a codespace from the organization
      description: |-
        Deletes a user's codespace.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/delete-from-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#delete-a-codespace-from-the-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
  "/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop":
    post:
      summary: Stop a codespace for an organization user
      description: |-
        Stops a user's codespace.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/stop-in-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/organizations#stop-a-codespace-for-an-organization-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: organizations
  "/orgs/{org}/members/{username}/copilot":
    get:
      summary: Get Copilot for Business seat assignment details for a user
      description: |-
        **Note**: This endpoint is in beta and is subject to change.

        Gets the GitHub Copilot for Business seat assignment details for a member of an organization who currently has access to GitHub Copilot.

        Organization owners and members with admin permissions can view GitHub Copilot seat assignment details for members in their organization. You must authenticate using an access token with the `manage_billing:copilot` scope to use this endpoint.
      tags:
      - copilot
      operationId: copilot/get-copilot-seat-details-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/copilot/copilot-for-business#get-copilot-for-business-seat-assignment-details-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: The user's GitHub Copilot seat details, including usage.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/copilot-seat-details"
              examples:
                default:
                  "$ref": "#/components/examples/copilot-seat-detail-active"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Copilot for Business is not enabled for this organization or
            the user has a pending organization invitation.
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: copilot
        subcategory: copilot-for-business
  "/orgs/{org}/memberships/{username}":
    get:
      summary: Get organization membership for a user
      description: In order to get a user's membership with an organization, the authenticated
        user must be an organization member. The `state` parameter in the response
        can be used to identify the user's membership status.
      tags:
      - orgs
      operationId: orgs/get-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#get-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                response-if-user-has-an-active-admin-membership-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    put:
      summary: Set organization membership for a user
      description: "Only authenticated organization owners can add a member to the
        organization or update the member's role.\n\n*   If the authenticated user
        is _adding_ a member to the organization, the invited user will receive an
        email inviting them to the organization. The user's [membership status](https://docs.github.com/rest/orgs/members#get-organization-membership-for-a-user)
        will be `pending` until they accept the invitation.\n    \n*   Authenticated
        users can _update_ a user's membership by passing the `role` parameter. If
        the authenticated user changes a member's role to `admin`, the affected user
        will receive an email notifying them that they've been made an organization
        owner. If the authenticated user changes an owner's role to `member`, no email
        will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user
        is limited to 50 organization invitations per 24 hour period. If the organization
        is more than one month old or on a paid plan, the limit is 500 invitations
        per 24 hour period."
      tags:
      - orgs
      operationId: orgs/set-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#set-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: "The role to give the user in the organization. Can
                    be one of:  \n * `admin` - The user will become an owner of the
                    organization.  \n * `member` - The user will become a non-owner
                    member of the organization."
                  enum:
                  - admin
                  - member
                  default: member
            examples:
              default:
                summary: Set an organization membership role for a user
                value:
                  role: member
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                response-if-user-already-had-membership-with-organization:
                  "$ref": "#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    delete:
      summary: Remove organization membership for a user
      description: |-
        In order to remove a user's membership with an organization, the authenticated user must be an organization owner.

        If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.
      tags:
      - orgs
      operationId: orgs/remove-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#remove-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/migrations":
    get:
      summary: List organization migrations
      description: |-
        Lists the most recent migrations, including both exports (which can be started through the REST API) and imports (which cannot be started using the REST API).

        A list of `repositories` is only returned for export migrations.
      tags:
      - migrations
      operationId: migrations/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#list-organization-migrations
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - name: exclude
        description: Exclude attributes from the API response to improve performance
        in: query
        schema:
          type: array
          items:
            description: Allowed values that can be passed to the exclude param.
            enum:
            - repositories
            example: repositories
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/migration"
              examples:
                default:
                  "$ref": "#/components/examples/migration-with-short-org-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
    post:
      summary: Start an organization migration
      description: Initiates the generation of a migration archive.
      tags:
      - migrations
      operationId: migrations/start-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#start-an-organization-migration
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repositories:
                  type: array
                  description: A list of arrays indicating which repositories should
                    be migrated.
                  items:
                    type: string
                lock_repositories:
                  type: boolean
                  example: true
                  description: Indicates whether repositories should be locked (to
                    prevent manipulation) while migrating data.
                  default: false
                exclude_metadata:
                  type: boolean
                  description: Indicates whether metadata should be excluded and only
                    git source should be included for the migration.
                  default: false
                exclude_git_data:
                  type: boolean
                  description: Indicates whether the repository git data should be
                    excluded from the migration.
                  default: false
                exclude_attachments:
                  type: boolean
                  example: true
                  description: Indicates whether attachments should be excluded from
                    the migration (to reduce migration archive file size).
                  default: false
                exclude_releases:
                  type: boolean
                  example: true
                  description: Indicates whether releases should be excluded from
                    the migration (to reduce migration archive file size).
                  default: false
                exclude_owner_projects:
                  type: boolean
                  example: true
                  description: Indicates whether projects owned by the organization
                    or users should be excluded. from the migration.
                  default: false
                org_metadata_only:
                  type: boolean
                  example: true
                  description: Indicates whether this should only include organization
                    metadata (repositories array should be empty and will ignore other
                    flags).
                  default: false
                exclude:
                  type: array
                  description: Exclude related items from being returned in the response
                    in order to improve performance of the request.
                  items:
                    type: string
                    enum:
                    - repositories
              required:
              - repositories
            examples:
              default:
                value:
                  repositories:
                  - github/Hello-World
                  lock_repositories: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/migration"
              examples:
                default:
                  "$ref": "#/components/examples/migration-with-short-org-2"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  "/orgs/{org}/migrations/{migration_id}":
    get:
      summary: Get an organization migration status
      description: |-
        Fetches the status of a migration.

        The `state` of a migration can be one of the following values:

        *   `pending`, which means the migration hasn't started yet.
        *   `exporting`, which means the migration is in progress.
        *   `exported`, which means the migration finished successfully.
        *   `failed`, which means the migration failed.
      tags:
      - migrations
      operationId: migrations/get-status-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#get-an-organization-migration-status
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/migration-id"
      - name: exclude
        description: Exclude attributes from the API response to improve performance
        in: query
        schema:
          type: array
          items:
            description: Allowed values that can be passed to the exclude param.
            enum:
            - repositories
            example: repositories
            type: string
      responses:
        '200':
          description: |-
            *   `pending`, which means the migration hasn't started yet.
            *   `exporting`, which means the migration is in progress.
            *   `exported`, which means the migration finished successfully.
            *   `failed`, which means the migration failed.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/migration"
              examples:
                default:
                  "$ref": "#/components/examples/migration-with-short-org"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  "/orgs/{org}/migrations/{migration_id}/archive":
    get:
      summary: Download an organization migration archive
      description: Fetches the URL to a migration archive.
      tags:
      - migrations
      operationId: migrations/download-archive-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#download-an-organization-migration-archive
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/migration-id"
      responses:
        '302':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
    delete:
      summary: Delete an organization migration archive
      description: Deletes a previous migration archive. Migration archives are automatically
        deleted after seven days.
      tags:
      - migrations
      operationId: migrations/delete-archive-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#delete-an-organization-migration-archive
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/migration-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock":
    delete:
      summary: Unlock an organization repository
      description: Unlocks a repository that was locked for migration. You should
        unlock each migrated repository and [delete them](https://docs.github.com/rest/repos/repos#delete-a-repository)
        when the migration is complete and you no longer need the source data.
      tags:
      - migrations
      operationId: migrations/unlock-repo-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#unlock-an-organization-repository
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/migration-id"
      - "$ref": "#/components/parameters/repo-name"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  "/orgs/{org}/migrations/{migration_id}/repositories":
    get:
      summary: List repositories in an organization migration
      description: List all the repositories for this organization migration.
      tags:
      - migrations
      operationId: migrations/list-repos-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/orgs#list-repositories-in-an-organization-migration
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/migration-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: orgs
  "/orgs/{org}/outside_collaborators":
    get:
      summary: List outside collaborators for an organization
      description: List all users who are outside collaborators of an organization.
      tags:
      - orgs
      operationId: orgs/list-outside-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/outside-collaborators#list-outside-collaborators-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: filter
        description: Filter the list of outside collaborators. `2fa_disabled` means
          that only outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication)
          enabled will be returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - 2fa_disabled
          - all
          default: all
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
  "/orgs/{org}/outside_collaborators/{username}":
    put:
      summary: Convert an organization member to outside collaborator
      description: When an organization member is converted to an outside collaborator,
        they'll only have access to the repositories that their current team membership
        allows. The user will no longer be a member of the organization. For more
        information, see "[Converting an organization member to an outside collaborator](https://docs.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)".
        Converting an organization member to an outside collaborator may be restricted
        by enterprise administrators. For more information, see "[Enforcing repository
        management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
      tags:
      - orgs
      operationId: orgs/convert-member-to-outside-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/outside-collaborators#convert-an-organization-member-to-outside-collaborator
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                async:
                  type: boolean
                  description: When set to `true`, the request will be performed asynchronously.
                    Returns a 202 status code when the job is successfully queued.
                  default: false
            examples:
              '202':
                summary: Status code 202, asynchronous request
                value:
                  async: true
              '204':
                summary: Status code 204, synchronous request
      responses:
        '202':
          description: User is getting converted asynchronously
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
              examples:
                '202': {}
        '204':
          description: User was converted
        '403':
          description: Forbidden if user is the last owner of the organization, not
            a member of the organization, or if the enterprise enforces a policy for
            inviting outside collaborators. For more information, see "[Enforcing
            repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
    delete:
      summary: Remove outside collaborator from an organization
      description: Removing a user from this list will remove them from all the organization's
        repositories.
      tags:
      - orgs
      operationId: orgs/remove-outside-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '422':
          description: Unprocessable Entity if user is a member of the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-user-is-a-member-of-the-organization:
                  value:
                    message: You cannot specify an organization member to remove as
                      an outside collaborator.
                    documentation_url: https://docs.github.com/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
  "/orgs/{org}/packages":
    get:
      summary: List packages for an organization
      description: |-
        Lists packages in an organization readable by the user.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/list-packages-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#list-packages-for-an-organization
      parameters:
      - name: package_type
        description: The type of supported package. Packages in GitHub's Gradle registry
          have the type `maven`. Docker images pushed to GitHub's Container registry
          (`ghcr.io`) have the type `container`. You can use the type `docker` to
          find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`),
          even if these have now been migrated to the Container registry.
        in: query
        required: true
        schema:
          type: string
          enum:
          - npm
          - maven
          - rubygems
          - docker
          - nuget
          - container
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/package-visibility"
      - name: page
        description: Page number of the results to fetch.
        in: query
        schema:
          type: integer
          default: 1
      - name: per_page
        description: The number of results per page (max 100).
        in: query
        schema:
          type: integer
          default: 30
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/packages-for-org"
        '400':
          "$ref": "#/components/responses/package_es_list_error"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/packages/{package_type}/{package_name}":
    get:
      summary: Get a package for an organization
      description: |-
        Gets a specific package in an organization.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-package-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-a-package-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/package-org"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package for an organization
      description: |-
        Deletes an entire package in an organization. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `read:packages` and `delete:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package you want to delete. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/delete-package-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#delete-a-package-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/packages/{package_type}/{package_name}/restore":
    post:
      summary: Restore a package for an organization
      description: |-
        Restores an entire package in an organization.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `read:packages` and `write:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package you want to restore. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/restore-package-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#restore-a-package-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      - name: token
        description: package token
        schema:
          type: string
        required: false
        in: query
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/packages/{package_type}/{package_name}/versions":
    get:
      summary: List package versions for a package owned by an organization
      description: |-
        Lists package versions for a package owned by an organization.

        If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#list-package-versions-for-a-package-owned-by-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - name: state
        in: query
        required: false
        description: The state of the package, either active or deleted.
        schema:
          type: string
          enum:
          - active
          - deleted
          default: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package-version"
              examples:
                default:
                  "$ref": "#/components/examples/package-versions-for-org"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}":
    get:
      summary: Get a package version for an organization
      description: |-
        Gets a specific package version in an organization.

        You must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-package-version-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-a-package-version-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/package-version"
              examples:
                default:
                  "$ref": "#/components/examples/package-version-org"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete package version for an organization
      description: |-
        Deletes a specific package version in an organization. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `read:packages` and `delete:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package whose version you want to delete. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/delete-package-version-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#delete-package-version-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore":
    post:
      summary: Restore package version for an organization
      description: |-
        Restores a specific package version in an organization.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `read:packages` and `write:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package whose version you want to restore. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/restore-package-version-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#restore-package-version-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/orgs/{org}/personal-access-token-requests":
    get:
      summary: List requests to access organization resources with fine-grained personal
        access tokens
      description: |-
        Lists requests from organization members to access organization resources with a fine-grained personal access token. Only GitHub Apps can call this API,
        using the `organization_personal_access_token_requests: read` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/list-pat-grant-requests
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-requests-to-access-organization-resources-with-fine-grained-personal-access-tokens
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/personal-access-token-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/personal-access-token-owner"
      - "$ref": "#/components/parameters/personal-access-token-repository"
      - "$ref": "#/components/parameters/personal-access-token-permission"
      - "$ref": "#/components/parameters/personal-access-token-before"
      - "$ref": "#/components/parameters/personal-access-token-after"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-programmatic-access-grant-request"
              examples:
                default:
                  "$ref": "#/components/examples/org-pat-grant-request-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
    post:
      summary: Review requests to access organization resources with fine-grained
        personal access tokens
      description: |-
        Approves or denies multiple pending requests to access organization resources via a fine-grained personal access token. Only GitHub Apps can call this API,
        using the `organization_personal_access_token_requests: write` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/review-pat-grant-requests-in-bulk
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#review-requests-to-access-organization-resources-with-fine-grained-personal-access-tokens
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pat_request_ids:
                  type: array
                  description: Unique identifiers of the requests for access via fine-grained
                    personal access token. Must be formed of between 1 and 100 `pat_request_id`
                    values.
                  items:
                    type: integer
                  minItems: 1
                  maxItems: 100
                action:
                  type: string
                  description: Action to apply to the requests.
                  enum:
                  - approve
                  - deny
                reason:
                  type: string
                  description: Reason for approving or denying the requests. Max 1024
                    characters.
                  maxLength: 1024
                  nullable: true
              required:
              - action
            examples:
              '204':
                summary: Example of denying a request
                value:
                  pat_request_ids:
                  - 42
                  - 73
                  action: deny
                  reason: Access is too broad.
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  "/orgs/{org}/personal-access-token-requests/{pat_request_id}":
    post:
      summary: Review a request to access organization resources with a fine-grained
        personal access token
      description: |-
        Approves or denies a pending request to access organization resources via a fine-grained personal access token. Only GitHub Apps can call this API,
        using the `organization_personal_access_token_requests: write` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/review-pat-grant-request
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#review-a-request-to-access-organization-resources-with-a-fine-grained-personal-access-token
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: pat_request_id
        in: path
        description: Unique identifier of the request for access via fine-grained
          personal access token.
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: Action to apply to the request.
                  enum:
                  - approve
                  - deny
                reason:
                  type: string
                  description: Reason for approving or denying the request. Max 1024
                    characters.
                  maxLength: 1024
                  nullable: true
              required:
              - action
            examples:
              '204':
                summary: Example of denying a request
                value:
                  action: deny
                  reason: This request is denied because the access is too broad.
      responses:
        '204':
          "$ref": "#/components/responses/no_content"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  "/orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories":
    get:
      summary: List repositories requested to be accessed by a fine-grained personal
        access token
      description: |-
        Lists the repositories a fine-grained personal access token request is requesting access to. Only GitHub Apps can call this API,
        using the `organization_personal_access_token_requests: read` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/list-pat-grant-request-repositories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-repositories-requested-to-be-accessed-by-a-fine-grained-personal-access-token
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: pat_request_id
        in: path
        description: Unique identifier of the request for access via fine-grained
          personal access token.
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  "/orgs/{org}/personal-access-tokens":
    get:
      summary: List fine-grained personal access tokens with access to organization
        resources
      description: |-
        Lists approved fine-grained personal access tokens owned by organization members that can access organization resources. Only GitHub Apps can call this API,
        using the `organization_personal_access_tokens: read` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/list-pat-grants
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-fine-grained-personal-access-tokens-with-access-to-organization-resources
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/personal-access-token-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/personal-access-token-owner"
      - "$ref": "#/components/parameters/personal-access-token-repository"
      - "$ref": "#/components/parameters/personal-access-token-permission"
      - "$ref": "#/components/parameters/personal-access-token-before"
      - "$ref": "#/components/parameters/personal-access-token-after"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-programmatic-access-grant"
              examples:
                default:
                  "$ref": "#/components/examples/org-pat-grant-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
    post:
      summary: Update the access to organization resources via fine-grained personal
        access tokens
      description: |-
        Updates the access organization members have to organization resources via fine-grained personal access tokens. Limited to revoking a token's existing access. Only GitHub Apps can call this API,
        using the `organization_personal_access_tokens: write` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/update-pat-accesses
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#update-the-access-to-organization-resources-via-fine-grained-personal-access-tokens
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: Action to apply to the fine-grained personal access
                    token.
                  enum:
                  - revoke
                pat_ids:
                  description: The IDs of the fine-grained personal access tokens.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the fine-grained personal access
                      token.
                  minItems: 1
                  maxItems: 100
              required:
              - action
              - pat_ids
            examples:
              '204':
                summary: Example of revoking a fine-grained personal access token.
                value:
                  action: revoke
                  pat_ids:
                  - 1296269
                  - 1296280
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  "/orgs/{org}/personal-access-tokens/{pat_id}":
    post:
      summary: Update the access a fine-grained personal access token has to organization
        resources
      description: |-
        Updates the access an organization member has to organization resources via a fine-grained personal access token. Limited to revoking the token's existing access. Limited to revoking a token's existing access. Only GitHub Apps can call this API,
        using the `organization_personal_access_tokens: write` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/update-pat-access
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#update-the-access-a-fine-grained-personal-access-token-has-to-organization-resources
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/fine-grained-personal-access-token-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: Action to apply to the fine-grained personal access
                    token.
                  enum:
                  - revoke
              required:
              - action
            examples:
              '204':
                summary: Example of revoking a fine-grained personal access token.
                value:
                  action: revoke
      responses:
        '204':
          "$ref": "#/components/responses/no_content"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  "/orgs/{org}/personal-access-tokens/{pat_id}/repositories":
    get:
      summary: List repositories a fine-grained personal access token has access to
      description: |-
        Lists the repositories a fine-grained personal access token has access to. Only GitHub Apps can call this API,
        using the `organization_personal_access_tokens: read` permission.

        **Note**: Fine-grained PATs are in public beta. Related APIs, events, and functionality are subject to change.
      tags:
      - orgs
      operationId: orgs/list-pat-grant-repositories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-repositories-a-fine-grained-personal-access-token-has-access-to
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: pat_id
        in: path
        description: Unique identifier of the fine-grained personal access token.
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  "/orgs/{org}/projects":
    get:
      summary: List organization projects
      description: Lists the projects in an organization. Returns a `404 Not Found`
        status if projects are disabled in the organization. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#list-organization-projects
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: state
        description: Indicates the state of the projects to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
    post:
      summary: Create an organization project
      description: Creates an organization project board. Returns a `410 Gone` status
        if projects are disabled in the organization or if the organization does not
        have existing classic projects. If you do not have sufficient privileges to
        perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
      - projects
      operationId: projects/create-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#create-an-organization-project
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
              - name
            examples:
              default:
                value:
                  name: Organization Roadmap
                  body: High-level roadmap for the upcoming year.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-2"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
  "/orgs/{org}/public_members":
    get:
      summary: List public organization members
      description: Members of an organization can choose to have their membership
        publicized or not.
      tags:
      - orgs
      operationId: orgs/list-public-members
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-public-organization-members
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/orgs/{org}/public_members/{username}":
    get:
      summary: Check public organization membership for a user
      description: Check if the provided user is a public member of the organization.
      tags:
      - orgs
      operationId: orgs/check-public-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#check-public-organization-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if user is a public member
        '404':
          description: Not Found if user is not a public member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    put:
      summary: Set public organization membership for the authenticated user
      description: |-
        The user can publicize their own membership. (A user cannot publicize the membership for another user.)

        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
      - orgs
      operationId: orgs/set-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#set-public-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: members
    delete:
      summary: Remove public organization membership for the authenticated user
      description: Removes the public membership for the authenticated user from the
        specified organization, unless public visibility is enforced by default.
      tags:
      - orgs
      operationId: orgs/remove-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#remove-public-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: members
  "/orgs/{org}/repos":
    get:
      summary: List organization repositories
      description: |-
        Lists repositories for the specified organization.

        **Note:** In order to see the `security_and_analysis` block for a repository you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
      tags:
      - repos
      operationId: repos/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-organization-repositories
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: type
        description: Specifies the types of repositories you want returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - public
          - private
          - forks
          - sources
          - member
          default: all
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: created
      - name: direction
        description: 'The order to sort by. Default: `asc` when using `full_name`,
          otherwise `desc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    post:
      summary: Create an organization repository
      description: |-
        Creates a new repository in the specified organization. The authenticated user must be a member of the organization.

        **OAuth scope requirements**

        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
        *   `repo` scope to create a private repository
      tags:
      - repos
      operationId: repos/create-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-an-organization-repository
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: Whether the repository is private.
                  default: false
                visibility:
                  type: string
                  description: The visibility of the repository.
                  enum:
                  - public
                  - private
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository
                    or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository
                    or `false` to disable them. **Note:** If you're creating a repository
                    in an organization that has disabled repository projects, the
                    default is `false`, and if you pass `true`, the API returns an
                    error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository
                    or `false` to disable it.
                  default: true
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template
                    repository or `false` to prevent it.
                  default: false
                team_id:
                  type: integer
                  description: The id of the team that will be granted access to this
                    repository. This is only valid when creating a repository in an
                    organization.
                auto_init:
                  type: boolean
                  description: Pass `true` to create an initial commit with empty
                    README.
                  default: false
                gitignore_template:
                  type: string
                  description: Desired language or platform [.gitignore template](https://github.com/github/gitignore)
                    to apply. Use the name of the template without the extension.
                    For example, "Haskell".
                license_template:
                  type: string
                  description: Choose an [open source license template](https://choosealicense.com/)
                    that best suits your needs, and then use the [license keyword](https://docs.github.com/articles/licensing-a-repository/#searching-github-by-license-type)
                    as the `license_template` string. For example, "mit" or "mpl-2.0".
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests,
                    or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a
                    merge commit, or `false` to prevent merging pull requests with
                    merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests,
                    or `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: Either `true` to allow auto-merge on pull requests,
                    or `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head
                    branches when pull requests are merged, or `false` to prevent
                    automatic deletion. **The authenticated user must be an organization
                    owner to set this property to `true`.**
                  default: false
                use_squash_pr_title_as_default:
                  type: boolean
                  description: Either `true` to allow squash-merge commits to use
                    pull request title, or `false` to use commit message. **This property
                    has been deprecated. Please use `squash_merge_commit_title` instead.
                  default: false
                  deprecated: true
                squash_merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - COMMIT_OR_PR_TITLE
                  description: |-
                    The default value for a squash merge commit title:

                    - `PR_TITLE` - default to the pull request's title.
                    - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
                squash_merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - COMMIT_MESSAGES
                  - BLANK
                  description: |-
                    The default value for a squash merge commit message:

                    - `PR_BODY` - default to the pull request's body.
                    - `COMMIT_MESSAGES` - default to the branch's commit messages.
                    - `BLANK` - default to a blank commit message.
                merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - MERGE_MESSAGE
                  description: |-
                    The default value for a merge commit title.

                    - `PR_TITLE` - default to the pull request's title.
                    - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
                merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - PR_TITLE
                  - BLANK
                  description: |-
                    The default value for a merge commit message.

                    - `PR_TITLE` - default to the pull request's title.
                    - `PR_BODY` - default to the pull request's body.
                    - `BLANK` - default to a blank commit message.
              required:
              - name
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repository
                  homepage: https://github.com
                  private: false
                  has_issues: true
                  has_projects: true
                  has_wiki: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/orgs/{org}/rulesets":
    get:
      summary: Get all organization repository rulesets
      description: Get all the repository rulesets for an organization.
      tags:
      - repos
      operationId: repos/get-org-rulesets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#get-all-organization-repository-rulesets
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/org-ruleset-items"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
    post:
      summary: Create an organization repository ruleset
      description: Create a repository ruleset for an organization.
      tags:
      - repos
      operationId: repos/create-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#create-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset.
                  enum:
                  - branch
                  - tag
                enforcement:
                  "$ref": "#/components/schemas/repository-rule-enforcement"
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    "$ref": "#/components/schemas/repository-ruleset-bypass-actor"
                conditions:
                  "$ref": "#/components/schemas/org-ruleset-conditions"
                rules:
                  type: array
                  description: An array of rules within the ruleset.
                  items:
                    "$ref": "#/components/schemas/repository-rule"
              required:
              - name
              - enforcement
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                    repository_name:
                      include:
                      - important_repository
                      - another_important_repository
                      exclude:
                      - unimportant_repository
                      protected: true
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/org-ruleset"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
  "/orgs/{org}/rulesets/rule-suites":
    get:
      summary: List organization rule suites
      description: |-
        Lists suites of rule evaluations at the organization level.
        For more information, see "[Managing rulesets for repositories in your organization](https://docs.github.com/organizations/managing-organization-settings/managing-rulesets-for-repositories-in-your-organization#viewing-insights-for-rulesets)."
      tags:
      - repos
      operationId: repos/get-org-rule-suites
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rule-suites#list-organization-rule-suites
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/repository-name-in-query"
      - "$ref": "#/components/parameters/time-period"
      - "$ref": "#/components/parameters/actor-name-in-query"
      - "$ref": "#/components/parameters/rule-suite-result"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rule-suites"
              examples:
                default:
                  "$ref": "#/components/examples/rule-suite-items"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rule-suites
  "/orgs/{org}/rulesets/rule-suites/{rule_suite_id}":
    get:
      summary: Get an organization rule suite
      description: |-
        Gets information about a suite of rule evaluations from within an organization.
        For more information, see "[Managing rulesets for repositories in your organization](https://docs.github.com/organizations/managing-organization-settings/managing-rulesets-for-repositories-in-your-organization#viewing-insights-for-rulesets)."
      tags:
      - repos
      operationId: repos/get-org-rule-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rule-suites#get-an-organization-rule-suite
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/rule-suite-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rule-suite"
              examples:
                default:
                  "$ref": "#/components/examples/rule-suite"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rule-suites
  "/orgs/{org}/rulesets/{ruleset_id}":
    get:
      summary: Get an organization repository ruleset
      description: Get a repository ruleset for an organization.
      tags:
      - repos
      operationId: repos/get-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#get-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/org-ruleset"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
    put:
      summary: Update an organization repository ruleset
      description: Update a ruleset for an organization.
      tags:
      - repos
      operationId: repos/update-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#update-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Request body
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset.
                  enum:
                  - branch
                  - tag
                enforcement:
                  "$ref": "#/components/schemas/repository-rule-enforcement"
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    "$ref": "#/components/schemas/repository-ruleset-bypass-actor"
                conditions:
                  "$ref": "#/components/schemas/org-ruleset-conditions"
                rules:
                  description: An array of rules within the ruleset.
                  type: array
                  items:
                    "$ref": "#/components/schemas/repository-rule"
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                    repository_name:
                      include:
                      - important_repository
                      - another_important_repository
                      exclude:
                      - unimportant_repository
                      protected: true
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/org-ruleset"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
    delete:
      summary: Delete an organization repository ruleset
      description: Delete a ruleset for an organization.
      tags:
      - repos
      operationId: repos/delete-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#delete-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/org"
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
  "/orgs/{org}/secret-scanning/alerts":
    get:
      summary: List secret scanning alerts for an organization
      description: |-
        Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest.
        To use this endpoint, you must be an administrator or security manager for the organization, and you must use an access token with the `repo` scope or `security_events` scope.
        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
      tags:
      - secret-scanning
      operationId: secret-scanning/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/secret-scanning-alert-state"
      - "$ref": "#/components/parameters/secret-scanning-alert-secret-type"
      - "$ref": "#/components/parameters/secret-scanning-alert-resolution"
      - "$ref": "#/components/parameters/secret-scanning-alert-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/secret-scanning-pagination-before-org-repo"
      - "$ref": "#/components/parameters/secret-scanning-pagination-after-org-repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-secret-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/organization-secret-scanning-alert-list"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  "/orgs/{org}/security-advisories":
    get:
      summary: List repository security advisories for an organization
      description: |-
        Lists repository security advisories for an organization.

        To use this endpoint, you must be an owner or security manager for the organization, and you must use an access token with the `repo` scope or `repository_advisories:write` permission.
      tags:
      - security-advisories
      operationId: security-advisories/list-org-repository-advisories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#list-repository-security-advisories-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/direction"
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - published
          default: created
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - name: per_page
        description: The number of advisories to return per page.
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 30
      - name: state
        description: Filter by the state of the repository advisories. Only advisories
          of this state will be returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - triage
          - draft
          - published
          - closed
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/list-repository-advisories"
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
  "/orgs/{org}/security-managers":
    get:
      summary: List security manager teams
      description: |-
        Lists teams that are security managers for an organization. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

        To use this endpoint, you must be an administrator or security manager for the organization, and you must use an access token with the `read:org` scope.

        GitHub Apps must have the `administration` organization read permission to use this endpoint.
      tags:
      - orgs
      operationId: orgs/list-security-manager-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-simple"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
  "/orgs/{org}/security-managers/teams/{team_slug}":
    put:
      summary: Add a security manager team
      description: |-
        Adds a team as a security manager for an organization. For more information, see "[Managing security for an organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization) for an organization."

        To use this endpoint, you must be an administrator for the organization, and you must use an access token with the `write:org` scope.

        GitHub Apps must have the `administration` organization read-write permission to use this endpoint.
      tags:
      - orgs
      operationId: orgs/add-security-manager-team
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      responses:
        '204':
          description: Response
        '409':
          description: The organization has reached the maximum number of security
            manager teams.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
    delete:
      summary: Remove a security manager team
      description: |-
        Removes the security manager role from a team for an organization. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization) team from an organization."

        To use this endpoint, you must be an administrator for the organization, and you must use an access token with the `admin:org` scope.

        GitHub Apps must have the `administration` organization read-write permission to use this endpoint.
      tags:
      - orgs
      operationId: orgs/remove-security-manager-team
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
  "/orgs/{org}/settings/billing/actions":
    get:
      summary: Get GitHub Actions billing for an organization
      description: |-
        Gets the summary of the free and paid GitHub Actions minutes used.

        Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage returned includes any minute multipliers for macOS and Windows runners, and is rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        Access tokens must have the `repo` or `admin:org` scope.
      operationId: billing/get-github-actions-billing-org
      tags:
      - billing
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/billing/billing#get-github-actions-billing-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-billing-usage"
              examples:
                default:
                  "$ref": "#/components/examples/actions-billing-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: billing
        subcategory: billing
  "/orgs/{org}/settings/billing/packages":
    get:
      summary: Get GitHub Packages billing for an organization
      description: |-
        Gets the free and paid storage used for GitHub Packages in gigabytes.

        Paid minutes only apply to packages stored for private repositories. For more information, see "[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."

        Access tokens must have the `repo` or `admin:org` scope.
      operationId: billing/get-github-packages-billing-org
      tags:
      - billing
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/billing/billing#get-github-packages-billing-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/packages-billing-usage"
              examples:
                default:
                  "$ref": "#/components/examples/packages-billing-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: billing
        subcategory: billing
  "/orgs/{org}/settings/billing/shared-storage":
    get:
      summary: Get shared storage billing for an organization
      description: |-
        Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.

        Paid minutes only apply to packages stored for private repositories. For more information, see "[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."

        Access tokens must have the `repo` or `admin:org` scope.
      operationId: billing/get-shared-storage-billing-org
      tags:
      - billing
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/billing/billing#get-shared-storage-billing-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/combined-billing-usage"
              examples:
                default:
                  "$ref": "#/components/examples/combined-billing-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: billing
        subcategory: billing
  "/orgs/{org}/teams":
    get:
      summary: List teams
      description: Lists all teams in an organization that are visible to the authenticated
        user.
      tags:
      - teams
      operationId: teams/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-teams
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    post:
      summary: Create a team
      description: |-
        To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see "[Setting team creation permissions](https://docs.github.com/articles/setting-team-creation-permissions-in-your-organization)."

        When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see "[About teams](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/about-teams)".
      tags:
      - teams
      operationId: teams/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#create-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                maintainers:
                  type: array
                  description: List GitHub IDs for organization members who will become
                    team maintainers.
                  items:
                    type: string
                repo_names:
                  type: array
                  description: The full name (e.g., "organization-name/repository-name")
                    of repositories to add the team to.
                  items:
                    type: string
                privacy:
                  type: string
                  description: "The level of privacy this team should have. The options
                    are:  \n**For a non-nested team:**  \n * `secret` - only visible
                    to organization owners and members of this team.  \n * `closed`
                    - visible to all members of this organization.  \nDefault: `secret`
                    \ \n**For a parent or child team:**  \n * `closed` - visible to
                    all members of this organization.  \nDefault for child team: `closed`"
                  enum:
                  - secret
                  - closed
                notification_setting:
                  type: string
                  description: "The notification setting the team has chosen. The
                    options are:  \n * `notifications_enabled` - team members receive
                    notifications when the team is @mentioned.  \n * `notifications_disabled`
                    - no one receives notifications.  \nDefault: `notifications_enabled`"
                  enum:
                  - notifications_enabled
                  - notifications_disabled
                permission:
                  type: string
                  description: "**Deprecated**. The permission that new repositories
                    will be added to the team with when none is specified."
                  enum:
                  - pull
                  - push
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
              required:
              - name
            examples:
              default:
                value:
                  name: Justice League
                  description: A great team
                  permission: push
                  notification_setting: notifications_enabled
                  privacy: closed
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/teams/{team_slug}":
    get:
      summary: Get a team by name
      description: |-
        Gets a team using the team's `slug`. To create the `slug`, GitHub replaces special characters in the `name` string, changes all words to lowercase, and replaces spaces with a `-` separator. For example, `"My TEam Näme"` would become `my-team-name`.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.
      tags:
      - teams
      operationId: teams/get-by-name
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#get-a-team-by-name
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    patch:
      summary: Update a team
      description: |-
        To edit a team, the authenticated user must either be an organization owner or a team maintainer.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.
      tags:
      - teams
      operationId: teams/update-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#update-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: "The level of privacy this team should have. Editing
                    teams without specifying this parameter leaves `privacy` intact.
                    When a team is nested, the `privacy` for parent teams cannot be
                    `secret`. The options are:  \n**For a non-nested team:**  \n *
                    `secret` - only visible to organization owners and members of
                    this team.  \n * `closed` - visible to all members of this organization.
                    \ \n**For a parent or child team:**  \n * `closed` - visible to
                    all members of this organization."
                  enum:
                  - secret
                  - closed
                notification_setting:
                  type: string
                  description: "The notification setting the team has chosen. Editing
                    teams without specifying this parameter leaves `notification_setting`
                    intact. The options are: \n * `notifications_enabled` - team members
                    receive notifications when the team is @mentioned.  \n * `notifications_disabled`
                    - no one receives notifications."
                  enum:
                  - notifications_enabled
                  - notifications_disabled
                permission:
                  type: string
                  description: "**Deprecated**. The permission that new repositories
                    will be added to the team with when none is specified."
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                  nullable: true
            examples:
              default:
                value:
                  name: new team name
                  description: new team description
                  privacy: closed
                  notification_setting: notifications_enabled
      responses:
        '200':
          description: Response when the updated information already exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Delete a team
      description: |-
        To delete a team, the authenticated user must be an organization owner or team maintainer.

        If you are an organization owner, deleting a parent team will delete all of its child teams as well.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.
      tags:
      - teams
      operationId: teams/delete-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#delete-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/teams/{team_slug}/discussions":
    get:
      summary: List discussions
      description: |-
        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.
      tags:
      - teams
      operationId: teams/list-discussions-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#list-discussions
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - name: pinned
        in: query
        required: false
        description: Pinned discussions only filter
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    post:
      summary: Create a discussion
      description: |-
        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.
      tags:
      - teams
      operationId: teams/create-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#create-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to all
                    members of the organization. Set to `true` to create a private
                    post.
                  default: false
              required:
              - title
              - body
            examples:
              default:
                value:
                  title: Our first team post
                  body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}":
    get:
      summary: Get a discussion
      description: |-
        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      tags:
      - teams
      operationId: teams/get-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#get-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    patch:
      summary: Update a discussion
      description: |-
        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      tags:
      - teams
      operationId: teams/update-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#update-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            examples:
              default:
                value:
                  title: Welcome to our first team post
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    delete:
      summary: Delete a discussion
      description: |-
        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.
      tags:
      - teams
      operationId: teams/delete-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#delete-a-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments":
    get:
      summary: List discussion comments
      description: |-
        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      tags:
      - teams
      operationId: teams/list-discussion-comments-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#list-discussion-comments
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    post:
      summary: Create a discussion comment
      description: |-
        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.
      tags:
      - teams
      operationId: teams/create-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#create-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like apples?
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}":
    get:
      summary: Get a discussion comment
      description: |-
        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      tags:
      - teams
      operationId: teams/get-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    patch:
      summary: Update a discussion comment
      description: |-
        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      tags:
      - teams
      operationId: teams/update-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#update-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like pineapples?
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    delete:
      summary: Delete a discussion comment
      description: |-
        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.
      tags:
      - teams
      operationId: teams/delete-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#delete-a-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions":
    get:
      summary: List reactions for a team discussion comment
      description: |-
        List the reactions to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a team discussion comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a team discussion comment
      description: |-
        Create a reaction to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the team discussion comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response when the reaction type has already been added to this
            team discussion comment
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}":
    delete:
      summary: Delete team discussion comment reaction
      description: |-
        **Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.

        Delete a reaction to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/delete-for-team-discussion-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-team-discussion-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions":
    get:
      summary: List reactions for a team discussion
      description: |-
        List the reactions to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a team discussion.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a team discussion
      description: |-
        Create a reaction to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the team discussion.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: reactions
        subcategory: reactions
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}":
    delete:
      summary: Delete team discussion reaction
      description: |-
        **Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.

        Delete a reaction to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/delete-for-team-discussion
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-team-discussion-reaction
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/orgs/{org}/teams/{team_slug}/invitations":
    get:
      summary: List pending team invitations
      description: |-
        The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.
      tags:
      - teams
      operationId: teams/list-pending-invitations-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-pending-team-invitations
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/organization-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/members":
    get:
      summary: List team members
      description: |-
        Team members will include the members of child teams.

        To list members in a team, the team must be visible to the authenticated user.
      tags:
      - teams
      operationId: teams/list-members-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-team-members
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - name: role
        description: Filters members returned by their role in the team.
        in: query
        required: false
        schema:
          type: string
          enum:
          - member
          - maintainer
          - all
          default: all
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/memberships/{username}":
    get:
      summary: Get team membership for a user
      description: |-
        Team members will include the members of child teams.

        To get a user's membership with a team, the team must be visible to the authenticated user.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.

        **Note:**
        The response contains the `state` of the membership and the member's `role`.

        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/teams/teams#create-a-team).
      tags:
      - teams
      operationId: teams/get-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#get-team-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-user-is-a-team-maintainer:
                  "$ref": "#/components/examples/team-membership-response-if-user-is-a-team-maintainer"
        '404':
          description: if user has no team membership
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
    put:
      summary: Add or update team membership for a user
      description: |-
        Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        An organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the "pending" state until the person accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team.

        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      tags:
      - teams
      operationId: teams/add-or-update-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: The role that this user should have in the team.
                  enum:
                  - member
                  - maintainer
                  default: member
            examples:
              default:
                summary: Add or update team membership for an organization member
                value:
                  role: maintainer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  "$ref": "#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending"
        '403':
          description: Forbidden if team synchronization is set up
        '422':
          description: Unprocessable Entity if you attempt to add an organization
            to a team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
    delete:
      summary: Remove team membership for a user
      description: |-
        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.
      tags:
      - teams
      operationId: teams/remove-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  "/orgs/{org}/teams/{team_slug}/projects":
    get:
      summary: List team projects
      description: |-
        Lists the organization projects for a team.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.
      tags:
      - teams
      operationId: teams/list-projects-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-projects
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/teams/{team_slug}/projects/{project_id}":
    get:
      summary: Check team permissions for a project
      description: |-
        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
      - teams
      operationId: teams/check-permissions-for-project-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project"
        '404':
          description: Not Found if project is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    put:
      summary: Add or update team project permissions
      description: |-
        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
      - teams
      operationId: teams/add-or-update-project-permissions-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant to the team for this project.
                    Default: the team''s `permission` attribute will be used to determine
                    what permission to grant the team on this project. Note that,
                    if you choose not to pass any parameters, you''ll need to set
                    `Content-Length` to zero when calling this endpoint. For more
                    information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."'
                  enum:
                  - read
                  - write
                  - admin
              nullable: true
            examples:
              default:
                summary: Updates the permissions for the team to write for the project
                value:
                  permission: write
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Remove a project from a team
      description: |-
        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.
      tags:
      - teams
      operationId: teams/remove-project-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/teams/{team_slug}/repos":
    get:
      summary: List team repositories
      description: |-
        Lists a team's repositories visible to the authenticated user.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.
      tags:
      - teams
      operationId: teams/list-repos-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-repositories
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}":
    get:
      summary: Check team permissions for a repository
      description: |-
        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.

        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.

        If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      tags:
      - teams
      operationId: teams/check-permissions-for-repo-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Alternative response with repository permissions
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-repository"
              examples:
                alternative-response-with-repository-permissions:
                  "$ref": "#/components/examples/team-repository-alternative-response-with-repository-permissions"
        '204':
          description: Response if team has permission for the repository. This is
            the response when the repository media type hasn't been provded in the
            Accept header.
        '404':
          description: Not Found if team does not have permission for the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    put:
      summary: Add or update team repository permissions
      description: |-
        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.

        For more information about the permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".
      tags:
      - teams
      operationId: teams/add-or-update-repo-permissions-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-repository-permissions
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant the team on this repository.
                    We accept the following permissions to be set: `pull`, `triage`,
                    `push`, `maintain`, `admin` and you can also specify a custom
                    repository role name, if the owning organization has defined any.
                    If no permission is specified, the team''s `permission` attribute
                    will be used to determine what permission to grant the team on
                    this repository.'
                  default: push
            examples:
              default:
                summary: Adding a team to an organization repository with the write
                  role
                value:
                  permission: push
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Remove a repository from a team
      description: |-
        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
      tags:
      - teams
      operationId: teams/remove-repo-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-repository-from-a-team
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/teams/{team_slug}/teams":
    get:
      summary: List child teams
      description: |-
        Lists the child teams of the team specified by `{team_slug}`.

        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.
      tags:
      - teams
      operationId: teams/list-child-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-child-teams
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/team-slug"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                response-if-child-teams-exist:
                  "$ref": "#/components/examples/team-items-response-if-child-teams-exist"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  "/orgs/{org}/{security_product}/{enablement}":
    post:
      summary: Enable or disable a security feature for an organization
      description: |-
        Enables or disables the specified security feature for all eligible repositories in an organization.

        To use this endpoint, you must be an organization owner or be member of a team with the security manager role.
        A token with the 'write:org' scope is also required.

        GitHub Apps must have the `organization_administration:write` permission to use this endpoint.

        For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
      tags:
      - orgs
      operationId: orgs/enable-or-disable-security-product-on-all-org-repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization
      parameters:
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/security-product"
      - "$ref": "#/components/parameters/org-security-product-enablement"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                query_suite:
                  description: |-
                    CodeQL query suite to be used. If you specify the `query_suite` parameter, the default setup will be configured with this query suite only on all repositories that didn't have default setup already configured. It will not change the query suite on repositories that already have default setup configured.
                    If you don't specify any `query_suite` in your request, the preferred query suite of the organization will be applied.
                  type: string
                  enum:
                  - default
                  - extended
            examples:
              default:
                value:
                  query_suite: default
      responses:
        '204':
          description: Action started
        '422':
          description: The action could not be taken due to an in progress enablement,
            or a policy is preventing enablement
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: orgs
  "/projects/columns/cards/{card_id}":
    get:
      summary: Get a project card
      description: Gets information about a project card.
      tags:
      - projects
      operationId: projects/get-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/cards#get-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
    patch:
      summary: Update an existing project card
      description: ''
      tags:
      - projects
      operationId: projects/update-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/cards#update-an-existing-project-card
      parameters:
      - "$ref": "#/components/parameters/card-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  description: The project card's note
                  example: Update all gems
                  type: string
                  nullable: true
                archived:
                  description: Whether or not the card is archived
                  example: false
                  type: boolean
            examples:
              default:
                summary: Change the note on the card
                value:
                  note: Add payload for delete Project column
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
    delete:
      summary: Delete a project card
      description: Deletes a project card
      tags:
      - projects
      operationId: projects/delete-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/cards#delete-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
  "/projects/columns/cards/{card_id}/moves":
    post:
      summary: Move a project card
      description: ''
      tags:
      - projects
      operationId: projects/move-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/cards#move-a-project-card
      parameters:
      - "$ref": "#/components/parameters/card-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                position:
                  description: 'The position of the card in a column. Can be one of:
                    `top`, `bottom`, or `after:<card_id>` to place after the specified
                    card.'
                  example: bottom
                  type: string
                  pattern: "^(?:top|bottom|after:\\d+)$"
                column_id:
                  description: The unique identifier of the column the card should
                    be moved to
                  example: 42
                  type: integer
              required:
              - position
              type: object
            examples:
              default:
                summary: Move the card to the bottom of the column
                value:
                  column_id: 42
                  position: bottom
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
              examples:
                default: {}
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                        field:
                          type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
  "/projects/columns/{column_id}":
    get:
      summary: Get a project column
      description: Gets information about a project column.
      tags:
      - projects
      operationId: projects/get-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/columns#get-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  "$ref": "#/components/examples/project-column"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
    patch:
      summary: Update an existing project column
      description: ''
      tags:
      - projects
      operationId: projects/update-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/columns#update-an-existing-project-column
      parameters:
      - "$ref": "#/components/parameters/column-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
              - name
              type: object
            examples:
              default:
                summary: Rename the project column
                value:
                  name: To Do
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  "$ref": "#/components/examples/project-column"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
    delete:
      summary: Delete a project column
      description: Deletes a project column.
      tags:
      - projects
      operationId: projects/delete-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/columns#delete-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
  "/projects/columns/{column_id}/cards":
    get:
      summary: List project cards
      description: Lists the project cards in a project.
      tags:
      - projects
      operationId: projects/list-cards
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/cards#list-project-cards
      parameters:
      - "$ref": "#/components/parameters/column-id"
      - name: archived_state
        description: Filters the project cards that are returned by the card's state.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - archived
          - not_archived
          default: not_archived
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
    post:
      summary: Create a project card
      description: ''
      tags:
      - projects
      operationId: projects/create-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/cards#create-a-project-card
      parameters:
      - "$ref": "#/components/parameters/column-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  note:
                    description: The project card's note
                    example: Update all gems
                    type: string
                    nullable: true
                required:
                - note
              - type: object
                properties:
                  content_id:
                    description: The unique identifier of the content associated with
                      the card
                    example: 42
                    type: integer
                  content_type:
                    description: The piece of content associated with the card
                    example: PullRequest
                    type: string
                required:
                - content_id
                - content_type
            examples:
              default:
                summary: Create a new card
                value:
                  note: Add payload for delete Project column
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-card"
              examples:
                default:
                  "$ref": "#/components/examples/project-card"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/validation-error"
                - "$ref": "#/components/schemas/validation-error-simple"
        '503':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
  "/projects/columns/{column_id}/moves":
    post:
      summary: Move a project column
      description: ''
      tags:
      - projects
      operationId: projects/move-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/columns#move-a-project-column
      parameters:
      - "$ref": "#/components/parameters/column-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                position:
                  description: 'The position of the column in a project. Can be one
                    of: `first`, `last`, or `after:<column_id>` to place after the
                    specified column.'
                  example: last
                  type: string
                  pattern: "^(?:first|last|after:\\d+)$"
              required:
              - position
              type: object
            examples:
              default:
                summary: Move the column to the end of the board
                value:
                  position: last
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
              examples:
                default: {}
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
  "/projects/{project_id}":
    get:
      summary: Get a project
      description: Gets a project by its `id`. Returns a `404 Not Found` status if
        projects are disabled. If you do not have sufficient privileges to perform
        this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
      - projects
      operationId: projects/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#get-a-project
      parameters:
      - "$ref": "#/components/parameters/project-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-3"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
    patch:
      summary: Update a project
      description: Updates a project board's information. Returns a `404 Not Found`
        status if projects are disabled. If you do not have sufficient privileges
        to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      operationId: projects/update
      tags:
      - projects
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#update-a-project
      parameters:
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in
                    January
                  type: string
                  nullable: true
                state:
                  description: State of the project; either 'open' or 'closed'
                  example: open
                  type: string
                organization_permission:
                  description: The baseline permission that all organization members
                    have on this project
                  type: string
                  enum:
                  - read
                  - write
                  - admin
                  - none
                private:
                  description: Whether or not this project can be seen by everyone.
                  type: boolean
              type: object
            examples:
              default:
                summary: Change the name, state, and permissions for a project
                value:
                  name: Week One Sprint
                  state: open
                  organization_permission: write
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-3"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: Not Found if the authenticated user does not have access to
            the project
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
    delete:
      summary: Delete a project
      description: Deletes a project board. Returns a `404 Not Found` status if projects
        are disabled.
      operationId: projects/delete
      tags:
      - projects
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#delete-a-project
      parameters:
      - "$ref": "#/components/parameters/project-id"
      responses:
        '204':
          description: Delete Success
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
  "/projects/{project_id}/collaborators":
    get:
      summary: List project collaborators
      description: Lists the collaborators for an organization project. For a project,
        the list of collaborators includes outside collaborators, organization members
        that are direct collaborators, organization members with access through team
        memberships, organization members with access through default organization
        permissions, and organization owners. You must be an organization owner or
        a project `admin` to list collaborators.
      tags:
      - projects
      operationId: projects/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/collaborators#list-project-collaborators
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - name: affiliation
        description: Filters the collaborators by their affiliation. `outside` means
          outside collaborators of a project that are not a member of the project's
          organization. `direct` means collaborators with permissions to a project,
          regardless of organization membership status. `all` means all collaborators
          the authenticated user can see.
        in: query
        required: false
        schema:
          type: string
          enum:
          - outside
          - direct
          - all
          default: all
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
  "/projects/{project_id}/collaborators/{username}":
    put:
      summary: Add project collaborator
      description: Adds a collaborator to an organization project and sets their permission
        level. You must be an organization owner or a project `admin` to add a collaborator.
      tags:
      - projects
      operationId: projects/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/collaborators#add-project-collaborator
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  description: The permission to grant the collaborator.
                  enum:
                  - read
                  - write
                  - admin
                  default: write
                  example: write
                  type: string
              nullable: true
            examples:
              default:
                summary: Applying write permissions for the new collaborator
                value:
                  permission: write
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
    delete:
      summary: Remove user as a collaborator
      description: Removes a collaborator from an organization project. You must be
        an organization owner or a project `admin` to remove a collaborator.
      tags:
      - projects
      operationId: projects/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/collaborators#remove-user-as-a-collaborator
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
  "/projects/{project_id}/collaborators/{username}/permission":
    get:
      summary: Get project permission for a user
      description: 'Returns the collaborator''s permission level for an organization
        project. Possible values for the `permission` key: `admin`, `write`, `read`,
        `none`. You must be an organization owner or a project `admin` to review a
        user''s permission level.'
      tags:
      - projects
      operationId: projects/get-permission-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/collaborators#get-project-permission-for-a-user
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-collaborator-permission"
              examples:
                default:
                  "$ref": "#/components/examples/project-collaborator-permission"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
  "/projects/{project_id}/columns":
    get:
      summary: List project columns
      description: Lists the project columns in a project.
      tags:
      - projects
      operationId: projects/list-columns
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/columns#list-project-columns
      parameters:
      - "$ref": "#/components/parameters/project-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  "$ref": "#/components/examples/project-column-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
    post:
      summary: Create a project column
      description: Creates a new project column.
      tags:
      - projects
      operationId: projects/create-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/columns#create-a-project-column
      parameters:
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
              - name
              type: object
            examples:
              default:
                value:
                  name: Remaining tasks
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project-column"
              examples:
                default:
                  value:
                    url: https://api.github.com/projects/columns/367
                    project_url: https://api.github.com/projects/120
                    cards_url: https://api.github.com/projects/columns/367/cards
                    id: 367
                    node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                    name: To Do
                    created_at: '2016-09-05T14:18:44Z'
                    updated_at: '2016-09-05T14:22:28Z'
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
  "/rate_limit":
    get:
      summary: Get rate limit status for the authenticated user
      description: |-
        **Note:** Accessing this endpoint does not count against your REST API rate limit.

        Some categories of endpoints have custom rate limits that are separate from the rate limit governing the other REST API endpoints. For this reason, the API response categorizes your rate limit. Under `resources`, you'll see objects relating to different categories:
        * The `core` object provides your rate limit status for all non-search-related resources in the REST API.
        * The `search` object provides your rate limit status for the REST API for searching (excluding code searches). For more information, see "[Search](https://docs.github.com/rest/search)."
        * The `code_search` object provides your rate limit status for the REST API for searching code. For more information, see "[Search code](https://docs.github.com/rest/search/search#search-code)."
        * The `graphql` object provides your rate limit status for the GraphQL API. For more information, see "[Resource limitations](https://docs.github.com/graphql/overview/resource-limitations#rate-limit)."
        * The `integration_manifest` object provides your rate limit status for the `POST /app-manifests/{code}/conversions` operation. For more information, see "[Creating a GitHub App from a manifest](https://docs.github.com/apps/creating-github-apps/setting-up-a-github-app/creating-a-github-app-from-a-manifest#3-you-exchange-the-temporary-code-to-retrieve-the-app-configuration)."
        * The `dependency_snapshots` object provides your rate limit status for submitting snapshots to the dependency graph. For more information, see "[Dependency graph](https://docs.github.com/rest/dependency-graph)."
        * The `code_scanning_upload` object provides your rate limit status for uploading SARIF results to code scanning. For more information, see "[Uploading a SARIF file to GitHub](https://docs.github.com/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github)."
        * The `actions_runner_registration` object provides your rate limit status for registering self-hosted runners in GitHub Actions. For more information, see "[Self-hosted runners](https://docs.github.com/rest/actions/self-hosted-runners)."
        * The `source_import` object is no longer in use for any API endpoints, and it will be removed in the next API version. For more information about API versions, see "[API Versions](https://docs.github.com/rest/overview/api-versions)."

        **Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.
      tags:
      - rate-limit
      operationId: rate-limit/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/rate-limit/rate-limit#get-rate-limit-status-for-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rate-limit-overview"
              examples:
                default:
                  "$ref": "#/components/examples/rate-limit-overview"
          headers:
            X-RateLimit-Limit:
              "$ref": "#/components/headers/x-rate-limit-limit"
            X-RateLimit-Remaining:
              "$ref": "#/components/headers/x-rate-limit-remaining"
            X-RateLimit-Reset:
              "$ref": "#/components/headers/x-rate-limit-reset"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: rate-limit
        subcategory: rate-limit
  "/repos/{owner}/{repo}":
    get:
      summary: Get a repository
      description: |-
        The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.

        **Note:** In order to see the `security_and_analysis` block for a repository you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
      tags:
      - repos
      operationId: repos/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#get-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/full-repository"
              examples:
                default-response:
                  "$ref": "#/components/examples/full-repository-default-response"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    patch:
      summary: Update a repository
      description: "**Note**: To edit a repository's topics, use the [Replace all
        repository topics](https://docs.github.com/rest/repos/repos#replace-all-repository-topics)
        endpoint."
      tags:
      - repos
      operationId: repos/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#update-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: "Either `true` to make the repository private or `false`
                    to make it public. Default: `false`.  \n**Note**: You will get
                    a `422` error if the organization restricts [changing repository
                    visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories)
                    to organization owners and a non-owner tries to change the value
                    of private."
                  default: false
                visibility:
                  type: string
                  description: The visibility of the repository.
                  enum:
                  - public
                  - private
                security_and_analysis:
                  type: object
                  description: |-
                    Specify which security and analysis features to enable or disable for the repository.

                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

                    For example, to enable GitHub Advanced Security, use this data in the body of the `PATCH` request:
                    `{ "security_and_analysis": {"advanced_security": { "status": "enabled" } } }`.

                    You can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request.
                  nullable: true
                  properties:
                    advanced_security:
                      type: object
                      description: Use the `status` property to enable or disable
                        GitHub Advanced Security for this repository. For more information,
                        see "[About GitHub Advanced Security](/github/getting-started-with-github/learning-about-github/about-github-advanced-security)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning:
                      type: object
                      description: Use the `status` property to enable or disable
                        secret scanning for this repository. For more information,
                        see "[About secret scanning](/code-security/secret-security/about-secret-scanning)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning_push_protection:
                      type: object
                      description: Use the `status` property to enable or disable
                        secret scanning push protection for this repository. For more
                        information, see "[Protecting pushes with secret scanning](/code-security/secret-scanning/protecting-pushes-with-secret-scanning)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository
                    or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository
                    or `false` to disable them. **Note:** If you're creating a repository
                    in an organization that has disabled repository projects, the
                    default is `false`, and if you pass `true`, the API returns an
                    error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository
                    or `false` to disable it.
                  default: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template
                    repository or `false` to prevent it.
                  default: false
                default_branch:
                  type: string
                  description: Updates the default branch for this repository.
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests,
                    or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a
                    merge commit, or `false` to prevent merging pull requests with
                    merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests,
                    or `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: Either `true` to allow auto-merge on pull requests,
                    or `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head
                    branches when pull requests are merged, or `false` to prevent
                    automatic deletion.
                  default: false
                allow_update_branch:
                  type: boolean
                  description: Either `true` to always allow a pull request head branch
                    that is behind its base branch to be updated even if it is not
                    required to be up to date before merging, or false otherwise.
                  default: false
                use_squash_pr_title_as_default:
                  type: boolean
                  description: Either `true` to allow squash-merge commits to use
                    pull request title, or `false` to use commit message. **This property
                    has been deprecated. Please use `squash_merge_commit_title` instead.
                  default: false
                  deprecated: true
                squash_merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - COMMIT_OR_PR_TITLE
                  description: |-
                    The default value for a squash merge commit title:

                    - `PR_TITLE` - default to the pull request's title.
                    - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
                squash_merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - COMMIT_MESSAGES
                  - BLANK
                  description: |-
                    The default value for a squash merge commit message:

                    - `PR_BODY` - default to the pull request's body.
                    - `COMMIT_MESSAGES` - default to the branch's commit messages.
                    - `BLANK` - default to a blank commit message.
                merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - MERGE_MESSAGE
                  description: |-
                    The default value for a merge commit title.

                    - `PR_TITLE` - default to the pull request's title.
                    - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
                merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - PR_TITLE
                  - BLANK
                  description: |-
                    The default value for a merge commit message.

                    - `PR_TITLE` - default to the pull request's title.
                    - `PR_BODY` - default to the pull request's body.
                    - `BLANK` - default to a blank commit message.
                archived:
                  type: boolean
                  description: Whether to archive this repository. `false` will unarchive
                    a previously archived repository.
                  default: false
                allow_forking:
                  type: boolean
                  description: Either `true` to allow private forks, or `false` to
                    prevent private forks.
                  default: false
                web_commit_signoff_required:
                  type: boolean
                  description: Either `true` to require contributors to sign off on
                    web-based commits, or `false` to not require contributors to sign
                    off on web-based commits.
                  default: false
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repository
                  homepage: https://github.com
                  private: true
                  has_issues: true
                  has_projects: true
                  has_wiki: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/full-repository"
              examples:
                default:
                  "$ref": "#/components/examples/full-repository"
        '307':
          "$ref": "#/components/responses/temporary_redirect"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Delete a repository
      description: |-
        Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.

        If an organization owner has configured the organization to prevent members from deleting organization-owned
        repositories, you will get a `403 Forbidden` response.
      tags:
      - repos
      operationId: repos/delete
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#delete-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
        '307':
          "$ref": "#/components/responses/temporary_redirect"
        '403':
          description: 'If an organization owner has configured the organization to
            prevent members from deleting organization-owned repositories, a member
            will get this response:'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                default:
                  value:
                    message: Organization members cannot delete repositories.
                    documentation_url: https://docs.github.com/rest/repos/repos#delete-a-repository
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/actions/artifacts":
    get:
      summary: List artifacts for a repository
      description: Lists all artifacts for a repository. Anyone with read access to
        the repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the `actions:read`
        permission to use this endpoint.
      tags:
      - actions
      operationId: actions/list-artifacts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#list-artifacts-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/artifact-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/artifact-response"
              examples:
                default:
                  "$ref": "#/components/examples/artifact-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}":
    get:
      summary: Get an artifact
      description: Gets a specific artifact for a workflow run. Anyone with read access
        to the repository can use this endpoint. If the repository is private you
        must use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#get-an-artifact
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/artifact-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/artifact"
              examples:
                default:
                  "$ref": "#/components/examples/artifact"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
    delete:
      summary: Delete an artifact
      description: Deletes an artifact for a workflow run. You must authenticate using
        an access token with the `repo` scope to use this endpoint. GitHub Apps must
        have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/delete-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#delete-an-artifact
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/artifact-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}":
    get:
      summary: Download an artifact
      description: |-
        Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in
        the response header to find the URL for the download. The `:archive_format` must be `zip`.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/download-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#download-an-artifact
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/artifact-id"
      - name: archive_format
        in: path
        required: true
        schema:
          type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              "$ref": "#/components/headers/location"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  "/repos/{owner}/{repo}/actions/cache/usage":
    get:
      summary: Get GitHub Actions cache usage for a repository
      description: |-
        Gets GitHub Actions cache usage for a repository.
        The data fetched using this API is refreshed approximately every 5 minutes, so values returned from this endpoint may take at least 5 minutes to get updated.
        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-actions-cache-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#get-github-actions-cache-usage-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-cache-usage-by-repository"
              examples:
                default:
                  "$ref": "#/components/examples/actions-cache-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  "/repos/{owner}/{repo}/actions/caches":
    get:
      summary: List GitHub Actions caches for a repository
      description: |-
        Lists the GitHub Actions caches for a repository.
        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-actions-cache-list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#list-github-actions-caches-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/actions-cache-git-ref-full"
      - "$ref": "#/components/parameters/actions-cache-key"
      - "$ref": "#/components/parameters/actions-cache-list-sort"
      - "$ref": "#/components/parameters/direction"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-cache-list"
              examples:
                default:
                  "$ref": "#/components/examples/actions-cache-list"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: cache
    delete:
      summary: Delete GitHub Actions caches for a repository (using a cache key)
      description: |-
        Deletes one or more GitHub Actions caches for a repository, using a complete cache key. By default, all caches that match the provided key are deleted, but you can optionally provide a Git ref to restrict deletions to caches that match both the provided key and the Git ref.

        You must authenticate using an access token with the `repo` scope to use this endpoint.

        GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/delete-actions-cache-by-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#delete-github-actions-caches-for-a-repository-using-a-cache-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/actions-cache-key-required"
      - "$ref": "#/components/parameters/actions-cache-git-ref-full"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-cache-list"
              examples:
                default:
                  "$ref": "#/components/examples/actions-cache-list"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  "/repos/{owner}/{repo}/actions/caches/{cache_id}":
    delete:
      summary: Delete a GitHub Actions cache for a repository (using a cache ID)
      description: |-
        Deletes a GitHub Actions cache for a repository, using a cache ID.

        You must authenticate using an access token with the `repo` scope to use this endpoint.

        GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/delete-actions-cache-by-id
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#delete-a-github-actions-cache-for-a-repository-using-a-cache-id
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/cache-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  "/repos/{owner}/{repo}/actions/jobs/{job_id}":
    get:
      summary: Get a job for a workflow run
      description: Gets a specific job in a workflow run. Anyone with read access
        to the repository can use this endpoint. If the repository is private you
        must use an access token with the `repo` scope. GitHub Apps must have the
        `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-job-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#get-a-job-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/job-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/job"
              examples:
                default:
                  "$ref": "#/components/examples/job"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs":
    get:
      summary: Download job logs for a workflow run
      description: |-
        Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look
        for `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can
        use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must
        have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/download-job-logs-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#download-job-logs-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/job-id"
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/jobs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  "/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun":
    post:
      summary: Re-run a job from a workflow run
      description: |-
        Re-run a job and its dependent jobs in a workflow run.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/re-run-job-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#re-run-a-job-from-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/job-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                enable_debug_logging:
                  type: boolean
                  default: false
                  description: Whether to enable debug logging for the re-run.
            examples:
              default: {}
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/oidc/customization/sub":
    get:
      summary: Get the customization template for an OIDC subject claim for a repository
      description: |-
        Gets the customization template for an OpenID Connect (OIDC) subject claim.
        You must authenticate using an access token with the `repo` scope to use this
        endpoint. GitHub Apps must have the `organization_administration:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-custom-oidc-sub-claim-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/oidc#get-the-customization-template-for-an-oidc-subject-claim-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Status response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/oidc-custom-sub-repo"
              examples:
                default:
                  "$ref": "#/components/examples/oidc-custom-sub-repo"
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: oidc
    put:
      summary: Set the customization template for an OIDC subject claim for a repository
      description: |-
        Sets the customization template and `opt-in` or `opt-out` flag for an OpenID Connect (OIDC) subject claim for a repository.
        You must authenticate using an access token with the `repo` scope to use this
        endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/set-custom-oidc-sub-claim-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/oidc#set-the-customization-template-for-an-oidc-subject-claim-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Actions OIDC subject customization for a repository
              description: Actions OIDC subject customization for a repository
              type: object
              required:
              - use_default
              properties:
                use_default:
                  description: Whether to use the default template or not. If `true`,
                    the `include_claim_keys` field is ignored.
                  type: boolean
                include_claim_keys:
                  description: Array of unique strings. Each claim key can only contain
                    alphanumeric characters and underscores.
                  type: array
                  items:
                    type: string
            examples:
              default:
                value:
                  use_default: false
                  include_claim_keys:
                  - repo
                  - context
      responses:
        '201':
          description: Empty response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: oidc
  "/repos/{owner}/{repo}/actions/organization-secrets":
    get:
      summary: List repository organization secrets
      description: |-
        Lists all organization secrets shared with a repository without revealing their encrypted
        values.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/list-repo-organization-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-repository-organization-secrets
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/actions-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repos/{owner}/{repo}/actions/organization-variables":
    get:
      summary: List repository organization variables
      description: |-
        Lists all organiation variables shared with a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions_variables:read` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/list-repo-organization-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-repository-organization-variables
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/variables-per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-variable-response"
              examples:
                default:
                  "$ref": "#/components/examples/actions-variables-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/repos/{owner}/{repo}/actions/permissions":
    get:
      summary: Get GitHub Actions permissions for a repository
      description: |-
        Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions and reusable workflows allowed to run in the repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/get-github-actions-permissions-repository
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-github-actions-permissions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-repository-permissions"
              examples:
                default:
                  "$ref": "#/components/examples/actions-repository-permissions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for a repository
      description: |-
        Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions and reusable workflows in the repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/set-github-actions-permissions-repository
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-github-actions-permissions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  "$ref": "#/components/schemas/actions-enabled"
                allowed_actions:
                  "$ref": "#/components/schemas/allowed-actions"
              required:
              - enabled
            examples:
              default:
                value:
                  enabled: true
                  allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  "/repos/{owner}/{repo}/actions/permissions/access":
    get:
      summary: Get the level of access for workflows outside of the repository
      description: |-
        Gets the level of access that workflows outside of the repository have to actions and reusable workflows in the repository.
        This endpoint only applies to private repositories.
        For more information, see "[Allowing access to components in a private repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-a-private-repository)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the
        repository `administration` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-workflow-access-to-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-the-level-of-access-for-workflows-outside-of-the-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-workflow-access-to-repository"
              examples:
                default:
                  "$ref": "#/components/examples/actions-workflow-access-to-repository"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: permissions
    put:
      summary: Set the level of access for workflows outside of the repository
      description: |-
        Sets the level of access that workflows outside of the repository have to actions and reusable workflows in the repository.
        This endpoint only applies to private repositories.
        For more information, see "[Allowing access to components in a private repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-a-private-repository)".

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the
        repository `administration` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/set-workflow-access-to-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-the-level-of-access-for-workflows-outside-of-the-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/actions-workflow-access-to-repository"
            examples:
              default:
                "$ref": "#/components/examples/actions-workflow-access-to-repository"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: permissions
  "/repos/{owner}/{repo}/actions/permissions/selected-actions":
    get:
      summary: Get allowed actions and reusable workflows for a repository
      description: |-
        Gets the settings for selected actions and reusable workflows that are allowed in a repository. To use this endpoint, the repository policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/get-allowed-actions-repository
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-allowed-actions-and-reusable-workflows-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/selected-actions"
              examples:
                default:
                  "$ref": "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions and reusable workflows for a repository
      description: |-
        Sets the actions and reusable workflows that are allowed in a repository. To use this endpoint, the repository permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/set-allowed-actions-repository
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-allowed-actions-and-reusable-workflows-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/selected-actions"
            examples:
              selected_actions:
                "$ref": "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  "/repos/{owner}/{repo}/actions/permissions/workflow":
    get:
      summary: Get default workflow permissions for a repository
      description: |-
        Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository,
        as well as if GitHub Actions can submit approving pull request reviews.
        For more information, see "[Setting the permissions of the GITHUB_TOKEN for your repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#setting-the-permissions-of-the-github_token-for-your-repository)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the repository `administration` permission to use this API.
      tags:
      - actions
      operationId: actions/get-github-actions-default-workflow-permissions-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-default-workflow-permissions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-get-default-workflow-permissions"
              examples:
                default:
                  "$ref": "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
    put:
      summary: Set default workflow permissions for a repository
      description: |-
        Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository, and sets if GitHub Actions
        can submit approving pull request reviews.
        For more information, see "[Setting the permissions of the GITHUB_TOKEN for your repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#setting-the-permissions-of-the-github_token-for-your-repository)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the repository `administration` permission to use this API.
      tags:
      - actions
      operationId: actions/set-github-actions-default-workflow-permissions-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-default-workflow-permissions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Success response
        '409':
          description: Conflict response when changing a setting is prevented by the
            owning organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/actions-set-default-workflow-permissions"
            examples:
              default:
                "$ref": "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
  "/repos/{owner}/{repo}/actions/runners":
    get:
      summary: List self-hosted runners for a repository
      description: |-
        Lists all self-hosted runners configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/list-self-hosted-runners-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-self-hosted-runners-for-a-repository
      parameters:
      - name: name
        description: The name of a self-hosted runner.
        in: query
        schema:
          type: string
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/runner-response"
              examples:
                default:
                  "$ref": "#/components/examples/runner-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/downloads":
    get:
      summary: List runner applications for a repository
      description: |-
        Lists binaries for the runner application that you can download and run.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/list-runner-applications-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-runner-applications-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/runner-application"
              examples:
                default:
                  "$ref": "#/components/examples/runner-application-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/generate-jitconfig":
    post:
      summary: Create configuration for a just-in-time runner for a repository
      description: |-
        Generates a configuration that can be passed to the runner application at startup.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/generate-runner-jitconfig-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              - runner_group_id
              - labels
              properties:
                name:
                  type: string
                  description: The name of the new runner.
                runner_group_id:
                  type: integer
                  description: The ID of the runner group to register the runner to.
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    type: string
                  description: 'The names of the custom labels to add to the runner.
                    **Minimum items**: 1. **Maximum items**: 100.'
                work_folder:
                  type: string
                  description: The working directory to be used for job execution,
                    relative to the runner install directory.
                  default: _work
            examples:
              default:
                value:
                  name: New runner
                  runner_group_id: 1
                  labels:
                  - self-hosted
                  - X64
                  - macOS
                  - no-gpu
                  work_folder: _work
      responses:
        '201':
          "$ref": "#/components/responses/actions_runner_jitconfig"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/registration-token":
    post:
      summary: Create a registration token for a repository
      description: |-
        Returns a token that you can pass to the `config` script. The token
        expires after one hour.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.

        Example using registration token:

        Configure your self-hosted runner, replacing `TOKEN` with the registration token provided
        by this endpoint.

        ```config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN```
      tags:
      - actions
      operationId: actions/create-registration-token-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-registration-token-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authentication-token"
              examples:
                default:
                  "$ref": "#/components/examples/authentication-token"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/remove-token":
    post:
      summary: Create a remove token for a repository
      description: |-
        Returns a token that you can pass to remove a self-hosted runner from
        a repository. The token expires after one hour.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.

        Example using remove token:

        To remove your self-hosted runner from a repository, replace TOKEN with
        the remove token provided by this endpoint.

        ```config.sh remove --token TOKEN```
      tags:
      - actions
      operationId: actions/create-remove-token-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-remove-token-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/authentication-token"
              examples:
                default:
                  "$ref": "#/components/examples/authentication-token-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/{runner_id}":
    get:
      summary: Get a self-hosted runner for a repository
      description: |-
        Gets a specific self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/get-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/runner"
              examples:
                default:
                  "$ref": "#/components/examples/runner"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from a repository
      description: |-
        Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/delete-self-hosted-runner-from-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels":
    get:
      summary: List labels for a self-hosted runner for a repository
      description: |-
        Lists all labels for a self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for a repository
      description: |-
        Add custom labels to a self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                  - gpu
                  - accelerated
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for a repository
      description: |-
        Remove all previous custom labels and set the new custom labels for a specific
        self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: The names of the custom labels to set for the runner.
                    You can pass an empty array to remove all custom labels.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                  - gpu
                  - accelerated
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for a repository
      description: |-
        Remove all custom labels from a self-hosted runner configured in a
        repository. Returns the remaining read-only labels from the runner.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-all-custom-labels-from-a-self-hosted-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels_readonly"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}":
    delete:
      summary: Remove a custom label from a self-hosted runner for a repository
      description: |-
        Remove a custom label from a self-hosted runner configured
        in a repository. Returns the remaining labels from the runner.

        This endpoint returns a `404 Not Found` status if the custom label is not
        present on the runner.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `administration` permission for repositories and the `organization_self_hosted_runners` permission for organizations.
        Authenticated users must have admin access to repositories or organizations, or the `manage_runners:enterprise` scope for enterprises, to use these endpoints.
      tags:
      - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/runner-id"
      - "$ref": "#/components/parameters/runner-label-name"
      responses:
        '200':
          "$ref": "#/components/responses/actions_runner_labels"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  "/repos/{owner}/{repo}/actions/runs":
    get:
      summary: List workflow runs for a repository
      description: |-
        Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/list-workflow-runs-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#list-workflow-runs-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/actor"
      - "$ref": "#/components/parameters/workflow-run-branch"
      - "$ref": "#/components/parameters/event"
      - "$ref": "#/components/parameters/workflow-run-status"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/created"
      - "$ref": "#/components/parameters/exclude-pull-requests"
      - "$ref": "#/components/parameters/workflow-run-check-suite-id"
      - "$ref": "#/components/parameters/workflow-run-head-sha"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-run-response"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}":
    get:
      summary: Get a workflow run
      description: Gets a specific workflow run. Anyone with read access to the repository
        can use this endpoint. If the repository is private you must use an access
        token with the `repo` scope. GitHub Apps must have the `actions:read` permission
        to use this endpoint.
      tags:
      - actions
      operationId: actions/get-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      - "$ref": "#/components/parameters/exclude-pull-requests"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-run"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    delete:
      summary: Delete a workflow run
      description: |-
        Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is
        private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use
        this endpoint.
      operationId: actions/delete-workflow-run
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#delete-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals":
    get:
      summary: Get the review history for a workflow run
      description: Anyone with read access to the repository can use this endpoint.
        If the repository is private, you must use an access token with the `repo`
        scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-reviews-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-the-review-history-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/environment-approvals"
              examples:
                default:
                  "$ref": "#/components/examples/environment-approvals-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/approve":
    post:
      summary: Approve a workflow run for a fork pull request
      description: |-
        Approves a workflow run for a pull request from a public fork of a first time contributor. For more information, see ["Approving workflow runs from public forks](https://docs.github.com/actions/managing-workflow-runs/approving-workflow-runs-from-public-forks)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/approve-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#approve-a-workflow-run-for-a-fork-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts":
    get:
      summary: List workflow run artifacts
      description: Lists artifacts for a workflow run. Anyone with read access to
        the repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the `actions:read`
        permission to use this endpoint.
      tags:
      - actions
      operationId: actions/list-workflow-run-artifacts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#list-workflow-run-artifacts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/artifact-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/artifact-response"
              examples:
                default:
                  "$ref": "#/components/examples/artifact-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}":
    get:
      summary: Get a workflow run attempt
      description: |-
        Gets a specific workflow run attempt. Anyone with read access to the repository
        can use this endpoint. If the repository is private you must use an access token
        with the `repo` scope. GitHub Apps must have the `actions:read` permission to
        use this endpoint.
      tags:
      - actions
      operationId: actions/get-workflow-run-attempt
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-a-workflow-run-attempt
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      - "$ref": "#/components/parameters/attempt-number"
      - "$ref": "#/components/parameters/exclude-pull-requests"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-run"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs":
    get:
      summary: List jobs for a workflow run attempt
      description: Lists jobs for a specific workflow run attempt. Anyone with read
        access to the repository can use this endpoint. If the repository is private
        you must use an access token with the `repo` scope. GitHub Apps must have
        the `actions:read` permission to use this endpoint. You can use parameters
        to narrow the list of results. For more information about using parameters,
        see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).
      tags:
      - actions
      operationId: actions/list-jobs-for-workflow-run-attempt
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#list-jobs-for-a-workflow-run-attempt
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      - "$ref": "#/components/parameters/attempt-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/job-response"
              examples:
                default:
                  "$ref": "#/components/examples/job-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs":
    get:
      summary: Download workflow run attempt logs
      description: |-
        Gets a redirect URL to download an archive of log files for a specific workflow run attempt. This link expires after
        1 minute. Look for `Location:` in the response header to find the URL for the download. Anyone with read access to
        the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
        GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/download-workflow-run-attempt-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#download-workflow-run-attempt-logs
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      - "$ref": "#/components/parameters/attempt-number"
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel":
    post:
      summary: Cancel a workflow run
      description: |-
        Cancels a workflow run using its `id`.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/cancel-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#cancel-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule":
    post:
      summary: Review custom deployment protection rules for a workflow run
      description: |-
        Approve or reject custom deployment protection rules provided by a GitHub App for a workflow run. For more information, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment)."

        **Note:** GitHub Apps can only review their own custom deployment protection rules.
        To approve or reject pending deployments that are waiting for review from a specific person or team, see [`POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments`](/rest/actions/workflow-runs#review-pending-deployments-for-a-workflow-run).

        If the repository is private, you must use an access token with the `repo` scope.
        GitHub Apps must have read and write permission for **Deployments** to use this endpoint.
      tags:
      - actions
      operationId: actions/review-custom-gates-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#review-custom-deployment-protection-rules-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - "$ref": "#/components/schemas/review-custom-gates-comment-required"
              - "$ref": "#/components/schemas/review-custom-gates-state-required"
            examples:
              default:
                value:
                  environment_name: prod-eus
                  state: approved
                  comment: All health checks passed.
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel":
    post:
      summary: Force cancel a workflow run
      description: |-
        Cancels a workflow run and bypasses conditions that would otherwise cause a workflow execution to continue, such as an `always()` condition on a job.
        You should only use this endpoint to cancel a workflow run when the workflow run is not responding to [`POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel`](/rest/actions/workflow-runs#cancel-a-workflow-run).

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/force-cancel-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#force-cancel-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs":
    get:
      summary: List jobs for a workflow run
      description: Lists jobs for a workflow run. Anyone with read access to the repository
        can use this endpoint. If the repository is private you must use an access
        token with the `repo` scope. GitHub Apps must have the `actions:read` permission
        to use this endpoint. You can use parameters to narrow the list of results.
        For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).
      tags:
      - actions
      operationId: actions/list-jobs-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#list-jobs-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      - name: filter
        description: Filters jobs by their `completed_at` timestamp. `latest` returns
          jobs from the most recent execution of the workflow run. `all` returns all
          jobs for a workflow run, including from old executions of the workflow run.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/job-response"
              examples:
                default:
                  "$ref": "#/components/examples/job-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/logs":
    get:
      summary: Download workflow run logs
      description: |-
        Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for
        `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use
        this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have
        the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/download-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#download-workflow-run-logs
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    delete:
      summary: Delete workflow run logs
      description: Deletes all logs for a workflow run. You must authenticate using
        an access token with the `repo` scope to use this endpoint. GitHub Apps must
        have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/delete-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#delete-workflow-run-logs
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments":
    get:
      summary: Get pending deployments for a workflow run
      description: |-
        Get all deployment environments for a workflow run that are waiting for protection rules to pass.

        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-pending-deployments-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-pending-deployments-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pending-deployment"
              examples:
                default:
                  "$ref": "#/components/examples/pending-deployment-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    post:
      summary: Review pending deployments for a workflow run
      description: |-
        Approve or reject pending deployments that are waiting on approval by a required reviewer.

        Required reviewers with read access to the repository contents and deployments can use this endpoint. Required reviewers must authenticate using an access token with the `repo` scope to use this endpoint.
      tags:
      - actions
      operationId: actions/review-pending-deployments-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#review-pending-deployments-for-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                environment_ids:
                  type: array
                  description: The list of environment ids to approve or reject
                  example:
                  - 161171787
                  - 161171795
                  items:
                    type: integer
                    example: 161171787
                state:
                  type: string
                  description: Whether to approve or reject deployment to the specified
                    environments.
                  enum:
                  - approved
                  - rejected
                  example: approved
                comment:
                  type: string
                  description: A comment to accompany the deployment review
                  example: Ship it!
              required:
              - environment_ids
              - state
              - comment
            examples:
              default:
                value:
                  environment_ids:
                  - 161171787
                  state: approved
                  comment: Ship it!
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deployment"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun":
    post:
      summary: Re-run a workflow
      description: Re-runs your workflow run using its `id`. You must authenticate
        using an access token with the `repo` scope to use this endpoint. GitHub Apps
        must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/re-run-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#re-run-a-workflow
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                enable_debug_logging:
                  type: boolean
                  default: false
                  description: Whether to enable debug logging for the re-run.
            examples:
              default: {}
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs":
    post:
      summary: Re-run failed jobs from a workflow run
      description: Re-run all of the failed jobs and their dependent jobs in a workflow
        run using the `id` of the workflow run. You must authenticate using an access
        token with the `repo` scope to use this endpoint.
      tags:
      - actions
      operationId: actions/re-run-workflow-failed-jobs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#re-run-failed-jobs-from-a-workflow-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                enable_debug_logging:
                  type: boolean
                  default: false
                  description: Whether to enable debug logging for the re-run.
            examples:
              default: {}
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/timing":
    get:
      summary: Get workflow run usage
      description: |-
        Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-workflow-run-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-workflow-run-usage
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/run-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-run-usage"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-run-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/secrets":
    get:
      summary: List repository secrets
      description: |-
        Lists all secrets available in a repository without revealing their encrypted
        values.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/list-repo-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-repository-secrets
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/actions-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repos/{owner}/{repo}/actions/secrets/public-key":
    get:
      summary: Get a repository public key
      description: |-
        Gets your public key, which you need to encrypt secrets. You need to
        encrypt a secret before you can create or update secrets.

        Anyone with read access to the repository can use this endpoint.
        If the repository is private you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/get-repo-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-a-repository-public-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/actions-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repos/{owner}/{repo}/actions/secrets/{secret_name}":
    get:
      summary: Get a repository secret
      description: |-
        Gets a single repository secret without revealing its encrypted value.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/get-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-secret"
              examples:
                default:
                  "$ref": "#/components/examples/actions-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update a repository secret
      description: |-
        Creates or updates a repository secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/create-or-update-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#create-or-update-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get a repository public
                    key](https://docs.github.com/rest/actions/secrets#get-a-repository-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete a repository secret
      description: |-
        Deletes a secret in a repository using the secret name.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/delete-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#delete-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repos/{owner}/{repo}/actions/variables":
    get:
      summary: List repository variables
      description: |-
        Lists all repository variables.
        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions_variables:read` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/list-repo-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-repository-variables
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/variables-per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-variable-response"
              examples:
                default:
                  "$ref": "#/components/examples/actions-variables-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create a repository variable
      description: |-
        Creates a repository variable that you can reference in a GitHub Actions workflow.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions_variables:write` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/create-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#create-a-repository-variable
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
              required:
              - name
              - value
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/repos/{owner}/{repo}/actions/variables/{name}":
    get:
      summary: Get a repository variable
      description: |-
        Gets a specific variable in a repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions_variables:read` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/get-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#get-a-repository-variable
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/variable-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-variable"
              examples:
                default:
                  "$ref": "#/components/examples/actions-variable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update a repository variable
      description: |-
        Updates a repository variable that you can reference in a GitHub Actions workflow.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions_variables:write` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/update-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#update-a-repository-variable
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/variable-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete a repository variable
      description: |-
        Deletes a repository variable using the variable name.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `actions_variables:write` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/delete-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#delete-a-repository-variable
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/variable-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/repos/{owner}/{repo}/actions/workflows":
    get:
      summary: List repository workflows
      description: Lists the workflows in a repository. Anyone with read access to
        the repository can use this endpoint. If the repository is private you must
        use an access token with the `repo` scope. GitHub Apps must have the `actions:read`
        permission to use this endpoint.
      tags:
      - actions
      operationId: actions/list-repo-workflows
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#list-repository-workflows
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-response"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}":
    get:
      summary: Get a workflow
      description: Gets a specific workflow. You can replace `workflow_id` with the
        workflow file name. For example, you could use `main.yaml`. Anyone with read
        access to the repository can use this endpoint. If the repository is private
        you must use an access token with the `repo` scope. GitHub Apps must have
        the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#get-a-workflow
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/workflow-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow"
              examples:
                default:
                  "$ref": "#/components/examples/workflow"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable":
    put:
      summary: Disable a workflow
      description: |-
        Disables a workflow and sets the `state` of the workflow to `disabled_manually`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/disable-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#disable-a-workflow
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/workflow-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches":
    post:
      summary: Create a workflow dispatch event
      description: |-
        You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see "[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see "[Creating a personal access token for the command line](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line)."
      operationId: actions/create-workflow-dispatch
      tags:
      - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#create-a-workflow-dispatch-event
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/workflow-id"
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The git reference for the workflow. The reference can
                    be a branch or tag name.
                inputs:
                  type: object
                  description: Input keys and values configured in the workflow file.
                    The maximum number of properties is 10. Any default properties
                    configured in the workflow file will be used when `inputs` are
                    omitted.
                  additionalProperties: true
                  maxProperties: 10
              required:
              - ref
            examples:
              default:
                value:
                  ref: topic-branch
                  inputs:
                    name: Mona the Octocat
                    home: San Francisco, CA
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable":
    put:
      summary: Enable a workflow
      description: |-
        Enables a workflow and sets the `state` of the workflow to `active`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/enable-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#enable-a-workflow
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/workflow-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs":
    get:
      summary: List workflow runs for a workflow
      description: |-
        List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
      tags:
      - actions
      operationId: actions/list-workflow-runs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#list-workflow-runs-for-a-workflow
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/workflow-id"
      - "$ref": "#/components/parameters/actor"
      - "$ref": "#/components/parameters/workflow-run-branch"
      - "$ref": "#/components/parameters/event"
      - "$ref": "#/components/parameters/workflow-run-status"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/created"
      - "$ref": "#/components/parameters/exclude-pull-requests"
      - "$ref": "#/components/parameters/workflow-run-check-suite-id"
      - "$ref": "#/components/parameters/workflow-run-head-sha"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-run-response"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing":
    get:
      summary: Get workflow usage
      description: |-
        Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - actions
      operationId: actions/get-workflow-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#get-workflow-usage
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/workflow-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/workflow-usage"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflows
  "/repos/{owner}/{repo}/activity":
    get:
      summary: List repository activities
      description: |-
        Lists a detailed history of changes to a repository, such as pushes, merges, force pushes, and branch changes, and associates these changes with commits and users.

        For more information about viewing repository activity,
        see "[Viewing activity and data for your repository](https://docs.github.com/repositories/viewing-activity-and-data-for-your-repository)."
      tags:
      - repos
      operationId: repos/list-activities
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-activities
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - name: ref
        description: |-
          The Git reference for the activities you want to list.

          The `ref` for a branch can be formatted either as `refs/heads/BRANCH_NAME` or `BRANCH_NAME`, where `BRANCH_NAME` is the name of your branch.
        in: query
        required: false
        schema:
          type: string
      - name: actor
        description: The GitHub username to use to filter by the actor who performed
          the activity.
        in: query
        required: false
        schema:
          type: string
      - name: time_period
        description: |-
          The time period to filter by.

          For example, `day` will filter for activity that occurred in the past 24 hours, and `week` will filter for activity that occurred in the past 7 days (168 hours).
        in: query
        required: false
        schema:
          type: string
          enum:
          - day
          - week
          - month
          - quarter
          - year
      - name: activity_type
        description: |-
          The activity type to filter by.

          For example, you can choose to filter by "force_push", to see all force pushes to the repository.
        in: query
        required: false
        schema:
          type: string
          enum:
          - push
          - force_push
          - branch_creation
          - branch_deletion
          - pr_merge
          - merge_queue_merge
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/activity"
              examples:
                default:
                  "$ref": "#/components/examples/activity-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/assignees":
    get:
      summary: List assignees
      description: Lists the [available assignees](https://docs.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/)
        for issues in a repository.
      tags:
      - issues
      operationId: issues/list-assignees
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/assignees#list-assignees
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/assignees/{assignee}":
    get:
      summary: Check if a user can be assigned
      description: |-
        Checks if a user has permission to be assigned to an issue in this repository.

        If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.

        Otherwise a `404` status code is returned.
      tags:
      - issues
      operationId: issues/check-user-can-be-assigned
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/assignees#check-if-a-user-can-be-assigned
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: assignee
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: If the `assignee` can be assigned to issues in the repository,
            a `204` header with no content is returned.
        '404':
          description: Otherwise a `404` status code is returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/autolinks":
    get:
      summary: List all autolinks of a repository
      description: |-
        This returns a list of autolinks configured for the given repository.

        Information about autolinks are only available to repository administrators.
      tags:
      - repos
      operationId: repos/list-autolinks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#list-all-autolinks-of-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/autolink"
              examples:
                default:
                  "$ref": "#/components/examples/autolink-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
    post:
      summary: Create an autolink reference for a repository
      description: Users with admin access to the repository can create an autolink.
      tags:
      - repos
      operationId: repos/create-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#create-an-autolink-reference-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key_prefix:
                  type: string
                  description: This prefix appended by certain characters will generate
                    a link any time it is found in an issue, pull request, or commit.
                url_template:
                  type: string
                  description: The URL must contain `<num>` for the reference number.
                    `<num>` matches different characters depending on the value of
                    `is_alphanumeric`.
                is_alphanumeric:
                  type: boolean
                  default: true
                  description: Whether this autolink reference matches alphanumeric
                    characters. If true, the `<num>` parameter of the `url_template`
                    matches alphanumeric characters `A-Z` (case insensitive), `0-9`,
                    and `-`. If false, this autolink reference only matches numeric
                    characters.
              required:
              - key_prefix
              - url_template
            examples:
              default:
                value:
                  key_prefix: TICKET-
                  url_template: https://example.com/TICKET?query=<num>
                  is_alphanumeric: true
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/autolink"
              examples:
                default:
                  "$ref": "#/components/examples/autolink"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/autolinks/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
  "/repos/{owner}/{repo}/autolinks/{autolink_id}":
    get:
      summary: Get an autolink reference of a repository
      description: |-
        This returns a single autolink reference by ID that was configured for the given repository.

        Information about autolinks are only available to repository administrators.
      tags:
      - repos
      operationId: repos/get-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#get-an-autolink-reference-of-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/autolink-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/autolink"
              examples:
                default:
                  "$ref": "#/components/examples/autolink"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
    delete:
      summary: Delete an autolink reference from a repository
      description: |-
        This deletes a single autolink reference by ID that was configured for the given repository.

        Information about autolinks are only available to repository administrators.
      tags:
      - repos
      operationId: repos/delete-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#delete-an-autolink-reference-from-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/autolink-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
  "/repos/{owner}/{repo}/automated-security-fixes":
    get:
      summary: Check if automated security fixes are enabled for a repository
      description: Shows whether automated security fixes are enabled, disabled or
        paused for a repository. The authenticated user must have admin read access
        to the repository. For more information, see "[Configuring automated security
        fixes](https://docs.github.com/articles/configuring-automated-security-fixes)".
      tags:
      - repos
      operationId: repos/check-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#check-if-automated-security-fixes-are-enabled-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response if dependabot is enabled
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-automated-security-fixes"
              examples:
                default:
                  value:
                    enabled: true
                    paused: false
        '404':
          description: Not Found if dependabot is not enabled for the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    put:
      summary: Enable automated security fixes
      description: Enables automated security fixes for a repository. The authenticated
        user must have admin access to the repository. For more information, see "[Configuring
        automated security fixes](https://docs.github.com/articles/configuring-automated-security-fixes)".
      tags:
      - repos
      operationId: repos/enable-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#enable-automated-security-fixes
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Disable automated security fixes
      description: Disables automated security fixes for a repository. The authenticated
        user must have admin access to the repository. For more information, see "[Configuring
        automated security fixes](https://docs.github.com/articles/configuring-automated-security-fixes)".
      tags:
      - repos
      operationId: repos/disable-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#disable-automated-security-fixes
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/branches":
    get:
      summary: List branches
      description: ''
      tags:
      - repos
      operationId: repos/list-branches
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#list-branches
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: protected
        description: Setting to `true` returns only protected branches. When set to
          `false`, only unprotected branches are returned. Omitting this parameter
          returns all branches.
        in: query
        required: false
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/short-branch"
              examples:
                default:
                  "$ref": "#/components/examples/short-branch-with-protection-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}":
    get:
      summary: Get a branch
      description: ''
      tags:
      - repos
      operationId: repos/get-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#get-a-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-with-protection"
              examples:
                default:
                  "$ref": "#/components/examples/branch-get"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  "/repos/{owner}/{repo}/branches/{branch}/protection":
    get:
      summary: Get branch protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-protection"
              examples:
                default:
                  "$ref": "#/components/examples/branch-protection"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    put:
      summary: Update branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Protecting a branch requires admin or owner permissions to the repository.

        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.

        **Note**: The list of users, apps, and teams in total is limited to 100 items.
      tags:
      - repos
      operationId: repos/update-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#update-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                required_status_checks:
                  type: object
                  description: Require status checks to pass before merging. Set to
                    `null` to disable.
                  nullable: true
                  properties:
                    strict:
                      type: boolean
                      description: Require branches to be up to date before merging.
                    contexts:
                      type: array
                      deprecated: true
                      description: "**Deprecated**: The list of status checks to require
                        in order to merge into this branch. If any of these checks
                        have recently been set by a particular GitHub App, they will
                        be required to come from that app in future for the branch
                        to merge. Use `checks` instead of `contexts` for more fine-grained
                        control.\n"
                      items:
                        type: string
                    checks:
                      type: array
                      description: The list of status checks to require in order to
                        merge into this branch.
                      items:
                        type: object
                        required:
                        - context
                        properties:
                          context:
                            type: string
                            description: The name of the required check
                          app_id:
                            type: integer
                            description: The ID of the GitHub App that must provide
                              this check. Omit this field to automatically select
                              the GitHub App that has recently provided this check,
                              or any app if it was not set by a GitHub App. Pass -1
                              to explicitly allow any app to set the status.
                  required:
                  - strict
                  - contexts
                enforce_admins:
                  type: boolean
                  description: Enforce all configured restrictions for administrators.
                    Set to `true` to enforce required status checks for repository
                    administrators. Set to `null` to disable.
                  nullable: true
                required_pull_request_reviews:
                  type: object
                  description: Require at least one approving review on a pull request,
                    before merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    dismissal_restrictions:
                      type: object
                      description: Specify which users, teams, and apps can dismiss
                        pull request reviews. Pass an empty `dismissal_restrictions`
                        object to disable. User and team `dismissal_restrictions`
                        are only available for organization-owned repositories. Omit
                        this parameter for personal repositories.
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s with dismissal access
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s with dismissal access
                          items:
                            type: string
                        apps:
                          type: array
                          description: The list of app `slug`s with dismissal access
                          items:
                            type: string
                    dismiss_stale_reviews:
                      type: boolean
                      description: Set to `true` if you want to automatically dismiss
                        approving reviews when someone pushes a new commit.
                    require_code_owner_reviews:
                      type: boolean
                      description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/)
                        review them.
                    required_approving_review_count:
                      type: integer
                      description: Specify the number of reviewers required to approve
                        pull requests. Use a number between 1 and 6 or 0 to not require
                        reviewers.
                    require_last_push_approval:
                      type: boolean
                      description: 'Whether the most recent push must be approved
                        by someone other than the person who pushed it. Default: `false`.'
                      default: false
                    bypass_pull_request_allowances:
                      type: object
                      description: Allow specific users, teams, or apps to bypass
                        pull request requirements.
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s allowed to bypass
                            pull request requirements.
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s allowed to bypass
                            pull request requirements.
                          items:
                            type: string
                        apps:
                          type: array
                          description: The list of app `slug`s allowed to bypass pull
                            request requirements.
                          items:
                            type: string
                restrictions:
                  type: object
                  description: Restrict who can push to the protected branch. User,
                    app, and team `restrictions` are only available for organization-owned
                    repositories. Set to `null` to disable.
                  nullable: true
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with push access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with push access
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s with push access
                      items:
                        type: string
                  required:
                  - users
                  - teams
                required_linear_history:
                  type: boolean
                  description: 'Enforces a linear commit Git history, which prevents
                    anyone from pushing merge commits to a branch. Set to `true` to
                    enforce a linear commit history. Set to `false` to disable a linear
                    commit Git history. Your repository must allow squash merging
                    or rebase merging before you can enable a linear commit history.
                    Default: `false`. For more information, see "[Requiring a linear
                    commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)"
                    in the GitHub Help documentation.'
                allow_force_pushes:
                  type: boolean
                  description: 'Permits force pushes to the protected branch by anyone
                    with write access to the repository. Set to `true` to allow force
                    pushes. Set to `false` or `null` to block force pushes. Default:
                    `false`. For more information, see "[Enabling force pushes to
                    a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)"
                    in the GitHub Help documentation."'
                  nullable: true
                allow_deletions:
                  type: boolean
                  description: 'Allows deletion of the protected branch by anyone
                    with write access to the repository. Set to `false` to prevent
                    deletion of the protected branch. Default: `false`. For more information,
                    see "[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)"
                    in the GitHub Help documentation.'
                block_creations:
                  type: boolean
                  description: 'If set to `true`, the `restrictions` branch protection
                    settings which limits who can push will also block pushes which
                    create new branches, unless the push is initiated by a user, team,
                    or app which has the ability to push. Set to `true` to restrict
                    new branch creation. Default: `false`.'
                required_conversation_resolution:
                  type: boolean
                  description: 'Requires all conversations on code to be resolved
                    before a pull request can be merged into a branch that matches
                    this rule. Set to `false` to disable. Default: `false`.'
                lock_branch:
                  type: boolean
                  description: 'Whether to set the branch as read-only. If this is
                    true, users will not be able to push to the branch. Default: `false`.'
                  default: false
                allow_fork_syncing:
                  type: boolean
                  description: 'Whether users can pull changes from upstream when
                    the branch is locked. Set to `true` to allow fork syncing. Set
                    to `false` to prevent fork syncing. Default: `false`.'
                  default: false
              required:
              - required_status_checks
              - enforce_admins
              - required_pull_request_reviews
              - restrictions
            examples:
              default:
                value:
                  required_status_checks:
                    strict: true
                    contexts:
                    - continuous-integration/travis-ci
                  enforce_admins: true
                  required_pull_request_reviews:
                    dismissal_restrictions:
                      users:
                      - octocat
                      teams:
                      - justice-league
                    dismiss_stale_reviews: true
                    require_code_owner_reviews: true
                    required_approving_review_count: 2
                    require_last_push_approval: true
                    bypass_pull_request_allowances:
                      users:
                      - octocat
                      teams:
                      - justice-league
                  restrictions:
                    users:
                    - octocat
                    teams:
                    - justice-league
                    apps:
                    - super-ci
                  required_linear_history: true
                  allow_force_pushes: true
                  allow_deletions: true
                  block_creations: true
                  required_conversation_resolution: true
                  lock_branch: true
                  allow_fork_syncing: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch"
              examples:
                default:
                  "$ref": "#/components/examples/branch-protection-update"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete branch protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/delete-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins":
    get:
      summary: Get admin branch protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-admin-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Set admin branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
      - repos
      operationId: repos/set-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-admin-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete admin branch protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
      - repos
      operationId: repos/delete-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-admin-branch-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews":
    get:
      summary: Get pull request review protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-pull-request-review-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-pull-request-review"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    patch:
      summary: Update pull request review protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.

        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.
      tags:
      - repos
      operationId: repos/update-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#update-pull-request-review-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dismissal_restrictions:
                  type: object
                  description: Specify which users, teams, and apps can dismiss pull
                    request reviews. Pass an empty `dismissal_restrictions` object
                    to disable. User and team `dismissal_restrictions` are only available
                    for organization-owned repositories. Omit this parameter for personal
                    repositories.
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with dismissal access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with dismissal access
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s with dismissal access
                      items:
                        type: string
                dismiss_stale_reviews:
                  type: boolean
                  description: Set to `true` if you want to automatically dismiss
                    approving reviews when someone pushes a new commit.
                require_code_owner_reviews:
                  type: boolean
                  description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/)
                    have reviewed.
                required_approving_review_count:
                  type: integer
                  description: Specifies the number of reviewers required to approve
                    pull requests. Use a number between 1 and 6 or 0 to not require
                    reviewers.
                require_last_push_approval:
                  type: boolean
                  description: 'Whether the most recent push must be approved by someone
                    other than the person who pushed it. Default: `false`'
                  default: false
                bypass_pull_request_allowances:
                  type: object
                  description: Allow specific users, teams, or apps to bypass pull
                    request requirements.
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s allowed to bypass pull
                        request requirements.
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s allowed to bypass pull
                        request requirements.
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s allowed to bypass pull
                        request requirements.
                      items:
                        type: string
            examples:
              default:
                value:
                  dismissal_restrictions:
                    users:
                    - octocat
                    teams:
                    - justice-league
                    apps:
                    - octoapp
                  bypass_pull_request_allowances:
                    users:
                    - octocat
                    teams:
                    - justice-league
                    apps:
                    - octoapp
                  dismiss_stale_reviews: true
                  require_code_owner_reviews: true
                  required_approving_review_count: 2
                  require_last_push_approval: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-pull-request-review"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete pull request review protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/delete-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-pull-request-review-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures":
    get:
      summary: Get commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://docs.github.com/articles/signing-commits-with-gpg) in GitHub Help.

        **Note**: You must enable branch protection to require signed commits.
      tags:
      - repos
      operationId: repos/get-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-commit-signature-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Create commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.
      tags:
      - repos
      operationId: repos/create-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#create-commit-signature-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/protected-branch-admin-enforced"
              examples:
                default:
                  "$ref": "#/components/examples/protected-branch-admin-enforced"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete commit signature protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.
      tags:
      - repos
      operationId: repos/delete-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-commit-signature-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks":
    get:
      summary: Get status checks protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-status-checks-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-status-checks-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status-check-policy"
              examples:
                default:
                  "$ref": "#/components/examples/status-check-policy"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    patch:
      summary: Update status check protection
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.
      tags:
      - repos
      operationId: repos/update-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#update-status-check-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                strict:
                  type: boolean
                  description: Require branches to be up to date before merging.
                contexts:
                  type: array
                  deprecated: true
                  description: "**Deprecated**: The list of status checks to require
                    in order to merge into this branch. If any of these checks have
                    recently been set by a particular GitHub App, they will be required
                    to come from that app in future for the branch to merge. Use `checks`
                    instead of `contexts` for more fine-grained control.\n"
                  items:
                    type: string
                checks:
                  type: array
                  description: The list of status checks to require in order to merge
                    into this branch.
                  items:
                    type: object
                    required:
                    - context
                    properties:
                      context:
                        type: string
                        description: The name of the required check
                      app_id:
                        type: integer
                        description: The ID of the GitHub App that must provide this
                          check. Omit this field to automatically select the GitHub
                          App that has recently provided this check, or any app if
                          it was not set by a GitHub App. Pass -1 to explicitly allow
                          any app to set the status.
            examples:
              default:
                value:
                  strict: true
                  contexts:
                  - continuous-integration/travis-ci
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status-check-policy"
              examples:
                default:
                  "$ref": "#/components/examples/status-check-policy"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove status check protection
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/remove-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-status-check-protection
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts":
    get:
      summary: Get all status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-all-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-all-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/add-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  contexts:
                    type: array
                    description: The name of the status checks
                    items:
                      type: string
                required:
                - contexts
                example:
                  contexts:
                  - contexts
              - type: array
                description: The name of the status checks
                items:
                  type: string
            examples:
              default:
                summary: Example adding status checks to a branch protection rule
                value:
                  contexts:
                  - continuous-integration/travis-ci
                  - continuous-integration/jenkins
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
                  - continuous-integration/jenkins
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: branches
        subcategory: branch-protection
    put:
      summary: Set status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/set-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  contexts:
                    type: array
                    description: The name of the status checks
                    items:
                      type: string
                required:
                - contexts
                example:
                  contexts:
                  - contexts
              - type: array
                description: The name of the status checks
                items:
                  type: string
            examples:
              default:
                summary: Example updating status checks for a branch protection rule
                value:
                  contexts:
                  - continuous-integration/travis-ci
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove status check contexts
      description: Protected branches are available in public repositories with GitHub
        Free and GitHub Free for organizations, and in public and private repositories
        with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise
        Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/remove-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-status-check-contexts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  contexts:
                    type: array
                    description: The name of the status checks
                    items:
                      type: string
                required:
                - contexts
                example:
                  contexts:
                  - contexts
              - type: array
                description: The name of the status checks
                items:
                  type: string
            examples:
              default:
                summary: Example removing status checks from a branch protection rule
                value:
                  contexts:
                  - continuous-integration/jenkins
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions":
    get:
      summary: Get access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists who has access to this protected branch.

        **Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.
      tags:
      - repos
      operationId: repos/get-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-restriction-policy"
              examples:
                default:
                  "$ref": "#/components/examples/branch-restriction-policy"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Disables the ability to restrict who can push to this branch.
      tags:
      - repos
      operationId: repos/delete-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps":
    get:
      summary: Get apps with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      tags:
      - repos
      operationId: repos/get-apps-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-apps-with-access-to-the-protected-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      tags:
      - repos
      operationId: repos/add-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-app-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  apps:
                    type: array
                    description: 'The GitHub Apps that have push access to this branch.
                      Use the slugified version of the app name. **Note**: The list
                      of users, apps, and teams in total is limited to 100 items.'
                    items:
                      type: string
                required:
                - apps
                example:
                  apps:
                  - my-app
              - type: array
                items:
                  type: string
            examples:
              default:
                value:
                  apps:
                  - octoapp
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: branches
        subcategory: branch-protection
    put:
      summary: Set app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      tags:
      - repos
      operationId: repos/set-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-app-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  apps:
                    type: array
                    description: 'The GitHub Apps that have push access to this branch.
                      Use the slugified version of the app name. **Note**: The list
                      of users, apps, and teams in total is limited to 100 items.'
                    items:
                      type: string
                required:
                - apps
                example:
                  apps:
                  - my-app
              - type: array
                items:
                  type: string
            examples:
              default:
                value:
                  apps:
                  - octoapp
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove app access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.
      tags:
      - repos
      operationId: repos/remove-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-app-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  apps:
                    type: array
                    description: 'The GitHub Apps that have push access to this branch.
                      Use the slugified version of the app name. **Note**: The list
                      of users, apps, and teams in total is limited to 100 items.'
                    items:
                      type: string
                required:
                - apps
                example:
                  apps:
                  - my-app
              - type: array
                items:
                  type: string
            examples:
              default:
                value:
                  apps:
                  - my-app
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/integration"
              examples:
                default:
                  "$ref": "#/components/examples/integration-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams":
    get:
      summary: Get teams with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the teams who have push access to this branch. The list includes child teams.
      tags:
      - repos
      operationId: repos/get-teams-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-teams-with-access-to-the-protected-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified teams push access for this branch. You can also give push access to child teams.
      tags:
      - repos
      operationId: repos/add-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-team-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  teams:
                    type: array
                    description: The slug values for teams
                    items:
                      type: string
                required:
                - teams
                example:
                  teams:
                  - my-team
              - type: array
                description: The slug values for teams
                items:
                  type: string
            examples:
              default:
                summary: Example adding a team in a branch protection rule
                value:
                  teams:
                  - justice-league
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: branches
        subcategory: branch-protection
    put:
      summary: Set team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.
      tags:
      - repos
      operationId: repos/set-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-team-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  teams:
                    type: array
                    description: The slug values for teams
                    items:
                      type: string
                required:
                - teams
                example:
                  teams:
                  - justice-league
              - type: array
                description: The slug values for teams
                items:
                  type: string
            examples:
              default:
                summary: Example replacing a team in a branch protection rule
                value:
                  teams:
                  - justice-league
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove team access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of a team to push to this branch. You can also remove push access for child teams.
      tags:
      - repos
      operationId: repos/remove-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-team-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  teams:
                    type: array
                    description: The slug values for teams
                    items:
                      type: string
                required:
                - teams
                example:
                  teams:
                  - my-team
              - type: array
                description: The slug values for teams
                items:
                  type: string
            examples:
              default:
                summary: Example removing a team in a branch protection rule
                value:
                  teams:
                  - octocats
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users":
    get:
      summary: Get users with access to the protected branch
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists the people who have push access to this branch.
      tags:
      - repos
      operationId: repos/get-users-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-users-with-access-to-the-protected-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Grants the specified people push access for this branch.

        | Type    | Description                                                                                                                   |
        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/add-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-user-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  users:
                    type: array
                    description: The username for users
                    items:
                      type: string
                required:
                - users
                example:
                  users:
                  - mona
              - type: array
                items:
                  type: string
            examples:
              default:
                summary: Example adding a user in a branch protection rule
                value:
                  users:
                  - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
    put:
      summary: Set user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.

        | Type    | Description                                                                                                                   |
        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/set-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-user-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  users:
                    type: array
                    description: The username for users
                    items:
                      type: string
                required:
                - users
                example:
                  users:
                  - mona
              - type: array
                items:
                  type: string
            examples:
              default:
                summary: Example replacing a user in a branch protection rule
                value:
                  users:
                  - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove user access restrictions
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Removes the ability of a user to push to this branch.

        | Type    | Description                                                                                                                                   |
        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |
        | `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |
      tags:
      - repos
      operationId: repos/remove-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-user-access-restrictions
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  users:
                    type: array
                    description: The username for users
                    items:
                      type: string
                required:
                - users
                example:
                  users:
                  - mona
              - type: array
                items:
                  type: string
            examples:
              default:
                summary: Example removing a user in a branch protection rule
                value:
                  users:
                  - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
  "/repos/{owner}/{repo}/branches/{branch}/rename":
    post:
      summary: Rename a branch
      description: |-
        Renames a branch in a repository.

        **Note:** Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won't be able to push to the old branch name while the rename process is in progress. For more information, see "[Renaming a branch](https://docs.github.com/github/administering-a-repository/renaming-a-branch)".

        The permissions required to use this endpoint depends on whether you are renaming the default branch.

        To rename a non-default branch:

        * Users must have push access.
        * GitHub Apps must have the `contents:write` repository permission.

        To rename the default branch:

        * Users must have admin or owner permissions.
        * GitHub Apps must have the `administration:write` repository permission.
      tags:
      - repos
      operationId: repos/rename-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#rename-a-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  description: The new name of the branch.
              required:
              - new_name
            examples:
              default:
                value:
                  new_name: my_renamed_branch
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/branch-with-protection"
              examples:
                default:
                  "$ref": "#/components/examples/branch-with-protection"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  "/repos/{owner}/{repo}/check-runs":
    post:
      summary: Create a check run
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Creates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.

        In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.
      tags:
      - checks
      operationId: checks/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#create-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the check. For example, "code-coverage".
                head_sha:
                  type: string
                  description: The SHA of the commit.
                details_url:
                  type: string
                  description: The URL of the integrator's site that has the full
                    details of the check. If the integrator does not provide this,
                    then the homepage of the GitHub app is used.
                external_id:
                  type: string
                  description: A reference for the run on the integrator's system.
                status:
                  type: string
                  description: The current status.
                  enum:
                  - queued
                  - in_progress
                  - completed
                  default: queued
                started_at:
                  type: string
                  format: date-time
                  description: 'The time that the check run began. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                conclusion:
                  type: string
                  description: "**Required if you provide `completed_at` or a `status`
                    of `completed`**. The final conclusion of the check. \n**Note:**
                    Providing `conclusion` will automatically set the `status` parameter
                    to `completed`. You cannot change a check run conclusion to `stale`,
                    only GitHub can set this."
                  enum:
                  - action_required
                  - cancelled
                  - failure
                  - neutral
                  - success
                  - skipped
                  - stale
                  - timed_out
                completed_at:
                  type: string
                  format: date-time
                  description: 'The time the check completed. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                output:
                  type: object
                  description: Check runs can accept a variety of data in the `output`
                    object, including a `title` and `summary` and can optionally provide
                    descriptive details about the run.
                  properties:
                    title:
                      type: string
                      description: The title of the check run.
                    summary:
                      type: string
                      maxLength: 65535
                      description: 'The summary of the check run. This parameter supports
                        Markdown. **Maximum length**: 65535 characters.'
                    text:
                      type: string
                      maxLength: 65535
                      description: 'The details of the check run. This parameter supports
                        Markdown. **Maximum length**: 65535 characters.'
                    annotations:
                      type: array
                      description: Adds information from your analysis to specific
                        lines of code. Annotations are visible on GitHub in the **Checks**
                        and **Files changed** tab of the pull request. The Checks
                        API limits the number of annotations to a maximum of 50 per
                        API request. To create more than 50 annotations, you have
                        to make multiple requests to the [Update a check run](https://docs.github.com/rest/checks/runs#update-a-check-run)
                        endpoint. Each time you update the check run, annotations
                        are appended to the list of annotations that already exist
                        for the check run. GitHub Actions are limited to 10 warning
                        annotations and 10 error annotations per step. For details
                        about how you can view annotations on GitHub, see "[About
                        status checks](https://docs.github.com/articles/about-status-checks#checks)".
                      maxItems: 50
                      items:
                        type: object
                        properties:
                          path:
                            type: string
                            description: The path of the file to add an annotation
                              to. For example, `assets/css/main.css`.
                          start_line:
                            type: integer
                            description: The start line of the annotation. Line numbers
                              start at 1.
                          end_line:
                            type: integer
                            description: The end line of the annotation.
                          start_column:
                            type: integer
                            description: The start column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values. Column numbers start at 1.
                          end_column:
                            type: integer
                            description: The end column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values.
                          annotation_level:
                            type: string
                            description: The level of the annotation.
                            enum:
                            - notice
                            - warning
                            - failure
                          message:
                            type: string
                            description: A short description of the feedback for these
                              lines of code. The maximum size is 64 KB.
                          title:
                            type: string
                            description: The title that represents the annotation.
                              The maximum size is 255 characters.
                          raw_details:
                            type: string
                            description: Details about this annotation. The maximum
                              size is 64 KB.
                        required:
                        - path
                        - start_line
                        - end_line
                        - annotation_level
                        - message
                    images:
                      type: array
                      description: Adds images to the output displayed in the GitHub
                        pull request UI.
                      items:
                        type: object
                        properties:
                          alt:
                            type: string
                            description: The alternative text for the image.
                          image_url:
                            type: string
                            description: The full URL of the image.
                          caption:
                            type: string
                            description: A short image description.
                        required:
                        - alt
                        - image_url
                  required:
                  - title
                  - summary
                actions:
                  type: array
                  description: Displays a button on GitHub that can be clicked to
                    alert your app to do additional tasks. For example, a code linting
                    app can display a button that automatically fixes detected errors.
                    The button created in this object is displayed after the check
                    run completes. When a user clicks the button, GitHub sends the
                    [`check_run.requested_action` webhook](https://docs.github.com/webhooks/event-payloads/#check_run)
                    to your app. Each action includes a `label`, `identifier` and
                    `description`. A maximum of three actions are accepted. To learn
                    more about check runs and requested actions, see "[Check runs
                    and requested actions](https://docs.github.com/rest/guides/using-the-rest-api-to-interact-with-checks#check-runs-and-requested-actions)."
                  maxItems: 3
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        maxLength: 20
                        description: The text to be displayed on a button in the web
                          UI. The maximum size is 20 characters.
                      description:
                        type: string
                        maxLength: 40
                        description: A short explanation of what this action would
                          do. The maximum size is 40 characters.
                      identifier:
                        type: string
                        maxLength: 20
                        description: A reference for the action on the integrator's
                          system. The maximum size is 20 characters.
                    required:
                    - label
                    - description
                    - identifier
              required:
              - name
              - head_sha
              oneOf:
              - properties:
                  status:
                    enum:
                    - completed
                required:
                - status
                - conclusion
                additionalProperties: true
              - properties:
                  status:
                    enum:
                    - queued
                    - in_progress
                additionalProperties: true
            examples:
              example-of-in-progress-conclusion:
                summary: Example of an in_progress conclusion
                value:
                  name: mighty_readme
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  status: in_progress
                  external_id: '42'
                  started_at: '2018-05-04T01:14:52Z'
                  output:
                    title: Mighty Readme report
                    summary: ''
                    text: ''
              example-of-completed-conclusion:
                summary: Example of a completed conclusion
                value:
                  name: mighty_readme
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  status: completed
                  started_at: '2017-11-30T19:39:10Z'
                  conclusion: success
                  completed_at: '2017-11-30T19:49:10Z'
                  output:
                    title: Mighty Readme report
                    summary: There are 0 failures, 2 warnings, and 1 notices.
                    text: You may have some misspelled words on lines 2 and 4. You
                      also may want to add a section in your README about how to install
                      your app.
                    annotations:
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'banaas'.
                      raw_details: Do you mean 'bananas' or 'banana'?
                      start_line: 2
                      end_line: 2
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'aples'
                      raw_details: Do you mean 'apples' or 'Naples'
                      start_line: 4
                      end_line: 4
                    images:
                    - alt: Super bananas
                      image_url: http://example.com/images/42
                  actions:
                  - label: Fix
                    identifier: fix_errors
                    description: Allow us to fix these errors for you
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run"
              examples:
                example-of-completed-conclusion:
                  "$ref": "#/components/examples/check-run-example-of-completed-conclusion"
                example-of-in-progress-conclusion:
                  "$ref": "#/components/examples/check-run-example-of-in-progress-conclusion"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}":
    get:
      summary: Get a check run
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        Gets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth apps and authenticated users must have the `repo` scope to get check runs in a private repository.
      tags:
      - checks
      operationId: checks/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#get-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-run-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run"
              examples:
                default:
                  "$ref": "#/components/examples/check-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
    patch:
      summary: Update a check run
      description: |-
        Updates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.

        **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.
      tags:
      - checks
      operationId: checks/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#update-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-run-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the check. For example, "code-coverage".
                details_url:
                  type: string
                  description: The URL of the integrator's site that has the full
                    details of the check.
                external_id:
                  type: string
                  description: A reference for the run on the integrator's system.
                started_at:
                  type: string
                  format: date-time
                  description: 'This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                    format: `YYYY-MM-DDTHH:MM:SSZ`.'
                status:
                  type: string
                  description: The current status.
                  enum:
                  - queued
                  - in_progress
                  - completed
                conclusion:
                  type: string
                  description: "**Required if you provide `completed_at` or a `status`
                    of `completed`**. The final conclusion of the check. \n**Note:**
                    Providing `conclusion` will automatically set the `status` parameter
                    to `completed`. You cannot change a check run conclusion to `stale`,
                    only GitHub can set this."
                  enum:
                  - action_required
                  - cancelled
                  - failure
                  - neutral
                  - success
                  - skipped
                  - stale
                  - timed_out
                completed_at:
                  type: string
                  format: date-time
                  description: 'The time the check completed. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                output:
                  type: object
                  description: Check runs can accept a variety of data in the `output`
                    object, including a `title` and `summary` and can optionally provide
                    descriptive details about the run.
                  properties:
                    title:
                      type: string
                      description: "**Required**."
                    summary:
                      type: string
                      description: Can contain Markdown.
                      maxLength: 65535
                    text:
                      type: string
                      description: Can contain Markdown.
                      maxLength: 65535
                    annotations:
                      type: array
                      description: Adds information from your analysis to specific
                        lines of code. Annotations are visible in GitHub's pull request
                        UI. Annotations are visible in GitHub's pull request UI. The
                        Checks API limits the number of annotations to a maximum of
                        50 per API request. To create more than 50 annotations, you
                        have to make multiple requests to the [Update a check run](https://docs.github.com/rest/checks/runs#update-a-check-run)
                        endpoint. Each time you update the check run, annotations
                        are appended to the list of annotations that already exist
                        for the check run. GitHub Actions are limited to 10 warning
                        annotations and 10 error annotations per step. For details
                        about annotations in the UI, see "[About status checks](https://docs.github.com/articles/about-status-checks#checks)".
                      maxItems: 50
                      items:
                        type: object
                        properties:
                          path:
                            type: string
                            description: The path of the file to add an annotation
                              to. For example, `assets/css/main.css`.
                          start_line:
                            type: integer
                            description: The start line of the annotation. Line numbers
                              start at 1.
                          end_line:
                            type: integer
                            description: The end line of the annotation.
                          start_column:
                            type: integer
                            description: The start column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values. Column numbers start at 1.
                          end_column:
                            type: integer
                            description: The end column of the annotation. Annotations
                              only support `start_column` and `end_column` on the
                              same line. Omit this parameter if `start_line` and `end_line`
                              have different values.
                          annotation_level:
                            type: string
                            description: The level of the annotation.
                            enum:
                            - notice
                            - warning
                            - failure
                          message:
                            type: string
                            description: A short description of the feedback for these
                              lines of code. The maximum size is 64 KB.
                          title:
                            type: string
                            description: The title that represents the annotation.
                              The maximum size is 255 characters.
                          raw_details:
                            type: string
                            description: Details about this annotation. The maximum
                              size is 64 KB.
                        required:
                        - path
                        - start_line
                        - end_line
                        - annotation_level
                        - message
                    images:
                      type: array
                      description: Adds images to the output displayed in the GitHub
                        pull request UI.
                      items:
                        type: object
                        properties:
                          alt:
                            type: string
                            description: The alternative text for the image.
                          image_url:
                            type: string
                            description: The full URL of the image.
                          caption:
                            type: string
                            description: A short image description.
                        required:
                        - alt
                        - image_url
                  required:
                  - summary
                actions:
                  type: array
                  description: Possible further actions the integrator can perform,
                    which a user may trigger. Each action includes a `label`, `identifier`
                    and `description`. A maximum of three actions are accepted. To
                    learn more about check runs and requested actions, see "[Check
                    runs and requested actions](https://docs.github.com/rest/guides/using-the-rest-api-to-interact-with-checks#check-runs-and-requested-actions)."
                  maxItems: 3
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        maxLength: 20
                        description: The text to be displayed on a button in the web
                          UI. The maximum size is 20 characters.
                      description:
                        type: string
                        maxLength: 40
                        description: A short explanation of what this action would
                          do. The maximum size is 40 characters.
                      identifier:
                        type: string
                        maxLength: 20
                        description: A reference for the action on the integrator's
                          system. The maximum size is 20 characters.
                    required:
                    - label
                    - description
                    - identifier
              anyOf:
              - properties:
                  status:
                    enum:
                    - completed
                required:
                - conclusion
                additionalProperties: true
              - properties:
                  status:
                    enum:
                    - queued
                    - in_progress
                additionalProperties: true
            examples:
              default:
                value:
                  name: mighty_readme
                  started_at: '2018-05-04T01:14:52Z'
                  status: completed
                  conclusion: success
                  completed_at: '2018-05-04T01:14:52Z'
                  output:
                    title: Mighty Readme report
                    summary: There are 0 failures, 2 warnings, and 1 notices.
                    text: You may have some misspelled words on lines 2 and 4. You
                      also may want to add a section in your README about how to install
                      your app.
                    annotations:
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'banaas'.
                      raw_details: Do you mean 'bananas' or 'banana'?
                      start_line: 2
                      end_line: 2
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'aples'
                      raw_details: Do you mean 'apples' or 'Naples'
                      start_line: 4
                      end_line: 4
                    images:
                    - alt: Super bananas
                      image_url: http://example.com/images/42
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run"
              examples:
                default:
                  "$ref": "#/components/examples/check-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations":
    get:
      summary: List check run annotations
      description: Lists annotations for a check run using the annotation `id`. GitHub
        Apps must have the `checks:read` permission on a private repository or pull
        access to a public repository to get annotations for a check run. OAuth apps
        and authenticated users must have the `repo` scope to get annotations for
        a check run in a private repository.
      tags:
      - checks
      operationId: checks/list-annotations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#list-check-run-annotations
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-run-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/check-annotation"
              examples:
                default:
                  "$ref": "#/components/examples/check-annotation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest":
    post:
      summary: Rerequest a check run
      description: |-
        Triggers GitHub to rerequest an existing check run, without pushing new code to a repository. This endpoint will trigger the [`check_run` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) event with the action `rerequested`. When a check run is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.

        To rerequest a check run, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.

        For more information about how to re-run GitHub Actions jobs, see "[Re-run a job from a workflow run](https://docs.github.com/rest/actions/workflow-runs#re-run-a-job-from-a-workflow-run)".
      tags:
      - checks
      operationId: checks/rerequest-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#rerequest-a-check-run
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-run-id"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '403':
          description: Forbidden if the check run is not rerequestable or doesn't
            belong to the authenticated GitHub App
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Validation error if the check run is not rerequestable
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-suites":
    post:
      summary: Create a check suite
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.

        By default, check suites are automatically created when you create a [check run](https://docs.github.com/rest/checks/runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using "[Update repository preferences for check suites](https://docs.github.com/rest/checks/suites#update-repository-preferences-for-check-suites)". Your GitHub App must have the `checks:write` permission to create check suites.
      tags:
      - checks
      operationId: checks/create-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#create-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                head_sha:
                  type: string
                  description: The sha of the head commit.
              required:
              - head_sha
            examples:
              default:
                value:
                  head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
      responses:
        '200':
          description: Response when the suite already exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite"
        '201':
          description: Response when the suite was created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/preferences":
    patch:
      summary: Update repository preferences for check suites
      description: Changes the default automatic flow when creating check suites.
        By default, a check suite is automatically created each time code is pushed
        to a repository. When you disable the automatic creation of check suites,
        you can manually [Create a check suite](https://docs.github.com/rest/checks/suites#create-a-check-suite).
        You must have admin permissions in the repository to set preferences for check
        suites.
      tags:
      - checks
      operationId: checks/set-suites-preferences
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#update-repository-preferences-for-check-suites
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_trigger_checks:
                  type: array
                  description: Enables or disables automatic creation of CheckSuite
                    events upon pushes to the repository. Enabled by default.
                  items:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        description: The `id` of the GitHub App.
                      setting:
                        type: boolean
                        description: Set to `true` to enable automatic creation of
                          CheckSuite events upon pushes to the repository, or `false`
                          to disable them.
                        default: true
                    required:
                    - app_id
                    - setting
            examples:
              default:
                value:
                  auto_trigger_checks:
                  - app_id: 4
                    setting: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite-preference"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite-preference"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}":
    get:
      summary: Get a check suite
      description: |-
        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.

        Gets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth apps and authenticated users must have the `repo` scope to get check suites in a private repository.
      tags:
      - checks
      operationId: checks/get-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#get-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-suite-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs":
    get:
      summary: List check runs in a check suite
      description: |-
        Lists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth apps and authenticated users must have the `repo` scope to get check runs in a private repository.

        **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.
      tags:
      - checks
      operationId: checks/list-for-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#list-check-runs-in-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-suite-id"
      - "$ref": "#/components/parameters/check-name"
      - "$ref": "#/components/parameters/status"
      - name: filter
        description: Filters check runs by their `completed_at` timestamp. `latest`
          returns the most recent check runs.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run-response"
              examples:
                default:
                  "$ref": "#/components/examples/check-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest":
    post:
      summary: Rerequest a check suite
      description: |-
        Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.

        To rerequest a check suite, your GitHub App must have the `checks:write` permission on a private repository or pull access to a public repository.
      tags:
      - checks
      operationId: checks/rerequest-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#rerequest-a-check-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/check-suite-id"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/code-scanning/alerts":
    get:
      summary: List code scanning alerts for a repository
      description: |-
        Lists code scanning alerts.

        To use this endpoint, you must use an access token with the `security_events` scope or, for alerts from public repositories only, an access token with the `public_repo` scope.

        GitHub Apps must have the `security_events` read
        permission to use this endpoint.

        The response includes a `most_recent_instance` object.
        This provides details of the most recent instance of this alert
        for the default branch (or for the specified Git reference if you used `ref` in the request).
      tags:
      - code-scanning
      operationId: code-scanning/list-alerts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#list-code-scanning-alerts-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/tool-name"
      - "$ref": "#/components/parameters/tool-guid"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/git-ref"
      - "$ref": "#/components/parameters/direction"
      - name: sort
        description: The property by which to sort the results.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          default: created
      - name: state
        description: If specified, only code scanning alerts with this state will
          be returned.
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/code-scanning-alert-state-query"
      - name: severity
        description: If specified, only code scanning alerts with this severity will
          be returned.
        in: query
        required: false
        schema:
          "$ref": "#/components/schemas/code-scanning-alert-severity"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-scanning-alert-items"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-alert-items"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}":
    get:
      summary: Get a code scanning alert
      description: Gets a single code scanning alert. You must use an access token
        with the `security_events` scope to use this endpoint with private repos,
        the `public_repo` scope also grants permission to read security events on
        public repos only. GitHub Apps must have the `security_events` read permission
        to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/get-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#get-a-code-scanning-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/alert-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-alert"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
    patch:
      summary: Update a code scanning alert
      description: Updates the status of a single code scanning alert. You must use
        an access token with the `security_events` scope to use this endpoint with
        private repositories. You can also use tokens with the `public_repo` scope
        for public repositories only. GitHub Apps must have the `security_events`
        write permission to use this endpoint.
      operationId: code-scanning/update-alert
      tags:
      - code-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#update-a-code-scanning-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/alert-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  "$ref": "#/components/schemas/code-scanning-alert-set-state"
                dismissed_reason:
                  "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
                dismissed_comment:
                  "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
              required:
              - state
            examples:
              default:
                value:
                  state: dismissed
                  dismissed_reason: false positive
                  dismissed_comment: This alert is not actually correct, because there's
                    a sanitizer included in the library.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-alert-dismissed"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_write"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances":
    get:
      summary: List instances of a code scanning alert
      description: |-
        Lists all instances of the specified code scanning alert.
        You must use an access token with the `security_events` scope to use this endpoint with private repos,
        the `public_repo` scope also grants permission to read security events on public repos only.
        GitHub Apps must have the `security_events` read permission to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/list-alert-instances
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#list-instances-of-a-code-scanning-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/alert-number"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/git-ref"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-scanning-alert-instance"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-alert-instances"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/analyses":
    get:
      summary: List code scanning analyses for a repository
      description: |-
        Lists the details of all code scanning analyses for a repository,
        starting with the most recent.
        The response is paginated and you can use the `page` and `per_page` parameters
        to list the analyses you're interested in.
        By default 30 analyses are listed per page.

        The `rules_count` field in the response give the number of rules
        that were run in the analysis.
        For very old analyses this data is not available,
        and `0` is returned in this field.

        You must use an access token with the `security_events` scope to use this endpoint with private repos,
        the `public_repo` scope also grants permission to read security events on public repos only.
        GitHub Apps must have the `security_events` read permission to use this endpoint.

        **Deprecation notice**:
        The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.
      operationId: code-scanning/list-recent-analyses
      tags:
      - code-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#list-code-scanning-analyses-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/tool-name"
      - "$ref": "#/components/parameters/tool-guid"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - name: ref
        in: query
        description: The Git reference for the analyses you want to list. The `ref`
          for a branch can be formatted either as `refs/heads/<branch name>` or simply
          `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
        required: false
        schema:
          "$ref": "#/components/schemas/code-scanning-ref"
      - name: sarif_id
        in: query
        description: Filter analyses belonging to the same SARIF upload.
        required: false
        schema:
          "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
      - "$ref": "#/components/parameters/direction"
      - name: sort
        description: The property by which to sort the results.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          default: created
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-scanning-analysis"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-analysis-items"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}":
    get:
      summary: Get a code scanning analysis for a repository
      description: |-
        Gets a specified code scanning analysis for a repository.
        You must use an access token with the `security_events` scope to use this endpoint with private repos,
        the `public_repo` scope also grants permission to read security events on public repos only.
        GitHub Apps must have the `security_events` read permission to use this endpoint.

        The default JSON response contains fields that describe the analysis.
        This includes the Git reference and commit SHA to which the analysis relates,
        the datetime of the analysis, the name of the code scanning tool,
        and the number of alerts.

        The `rules_count` field in the default response give the number of rules
        that were run in the analysis.
        For very old analyses this data is not available,
        and `0` is returned in this field.

        If you use the Accept header `application/sarif+json`,
        the response contains the analysis data that was uploaded.
        This is formatted as
        [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html).
      operationId: code-scanning/get-analysis
      tags:
      - code-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#get-a-code-scanning-analysis-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: analysis_id
        in: path
        description: The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses`
          operation.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-analysis"
              examples:
                response:
                  "$ref": "#/components/examples/code-scanning-analysis-default"
            application/json+sarif:
              schema:
                type: object
                additionalProperties: true
              examples:
                response:
                  "$ref": "#/components/examples/code-scanning-analysis-sarif"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: code-scanning
        subcategory: code-scanning
    delete:
      summary: Delete a code scanning analysis from a repository
      description: |-
        Deletes a specified code scanning analysis from a repository. For
        private repositories, you must use an access token with the `repo` scope. For public repositories,
        you must use an access token with `public_repo` scope.
        GitHub Apps must have the `security_events` write permission to use this endpoint.

        You can delete one analysis at a time.
        To delete a series of analyses, start with the most recent analysis and work backwards.
        Conceptually, the process is similar to the undo function in a text editor.

        When you list the analyses for a repository,
        one or more will be identified as deletable in the response:

        ```
        "deletable": true
        ```

        An analysis is deletable when it's the most recent in a set of analyses.
        Typically, a repository will have multiple sets of analyses
        for each enabled code scanning tool,
        where a set is determined by a unique combination of analysis values:

        * `ref`
        * `tool`
        * `category`

        If you attempt to delete an analysis that is not the most recent in a set,
        you'll get a 400 response with the message:

        ```
        Analysis specified is not deletable.
        ```

        The response from a successful `DELETE` operation provides you with
        two alternative URLs for deleting the next analysis in the set:
        `next_analysis_url` and `confirm_delete_url`.
        Use the `next_analysis_url` URL if you want to avoid accidentally deleting the final analysis
        in a set. This is a useful option if you want to preserve at least one analysis
        for the specified tool in your repository.
        Use the `confirm_delete_url` URL if you are content to remove all analyses for a tool.
        When you delete the last analysis in a set, the value of `next_analysis_url` and `confirm_delete_url`
        in the 200 response is `null`.

        As an example of the deletion process,
        let's imagine that you added a workflow that configured a particular code scanning tool
        to analyze the code in a repository. This tool has added 15 analyses:
        10 on the default branch, and another 5 on a topic branch.
        You therefore have two separate sets of analyses for this tool.
        You've now decided that you want to remove all of the analyses for the tool.
        To do this you must make 15 separate deletion requests.
        To start, you must find an analysis that's identified as deletable.
        Each set of analyses always has one that's identified as deletable.
        Having found the deletable analysis for one of the two sets,
        delete this analysis and then continue deleting the next analysis in the set until they're all deleted.
        Then repeat the process for the second set.
        The procedure therefore consists of a nested loop:

        **Outer loop**:
        * List the analyses for the repository, filtered by tool.
        * Parse this list to find a deletable analysis. If found:

          **Inner loop**:
          * Delete the identified analysis.
          * Parse the response for the value of `confirm_delete_url` and, if found, use this in the next iteration.

        The above process assumes that you want to remove all trace of the tool's analyses from the GitHub user interface, for the specified repository, and it therefore uses the `confirm_delete_url` value. Alternatively, you could use the `next_analysis_url` value, which would leave the last analysis in each set undeleted to avoid removing a tool's analysis entirely.
      operationId: code-scanning/delete-analysis
      tags:
      - code-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#delete-a-code-scanning-analysis-from-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: analysis_id
        in: path
        description: The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses`
          operation.
        required: true
        schema:
          type: integer
      - name: confirm_delete
        in: query
        description: 'Allow deletion if the specified analysis is the last in a set.
          If you attempt to delete the final analysis in a set without setting this
          parameter to `true`, you''ll get a 400 response with the message: `Analysis
          is last of its type and deletion may result in the loss of historical alert
          data. Please specify confirm_delete.`'
        required: false
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-analysis-deletion"
              examples:
                default-response:
                  "$ref": "#/components/examples/code-scanning-analysis-deletion"
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_write"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/codeql/databases":
    get:
      summary: List CodeQL databases for a repository
      description: |-
        Lists the CodeQL databases that are available in a repository.

        For private repositories, you must use an access token with the `security_events` scope.
        For public repositories, you can use tokens with the `security_events` or `public_repo` scope.
        GitHub Apps must have the `contents` read permission to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/list-codeql-databases
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#list-codeql-databases-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-scanning-codeql-database"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-codeql-databases"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}":
    get:
      summary: Get a CodeQL database for a repository
      description: |-
        Gets a CodeQL database for a language in a repository.

        By default this endpoint returns JSON metadata about the CodeQL database. To
        download the CodeQL database binary content, set the `Accept` header of the request
        to [`application/zip`](https://docs.github.com/rest/overview/media-types), and make sure
        your HTTP client is configured to follow redirects or use the `Location` header
        to make a second request to get the redirect URL.

        For private repositories, you must use an access token with the `security_events` scope.
        For public repositories, you can use tokens with the `security_events` or `public_repo` scope.
        GitHub Apps must have the `contents` read permission to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/get-codeql-database
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#get-a-codeql-database-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: language
        in: path
        description: The language of the CodeQL database.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-codeql-database"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-codeql-database"
        '302':
          "$ref": "#/components/responses/found"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/default-setup":
    get:
      summary: Get a code scanning default setup configuration
      description: |-
        Gets a code scanning default setup configuration.
        You must use an access token with the `repo` scope to use this endpoint with private repos or the `public_repo`
        scope for public repos. GitHub Apps must have the `repo` write permission to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/get-default-setup
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#get-a-code-scanning-default-setup-configuration
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-default-setup"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-default-setup"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
    patch:
      summary: Update a code scanning default setup configuration
      description: |-
        Updates a code scanning default setup configuration.
        You must use an access token with the `repo` scope to use this endpoint with private repos or the `public_repo`
        scope for public repos. GitHub Apps must have the `repo` write permission to use this endpoint.
      tags:
      - code-scanning
      operationId: code-scanning/update-default-setup
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#update-a-code-scanning-default-setup-configuration
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/code-scanning-default-setup-update"
            examples:
              default:
                "$ref": "#/components/examples/code-scanning-default-setup-update"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-default-setup-update-response"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-default-setup-update-response"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_write"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/code_scanning_conflict"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/sarifs":
    post:
      summary: Upload an analysis as SARIF data
      description: "Uploads SARIF data containing the results of a code scanning analysis
        to make the results available in a repository. You must use an access token
        with the `security_events` scope to use this endpoint for private repositories.
        You can also use tokens with the `public_repo` scope for public repositories
        only. GitHub Apps must have the `security_events` write permission to use
        this endpoint. For troubleshooting information, see \"[Troubleshooting SARIF
        uploads](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif).\"\n\nThere
        are two places where you can upload code scanning results.\n - If you upload
        to a pull request, for example `--ref refs/pull/42/merge` or `--ref refs/pull/42/head`,
        then the results appear as alerts in a pull request check. For more information,
        see \"[Triaging code scanning alerts in pull requests](/code-security/secure-coding/triaging-code-scanning-alerts-in-pull-requests).\"\n
        - If you upload to a branch, for example `--ref refs/heads/my-branch`, then
        the results appear in the **Security** tab for your repository. For more information,
        see \"[Managing code scanning alerts for your repository](/code-security/secure-coding/managing-code-scanning-alerts-for-your-repository#viewing-the-alerts-for-a-repository).\"\n\nYou
        must compress the SARIF-formatted analysis data that you want to upload, using
        `gzip`, and then encode it as a Base64 format string. For example:\n\n```\ngzip
        -c analysis-data.sarif | base64 -w0\n```\n<br>\nSARIF upload supports a maximum
        number of entries per the following data objects, and an analysis will be
        rejected if any of these objects is above its maximum value. For some objects,
        there are additional values over which the entries will be ignored while keeping
        the most important entries whenever applicable.\nTo get the most out of your
        analysis when it includes data above the supported limits, try to optimize
        the analysis configuration. For example, for the CodeQL tool, identify and
        remove the most noisy queries. For more information, see \"[SARIF results
        exceed one or more limits](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif/results-exceed-limit).\"\n\n\n|
        **SARIF data**                   | **Maximum values** | **Additional limits**
        \                                                           |\n|----------------------------------|:------------------:|----------------------------------------------------------------------------------|\n|
        Runs per file                    |         20         |                                                                                  |\n|
        Results per run                  |       25,000       | Only the top 5,000
        results will be included, prioritized by severity.            |\n| Rules per
        run                    |       25,000       |                                                                                  |\n|
        Tool extensions per run          |        100         |                                                                                  |\n|
        Thread Flow Locations per result |       10,000       | Only the top 1,000
        Thread Flow Locations will be included, using prioritization. |\n| Location
        per result\t             |       1,000        | Only 100 locations will be
        included.                                             |\n| Tags per rule\t
        \                  |         20         | Only 10 tags will be included.                                                   |\n\n\nThe
        `202 Accepted` response includes an `id` value.\nYou can use this ID to check
        the status of the upload by using it in the `/sarifs/{sarif_id}` endpoint.\nFor
        more information, see \"[Get information about a SARIF upload](/rest/code-scanning/code-scanning#get-information-about-a-sarif-upload).\""
      operationId: code-scanning/upload-sarif
      tags:
      - code-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#upload-an-analysis-as-sarif-data
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commit_sha:
                  "$ref": "#/components/schemas/code-scanning-analysis-commit-sha"
                ref:
                  "$ref": "#/components/schemas/code-scanning-ref"
                sarif:
                  "$ref": "#/components/schemas/code-scanning-analysis-sarif-file"
                checkout_uri:
                  description: |-
                    The base directory used in the analysis, as it appears in the SARIF file.
                    This property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository.
                  example: file:///github/workspace/
                  type: string
                  format: uri
                started_at:
                  description: 'The time that the analysis run began. This is a timestamp
                    in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`.'
                  format: date-time
                  type: string
                tool_name:
                  description: The name of the tool used to generate the code scanning
                    analysis. If this parameter is not used, the tool name defaults
                    to "API". If the uploaded SARIF contains a tool GUID, this will
                    be available for filtering using the `tool_guid` parameter of
                    operations such as `GET /repos/{owner}/{repo}/code-scanning/alerts`.
                  type: string
                validate:
                  description: |-
                    Whether the SARIF file will be validated according to the code scanning specifications.
                    This parameter is intended to help integrators ensure that the uploaded SARIF files are correctly rendered by code scanning.
                  type: boolean
              required:
              - commit_sha
              - ref
              - sarif
            examples:
              default:
                value:
                  commit_sha: 4b6472266afd7b471e86085a6659e8c7f2b119da
                  ref: refs/heads/master
                  sarif: H4sICMLGdF4AA2V4YW1wbGUuc2FyaWYAvVjdbts2FL7PUxDCijaA/CM7iRNfLkPXYgHSNstumlzQ0pHFVCI1korjFgH2ONtr7Ul2KFmy/mOn6QIkjsjDw0/nfN85NL8dEGL9pNwAImqRObECrWM1H40kXQ2XTAfJIlEgXcE1cD10RTQSVDE10K4aKSqZP1AxuKOIKg1ydJU60jSfSh8Hk6EzHA/vlOCWbfa7B6kYPpj90rlsWCZcmbHP5Bs+4oAWIjQD2SMOeJLh2vIQDnIaQerqXHjw8YIgxohybxAyDsS4cAPKsp03K4RcUs6+Up2D+JXpd8mibKIQN9fM/aMCdbyBujGSSQgVxJtx5qX2d2qUcIweQhEuDQf3GBO6CKHkogx/N3MVCKl/AeVKFuf4y5ubsMGDTj1ep+5I7sgmLIpxtU38hLtmMRGSuCFVyip5eKzs5ydh+LztVL6f2m6oih1BkYiuyQIIJWodxVpERPj4sEiWBNNH8EWT0DMG8EAjzKVHXCrB4FkPu/F64NMk1OeC+2yZSNoBOoR7CC0EzYWGbm+xFDFIzbI011+cLjfZtyJkmMZfumAh02uL3NpV2y+MZ6RAjxibyKrNxxJcVjANSb4eBGwZ1M0KsuyR2poLr5rMl8vaDSeVn6eTWEO2j2xIEcmhwlTKNOi4GMOI8gfuZYkvJ7b4v5Tiumyz7RnHeodFzpS8ASIZCH/AYdWi2z3sG8JtFxJ6fF9yR9CdifBr9Pd6d5V2+zbJKjjCFGGmsHuYFy2ytJq9tUxcLSRSQecppOGKrpUxYfxefMEFK+wOGa4hudQByBVT0L+EKtyACxnRsABhEx1QjVDs1KNI9MbpnhqfE45B6FJvu3hRu5VRU9MhZLmK7fqkKyQSTHNoyMqUFMqXCV3CwAeqEwmVokraK8IuBaGvHjQ0gMYrKjnjyw7uk9uD8tgmsBbFMPnU1bV2ZhkJNkuolUiWys3UPWzs5aaIUz9TBe8zMb+6+nT+6fLy91dlE3xzeDDT4zYszb0bW6NjJd0Rvn2EnLvWLFSdKPpBzInzfRgu8ETyMcH8nIfMnJCeC2PyfTA+UKngcnGH7Hw2hGkVQs5YlIRCtdWZYQ4/73es2JlxkfViOEIhoWJq5Oo6UBBfiKIqFBWhiE3jJGbFwVoxBHTRSuIS67sMeplei24X20shLjG+8gqbKC/bESiNMC+wd5q5id0yeS7CJEqXzmrTWNq3k05l84P6f4/bEmXFJjI0fIt1BGQssUnUDkBYeVhE5TqPnMH3jqogDcP0zKcTgLPTMSzOjhbjuVOmW23l1fYNStulfo6sXlFsGLhbDy5RECPRYGCTgOj2bd4nUQEivEd0H7KKYxqnEhFohuur3a3UPskbH/+Yg0+M5P2MHRJu3ziHh3Z2NCrWt3XF1rWTw8Ne/pfbWYXnDSE0SNZQQt1i18q7te2vOhu7ehWuvVyeu0wbLZi24mhoo6aOOTltzG/lgdVvVoXQq5V+pewkFIzL8fjEcadT55jOjpzFzHuOTtDNrMkJPMVQDd7F09RID72O/UPZ0tmctqZ7kWX6EmSZnDpP8GU67SXM8XE3YSrxbKsx6UReZ4y6n/FVZfJjs9Z7stma75W5yQtkzjk5eSJxk1lv4o7+j8TlhaJ2lsKWZO6lruDPBLib3x5ZN/KGWzZ+pn///evv7OOf4iIBv3oY9L/l1wiJ9p0Tc+F1zZnOE9NxXWEus6IQhr5pMfoqxi8WPsuu0azsns4UC6WzNzHIzbeEx4P/AJ3SefgcFAAA
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-sarifs-receipt"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-sarif-upload"
        '400':
          description: Bad Request if the sarif field is invalid
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_write"
        '404':
          "$ref": "#/components/responses/not_found"
        '413':
          description: Payload Too Large if the sarif field is too large
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}":
    get:
      summary: Get information about a SARIF upload
      description: Gets information about a SARIF upload, including the status and
        the URL of the analysis that was uploaded so that you can retrieve details
        of the analysis. For more information, see "[Get a code scanning analysis
        for a repository](/rest/code-scanning/code-scanning#get-a-code-scanning-analysis-for-a-repository)."
        You must use an access token with the `security_events` scope to use this
        endpoint with private repos, the `public_repo` scope also grants permission
        to read security events on public repos only. GitHub Apps must have the `security_events`
        read permission to use this endpoint.
      operationId: code-scanning/get-sarif
      tags:
      - code-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/code-scanning/code-scanning#get-information-about-a-sarif-upload
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sarif_id
        description: The SARIF ID obtained after uploading.
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-scanning-sarifs-status"
              examples:
                default:
                  "$ref": "#/components/examples/code-scanning-sarif-upload-status"
        '403':
          "$ref": "#/components/responses/code_scanning_forbidden_read"
        '404':
          description: Not Found if the sarif id does not match any upload
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: code-scanning
        subcategory: code-scanning
  "/repos/{owner}/{repo}/codeowners/errors":
    get:
      summary: List CODEOWNERS errors
      description: |-
        List any syntax errors that are detected in the CODEOWNERS
        file.

        For more information about the correct CODEOWNERS syntax,
        see "[About code owners](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners)."
      tags:
      - repos
      operationId: repos/codeowners-errors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-codeowners-errors
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: 'A branch, tag or commit name used to determine which version
          of the CODEOWNERS file to use. Default: the repository''s default branch
          (e.g. `main`)'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codeowners-errors"
              examples:
                default:
                  "$ref": "#/components/examples/codeowners-errors"
        '404':
          description: Resource not found
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/codespaces":
    get:
      summary: List codespaces in a repository for the authenticated user
      description: |-
        Lists the codespaces associated to a specified repository and the authenticated user.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have read access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-in-repository-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#list-codespaces-in-a-repository-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-list-for-repository"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
    post:
      summary: Create a codespace in a repository
      description: |-
        Creates a codespace owned by the authenticated user in the specified repository.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/create-with-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#create-a-codespace-in-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                ref:
                  description: Git ref (typically a branch name) for this codespace
                  type: string
                location:
                  description: The requested location for a new codespace. Best efforts
                    are made to respect this upon creation. Assigned by IP if not
                    provided.
                  type: string
                geo:
                  description: The geographic area for this codespace. If not specified,
                    the value is assigned by IP. This property replaces `location`,
                    which is being deprecated.
                  type: string
                  enum:
                  - EuropeWest
                  - SoutheastAsia
                  - UsEast
                  - UsWest
                client_ip:
                  description: IP for location auto-detection when proxying a request
                  type: string
                machine:
                  description: Machine type to use for this codespace
                  type: string
                devcontainer_path:
                  description: Path to devcontainer.json config to use for this codespace
                  type: string
                multi_repo_permissions_opt_out:
                  description: Whether to authorize requested permissions from devcontainer.json
                  type: boolean
                working_directory:
                  description: Working directory for this codespace
                  type: string
                idle_timeout_minutes:
                  description: Time in minutes before codespace stops from inactivity
                  type: integer
                display_name:
                  description: Display name for this codespace
                  type: string
                retention_period_minutes:
                  description: Duration in minutes after codespace has gone idle in
                    which it will be deleted. Must be integer minutes between 0 and
                    43200 (30 days).
                  type: integer
            examples:
              default:
                value:
                  ref: main
                  machine: standardLinux32gb
      responses:
        '201':
          description: Response when the codespace was successfully created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '202':
          description: Response when the codespace creation partially failed but is
            being retried in the background
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '400':
          "$ref": "#/components/responses/bad_request"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/repos/{owner}/{repo}/codespaces/devcontainers":
    get:
      summary: List devcontainer configurations in a repository for the authenticated
        user
      description: |-
        Lists the devcontainer.json files associated with a specified repository and the authenticated user. These files
        specify launchpoint configurations for codespaces created within the repository.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have read access to the `codespaces_metadata` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-devcontainers-in-repository-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#list-devcontainer-configurations-in-a-repository-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/devcontainers-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-list-devcontainers-for-repository"
        '400':
          "$ref": "#/components/responses/bad_request"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: codespaces
  "/repos/{owner}/{repo}/codespaces/machines":
    get:
      summary: List available machine types for a repository
      description: |-
        List the machine types available for a given repository based on its configuration.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces_metadata` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/repo-machines-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/machines#list-available-machine-types-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: location
        description: The location to check for available machines. Assigned by IP
          if not provided.
        in: query
        schema:
          type: string
          example: WestUs2
      - name: client_ip
        description: IP for location auto-detection when proxying a request
        in: query
        schema:
          type: string
      - name: ref
        description: The branch or commit to check for prebuild availability and devcontainer
          restrictions.
        in: query
        schema:
          type: string
          example: main
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-machine-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespace-machines-list"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: machines
  "/repos/{owner}/{repo}/codespaces/new":
    get:
      summary: Get default attributes for a codespace
      description: |-
        Gets the default attributes for codespaces created by the user with the repository.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/pre-flight-with-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#get-default-attributes-for-a-codespace
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: The branch or commit to check for a default devcontainer path.
          If not specified, the default branch will be checked.
        in: query
        schema:
          type: string
          example: main
      - name: client_ip
        description: An alternative IP for default location auto-detection, such as
          when proxying a request.
        in: query
        schema:
          type: string
          example: 1.2.3.4
      responses:
        '200':
          description: Response when a user is able to create codespaces from the
            repository.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-default-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-default-attributes-for-a-codespace"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: codespaces
  "/repos/{owner}/{repo}/codespaces/permissions_check":
    get:
      summary: Check if permissions defined by a devcontainer have been accepted by
        the authenticated user
      description: |-
        Checks whether the permissions defined by a given devcontainer configuration have been accepted by the authenticated user.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/check-permissions-for-devcontainer
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#check-if-permissions-defined-by-a-devcontainer-have-been-accepted-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: The git reference that points to the location of the devcontainer
          configuration to use for the permission check. The value of `ref` will typically
          be a branch name (`heads/BRANCH_NAME`). For more information, see "[Git
          References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)"
          in the Git documentation.
        in: query
        required: true
        schema:
          type: string
          example: master
      - name: devcontainer_path
        description: Path to the devcontainer.json configuration to use for the permission
          check.
        in: query
        required: true
        schema:
          type: string
          example: ".devcontainer/example/devcontainer.json"
      responses:
        '200':
          description: Response when the permission check is successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-permissions-check-for-devcontainer"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-permissions-check-for-devcontainer"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: codespaces
  "/repos/{owner}/{repo}/codespaces/secrets":
    get:
      summary: List repository secrets
      description: Lists all secrets available in a repository without revealing their
        encrypted values. You must authenticate using an access token with the `repo`
        scope to use this endpoint. GitHub Apps must have write access to the `codespaces_secrets`
        repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-repo-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/repository-secrets#list-repository-secrets
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repo-codespaces-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/repo-codespaces-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: repository-secrets
  "/repos/{owner}/{repo}/codespaces/secrets/public-key":
    get:
      summary: Get a repository public key
      description: Gets your public key, which you need to encrypt secrets. You need
        to encrypt a secret before you can create or update secrets. Anyone with read
        access to the repository can use this endpoint. If the repository is private
        you must use an access token with the `repo` scope. GitHub Apps must have
        write access to the `codespaces_secrets` repository permission to use this
        endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-repo-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/repository-secrets#get-a-repository-public-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: repository-secrets
  "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}":
    get:
      summary: Get a repository secret
      description: Gets a single repository secret without revealing its encrypted
        value. You must authenticate using an access token with the `repo` scope to
        use this endpoint. GitHub Apps must have write access to the `codespaces_secrets`
        repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/repository-secrets#get-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repo-codespaces-secret"
              examples:
                default:
                  "$ref": "#/components/examples/repo-codespaces-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: repository-secrets
    put:
      summary: Create or update a repository secret
      description: |-
        Creates or updates a repository secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access
        token with the `repo` scope to use this endpoint. GitHub Apps must have write access to the `codespaces_secrets`
        repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/create-or-update-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/repository-secrets#create-or-update-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get a repository public
                    key](https://docs.github.com/rest/codespaces/repository-secrets#get-a-repository-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: repository-secrets
    delete:
      summary: Delete a repository secret
      description: Deletes a secret in a repository using the secret name. You must
        authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have write access to the `codespaces_secrets` repository
        permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/delete-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/repository-secrets#delete-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: codespaces
        subcategory: repository-secrets
  "/repos/{owner}/{repo}/collaborators":
    get:
      summary: List repository collaborators
      description: |-
        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.
        Organization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.

        Team members will include the members of child teams.

        You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this
        endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this
        endpoint.
      tags:
      - repos
      operationId: repos/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#list-repository-collaborators
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: affiliation
        description: Filter collaborators returned by their affiliation. `outside`
          means all outside collaborators of an organization-owned repository. `direct`
          means all collaborators with permissions to an organization-owned repository,
          regardless of organization membership status. `all` means all collaborators
          the authenticated user can see.
        in: query
        required: false
        schema:
          type: string
          enum:
          - outside
          - direct
          - all
          default: all
      - name: permission
        description: Filter collaborators by the permissions they have on the repository.
          If not specified, all collaborators will be returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - pull
          - triage
          - push
          - maintain
          - admin
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/collaborator"
              examples:
                default:
                  "$ref": "#/components/examples/collaborator-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  "/repos/{owner}/{repo}/collaborators/{username}":
    get:
      summary: Check if a user is a repository collaborator
      description: |-
        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.

        Team members will include the members of child teams.

        You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this
        endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this
        endpoint.
      tags:
      - repos
      operationId: repos/check-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#check-if-a-user-is-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response if user is a collaborator
        '404':
          description: Not Found if user is not a collaborator
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
    put:
      summary: Add a repository collaborator
      description: |-
        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.

        Adding an outside collaborator may be restricted by enterprise administrators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."

        For more information on permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:

        ```
        Cannot assign {member} permission of {role name}
        ```

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."

        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [API](https://docs.github.com/rest/collaborators/invitations).

        **Updating an existing collaborator's permission level**

        The endpoint can also be used to change the permissions of an existing collaborator without first removing and re-adding the collaborator. To change the permissions, use the same endpoint and pass a different `permission` parameter. The response will be a `204`, with no other indication that the permission level changed.

        **Rate limits**

        You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
      tags:
      - repos
      operationId: repos/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#add-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant the collaborator. **Only valid
                    on organization-owned repositories.** We accept the following
                    permissions to be set: `pull`, `triage`, `push`, `maintain`, `admin`
                    and you can also specify a custom repository role name, if the
                    owning organization has defined any.'
                  default: push
            examples:
              new-invitation-is-created:
                summary: Add a collaborator with triage permissions
                value:
                  permission: triage
      responses:
        '201':
          description: Response when a new invitation is created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-invitation"
              examples:
                new-invitation-is-created:
                  "$ref": "#/components/examples/repository-invitation-response-when-a-new-invitation-is-created"
        '204':
          description: |-
            Response when:
            - an existing collaborator is added as a collaborator
            - an organization member is added as an individual collaborator
            - an existing team member (whose team is also a repository collaborator) is added as an individual collaborator
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
    delete:
      summary: Remove a repository collaborator
      description: |-
        Removes a collaborator from a repository.

        To use this endpoint, the authenticated user must either be an administrator of the repository or target themselves for removal.

        This endpoint also:
        - Cancels any outstanding invitations
        - Unasigns the user from any issues
        - Removes access to organization projects if the user is not an organization member and is not a collaborator on any other organization repositories.
        - Unstars the repository
        - Updates access permissions to packages

        Removing a user as a collaborator has the following effects on forks:
         - If the user had access to a fork through their membership to this repository, the user will also be removed from the fork.
         - If the user had their own fork of the repository, the fork will be deleted.
         - If the user still has read access to the repository, open pull requests by this user from a fork will be denied.

        **Note**: A user can still have access to the repository through organization permissions like base repository permissions.

        Although the API responds immediately, the additional permission updates might take some extra time to complete in the background.

        For more information on fork permissions, see "[About permissions and visibility of forks](https://docs.github.com/pull-requests/collaborating-with-pull-requests/working-with-forks/about-permissions-and-visibility-of-forks)".
      tags:
      - repos
      operationId: repos/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#remove-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: No Content when collaborator was removed from the repository.
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  "/repos/{owner}/{repo}/collaborators/{username}/permission":
    get:
      summary: Get repository permissions for a user
      description: |-
        Checks the repository permission of a collaborator. The possible repository
        permissions are `admin`, `write`, `read`, and `none`.

        *Note*: The `permission` attribute provides the legacy base roles of `admin`, `write`, `read`, and `none`, where the
        `maintain` role is mapped to `write` and the `triage` role is mapped to `read`. To determine the role assigned to the
        collaborator, see the `role_name` attribute, which will provide the full role name, including custom roles. The
        `permissions` hash can also be used to determine which base level of access the collaborator has to the repository.
      tags:
      - repos
      operationId: repos/get-collaborator-permission-level
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#get-repository-permissions-for-a-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: if user has admin permissions
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-collaborator-permission"
              examples:
                response-if-user-has-admin-permissions:
                  "$ref": "#/components/examples/repository-collaborator-permission-response-if-user-has-admin-permissions"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  "/repos/{owner}/{repo}/comments":
    get:
      summary: List commit comments for a repository
      description: |-
        Commit Comments use [these custom media types](https://docs.github.com/rest/overview/media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).

        Comments are ordered by ascending ID.
      tags:
      - repos
      operationId: repos/list-commit-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#list-commit-comments-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
  "/repos/{owner}/{repo}/comments/{comment_id}":
    get:
      summary: Get a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/get-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#get-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
    patch:
      summary: Update a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/update-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#update-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment
              required:
              - body
            examples:
              default:
                value:
                  body: Nice change
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment-2"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
    delete:
      summary: Delete a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/delete-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#delete-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions":
    get:
      summary: List reactions for a commit comment
      description: List the reactions to a [commit comment](https://docs.github.com/rest/commits/comments#get-a-commit-comment).
      tags:
      - reactions
      operationId: reactions/list-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a commit comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a commit comment
      description: Create a reaction to a [commit comment](https://docs.github.com/rest/commits/comments#get-a-commit-comment).
        A response with an HTTP `200` status means that you already added the reaction
        type to this commit comment.
      tags:
      - reactions
      operationId: reactions/create-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the commit comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Delete a commit comment reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.

        Delete a reaction to a [commit comment](https://docs.github.com/rest/commits/comments#get-a-commit-comment).
      tags:
      - reactions
      operationId: reactions/delete-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-a-commit-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/commits":
    get:
      summary: List commits
      description: |-
        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - repos
      operationId: repos/list-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#list-commits
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sha
        description: 'SHA or branch to start listing commits from. Default: the repository’s
          default branch (usually `main`).'
        in: query
        required: false
        schema:
          type: string
      - name: path
        description: Only commits containing this file path will be returned.
        in: query
        required: false
        schema:
          type: string
      - name: author
        description: GitHub username or email address to use to filter by commit author.
        in: query
        required: false
        schema:
          type: string
      - name: committer
        description: GitHub username or email address to use to filter by commit committer.
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/since"
      - name: until
        description: 'Only commits before this date will be returned. This is a timestamp
          in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit"
              examples:
                default:
                  "$ref": "#/components/examples/commit-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head":
    get:
      summary: List branches for HEAD commit
      description: |-
        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.
      tags:
      - repos
      operationId: repos/list-branches-for-head-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#list-branches-for-head-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-sha"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/branch-short"
              examples:
                default:
                  "$ref": "#/components/examples/branch-short-items"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments":
    get:
      summary: List commit comments
      description: Use the `:commit_sha` to specify the commit that will have its
        comments listed.
      tags:
      - repos
      operationId: repos/list-comments-for-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#list-commit-comments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-sha"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
    post:
      summary: Create a commit comment
      description: |-
        Create a comment for a commit using its `:commit_sha`.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - repos
      operationId: repos/create-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#create-a-commit-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-sha"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
                path:
                  type: string
                  description: Relative path of the file to comment on.
                position:
                  type: integer
                  description: Line index in the diff to comment on.
                line:
                  type: integer
                  description: "**Deprecated**. Use **position** parameter instead.
                    Line number in the file to comment on."
              required:
              - body
            examples:
              default:
                value:
                  body: Great stuff
                  path: file1.txt
                  position: 4
                  line: 1
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comment"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/comments/1
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
  "/repos/{owner}/{repo}/commits/{commit_sha}/pulls":
    get:
      summary: List pull requests associated with a commit
      description: |-
        Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, will only return open pull requests associated with the commit.

        To list the open or merged pull requests associated with a branch, you can set the `commit_sha` parameter to the branch name.
      tags:
      - repos
      operationId: repos/list-pull-requests-associated-with-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#list-pull-requests-associated-with-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-sha"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{ref}":
    get:
      summary: Get a commit
      description: |-
        Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.

        **Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.

        You can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.

        To return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - repos
      operationId: repos/get-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#get-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/commit-ref"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit"
              examples:
                default:
                  "$ref": "#/components/examples/commit"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  "/repos/{owner}/{repo}/commits/{ref}/check-runs":
    get:
      summary: List check runs for a Git reference
      description: |-
        Lists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth apps and authenticated users must have the `repo` scope to get check runs in a private repository.

        **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.

        If there are more than 1000 check suites on a single git reference, this endpoint will limit check runs to the 1000 most recent check suites. To iterate over all possible check runs, use the [List check suites for a Git reference](https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference) endpoint and provide the `check_suite_id` parameter to the [List check runs in a check suite](https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite) endpoint.
      tags:
      - checks
      operationId: checks/list-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#list-check-runs-for-a-git-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      - "$ref": "#/components/parameters/check-name"
      - "$ref": "#/components/parameters/status"
      - name: filter
        description: Filters check runs by their `completed_at` timestamp. `latest`
          returns the most recent check runs.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - name: app_id
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-run-response"
              examples:
                default:
                  "$ref": "#/components/examples/check-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  "/repos/{owner}/{repo}/commits/{ref}/check-suites":
    get:
      summary: List check suites for a Git reference
      description: |-
        Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth apps and authenticated users must have the `repo` scope to get check suites in a private repository.

        **Note:** The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
      tags:
      - checks
      operationId: checks/list-suites-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#list-check-suites-for-a-git-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      - name: app_id
        description: Filters check suites by GitHub App `id`.
        in: query
        required: false
        schema:
          type: integer
        example: 1
      - "$ref": "#/components/parameters/check-name"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/check-suite-response"
              examples:
                default:
                  "$ref": "#/components/examples/check-suite-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  "/repos/{owner}/{repo}/commits/{ref}/status":
    get:
      summary: Get the combined status for a specific reference
      description: |-
        Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.


        Additionally, a combined `state` is returned. The `state` is one of:

        *   **failure** if any of the contexts report as `error` or `failure`
        *   **pending** if there are no statuses or a context is `pending`
        *   **success** if the latest status for all contexts is `success`
      tags:
      - repos
      operationId: repos/get-combined-status-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/statuses#get-the-combined-status-for-a-specific-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/combined-commit-status"
              examples:
                default:
                  "$ref": "#/components/examples/combined-commit-status"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: statuses
  "/repos/{owner}/{repo}/commits/{ref}/statuses":
    get:
      summary: List commit statuses for a reference
      description: |-
        Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.

        This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.
      tags:
      - repos
      operationId: repos/list-commit-statuses-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/statuses#list-commit-statuses-for-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/status"
              examples:
                default:
                  "$ref": "#/components/examples/status-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '301':
          "$ref": "#/components/responses/moved_permanently"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: statuses
  "/repos/{owner}/{repo}/community/profile":
    get:
      summary: Get community profile metrics
      description: |-
        Returns all community profile metrics for a repository. The repository cannot be a fork.

        The returned metrics include an overall health score, the repository description, the presence of documentation, the
        detected code of conduct, the detected license, and the presence of ISSUE\_TEMPLATE, PULL\_REQUEST\_TEMPLATE,
        README, and CONTRIBUTING files.

        The `health_percentage` score is defined as a percentage of how many of
        the recommended community health files are present. For more information, see
        "[About community profiles for public repositories](https://docs.github.com/communities/setting-up-your-project-for-healthy-contributions/about-community-profiles-for-public-repositories)."

        `content_reports_enabled` is only returned for organization-owned repositories.
      tags:
      - repos
      operationId: repos/get-community-profile-metrics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/community#get-community-profile-metrics
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/community-profile"
              examples:
                default:
                  "$ref": "#/components/examples/community-profile"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: community
  "/repos/{owner}/{repo}/compare/{basehead}":
    get:
      summary: Compare two commits
      description: |-
        Compares two commits against one another. You can compare branches in the same repository, or you can compare branches that exist in different repositories within the same repository network, including fork branches. For more information about how to view a repository's network, see "[Understanding connections between repositories](https://docs.github.com/repositories/viewing-activity-and-data-for-your-repository/understanding-connections-between-repositories)."

        This endpoint is equivalent to running the `git log BASE..HEAD` command, but it returns commits in a different order. The `git log BASE..HEAD` command returns commits in reverse chronological order, whereas the API returns commits in chronological order. You can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.

        The API response includes details about the files that were changed between the two commits. This includes the status of the change (if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.

        When calling this endpoint without any paging parameter (`per_page` or `page`), the returned list is limited to 250 commits, and the last commit in the list is the most recent of the entire comparison.

        **Working with large comparisons**

        To process a response with a large number of commits, use a query parameter (`per_page` or `page`) to paginate the results. When using pagination:

        - The list of changed files is only shown on the first page of results, but it includes all changed files for the entire comparison.
        - The results are returned in chronological order, but the last commit in the returned list may not be the most recent one in the entire set if there are more pages of results.

        For more information on working with pagination, see "[Using pagination in the REST API](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api)."

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The `verification` object includes the following fields:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - repos
      operationId: repos/compare-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#compare-two-commits
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - name: basehead
        description: The base branch and head branch to compare. This parameter expects
          the format `BASE...HEAD`. Both must be branch names in `repo`. To compare
          with a branch that exists in a different repository in the same network
          as `repo`, the `basehead` parameter expects the format `USERNAME:BASE...USERNAME:HEAD`.
        in: path
        required: true
        x-multi-segment: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-comparison"
              examples:
                default:
                  "$ref": "#/components/examples/commit-comparison"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  "/repos/{owner}/{repo}/contents/{path}":
    get:
      summary: Get repository content
      description: "Gets the contents of a file or directory in a repository. Specify
        the file path or directory in `:path`. If you omit\n`:path`, you will receive
        the contents of the repository's root directory. See the description below
        regarding what the API response includes for directories. \n\nFiles and symlinks
        support [a custom media type](https://docs.github.com/rest/overview/media-types)
        for\nretrieving the raw content or rendered HTML (when supported). All content
        types support [a custom media\ntype](https://docs.github.com/rest/overview/media-types)
        to ensure the content is returned in a consistent\nobject format.\n\n**Notes**:\n*
        \  To get a repository's contents recursively, you can [recursively get the
        tree](https://docs.github.com/rest/git/trees#get-a-tree).\n*   This API has
        an upper limit of 1,000 files for a directory. If you need to retrieve more
        files, use the [Git Trees\nAPI](https://docs.github.com/rest/git/trees#get-a-tree).\n
        *  Download URLs expire and are meant to be used just once. To ensure the
        download URL does not expire, please use the contents API to obtain a fresh
        download URL for each download.\n Size limits:\nIf the requested file's size
        is:\n* 1 MB or smaller: All features of this endpoint are supported.\n* Between
        1-100 MB: Only the `raw` or `object` [custom media types](https://docs.github.com/rest/repos/contents#custom-media-types-for-repository-contents)
        are supported. Both will work as normal, except that when using the `object`
        media type, the `content` field will be an empty string and the `encoding`
        field will be `\"none\"`. To get the contents of these larger files, use the
        `raw` media type.\n * Greater than 100 MB: This endpoint is not supported.\n\n
        If the content is a directory:\nThe response will be an array of objects,
        one object for each item in the directory.\nWhen listing the contents of a
        directory, submodules have their \"type\" specified as \"file\". Logically,
        the value\n_should_ be \"submodule\". This behavior exists in API v3 [for
        backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major
        version of the API, the type will be returned as \"submodule\".\n\n If the
        content is a symlink: \nIf the requested `:path` points to a symlink, and
        the symlink's target is a normal file in the repository, then the\nAPI responds
        with the content of the file (in the format shown in the example. Otherwise,
        the API responds with an object \ndescribing the symlink itself.\n\n If the
        content is a submodule:\nThe `submodule_git_url` identifies the location of
        the submodule repository, and the `sha` identifies a specific\ncommit within
        the submodule repository. Git uses the given URL when cloning the submodule
        repository, and checks out\nthe submodule at that specific commit.\n\nIf the
        submodule repository is not hosted on github.com, the Git URLs (`git_url`
        and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`)
        will have null values."
      tags:
      - repos
      operationId: repos/get-content
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#get-repository-content
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: path
        description: path parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s
          default branch.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/vnd.github.object:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/content-tree"
              examples:
                response-if-content-is-a-file:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-file"
                response-if-content-is-a-directory:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-directory-object"
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/content-directory"
                - "$ref": "#/components/schemas/content-file"
                - "$ref": "#/components/schemas/content-symlink"
                - "$ref": "#/components/schemas/content-submodule"
              examples:
                response-if-content-is-a-file:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-file"
                response-if-content-is-a-directory:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-directory"
                response-if-content-is-a-symlink:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-symlink"
                response-if-content-is-a-submodule:
                  "$ref": "#/components/examples/content-file-response-if-content-is-a-submodule"
        '302':
          "$ref": "#/components/responses/found"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
    put:
      summary: Create or update file contents
      description: |-
        Creates a new file or replaces an existing file in a repository. You must authenticate using an access token with the `repo` scope to use this endpoint. If you want to modify files in the `.github/workflows` directory, you must authenticate using an access token with the `workflow` scope.

        **Note:** If you use this endpoint and the "[Delete a file](https://docs.github.com/rest/repos/contents/#delete-a-file)" endpoint in parallel, the concurrent requests will conflict and you will receive errors. You must use these endpoints serially instead.
      tags:
      - repos
      operationId: repos/create-or-update-file-contents
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#create-or-update-file-contents
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: path
        description: path parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                content:
                  type: string
                  description: The new file content, using Base64 encoding.
                sha:
                  type: string
                  description: "**Required if you are updating a file**. The blob
                    SHA of the file being replaced."
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default
                    branch.'
                committer:
                  type: object
                  description: 'The person that committed the file. Default: the authenticated
                    user.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit.
                        You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit.
                        You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-05T13:13:22+05:00"'
                  required:
                  - name
                  - email
                author:
                  type: object
                  description: 'The author of the file. Default: The `committer` or
                    the authenticated user if you omit `committer`.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit.
                        You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit.
                        You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-15T17:13:22+05:00"'
                  required:
                  - name
                  - email
              required:
              - message
              - content
            examples:
              example-for-creating-a-file:
                summary: Example for creating a file
                value:
                  message: my commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgbmV3IGZpbGUgY29udGVudHM=
              example-for-updating-a-file:
                summary: Example for updating a file
                value:
                  message: a new commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz
                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/file-commit"
              examples:
                example-for-updating-a-file:
                  "$ref": "#/components/examples/file-commit-example-for-updating-a-file"
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/file-commit"
              examples:
                example-for-creating-a-file:
                  "$ref": "#/components/examples/file-commit-example-for-creating-a-file"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
    delete:
      summary: Delete a file
      description: |-
        Deletes a file in a repository.

        You can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.

        The `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.

        You must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.

        **Note:** If you use this endpoint and the "[Create or update file contents](https://docs.github.com/rest/repos/contents/#create-or-update-file-contents)" endpoint in parallel, the concurrent requests will conflict and you will receive errors. You must use these endpoints serially instead.
      tags:
      - repos
      operationId: repos/delete-file
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#delete-a-file
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: path
        description: path parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                sha:
                  type: string
                  description: The blob SHA of the file being deleted.
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default
                    branch'
                committer:
                  type: object
                  description: object containing information about the committer.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                author:
                  type: object
                  description: object containing information about the author.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
              required:
              - message
              - sha
            examples:
              default:
                value:
                  message: my commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  sha: 329688480d39049927147c162b9d2deaf885005f
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/file-commit"
              examples:
                default:
                  "$ref": "#/components/examples/file-commit"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/contributors":
    get:
      summary: List repository contributors
      description: |-
        Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API caches contributor data to improve performance.

        GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.
      tags:
      - repos
      operationId: repos/list-contributors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-contributors
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: anon
        description: Set to `1` or `true` to include anonymous contributors in results.
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: If repository contains content
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/contributor"
              examples:
                response-if-repository-contains-content:
                  "$ref": "#/components/examples/contributor-items-response-if-repository-contains-content"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '204':
          description: Response if repository is empty
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/dependabot/alerts":
    get:
      summary: List Dependabot alerts for a repository
      description: |-
        You must use an access token with the `security_events` scope to use this endpoint with private repositories.
        You can also use tokens with the `public_repo` scope for public repositories only.
        GitHub Apps must have **Dependabot alerts** read permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/list-alerts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/alerts#list-dependabot-alerts-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-states"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-severities"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-ecosystems"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-packages"
      - "$ref": "#/components/parameters/dependabot-alert-comma-separated-manifests"
      - "$ref": "#/components/parameters/dependabot-alert-scope"
      - "$ref": "#/components/parameters/dependabot-alert-sort"
      - "$ref": "#/components/parameters/direction"
      - name: page
        description: "**Deprecated**. Page number of the results to fetch. Use cursor-based
          pagination with `before` or `after` instead."
        deprecated: true
        in: query
        schema:
          type: integer
          default: 1
      - name: per_page
        description: The number of results per page (max 100).
        deprecated: true
        in: query
        schema:
          type: integer
          default: 30
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - "$ref": "#/components/parameters/pagination-first"
      - "$ref": "#/components/parameters/pagination-last"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/dependabot-alert"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-alerts-for-repository"
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: dependabot
        subcategory: alerts
  "/repos/{owner}/{repo}/dependabot/alerts/{alert_number}":
    get:
      summary: Get a Dependabot alert
      description: |-
        You must use an access token with the `security_events` scope to use this endpoint with private repositories.
        You can also use tokens with the `public_repo` scope for public repositories only.
        GitHub Apps must have **Dependabot alerts** read permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/get-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/alerts#get-a-dependabot-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/dependabot-alert-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependabot-alert"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-alert-open"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: dependabot
        subcategory: alerts
    patch:
      summary: Update a Dependabot alert
      description: |-
        You must use an access token with the `security_events` scope to use this endpoint with private repositories.
        You can also use tokens with the `public_repo` scope for public repositories only.
        GitHub Apps must have **Dependabot alerts** write permission to use this endpoint.

        To use this endpoint, you must have access to security alerts for the repository. For more information, see "[Granting access to security alerts](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-security-and-analysis-settings-for-your-repository#granting-access-to-security-alerts)."
      tags:
      - dependabot
      operationId: dependabot/update-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/alerts#update-a-dependabot-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/dependabot-alert-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: |-
                    The state of the Dependabot alert.
                    A `dismissed_reason` must be provided when setting the state to `dismissed`.
                  enum:
                  - dismissed
                  - open
                dismissed_reason:
                  type: string
                  description: "**Required when `state` is `dismissed`.** A reason
                    for dismissing the alert."
                  enum:
                  - fix_started
                  - inaccurate
                  - no_bandwidth
                  - not_used
                  - tolerable_risk
                dismissed_comment:
                  type: string
                  description: An optional comment associated with dismissing the
                    alert.
                  maxLength: 280
              required:
              - state
              additionalProperties: false
            examples:
              default:
                value:
                  state: dismissed
                  dismissed_reason: tolerable_risk
                  dismissed_comment: This alert is accurate but we use a sanitizer.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependabot-alert"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-alert-dismissed"
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: dependabot
        subcategory: alerts
  "/repos/{owner}/{repo}/dependabot/secrets":
    get:
      summary: List repository secrets
      description: Lists all secrets available in a repository without revealing their
        encrypted values. You must authenticate using an access token with the `repo`
        scope to use this endpoint. GitHub Apps must have the `dependabot_secrets`
        repository permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/list-repo-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#list-repository-secrets
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependabot-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/repos/{owner}/{repo}/dependabot/secrets/public-key":
    get:
      summary: Get a repository public key
      description: Gets your public key, which you need to encrypt secrets. You need
        to encrypt a secret before you can create or update secrets. Anyone with read
        access to the repository can use this endpoint. If the repository is private
        you must use an access token with the `repo` scope. GitHub Apps must have
        the `dependabot_secrets` repository permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/get-repo-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#get-a-repository-public-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependabot-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}":
    get:
      summary: Get a repository secret
      description: Gets a single repository secret without revealing its encrypted
        value. You must authenticate using an access token with the `repo` scope to
        use this endpoint. GitHub Apps must have the `dependabot_secrets` repository
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/get-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#get-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependabot-secret"
              examples:
                default:
                  "$ref": "#/components/examples/dependabot-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    put:
      summary: Create or update a repository secret
      description: |-
        Creates or updates a repository secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access
        token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository
        permission to use this endpoint.
      tags:
      - dependabot
      operationId: dependabot/create-or-update-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#create-or-update-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get a repository public
                    key](https://docs.github.com/rest/dependabot/secrets#get-a-repository-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    delete:
      summary: Delete a repository secret
      description: Deletes a secret in a repository using the secret name. You must
        authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `dependabot_secrets` repository permission to use
        this endpoint.
      tags:
      - dependabot
      operationId: dependabot/delete-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependabot/secrets#delete-a-repository-secret
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  "/repos/{owner}/{repo}/dependency-graph/compare/{basehead}":
    get:
      summary: Get a diff of the dependencies between commits
      description: Gets the diff of the dependency changes between two commits of
        a repository, based on the changes to the dependency manifests made in those
        commits.
      tags:
      - dependency-graph
      operationId: dependency-graph/diff-range
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependency-graph/dependency-review#get-a-diff-of-the-dependencies-between-commits
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: basehead
        description: The base and head Git revisions to compare. The Git revisions
          will be resolved to commit SHAs. Named revisions will be resolved to their
          corresponding HEAD commits, and an appropriate merge base will be determined.
          This parameter expects the format `{base}...{head}`.
        in: path
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/manifest-path"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependency-graph-diff"
              examples:
                default:
                  "$ref": "#/components/examples/diff-range-response"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/dependency_review_forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        category: dependency-graph
        subcategory: dependency-review
  "/repos/{owner}/{repo}/dependency-graph/sbom":
    get:
      summary: Export a software bill of materials (SBOM) for a repository.
      description: Exports the software bill of materials (SBOM) for a repository
        in SPDX JSON format.
      tags:
      - dependency-graph
      operationId: dependency-graph/export-sbom
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependency-graph/sboms#export-a-software-bill-of-materials-sbom-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/dependency-graph-spdx-sbom"
              examples:
                default:
                  "$ref": "#/components/examples/dependency-graph-export-sbom-response"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        category: dependency-graph
        subcategory: sboms
  "/repos/{owner}/{repo}/dependency-graph/snapshots":
    post:
      summary: Create a snapshot of dependencies for a repository
      description: Create a new snapshot of a repository's dependencies. You must
        authenticate using an access token with the `repo` scope to use this endpoint
        for a repository that the requesting user has access to.
      tags:
      - dependency-graph
      operationId: dependency-graph/create-repository-snapshot
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/dependency-graph/dependency-submission#create-a-snapshot-of-dependencies-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/snapshot"
            examples:
              example-of-a-dependency-submission:
                "$ref": "#/components/examples/dependency-graph-create-snapshot-request"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/snapshot-response"
              examples:
                example-of-a-dependency-submission:
                  "$ref": "#/components/examples/dependency-graph-create-snapshot-success"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependency-graph
        subcategory: dependency-submission
  "/repos/{owner}/{repo}/deployments":
    get:
      summary: List deployments
      description: 'Simple filtering of deployments is available via query parameters:'
      tags:
      - repos
      operationId: repos/list-deployments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#list-deployments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sha
        description: The SHA recorded at creation time.
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: ref
        description: The name of the ref. This can be a branch, tag, or SHA.
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: task
        description: The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: environment
        description: The name of the environment that was deployed to (e.g., `staging`
          or `production`).
        in: query
        required: false
        schema:
          type: string
          default: none
          nullable: true
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deployment"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
    post:
      summary: Create a deployment
      description: |-
        Deployments offer a few configurable parameters with certain defaults.

        The `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them
        before we merge a pull request.

        The `environment` parameter allows deployments to be issued to different runtime environments. Teams often have
        multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter
        makes it easier to track which environments have requested deployments. The default environment is `production`.

        The `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If
        the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,
        the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will
        return a failure response.

        By default, [commit statuses](https://docs.github.com/rest/commits/statuses) for every submitted context must be in a `success`
        state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to
        specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do
        not require any contexts or create any commit statuses, the deployment will always succeed.

        The `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text
        field that will be passed on when a deployment event is dispatched.

        The `task` parameter is used by the deployment system to allow different execution paths. In the web world this might
        be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an
        application with debugging enabled.

        Users with `repo` or `repo_deployment` scopes can create a deployment for a given ref.

        Merged branch response:

        You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating
        a deployment. This auto-merge happens when:
        *   Auto-merge option is enabled in the repository
        *   Topic branch does not include the latest changes on the base branch, which is `master` in the response example
        *   There are no merge conflicts

        If there are no new commits in the base branch, a new request to create a deployment should give a successful
        response.

        Merge conflict response:

        This error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't
        be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.

        Failed commit status checks:

        This error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`
        status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.
      tags:
      - repos
      operationId: repos/create-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#create-a-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The ref to deploy. This can be a branch, tag, or SHA.
                task:
                  type: string
                  description: Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).
                  default: deploy
                auto_merge:
                  type: boolean
                  description: Attempts to automatically merge the default branch
                    into the requested ref, if it's behind the default branch.
                  default: true
                required_contexts:
                  type: array
                  description: The [status](https://docs.github.com/rest/commits/statuses)
                    contexts to verify against commit status checks. If you omit this
                    parameter, GitHub verifies all unique contexts before creating
                    a deployment. To bypass checking entirely, pass an empty array.
                    Defaults to all unique contexts.
                  items:
                    type: string
                payload:
                  oneOf:
                  - type: object
                    additionalProperties: true
                  - type: string
                    description: JSON payload with extra information about the deployment.
                    default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment (e.g., `production`,
                    `staging`, `qa`).
                  default: production
                description:
                  type: string
                  description: Short description of the deployment.
                  default: ''
                  nullable: true
                transient_environment:
                  type: boolean
                  description: 'Specifies if the given environment is specific to
                    the deployment and will no longer exist at some point in the future.
                    Default: `false`'
                  default: false
                production_environment:
                  type: boolean
                  description: 'Specifies if the given environment is one that end-users
                    directly interact with. Default: `true` when `environment` is
                    `production` and `false` otherwise.'
              required:
              - ref
            examples:
              simple-example:
                summary: Simple example
                value:
                  ref: topic-branch
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
              advanced-example:
                summary: Advanced example
                value:
                  ref: topic-branch
                  auto_merge: false
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
                  required_contexts:
                  - ci/janky
                  - security/brakeman
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment"
              examples:
                simple-example:
                  "$ref": "#/components/examples/deployment-simple-example"
        '202':
          description: Merged branch response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/merged-branch-response"
              examples:
                merged-branch-response:
                  value:
                    message: Auto-merged master into topic-branch on deployment.
        '409':
          description: Conflict when there is a merge conflict or the commit's status
            checks failed
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}":
    get:
      summary: Get a deployment
      description: ''
      tags:
      - repos
      operationId: repos/get-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#get-a-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment"
              examples:
                default:
                  "$ref": "#/components/examples/deployment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
    delete:
      summary: Delete a deployment
      description: |-
        If the repository only has one deployment, you can delete the deployment regardless of its status. If the repository has more than one deployment, you can only delete inactive deployments. This ensures that repositories with multiple deployments will always have an active deployment. Anyone with `repo` or `repo_deployment` scopes can delete a deployment.

        To set a deployment as inactive, you must:

        *   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.
        *   Mark the active deployment as inactive by adding any non-successful deployment status.

        For more information, see "[Create a deployment](https://docs.github.com/rest/deployments/deployments/#create-a-deployment)" and "[Create a deployment status](https://docs.github.com/rest/deployments/statuses#create-a-deployment-status)."
      tags:
      - repos
      operationId: repos/delete-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#delete-a-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses":
    get:
      summary: List deployment statuses
      description: 'Users with pull access can view deployment statuses for a deployment:'
      tags:
      - repos
      operationId: repos/list-deployment-statuses
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/statuses#list-deployment-statuses
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deployment-status"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-status-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: statuses
    post:
      summary: Create a deployment status
      description: |-
        Users with `push` access can create deployment statuses for a given deployment.

        GitHub Apps require `read & write` access to "Deployments" and `read-only` access to "Repo contents" (for private repos). OAuth apps require the `repo_deployment` scope.
      tags:
      - repos
      operationId: repos/create-deployment-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/statuses#create-a-deployment-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status. When you set a transient deployment
                    to `inactive`, the deployment will be shown as `destroyed` in
                    GitHub.
                  enum:
                  - error
                  - failure
                  - inactive
                  - in_progress
                  - queued
                  - pending
                  - success
                target_url:
                  type: string
                  description: The target URL to associate with this status. This
                    URL should contain output to keep the user updated while the task
                    is running or serve as historical information for what happened
                    in the deployment. **Note:** It's recommended to use the `log_url`
                    parameter, which replaces `target_url`.
                  default: ''
                log_url:
                  type: string
                  description: 'The full URL of the deployment''s output. This parameter
                    replaces `target_url`. We will continue to accept `target_url`
                    to support legacy uses, but we recommend replacing `target_url`
                    with `log_url`. Setting `log_url` will automatically set `target_url`
                    to the same value. Default: `""`'
                  default: ''
                description:
                  type: string
                  description: A short description of the status. The maximum description
                    length is 140 characters.
                  default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment, which can
                    be changed when setting a deploy status. For example, `production`,
                    `staging`, or `qa`. If not defined, the environment of the previous
                    status on the deployment will be used, if it exists. Otherwise,
                    the environment of the deployment will be used.
                environment_url:
                  type: string
                  description: 'Sets the URL for accessing your environment. Default:
                    `""`'
                  default: ''
                auto_inactive:
                  type: boolean
                  description: 'Adds a new `inactive` status to all prior non-transient,
                    non-production environment deployments with the same repository
                    and `environment` name as the created status''s deployment. An
                    `inactive` status is only added to deployments that had a `success`
                    state. Default: `true`'
              required:
              - state
            examples:
              default:
                value:
                  environment: production
                  state: success
                  log_url: https://example.com/deployment/42/output
                  description: Deployment finished successfully.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-status"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-status"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: statuses
  "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}":
    get:
      summary: Get a deployment status
      description: 'Users with pull access can view a deployment status for a deployment:'
      tags:
      - repos
      operationId: repos/get-deployment-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/statuses#get-a-deployment-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/deployment-id"
      - name: status_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-status"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-status"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: statuses
  "/repos/{owner}/{repo}/dispatches":
    post:
      summary: Create a repository dispatch event
      description: |-
        You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see "[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch)."

        The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.

        This endpoint requires write access to the repository by providing either:

          - Personal access tokens with `repo` scope. For more information, see "[Creating a personal access token for the command line](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line)" in the GitHub Help documentation.
          - GitHub Apps with both `metadata:read` and `contents:read&write` permissions.

        This input example shows how you can use the `client_payload` as a test to debug your workflow.
      tags:
      - repos
      operationId: repos/create-dispatch-event
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-a-repository-dispatch-event
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - event_type
              properties:
                event_type:
                  type: string
                  description: A custom webhook event name. Must be 100 characters
                    or fewer.
                  minLength: 1
                  maxLength: 100
                client_payload:
                  type: object
                  description: JSON payload with extra information about the webhook
                    event that your action or workflow may use. The maximum number
                    of top-level properties is 10.
                  additionalProperties: true
                  maxProperties: 10
            examples:
              default:
                value:
                  event_type: on-demand-test
                  client_payload:
                    unit: false
                    integration: true
      responses:
        '204':
          description: Response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/environments":
    get:
      summary: List environments
      description: |-
        Lists the environments for a repository.

        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - repos
      operationId: repos/get-all-environments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#list-environments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/environment-response"
              examples:
                default:
                  "$ref": "#/components/examples/environments"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
  "/repos/{owner}/{repo}/environments/{environment_name}":
    get:
      summary: Get an environment
      description: |-
        **Note:** To get information about name patterns that branches must match in order to deploy to this environment, see "[Get a deployment branch policy](/rest/deployments/branch-policies#get-a-deployment-branch-policy)."

        Anyone with read access to the repository can use this endpoint. If the
        repository is private, you must use an access token with the `repo` scope. GitHub
        Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - repos
      operationId: repos/get-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#get-an-environment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/environment"
              examples:
                default:
                  "$ref": "#/components/examples/environment"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
    put:
      summary: Create or update an environment
      description: |-
        Create or update an environment with protection rules, such as required reviewers. For more information about environment protection rules, see "[Environments](/actions/reference/environments#environment-protection-rules)."

        **Note:** To create or update name patterns that branches must match in order to deploy to this environment, see "[Deployment branch policies](/rest/deployments/branch-policies)."

        **Note:** To create or update secrets for an environment, see "[GitHub Actions secrets](/rest/actions/secrets)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration:write` permission for the repository to use this endpoint.
      tags:
      - repos
      operationId: repos/create-or-update-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#create-or-update-an-environment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                wait_timer:
                  "$ref": "#/components/schemas/wait-timer"
                prevent_self_review:
                  "$ref": "#/components/schemas/prevent-self-review"
                reviewers:
                  type: array
                  nullable: true
                  description: The people or teams that may review jobs that reference
                    the environment. You can list up to six users or teams as reviewers.
                    The reviewers must have at least read access to the repository.
                    Only one of the required reviewers needs to approve the job for
                    it to proceed.
                  items:
                    type: object
                    properties:
                      type:
                        "$ref": "#/components/schemas/deployment-reviewer-type"
                      id:
                        type: integer
                        description: The id of the user or team who can review the
                          deployment
                        example: 4532992
                deployment_branch_policy:
                  "$ref": "#/components/schemas/deployment-branch-policy-settings"
              additionalProperties: false
            examples:
              default:
                value:
                  wait_timer: 30
                  prevent_self_review: false
                  reviewers:
                  - type: User
                    id: 1
                  - type: Team
                    id: 1
                  deployment_branch_policy:
                    protected_branches: false
                    custom_branch_policies: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/environment"
              examples:
                default:
                  "$ref": "#/components/examples/environment"
        '422':
          description: Validation error when the environment name is invalid or when
            `protected_branches` and `custom_branch_policies` in `deployment_branch_policy`
            are set to the same value
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
    delete:
      summary: Delete an environment
      description: You must authenticate using an access token with the repo scope
        to use this endpoint.
      tags:
      - repos
      operationId: repos/delete-an-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#delete-an-environment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      responses:
        '204':
          description: Default response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
  "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies":
    get:
      summary: List deployment branch policies
      description: |-
        Lists the deployment branch policies for an environment.

        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - repos
      operationId: repos/list-deployment-branch-policies
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#list-deployment-branch-policies
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-branch-policy-response"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-branch-policies-list"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
    post:
      summary: Create a deployment branch policy
      description: |-
        Creates a deployment branch or tag policy for an environment.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration:write` permission for the repository to use this endpoint.
      tags:
      - repos
      operationId: repos/create-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#create-a-deployment-branch-policy
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/deployment-branch-policy-name-pattern-with-type"
            examples:
              example-wildcard:
                summary: Example of a wildcard name pattern
                value:
                  name: release/*
              example-single-branch:
                summary: Example of a single branch name pattern
                value:
                  name: main
                  type: branch
              example-single-tag:
                summary: Example of a single tag name pattern
                value:
                  name: v1
                  type: tag
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-branch-policy"
              examples:
                example-wildcard:
                  "$ref": "#/components/examples/deployment-branch-policy-wildcard"
                example-single-branch:
                  "$ref": "#/components/examples/deployment-branch-policy-single-branch"
                example-single-tag:
                  "$ref": "#/components/examples/deployment-branch-policy-single-tag"
        '303':
          description: Response if the same branch name pattern already exists
        '404':
          description: Not Found or `deployment_branch_policy.custom_branch_policies`
            property for the environment is set to false
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
  "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}":
    get:
      summary: Get a deployment branch policy
      description: |-
        Gets a deployment branch or tag policy for an environment.

        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
      - repos
      operationId: repos/get-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#get-a-deployment-branch-policy
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/branch-policy-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-branch-policy"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-branch-policy-wildcard"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
    put:
      summary: Update a deployment branch policy
      description: |-
        Updates a deployment branch or tag policy for an environment.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration:write` permission for the repository to use this endpoint.
      tags:
      - repos
      operationId: repos/update-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#update-a-deployment-branch-policy
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/branch-policy-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/deployment-branch-policy-name-pattern"
            examples:
              default:
                value:
                  name: release/*
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-branch-policy"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-branch-policy-wildcard"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
    delete:
      summary: Delete a deployment branch policy
      description: |-
        Deletes a deployment branch or tag policy for an environment.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration:write` permission for the repository to use this endpoint.
      tags:
      - repos
      operationId: repos/delete-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#delete-a-deployment-branch-policy
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/branch-policy-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
  "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules":
    get:
      summary: Get all deployment protection rules for an environment
      description: |-
        Gets all custom deployment protection rules that are enabled for an environment. Anyone with read access to the repository can use this endpoint. If the repository is private and you want to use a personal access token (classic), you must use an access token with the `repo` scope. GitHub Apps and fine-grained personal access tokens must have the `actions:read` permission to use this endpoint. For more information about environments, see "[Using environments for deployment](https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment)."

        For more information about the app that is providing this custom deployment rule, see the [documentation for the `GET /apps/{app_slug}` endpoint](https://docs.github.com/rest/apps/apps#get-an-app).
      tags:
      - repos
      operationId: repos/get-all-deployment-protection-rules
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#get-all-deployment-protection-rules-for-an-environment
      parameters:
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/owner"
      responses:
        '200':
          description: List of deployment protection rules
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-protection-rule-response"
              examples:
                default:
                  value:
                    total_count: 2
                    custom_deployment_protection_rules:
                    - id: 3
                      node_id: IEH37kRlcGxveW1lbnRTdGF0ddiv
                      enabled: true
                      app:
                        id: 1
                        node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
                        slug: a-custom-app
                        integration_url: https://api.github.com/apps/a-custom-app
                    - id: 4
                      node_id: MDE2OkRlcGxveW1lbnRTdHJ41128
                      enabled: true
                      app:
                        id: 1
                        node_id: UHVE67RlcGxveW1lbnRTdTY!jfeuy
                        slug: another-custom-app
                        integration_url: https://api.github.com/apps/another-custom-app
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
    post:
      summary: Create a custom deployment protection rule on an environment
      description: |-
        Enable a custom deployment protection rule for an environment.

        You must authenticate using an access token with the `repo` scope to use this endpoint. Enabling a custom protection rule requires admin or owner permissions to the repository. GitHub Apps must have the `actions:write` permission to use this endpoint.

        For more information about the app that is providing this custom deployment rule, see the [documentation for the `GET /apps/{app_slug}` endpoint](https://docs.github.com/rest/apps/apps#get-an-app).
      tags:
      - repos
      operationId: repos/create-deployment-protection-rule
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#create-a-custom-deployment-protection-rule-on-an-environment
      parameters:
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/owner"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: integer
                  description: The ID of the custom app that will be enabled on the
                    environment.
            examples:
              default:
                value:
                  integration_id: 5
        required: true
      responses:
        '201':
          description: The enabled custom deployment protection rule
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-protection-rule"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-protection-rule"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
  "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps":
    get:
      summary: List custom deployment rule integrations available for an environment
      description: |-
        Gets all custom deployment protection rule integrations that are available for an environment. Anyone with read access to the repository can use this endpoint. If the repository is private and you want to use a personal access token (classic), you must use an access token with the `repo` scope. GitHub Apps and fine-grained personal access tokens must have the `actions:read` permission to use this endpoint.

        For more information about environments, see "[Using environments for deployment](https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment)."

        For more information about the app that is providing this custom deployment rule, see "[GET an app](https://docs.github.com/rest/apps/apps#get-an-app)".
      tags:
      - repos
      operationId: repos/list-custom-deployment-rule-integrations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#list-custom-deployment-rule-integrations-available-for-an-environment
      parameters:
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: A list of custom deployment rule integrations available for
            this environment.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/custom-deployment-rule-app-response"
              examples:
                default:
                  "$ref": "#/components/examples/custom-deployment-protection-rule-apps"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
  "/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}":
    get:
      summary: Get a custom deployment protection rule
      description: |-
        Gets an enabled custom deployment protection rule for an environment. Anyone with read access to the repository can use this endpoint. If the repository is private and you want to use a personal access token (classic), you must use an access token with the `repo` scope. GitHub Apps and fine-grained personal access tokens must have the `actions:read` permission to use this endpoint. For more information about environments, see "[Using environments for deployment](https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment)."

        For more information about the app that is providing this custom deployment rule, see [`GET /apps/{app_slug}`](https://docs.github.com/rest/apps/apps#get-an-app).
      tags:
      - repos
      operationId: repos/get-custom-deployment-protection-rule
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#get-a-custom-deployment-protection-rule
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/protection-rule-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deployment-protection-rule"
              examples:
                default:
                  "$ref": "#/components/examples/deployment-protection-rule"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
    delete:
      summary: Disable a custom protection rule for an environment
      description: |-
        Disables a custom deployment protection rule for an environment.

        You must authenticate using an access token with the `repo` scope to use this endpoint. Removing a custom protection rule requires admin or owner permissions to the repository. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see "[Get an app](https://docs.github.com/rest/apps/apps#get-an-app)".
      tags:
      - repos
      operationId: repos/disable-deployment-protection-rule
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#disable-a-custom-protection-rule-for-an-environment
      parameters:
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/protection-rule-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
  "/repos/{owner}/{repo}/events":
    get:
      summary: List repository events
      description: "**Note**: This API is not built to serve real-time use cases.
        Depending on the time of day, event latency can be anywhere from 30s to 6h.\n"
      tags:
      - activity
      operationId: activity/list-repo-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-repository-events
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                200-response:
                  "$ref": "#/components/examples/repo-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/repos/{owner}/{repo}/forks":
    get:
      summary: List forks
      description: ''
      tags:
      - repos
      operationId: repos/list-forks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/forks#list-forks
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sort
        description: The sort order. `stargazers` will sort by star count.
        in: query
        required: false
        schema:
          type: string
          enum:
          - newest
          - oldest
          - stargazers
          - watchers
          default: newest
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '400':
          "$ref": "#/components/responses/bad_request"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: forks
    post:
      summary: Create a fork
      description: |-
        Create a fork for the authenticated user.

        **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).

        **Note**: Although this endpoint works with GitHub Apps, the GitHub App must be installed on the destination account with access to all repositories and on the source account with access to the source repository.
      tags:
      - repos
      operationId: repos/create-fork
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/forks#create-a-fork
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                organization:
                  type: string
                  description: Optional parameter to specify the organization name
                    if forking into an organization.
                name:
                  type: string
                  description: When forking from an existing repository, a new name
                    for the fork.
                default_branch_only:
                  type: boolean
                  description: When forking from an existing repository, fork with
                    only the default branch.
            examples:
              default:
                value:
                  organization: octocat
                  name: Hello-World
                  default_branch_only: true
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/full-repository"
              examples:
                default:
                  "$ref": "#/components/examples/full-repository"
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: forks
  "/repos/{owner}/{repo}/git/blobs":
    post:
      summary: Create a blob
      description: ''
      tags:
      - git
      operationId: git/create-blob
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/blobs#create-a-blob
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The new blob's content.
                encoding:
                  type: string
                  description: The encoding used for `content`. Currently, `"utf-8"`
                    and `"base64"` are supported.
                  default: utf-8
              required:
              - content
            examples:
              default:
                value:
                  content: Content of the blob
                  encoding: utf-8
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/short-blob"
              examples:
                default:
                  "$ref": "#/components/examples/short-blob"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: blobs
  "/repos/{owner}/{repo}/git/blobs/{file_sha}":
    get:
      summary: Get a blob
      description: |-
        The `content` in the response will always be Base64 encoded.

        _Note_: This API supports blobs up to 100 megabytes in size.
      tags:
      - git
      operationId: git/get-blob
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/blobs#get-a-blob
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: file_sha
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/blob"
              examples:
                default:
                  "$ref": "#/components/examples/blob"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: blobs
  "/repos/{owner}/{repo}/git/commits":
    post:
      summary: Create a commit
      description: |-
        Creates a new Git [commit object](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects).

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in the table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/create-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/commits#create-a-commit
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message
                tree:
                  type: string
                  description: The SHA of the tree object this commit points to
                parents:
                  type: array
                  description: The SHAs of the commits that were the parents of this
                    commit. If omitted or empty, the commit will be written as a root
                    commit. For a single parent, an array of one SHA should be provided;
                    for a merge commit, an array of more than one should be provided.
                  items:
                    type: string
                author:
                  type: object
                  description: Information about the author of the commit. By default,
                    the `author` will be the authenticated user and the current date.
                    See the `author` and `committer` object below for details.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                    date:
                      type: string
                      format: date-time
                      description: 'Indicates when this commit was authored (or committed).
                        This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                        format: `YYYY-MM-DDTHH:MM:SSZ`.'
                  required:
                  - name
                  - email
                committer:
                  type: object
                  description: Information about the person who is making the commit.
                    By default, `committer` will use the information set in `author`.
                    See the `author` and `committer` object below for details.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                    date:
                      type: string
                      format: date-time
                      description: 'Indicates when this commit was authored (or committed).
                        This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                        format: `YYYY-MM-DDTHH:MM:SSZ`.'
                signature:
                  type: string
                  description: The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy)
                    of the commit. GitHub adds the signature to the `gpgsig` header
                    of the created commit. For a commit signature to be verifiable
                    by Git or GitHub, it must be an ASCII-armored detached PGP signature
                    over the string commit as it would be written to the object database.
                    To pass a `signature` parameter, you need to first manually create
                    a valid PGP signature, which can be complicated. You may find
                    it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work)
                    to create signed commits.
              required:
              - message
              - tree
            examples:
              default:
                value:
                  message: my commit message
                  author:
                    name: Mona Octocat
                    email: octocat@github.com
                    date: '2008-07-09T16:13:30+12:00'
                  parents:
                  - 7d1b31e74ee336d15cbd21741bc88a537ed063a0
                  tree: 827efc6d56897b048c772eb4087f854f46256132
                  signature: |
                    -----BEGIN PGP SIGNATURE-----

                    iQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv
                    7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI
                    DkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n
                    2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA
                    OQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k
                    nrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU
                    +NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB
                    jHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ
                    3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+
                    UpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr
                    X11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp
                    eSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=
                    =5Io4
                    -----END PGP SIGNATURE-----
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-commit"
              examples:
                default:
                  "$ref": "#/components/examples/git-commit"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: commits
  "/repos/{owner}/{repo}/git/commits/{commit_sha}":
    get:
      summary: Get a commit object
      description: |-
        Gets a Git [commit object](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects).

        To get the contents of a commit, see "[Get a commit](/rest/commits/commits#get-a-commit)."

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in the table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/get-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/commits#get-a-commit-object
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-sha"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-commit"
              examples:
                default:
                  "$ref": "#/components/examples/git-commit-2"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: commits
  "/repos/{owner}/{repo}/git/matching-refs/{ref}":
    get:
      summary: List matching references
      description: |-
        Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.

        When you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.

        **Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/pulls/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".

        If you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.
      tags:
      - git
      operationId: git/list-matching-refs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/refs#list-matching-references
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/ref/{ref}":
    get:
      summary: Get a reference
      description: |-
        Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.

        **Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/pulls/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".
      tags:
      - git
      operationId: git/get-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/refs#get-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/refs":
    post:
      summary: Create a reference
      description: Creates a reference for your repository. You are unable to create
        new references for empty repositories, even if the commit SHA-1 hash used
        exists. Empty repositories are repositories without branches.
      tags:
      - git
      operationId: git/create-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/refs#create-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: 'The name of the fully qualified reference (ie: `refs/heads/master`).
                    If it doesn''t start with ''refs'' and have at least two slashes,
                    it will be rejected.'
                sha:
                  type: string
                  description: The SHA1 value for this reference.
              required:
              - ref
              - sha
            examples:
              default:
                value:
                  ref: refs/heads/featureA
                  sha: aa218f56b14c9653891f9e74264a383fa43fefbd
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/refs/{ref}":
    patch:
      summary: Update a reference
      description: ''
      tags:
      - git
      operationId: git/update-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/refs#update-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: The name of the reference to update (for example, `heads/featureA`).
          Can be a branch name (`heads/BRANCH_NAME`) or tag name (`tags/TAG_NAME`).
          For more information, see "[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)"
          in the Git documentation.
        in: path
        required: true
        example: heads/featureA
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sha:
                  type: string
                  description: The SHA1 value to set this reference to
                force:
                  type: boolean
                  description: Indicates whether to force the update or to make sure
                    the update is a fast-forward update. Leaving this out or setting
                    it to `false` will make sure you're not overwriting work.
                  default: false
              required:
              - sha
            examples:
              default:
                value:
                  sha: aa218f56b14c9653891f9e74264a383fa43fefbd
                  force: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-ref"
              examples:
                default:
                  "$ref": "#/components/examples/git-ref"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: refs
    delete:
      summary: Delete a reference
      description: ''
      tags:
      - git
      operationId: git/delete-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/refs#delete-a-reference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/commit-ref"
      responses:
        '204':
          description: Response
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: refs
  "/repos/{owner}/{repo}/git/tags":
    post:
      summary: Create a tag object
      description: |-
        Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://docs.github.com/rest/git/refs#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://docs.github.com/rest/git/refs#create-a-reference) the tag reference - this call would be unnecessary.

        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/create-tag
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/tags#create-a-tag-object
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: The tag's name. This is typically a version (e.g.,
                    "v0.0.1").
                message:
                  type: string
                  description: The tag message.
                object:
                  type: string
                  description: The SHA of the git object this is tagging.
                type:
                  type: string
                  description: The type of the object we're tagging. Normally this
                    is a `commit` but it can also be a `tree` or a `blob`.
                  enum:
                  - commit
                  - tree
                  - blob
                tagger:
                  type: object
                  description: An object with information about the individual creating
                    the tag.
                  properties:
                    name:
                      type: string
                      description: The name of the author of the tag
                    email:
                      type: string
                      description: The email of the author of the tag
                    date:
                      type: string
                      format: date-time
                      description: 'When this object was tagged. This is a timestamp
                        in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                        `YYYY-MM-DDTHH:MM:SSZ`.'
                  required:
                  - name
                  - email
              required:
              - tag
              - message
              - object
              - type
            examples:
              default:
                value:
                  tag: v0.0.1
                  message: initial version
                  object: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
                  type: commit
                  tagger:
                    name: Monalisa Octocat
                    email: octocat@github.com
                    date: '2011-06-17T14:53:35-07:00'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tag"
              examples:
                default:
                  "$ref": "#/components/examples/git-tag"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: tags
  "/repos/{owner}/{repo}/git/tags/{tag_sha}":
    get:
      summary: Get a tag
      description: |-
        **Signature verification object**

        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:

        | Name | Type | Description |
        | ---- | ---- | ----------- |
        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |
        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |
        | `signature` | `string` | The signature that was extracted from the commit. |
        | `payload` | `string` | The value that was signed. |

        These are the possible values for `reason` in the `verification` object:

        | Value | Description |
        | ----- | ----------- |
        | `expired_key` | The key that made the signature is expired. |
        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |
        | `gpgverify_error` | There was an error communicating with the signature verification service. |
        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |
        | `unsigned` | The object does not include a signature. |
        | `unknown_signature_type` | A non-PGP signature was found in the commit. |
        | `no_user` | No user was associated with the `committer` email address in the commit. |
        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |
        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |
        | `unknown_key` | The key that made the signature has not been registered with any user's account. |
        | `malformed_signature` | There was an error parsing the signature. |
        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |
        | `valid` | None of the above errors applied, so the signature is considered to be verified. |
      tags:
      - git
      operationId: git/get-tag
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/tags#get-a-tag
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: tag_sha
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tag"
              examples:
                default:
                  "$ref": "#/components/examples/git-tag"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: tags
  "/repos/{owner}/{repo}/git/trees":
    post:
      summary: Create a tree
      description: |-
        The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.

        If you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see "[Create a commit](https://docs.github.com/rest/git/commits#create-a-commit)" and "[Update a reference](https://docs.github.com/rest/git/refs#update-a-reference)."

        Returns an error if you try to delete a file that does not exist.
      tags:
      - git
      operationId: git/create-tree
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/trees#create-a-tree
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tree:
                  type: array
                  description: Objects (of `path`, `mode`, `type`, and `sha`) specifying
                    a tree structure.
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                        description: The file referenced in the tree.
                      mode:
                        type: string
                        description: The file mode; one of `100644` for file (blob),
                          `100755` for executable (blob), `040000` for subdirectory
                          (tree), `160000` for submodule (commit), or `120000` for
                          a blob that specifies the path of a symlink.
                        enum:
                        - '100644'
                        - '100755'
                        - '040000'
                        - '160000'
                        - '120000'
                      type:
                        type: string
                        description: Either `blob`, `tree`, or `commit`.
                        enum:
                        - blob
                        - tree
                        - commit
                      sha:
                        type: string
                        description: "The SHA1 checksum ID of the object in the tree.
                          Also called `tree.sha`. If the value is `null` then the
                          file will be deleted.  \n  \n**Note:** Use either `tree.sha`
                          or `content` to specify the contents of the entry. Using
                          both `tree.sha` and `content` will return an error."
                        nullable: true
                      content:
                        type: string
                        description: "The content you want this file to have. GitHub
                          will write this blob out and use that SHA for this entry.
                          Use either this, or `tree.sha`.  \n  \n**Note:** Use either
                          `tree.sha` or `content` to specify the contents of the entry.
                          Using both `tree.sha` and `content` will return an error."
                base_tree:
                  type: string
                  description: |
                    The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by `base_tree` and entries defined in the `tree` parameter. Entries defined in the `tree` parameter will overwrite items from `base_tree` with the same `path`. If you're creating new changes on a branch, then normally you'd set `base_tree` to the SHA1 of the Git tree object of the current latest commit on the branch you're working on.
                    If not provided, GitHub will create a new Git tree object from only the entries defined in the `tree` parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the `tree` parameter will be listed as deleted by the new commit.
              required:
              - tree
            examples:
              default:
                value:
                  base_tree: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
                  tree:
                  - path: file.rb
                    mode: '100644'
                    type: blob
                    sha: 44b4fc6d56897b048c772eb4087f854f46256132
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tree"
              examples:
                default:
                  "$ref": "#/components/examples/git-tree"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: trees
  "/repos/{owner}/{repo}/git/trees/{tree_sha}":
    get:
      summary: Get a tree
      description: |-
        Returns a single tree using the SHA1 value or ref name for that tree.

        If `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.


        **Note**: The limit for the `tree` array is 100,000 entries with a maximum size of 7 MB when using the `recursive` parameter.
      tags:
      - git
      operationId: git/get-tree
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/git/trees#get-a-tree
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: tree_sha
        description: The SHA1 value or ref (branch or tag) name of the tree.
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: recursive
        description: 'Setting this parameter to any value returns the objects or subtrees
          referenced by the tree specified in `:tree_sha`. For example, setting `recursive`
          to any of the following will enable returning objects or subtrees: `0`,
          `1`, `"true"`, and `"false"`. Omit this parameter to prevent recursively
          returning objects or subtrees.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/git-tree"
              examples:
                default-response:
                  "$ref": "#/components/examples/git-tree-default-response"
                response-recursively-retrieving-a-tree:
                  "$ref": "#/components/examples/git-tree-response-recursively-retrieving-a-tree"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: git
        subcategory: trees
  "/repos/{owner}/{repo}/hooks":
    get:
      summary: List repository webhooks
      description: Lists webhooks for a repository. `last response` may return null
        if there have not been any deliveries within 30 days.
      tags:
      - repos
      operationId: repos/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#list-repository-webhooks
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
    post:
      summary: Create a repository webhook
      description: |-
        Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can
        share the same `config` as long as those webhooks do not have any `events` that overlap.
      tags:
      - repos
      operationId: repos/create-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#create-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                name:
                  type: string
                  description: 'Use `web` to create a webhook. Default: `web`. This
                    parameter only accepts the value `web`.'
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      "$ref": "#/components/schemas/webhook-config-url"
                    content_type:
                      "$ref": "#/components/schemas/webhook-config-content-type"
                    secret:
                      "$ref": "#/components/schemas/webhook-config-secret"
                    insecure_ssl:
                      "$ref": "#/components/schemas/webhook-config-insecure-ssl"
                    token:
                      type: string
                      example: '"abc"'
                    digest:
                      type: string
                      example: '"sha256"'
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads)
                    the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
              additionalProperties: false
            examples:
              default:
                value:
                  name: web
                  active: true
                  events:
                  - push
                  - pull_request
                  config:
                    url: https://example.com/webhook
                    content_type: json
                    insecure_ssl: '0'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
  "/repos/{owner}/{repo}/hooks/{hook_id}":
    get:
      summary: Get a repository webhook
      description: Returns a webhook configured in a repository. To get only the webhook
        `config` properties, see "[Get a webhook configuration for a repository](/rest/webhooks/repo-config#get-a-webhook-configuration-for-a-repository)."
      tags:
      - repos
      operationId: repos/get-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#get-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
    patch:
      summary: Update a repository webhook
      description: Updates a webhook configured in a repository. If you previously
        had a `secret` set, you must provide the same `secret` or set a new `secret`
        or the secret will be removed. If you are only updating individual webhook
        `config` properties, use "[Update a webhook configuration for a repository](/rest/webhooks/repo-config#update-a-webhook-configuration-for-a-repository)."
      tags:
      - repos
      operationId: repos/update-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#update-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      "$ref": "#/components/schemas/webhook-config-url"
                    content_type:
                      "$ref": "#/components/schemas/webhook-config-content-type"
                    secret:
                      "$ref": "#/components/schemas/webhook-config-secret"
                    insecure_ssl:
                      "$ref": "#/components/schemas/webhook-config-insecure-ssl"
                    address:
                      type: string
                      example: '"bar@example.com"'
                    room:
                      type: string
                      example: '"The Serious Room"'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads)
                    the hook is triggered for. This replaces the entire array of events.
                  default:
                  - push
                  items:
                    type: string
                add_events:
                  type: array
                  description: Determines a list of events to be added to the list
                    of events that the Hook triggers for.
                  items:
                    type: string
                remove_events:
                  type: array
                  description: Determines a list of events to be removed from the
                    list of events that the Hook triggers for.
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook
                    is triggered. Set to `true` to send notifications.
                  default: true
            examples:
              default:
                value:
                  active: true
                  add_events:
                  - pull_request
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook"
              examples:
                default:
                  "$ref": "#/components/examples/hook"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
    delete:
      summary: Delete a repository webhook
      description: ''
      tags:
      - repos
      operationId: repos/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#delete-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
  "/repos/{owner}/{repo}/hooks/{hook_id}/config":
    get:
      summary: Get a webhook configuration for a repository
      description: |-
        Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use "[Get a repository webhook](/rest/webhooks/repos#get-a-repository-webhook)."

        Access tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.
      tags:
      - repos
      operationId: repos/get-webhook-config-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repo-config#get-a-webhook-configuration-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/webhook-config"
              examples:
                default:
                  "$ref": "#/components/examples/webhook-config"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repo-config
    patch:
      summary: Update a webhook configuration for a repository
      description: |-
        Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use "[Update a repository webhook](/rest/webhooks/repos#update-a-repository-webhook)."

        Access tokens must have the `write:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:write` permission.
      tags:
      - repos
      operationId: repos/update-webhook-config-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repo-config#update-a-webhook-configuration-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                url:
                  "$ref": "#/components/schemas/webhook-config-url"
                content_type:
                  "$ref": "#/components/schemas/webhook-config-content-type"
                secret:
                  "$ref": "#/components/schemas/webhook-config-secret"
                insecure_ssl:
                  "$ref": "#/components/schemas/webhook-config-insecure-ssl"
            examples:
              default:
                summary: Example of updating content type and URL
                value:
                  content_type: json
                  url: https://example.com/webhook
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/webhook-config"
              examples:
                default:
                  "$ref": "#/components/examples/webhook-config"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repo-config
  "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries":
    get:
      summary: List deliveries for a repository webhook
      description: Returns a list of webhook deliveries for a webhook configured in
        a repository.
      tags:
      - repos
      operationId: repos/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repo-deliveries#list-deliveries-for-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/cursor"
      - name: redelivery
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/hook-delivery-item"
              examples:
                default:
                  "$ref": "#/components/examples/hook-delivery-items"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repo-deliveries
  "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}":
    get:
      summary: Get a delivery for a repository webhook
      description: Returns a delivery for a webhook configured in a repository.
      tags:
      - repos
      operationId: repos/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repo-deliveries#get-a-delivery-for-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      - "$ref": "#/components/parameters/delivery-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hook-delivery"
              examples:
                default:
                  "$ref": "#/components/examples/hook-delivery"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repo-deliveries
  "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts":
    post:
      summary: Redeliver a delivery for a repository webhook
      description: Redeliver a webhook delivery for a webhook configured in a repository.
      tags:
      - repos
      operationId: repos/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repo-deliveries#redeliver-a-delivery-for-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      - "$ref": "#/components/parameters/delivery-id"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '400':
          "$ref": "#/components/responses/bad_request"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repo-deliveries
  "/repos/{owner}/{repo}/hooks/{hook_id}/pings":
    post:
      summary: Ping a repository webhook
      description: This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event)
        to be sent to the hook.
      tags:
      - repos
      operationId: repos/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#ping-a-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
  "/repos/{owner}/{repo}/hooks/{hook_id}/tests":
    post:
      summary: Test the push repository webhook
      description: |-
        This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.

        **Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`
      tags:
      - repos
      operationId: repos/test-push-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/webhooks/repos#test-the-push-repository-webhook
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/hook-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: webhooks
        subcategory: repos
  "/repos/{owner}/{repo}/import":
    get:
      summary: Get an import status
      description: |-
        View the progress of an import.

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.

        **Import status**

        This section includes details about the possible values of the `status` field of the Import Progress response.

        An import that does not have errors will progress through these steps:

        *   `detecting` - the "detection" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.
        *   `importing` - the "raw" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).
        *   `mapping` - the "rewrite" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.
        *   `pushing` - the "push" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is "Writing objects".
        *   `complete` - the import is complete, and the repository is ready on GitHub.

        If there are problems, you will see one of these in the `status` field:

        *   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/migrations/source-imports#update-an-import) section.
        *   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api) for more information.
        *   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/migrations/source-imports#update-an-import) section.
        *   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://docs.github.com/rest/migrations/source-imports#cancel-an-import) and [retry](https://docs.github.com/rest/migrations/source-imports#start-an-import) with the correct URL.
        *   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update an import](https://docs.github.com/rest/migrations/source-imports#update-an-import) section.

        **The project_choices field**

        When multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.

        **Git LFS related fields**

        This section includes details about Git LFS related fields that may be present in the Import Progress response.

        *   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.
        *   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.
        *   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.
        *   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a "Get Large Files" request.
      tags:
      - migrations
      operationId: migrations/get-import-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#get-an-import-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/import"
              examples:
                default:
                  "$ref": "#/components/examples/import"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
    put:
      summary: Start an import
      description: |-
        Start a source import to a GitHub repository using GitHub Importer. Importing into a GitHub repository with GitHub Actions enabled is not supported and will return a status `422 Unprocessable Entity` response.
        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/start-import
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#start-an-import
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vcs_url:
                  type: string
                  description: The URL of the originating repository.
                vcs:
                  type: string
                  description: The originating VCS type. Without this parameter, the
                    import job will take additional time to detect the VCS type before
                    beginning the import. This detection step will be reflected in
                    the response.
                  enum:
                  - subversion
                  - git
                  - mercurial
                  - tfvc
                vcs_username:
                  type: string
                  description: If authentication is required, the username to provide
                    to `vcs_url`.
                vcs_password:
                  type: string
                  description: If authentication is required, the password to provide
                    to `vcs_url`.
                tfvc_project:
                  type: string
                  description: For a tfvc import, the name of the project that is
                    being imported.
              required:
              - vcs_url
            examples:
              default:
                value:
                  vcs: subversion
                  vcs_url: http://svn.mycompany.com/svn/myproject
                  vcs_username: octocat
                  vcs_password: secret
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/import"
              examples:
                default:
                  "$ref": "#/components/examples/import-2"
          headers:
            Location:
              example: https://api.github.com/repos/spraints/socm/import
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
    patch:
      summary: Update an import
      description: |-
        An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API
        request. If no parameters are provided, the import will be restarted.

        Some servers (e.g. TFS servers) can have several projects at a single URL. In those cases the import progress will
        have the status `detection_found_multiple` and the Import Progress response will include a `project_choices` array.
        You can select the project to import by providing one of the objects in the `project_choices` array in the update request.

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/update-import
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#update-an-import
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                vcs_username:
                  type: string
                  description: The username to provide to the originating repository.
                vcs_password:
                  type: string
                  description: The password to provide to the originating repository.
                vcs:
                  type: string
                  description: The type of version control system you are migrating
                    from.
                  enum:
                  - subversion
                  - tfvc
                  - git
                  - mercurial
                  example: '"git"'
                tfvc_project:
                  type: string
                  description: For a tfvc import, the name of the project that is
                    being imported.
                  example: '"project1"'
              nullable: true
            examples:
              example-1:
                summary: Update authentication for an import
                value:
                  vcs_username: octocat
                  vcs_password: secret
              example-2:
                summary: Updating the project choice
                value:
                  vcs: tfvc
                  tfvc_project: project1
                  human_name: project1 (tfs)
              example-3:
                summary: Restarting an import
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/import"
              examples:
                example-1:
                  "$ref": "#/components/examples/import-example-1"
                example-2:
                  "$ref": "#/components/examples/import-example-2"
                example-3:
                  "$ref": "#/components/examples/import-response"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
    delete:
      summary: Cancel an import
      description: |
        Stop an import for a repository.

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/cancel-import
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#cancel-an-import
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  "/repos/{owner}/{repo}/import/authors":
    get:
      summary: Get commit authors
      description: |-
        Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.

        This endpoint and the [Map a commit author](https://docs.github.com/rest/migrations/source-imports#map-a-commit-author) endpoint allow you to provide correct Git author information.

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/get-commit-authors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#get-commit-authors
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/since-user"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/porter-author"
              examples:
                default:
                  "$ref": "#/components/examples/porter-author-items"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  "/repos/{owner}/{repo}/import/authors/{author_id}":
    patch:
      summary: Map a commit author
      description: |
        Update an author's identity for the import. Your application can continue updating authors any time before you push
        new commits to the repository.

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/map-commit-author
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#map-a-commit-author
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: author_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The new Git author email.
                name:
                  type: string
                  description: The new Git author name.
              additionalProperties: false
            examples:
              default:
                value:
                  email: hubot@github.com
                  name: Hubot the Robot
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/porter-author"
              examples:
                default:
                  "$ref": "#/components/examples/porter-author"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  "/repos/{owner}/{repo}/import/large_files":
    get:
      summary: Get large files
      description: |
        List files larger than 100MB found during the import

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/get-large-files
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#get-large-files
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/porter-large-file"
              examples:
                default:
                  "$ref": "#/components/examples/porter-large-file-items"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  "/repos/{owner}/{repo}/import/lfs":
    patch:
      summary: Update Git LFS preference
      description: |
        You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability
        is powered by [Git LFS](https://git-lfs.com).

        You can learn more about our LFS feature and working with large files [on our help
        site](https://docs.github.com/repositories/working-with-files/managing-large-files).

        **Warning:** Support for importing Mercurial, Subversion and Team Foundation Version Control repositories will end
        on October 17, 2023. For more details, see [changelog](https://gh.io/github-importer-non-git-eol). In the coming weeks, we will update
        these docs to reflect relevant changes to the API and will contact all integrators using the "Source imports" API.
      tags:
      - migrations
      operationId: migrations/set-lfs-preference
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                use_lfs:
                  type: string
                  description: Whether to store large files during the import. `opt_in`
                    means large files will be stored using Git LFS. `opt_out` means
                    large files will be removed during the import.
                  enum:
                  - opt_in
                  - opt_out
              required:
              - use_lfs
            examples:
              default:
                value:
                  use_lfs: opt_in
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/import"
              examples:
                default:
                  "$ref": "#/components/examples/import"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/porter_maintenance"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  "/repos/{owner}/{repo}/installation":
    get:
      summary: Get a repository installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-repo-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#get-a-repository-installation-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/repos/{owner}/{repo}/interaction-limits":
    get:
      summary: Get interaction restrictions for a repository
      description: Shows which type of GitHub user can interact with this repository
        and when the restriction expires. If there are no restrictions, you will see
        an empty response.
      tags:
      - interactions
      operationId: interactions/get-restrictions-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/repos#get-interaction-restrictions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/interaction-limit-response-any"
              examples:
                default:
                  "$ref": "#/components/examples/interaction-limit-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: interactions
        subcategory: repos
    put:
      summary: Set interaction restrictions for a repository
      description: Temporarily restricts interactions to a certain type of GitHub
        user within the given repository. You must have owner or admin access to set
        these restrictions. If an interaction limit is set for the user or organization
        that owns this repository, you will receive a `409 Conflict` response and
        will not be able to use this endpoint to change the interaction limit for
        a single repository.
      tags:
      - interactions
      operationId: interactions/set-restrictions-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/repos#set-interaction-restrictions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/interaction-limit"
            examples:
              default:
                summary: Example request body
                value:
                  limit: collaborators_only
                  expiry: one_day
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/interaction-limit-response"
              examples:
                default:
                  "$ref": "#/components/examples/interaction-limit-2"
        '409':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: interactions
        subcategory: repos
    delete:
      summary: Remove interaction restrictions for a repository
      description: Removes all interaction restrictions from the given repository.
        You must have owner or admin access to remove restrictions. If the interaction
        limit is set for the user or organization that owns this repository, you will
        receive a `409 Conflict` response and will not be able to use this endpoint
        to change the interaction limit for a single repository.
      tags:
      - interactions
      operationId: interactions/remove-restrictions-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/repos#remove-interaction-restrictions-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
        '409':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: interactions
        subcategory: repos
  "/repos/{owner}/{repo}/invitations":
    get:
      summary: List repository invitations
      description: When authenticating as a user with admin rights to a repository,
        this endpoint will list all currently open repository invitations.
      tags:
      - repos
      operationId: repos/list-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#list-repository-invitations
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/repository-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: invitations
  "/repos/{owner}/{repo}/invitations/{invitation_id}":
    patch:
      summary: Update a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/update-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#update-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/invitation-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: string
                  description: The permissions that the associated user will have
                    on the repository. Valid values are `read`, `write`, `maintain`,
                    `triage`, and `admin`.
                  enum:
                  - read
                  - write
                  - maintain
                  - triage
                  - admin
            examples:
              default:
                summary: Example request body
                value:
                  permissions: write
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/repository-invitation"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: invitations
    delete:
      summary: Delete a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/delete-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#delete-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/invitation-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: invitations
  "/repos/{owner}/{repo}/issues":
    get:
      summary: List repository issues
      description: |-
        List issues in a repository. Only open issues will be listed.

        **Note**: GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/pulls/pulls#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#list-repository-issues
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: milestone
        description: If an `integer` is passed, it should refer to a milestone by
          its `number` field. If the string `*` is passed, issues with any milestone
          are accepted. If the string `none` is passed, issues without milestones
          are returned.
        in: query
        required: false
        schema:
          type: string
      - name: state
        description: Indicates the state of the issues to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: assignee
        description: Can be the name of a user. Pass in `none` for issues with no
          assigned user, and `*` for issues assigned to any user.
        in: query
        required: false
        schema:
          type: string
      - name: creator
        description: The user that created the issue.
        in: query
        required: false
        schema:
          type: string
      - name: mentioned
        description: A user that's mentioned in the issue.
        in: query
        required: false
        schema:
          type: string
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: issues
    post:
      summary: Create an issue
      description: |-
        Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - issues
      operationId: issues/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#create-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  oneOf:
                  - type: string
                  - type: integer
                  description: The title of the issue.
                body:
                  type: string
                  description: The contents of the issue.
                assignee:
                  type: string
                  description: 'Login for the user that this issue should be assigned
                    to. _NOTE: Only users with push access can set the assignee for
                    new issues. The assignee is silently dropped otherwise. **This
                    field is deprecated.**_'
                  nullable: true
                milestone:
                  oneOf:
                  - type: string
                  - type: integer
                    description: 'The `number` of the milestone to associate this
                      issue with. _NOTE: Only users with push access can set the milestone
                      for new issues. The milestone is silently dropped otherwise._'
                  nullable: true
                labels:
                  type: array
                  description: 'Labels to associate with this issue. _NOTE: Only users
                    with push access can set labels for new issues. Labels are silently
                    dropped otherwise._'
                  items:
                    oneOf:
                    - type: string
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                          nullable: true
                        color:
                          type: string
                          nullable: true
                assignees:
                  type: array
                  description: 'Logins for Users to assign to this issue. _NOTE: Only
                    users with push access can set assignees for new issues. Assignees
                    are silently dropped otherwise._'
                  items:
                    type: string
              required:
              - title
            examples:
              default:
                value:
                  title: Found a bug
                  body: I'm having a problem with this.
                  assignees:
                  - octocat
                  milestone: 1
                  labels:
                  - bug
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/1347
              schema:
                type: string
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: issues
  "/repos/{owner}/{repo}/issues/comments":
    get:
      summary: List issue comments for a repository
      description: |-
        You can use the REST API to list comments on issues and pull requests for a repository. Every pull request is an issue, but not every issue is a pull request.

        By default, issue comments are ordered by ascending ID.
      tags:
      - issues
      operationId: issues/list-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/comments#list-issue-comments-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: Either `asc` or `desc`. Ignored without the `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
  "/repos/{owner}/{repo}/issues/comments/{comment_id}":
    get:
      summary: Get an issue comment
      description: You can use the REST API to get comments on issues and pull requests.
        Every pull request is an issue, but not every issue is a pull request.
      tags:
      - issues
      operationId: issues/get-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/comments#get-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
    patch:
      summary: Update an issue comment
      description: You can use the REST API to update comments on issues and pull
        requests. Every pull request is an issue, but not every issue is a pull request.
      tags:
      - issues
      operationId: issues/update-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/comments#update-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
              required:
              - body
            examples:
              default:
                value:
                  body: Me too
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
    delete:
      summary: Delete an issue comment
      description: You can use the REST API to delete comments on issues and pull
        requests. Every pull request is an issue, but not every issue is a pull request.
      tags:
      - issues
      operationId: issues/delete-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/comments#delete-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions":
    get:
      summary: List reactions for an issue comment
      description: List the reactions to an [issue comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment).
      tags:
      - reactions
      operationId: reactions/list-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to an issue comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for an issue comment
      description: Create a reaction to an [issue comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment).
        A response with an HTTP `200` status means that you already added the reaction
        type to this issue comment.
      tags:
      - reactions
      operationId: reactions/create-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the issue comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Delete an issue comment reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.

        Delete a reaction to an [issue comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment).
      tags:
      - reactions
      operationId: reactions/delete-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-an-issue-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/issues/events":
    get:
      summary: List issue events for a repository
      description: Lists events for a repository.
      tags:
      - issues
      operationId: issues/list-events-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/events#list-issue-events-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-event"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: events
  "/repos/{owner}/{repo}/issues/events/{event_id}":
    get:
      summary: Get an issue event
      description: Gets a single event by the event id.
      tags:
      - issues
      operationId: issues/get-event
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/events#get-an-issue-event
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: event_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-event"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: events
  "/repos/{owner}/{repo}/issues/{issue_number}":
    get:
      summary: Get an issue
      description: |-
        The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was
        [transferred](https://docs.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If
        the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
        returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read
        access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe
        to the [`issues`](https://docs.github.com/webhooks/event-payloads/#issues) webhook.

        **Note**: GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/pulls/pulls#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#get-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: issues
    patch:
      summary: Update an issue
      description: Issue owners and users with push access can edit an issue.
      tags:
      - issues
      operationId: issues/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#update-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  oneOf:
                  - type: string
                  - type: integer
                  description: The title of the issue.
                  nullable: true
                body:
                  type: string
                  description: The contents of the issue.
                  nullable: true
                assignee:
                  type: string
                  nullable: true
                  description: Username to assign to this issue. **This field is deprecated.**
                state:
                  type: string
                  description: The open or closed state of the issue.
                  enum:
                  - open
                  - closed
                state_reason:
                  type: string
                  enum:
                  - completed
                  - not_planned
                  - reopened
                  nullable: true
                  description: The reason for the state change. Ignored unless `state`
                    is changed.
                  example: not_planned
                milestone:
                  oneOf:
                  - type: string
                  - type: integer
                    description: The `number` of the milestone to associate this issue
                      with or use `null` to remove the current milestone. Only users
                      with push access can set the milestone for issues. Without push
                      access to the repository, milestone changes are silently dropped.
                  nullable: true
                labels:
                  type: array
                  description: Labels to associate with this issue. Pass one or more
                    labels to _replace_ the set of labels on this issue. Send an empty
                    array (`[]`) to clear all labels from the issue. Only users with
                    push access can set labels for issues. Without push access to
                    the repository, label changes are silently dropped.
                  items:
                    oneOf:
                    - type: string
                    - type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                          nullable: true
                        color:
                          type: string
                          nullable: true
                assignees:
                  type: array
                  description: Usernames to assign to this issue. Pass one or more
                    user logins to _replace_ the set of assignees on this issue. Send
                    an empty array (`[]`) to clear all assignees from the issue. Only
                    users with push access can set assignees for new issues. Without
                    push access to the repository, assignee changes are silently dropped.
                  items:
                    type: string
            examples:
              default:
                value:
                  title: Found a bug
                  body: I'm having a problem with this.
                  assignees:
                  - octocat
                  milestone: 1
                  state: open
                  labels:
                  - bug
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: issues
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees":
    post:
      summary: Add assignees to an issue
      description: Adds up to 10 assignees to an issue. Users already assigned to
        an issue are not replaced.
      tags:
      - issues
      operationId: issues/add-assignees
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/assignees#add-assignees-to-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                assignees:
                  type: array
                  description: 'Usernames of people to assign this issue to. _NOTE:
                    Only users with push access can add assignees to an issue. Assignees
                    are silently ignored otherwise._'
                  items:
                    type: string
            examples:
              default:
                value:
                  assignees:
                  - hubot
                  - other_user
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
    delete:
      summary: Remove assignees from an issue
      description: Removes one or more assignees from an issue.
      tags:
      - issues
      operationId: issues/remove-assignees
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/assignees#remove-assignees-from-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignees:
                  type: array
                  description: 'Usernames of assignees to remove from an issue. _NOTE:
                    Only users with push access can remove assignees from an issue.
                    Assignees are silently ignored otherwise._'
                  items:
                    type: string
            examples:
              default:
                value:
                  assignees:
                  - hubot
                  - other_user
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}":
    get:
      summary: Check if a user can be assigned to a issue
      description: |-
        Checks if a user has permission to be assigned to a specific issue.

        If the `assignee` can be assigned to this issue, a `204` status code with no content is returned.

        Otherwise a `404` status code is returned.
      tags:
      - issues
      operationId: issues/check-user-can-be-assigned-to-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/assignees#check-if-a-user-can-be-assigned-to-a-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - name: assignee
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Response if `assignee` can be assigned to `issue_number`
        '404':
          description: Response if `assignee` can not be assigned to `issue_number`
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  "/repos/{owner}/{repo}/issues/{issue_number}/comments":
    get:
      summary: List issue comments
      description: |-
        You can use the REST API to list comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.

        Issue comments are ordered by ascending ID.
      tags:
      - issues
      operationId: issues/list-comments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/comments#list-issue-comments
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
    post:
      summary: Create an issue comment
      description: |2-

        You can use the REST API to create comments on issues and pull requests. Every pull request is an issue, but not every issue is a pull request.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications).
        Creating content too quickly using this endpoint may result in secondary rate limiting.
        See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)"
        and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)"
        for details.
      tags:
      - issues
      operationId: issues/create-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/comments#create-an-issue-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
              required:
              - body
            examples:
              default:
                value:
                  body: Me too
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-comment"
              examples:
                default:
                  "$ref": "#/components/examples/issue-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
  "/repos/{owner}/{repo}/issues/{issue_number}/events":
    get:
      summary: List issue events
      description: Lists all events for an issue.
      tags:
      - issues
      operationId: issues/list-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/events#list-issue-events
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue-event-for-issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-event-for-issue-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: events
  "/repos/{owner}/{repo}/issues/{issue_number}/labels":
    get:
      summary: List labels for an issue
      description: Lists all labels for an issue.
      tags:
      - issues
      operationId: issues/list-labels-on-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#list-labels-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    post:
      summary: Add labels to an issue
      description: 'Adds labels to an issue. If you provide an empty array of labels,
        all labels are removed from the issue. '
      tags:
      - issues
      operationId: issues/add-labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#add-labels-to-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  labels:
                    type: array
                    minItems: 1
                    description: The names of the labels to add to the issue's existing
                      labels. You can pass an empty array to remove all labels. Alternatively,
                      you can pass a single label as a `string` or an `array` of labels
                      directly, but GitHub recommends passing an object with the `labels`
                      key. You can also replace all of the labels for an issue. For
                      more information, see "[Set labels for an issue](https://docs.github.com/rest/issues/labels#set-labels-for-an-issue)."
                    items:
                      type: string
              - type: array
                minItems: 1
                items:
                  type: string
              - type: object
                properties:
                  labels:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                      required:
                      - name
              - type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              - type: string
            examples:
              default:
                value:
                  labels:
                  - bug
                  - enhancement
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    put:
      summary: Set labels for an issue
      description: Removes any previous labels and sets the new labels for an issue.
      tags:
      - issues
      operationId: issues/set-labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#set-labels-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  labels:
                    type: array
                    minItems: 1
                    description: The names of the labels to set for the issue. The
                      labels you set replace any existing labels. You can pass an
                      empty array to remove all labels. Alternatively, you can pass
                      a single label as a `string` or an `array` of labels directly,
                      but GitHub recommends passing an object with the `labels` key.
                      You can also add labels to the existing labels for an issue.
                      For more information, see "[Add labels to an issue](https://docs.github.com/rest/issues/labels#add-labels-to-an-issue)."
                    items:
                      type: string
              - type: array
                minItems: 1
                items:
                  type: string
              - type: object
                properties:
                  labels:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                      required:
                      - name
              - type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              - type: string
            examples:
              default:
                value:
                  labels:
                  - bug
                  - enhancement
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    delete:
      summary: Remove all labels from an issue
      description: Removes all labels from an issue.
      tags:
      - issues
      operationId: issues/remove-all-labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#remove-all-labels-from-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      responses:
        '204':
          description: Response
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}":
    delete:
      summary: Remove a label from an issue
      description: Removes the specified label from the issue, and returns the remaining
        labels on the issue. This endpoint returns a `404 Not Found` status if the
        label does not exist.
      tags:
      - issues
      operationId: issues/remove-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#remove-a-label-from-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items-2"
        '301':
          "$ref": "#/components/responses/moved_permanently"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/issues/{issue_number}/lock":
    put:
      summary: Lock an issue
      description: |-
        Users with push access can lock an issue or pull request's conversation.

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
      - issues
      operationId: issues/lock
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#lock-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                lock_reason:
                  type: string
                  description: "The reason for locking the issue or pull request conversation.
                    Lock will fail if you don't use one of these reasons:  \n * `off-topic`
                    \ \n * `too heated`  \n * `resolved`  \n * `spam`"
                  enum:
                  - off-topic
                  - too heated
                  - resolved
                  - spam
            examples:
              default:
                summary: Example of locking an issue as off-topic
                value:
                  lock_reason: off-topic
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: issues
    delete:
      summary: Unlock an issue
      description: Users with push access can unlock an issue's conversation.
      tags:
      - issues
      operationId: issues/unlock
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#unlock-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: issues
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions":
    get:
      summary: List reactions for an issue
      description: List the reactions to an [issue](https://docs.github.com/rest/issues/issues#get-an-issue).
      tags:
      - reactions
      operationId: reactions/list-for-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to an issue.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for an issue
      description: Create a reaction to an [issue](https://docs.github.com/rest/issues/issues#get-an-issue).
        A response with an HTTP `200` status means that you already added the reaction
        type to this issue.
      tags:
      - reactions
      operationId: reactions/create-for-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the issue.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}":
    delete:
      summary: Delete an issue reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.

        Delete a reaction to an [issue](https://docs.github.com/rest/issues/issues#get-an-issue).
      tags:
      - reactions
      operationId: reactions/delete-for-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-an-issue-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/issues/{issue_number}/timeline":
    get:
      summary: List timeline events for an issue
      description: List all timeline events for an issue.
      tags:
      - issues
      operationId: issues/list-events-for-timeline
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/timeline#list-timeline-events-for-an-issue
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/issue-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/timeline-issue-events"
              examples:
                default:
                  "$ref": "#/components/examples/timeline-issue-events"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: timeline
  "/repos/{owner}/{repo}/keys":
    get:
      summary: List deploy keys
      description: ''
      tags:
      - repos
      operationId: repos/list-deploy-keys
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#list-deploy-keys
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/deploy-key"
              examples:
                default:
                  "$ref": "#/components/examples/deploy-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
    post:
      summary: Create a deploy key
      description: You can create a read-only deploy key.
      tags:
      - repos
      operationId: repos/create-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#create-a-deploy-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: A name for the key.
                key:
                  type: string
                  description: The contents of the key.
                read_only:
                  type: boolean
                  description: "If `true`, the key will only be able to read repository
                    contents. Otherwise, the key will be able to read and write.  \n
                    \ \nDeploy keys with write access can perform the same actions
                    as an organization member with admin access, or a collaborator
                    on a personal repository. For more information, see \"[Repository
                    permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)\"
                    and \"[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).\""
              required:
              - key
            examples:
              default:
                value:
                  title: octocat@octomac
                  key: ssh-rsa AAA...
                  read_only: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deploy-key"
              examples:
                default:
                  "$ref": "#/components/examples/deploy-key"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/keys/1
              schema:
                type: string
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
  "/repos/{owner}/{repo}/keys/{key_id}":
    get:
      summary: Get a deploy key
      description: ''
      tags:
      - repos
      operationId: repos/get-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#get-a-deploy-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/key-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deploy-key"
              examples:
                default:
                  "$ref": "#/components/examples/deploy-key"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
    delete:
      summary: Delete a deploy key
      description: Deploy keys are immutable. If you need to update a key, remove
        the key and create a new one instead.
      tags:
      - repos
      operationId: repos/delete-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#delete-a-deploy-key
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/key-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
  "/repos/{owner}/{repo}/labels":
    get:
      summary: List labels for a repository
      description: Lists all labels for a repository.
      tags:
      - issues
      operationId: issues/list-labels-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#list-labels-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    post:
      summary: Create a label
      description: Creates a label for the specified repository with the given name
        and color. The name and color parameters are required. The color must be a
        valid [hexadecimal color code](http://www.color-hex.com/).
      tags:
      - issues
      operationId: issues/create-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#create-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the label. Emoji can be added to label
                    names, using either native emoji or colon-style markup. For example,
                    typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png
                    ":strawberry:"). For a full list of available emoji and codes,
                    see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet)."
                color:
                  type: string
                  description: The [hexadecimal color code](http://www.color-hex.com/)
                    for the label, without the leading `#`.
                description:
                  type: string
                  description: A short description of the label. Must be 100 characters
                    or fewer.
              required:
              - name
            examples:
              default:
                value:
                  name: bug
                  description: Something isn't working
                  color: f29513
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/labels/bug
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/labels/{name}":
    get:
      summary: Get a label
      description: Gets a label using the given name.
      tags:
      - issues
      operationId: issues/get-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#get-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    patch:
      summary: Update a label
      description: Updates a label using the given label name.
      tags:
      - issues
      operationId: issues/update-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#update-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  description: The new name of the label. Emoji can be added to label
                    names, using either native emoji or colon-style markup. For example,
                    typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png
                    ":strawberry:"). For a full list of available emoji and codes,
                    see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet)."
                color:
                  type: string
                  description: The [hexadecimal color code](http://www.color-hex.com/)
                    for the label, without the leading `#`.
                description:
                  type: string
                  description: A short description of the label. Must be 100 characters
                    or fewer.
            examples:
              default:
                value:
                  new_name: 'bug :bug:'
                  description: Small bug fix required
                  color: b01f26
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    delete:
      summary: Delete a label
      description: Deletes a label using the given label name.
      tags:
      - issues
      operationId: issues/delete-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#delete-a-label
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/languages":
    get:
      summary: List repository languages
      description: Lists languages for the specified repository. The value shown for
        each language is the number of bytes of code written in that language.
      tags:
      - repos
      operationId: repos/list-languages
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-languages
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/language"
              examples:
                default:
                  "$ref": "#/components/examples/language"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/license":
    get:
      summary: Get the license for a repository
      description: |-
        This method returns the contents of the repository's license file, if one is detected.

        Similar to [Get repository content](https://docs.github.com/rest/repos/contents#get-repository-content), this method also supports [custom media types](https://docs.github.com/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.
      tags:
      - licenses
      operationId: licenses/get-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/licenses/licenses#get-the-license-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/license-content"
              examples:
                default:
                  "$ref": "#/components/examples/license-content"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: licenses
        subcategory: licenses
  "/repos/{owner}/{repo}/merge-upstream":
    post:
      summary: Sync a fork branch with the upstream repository
      description: Sync a branch of a forked repository to keep it up-to-date with
        the upstream repository.
      tags:
      - repos
      operationId: repos/merge-upstream
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#sync-a-fork-branch-with-the-upstream-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  description: The name of the branch which should be updated to match
                    upstream.
              required:
              - branch
            examples:
              default:
                value:
                  branch: main
      responses:
        '200':
          description: The branch has been successfully synced with the upstream repository
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/merged-upstream"
              examples:
                default:
                  "$ref": "#/components/examples/merged-upstream"
        '409':
          description: The branch could not be synced because of a merge conflict
        '422':
          description: The branch could not be synced for some other reason
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  "/repos/{owner}/{repo}/merges":
    post:
      summary: Merge a branch
      description: ''
      tags:
      - repos
      operationId: repos/merge
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#merge-a-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base:
                  type: string
                  description: The name of the base branch that the head will be merged
                    into.
                head:
                  type: string
                  description: The head to merge. This can be a branch name or a commit
                    SHA1.
                commit_message:
                  type: string
                  description: Commit message to use for the merge commit. If omitted,
                    a default message will be used.
              required:
              - base
              - head
            examples:
              default:
                value:
                  base: master
                  head: cool_feature
                  commit_message: Shipped cool_feature!
      responses:
        '201':
          description: Successful Response (The resulting merge commit)
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit"
              examples:
                default:
                  "$ref": "#/components/examples/commit"
        '204':
          description: Response when already merged
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: Not Found when the base or head does not exist
        '409':
          description: Conflict when there is a merge conflict
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  "/repos/{owner}/{repo}/milestones":
    get:
      summary: List milestones
      description: Lists milestones for a repository.
      tags:
      - issues
      operationId: issues/list-milestones
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/milestones#list-milestones
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: state
        description: The state of the milestone. Either `open`, `closed`, or `all`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: sort
        description: What to sort results by. Either `due_on` or `completeness`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - due_on
          - completeness
          default: due_on
      - name: direction
        description: The direction of the sort. Either `asc` or `desc`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
          default: asc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
    post:
      summary: Create a milestone
      description: Creates a milestone.
      tags:
      - issues
      operationId: issues/create-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/milestones#create-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                state:
                  type: string
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                  default: open
                description:
                  type: string
                  description: A description of the milestone.
                due_on:
                  type: string
                  format: date-time
                  description: 'The milestone due date. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
              required:
              - title
            examples:
              default:
                value:
                  title: v1.0
                  state: open
                  description: Tracking milestone for version 1.0
                  due_on: '2012-10-09T23:39:01Z'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/milestones/1
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
  "/repos/{owner}/{repo}/milestones/{milestone_number}":
    get:
      summary: Get a milestone
      description: Gets a milestone using the given milestone number.
      tags:
      - issues
      operationId: issues/get-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/milestones#get-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
    patch:
      summary: Update a milestone
      description: ''
      tags:
      - issues
      operationId: issues/update-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/milestones#update-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                state:
                  type: string
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                  default: open
                description:
                  type: string
                  description: A description of the milestone.
                due_on:
                  type: string
                  format: date-time
                  description: 'The milestone due date. This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
            examples:
              default:
                value:
                  title: v1.0
                  state: open
                  description: Tracking milestone for version 1.0
                  due_on: '2012-10-09T23:39:01Z'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/milestone"
              examples:
                default:
                  "$ref": "#/components/examples/milestone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
    delete:
      summary: Delete a milestone
      description: Deletes a milestone using the given milestone number.
      tags:
      - issues
      operationId: issues/delete-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/milestones#delete-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone-number"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
  "/repos/{owner}/{repo}/milestones/{milestone_number}/labels":
    get:
      summary: List labels for issues in a milestone
      description: Lists labels for issues in a milestone.
      tags:
      - issues
      operationId: issues/list-labels-for-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/labels#list-labels-for-issues-in-a-milestone
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/milestone-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/label"
              examples:
                default:
                  "$ref": "#/components/examples/label-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  "/repos/{owner}/{repo}/notifications":
    get:
      summary: List repository notifications for the authenticated user
      description: Lists all notifications for the current user in the specified repository.
      tags:
      - activity
      operationId: activity/list-repo-notifications-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#list-repository-notifications-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/all"
      - "$ref": "#/components/parameters/participating"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/before"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/notification-thread"
              examples:
                default:
                  "$ref": "#/components/examples/thread-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    put:
      summary: Mark repository notifications as read
      description: Marks all notifications in a repository as "read" for the current
        user. If the number of notifications is too large to complete in one request,
        you will receive a `202 Accepted` status and GitHub will run an asynchronous
        process to mark notifications as "read." To check whether any "unread" notifications
        remain, you can use the [List repository notifications for the authenticated
        user](https://docs.github.com/rest/activity/notifications#list-repository-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      tags:
      - activity
      operationId: activity/mark-repo-notifications-as-read
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-repository-notifications-as-read
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_read_at:
                  type: string
                  format: date-time
                  description: 'Describes the last point that notifications were checked.
                    Anything updated since this time will not be marked as read. If
                    you omit this parameter, all notifications are marked as read.
                    This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                    format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.'
            examples:
              default:
                value:
                  last_read_at: '2019-01-01T00:00:00Z'
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/notification-read"
              examples:
                default:
                  value:
                    message: Unread notifications couldn't be marked in a single request.
                      Notifications are being marked as read in the background.
        '205':
          description: Reset Content
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  "/repos/{owner}/{repo}/pages":
    get:
      summary: Get a GitHub Pages site
      description: |-
        Gets information about a GitHub Pages site.

        A token with the `repo` scope is required. GitHub Apps must have the `pages:read` permission.
      tags:
      - repos
      operationId: repos/get-pages
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-a-apiname-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page"
              examples:
                default:
                  "$ref": "#/components/examples/page"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    post:
      summary: Create a GitHub Pages site
      description: |-
        Configures a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages)."

        To use this endpoint, you must be a repository administrator, maintainer, or have the 'manage GitHub Pages settings' permission. A token with the `repo` scope or Pages write permission is required. GitHub Apps must have the `administration:write` and `pages:write` permissions.
      tags:
      - repos
      operationId: repos/create-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#create-a-apiname-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The source branch and directory used to publish your Pages
                site.
              nullable: true
              properties:
                build_type:
                  type: string
                  description: The process in which the Page will be built. Possible
                    values are `"legacy"` and `"workflow"`.
                  enum:
                  - legacy
                  - workflow
                source:
                  type: object
                  description: The source branch and directory used to publish your
                    Pages site.
                  properties:
                    branch:
                      type: string
                      description: The repository branch used to publish your site's
                        source files.
                    path:
                      type: string
                      description: 'The repository directory that includes the source
                        files for the Pages site. Allowed paths are `/` or `/docs`.
                        Default: `/`'
                      enum:
                      - "/"
                      - "/docs"
                      default: "/"
                  required:
                  - branch
              anyOf:
              - required:
                - source
              - required:
                - build_type
            examples:
              default:
                value:
                  source:
                    branch: main
                    path: "/docs"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page"
              examples:
                default:
                  "$ref": "#/components/examples/page"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    put:
      summary: Update information about a GitHub Pages site
      description: |-
        Updates information for a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages).

        To use this endpoint, you must be a repository administrator, maintainer, or have the 'manage GitHub Pages settings' permission. A token with the `repo` scope or Pages write permission is required. GitHub Apps must have the `administration:write` and `pages:write` permissions.
      tags:
      - repos
      operationId: repos/update-information-about-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#update-information-about-a-apiname-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cname:
                  type: string
                  description: Specify a custom domain for the repository. Sending
                    a `null` value will remove the custom domain. For more about custom
                    domains, see "[Using a custom domain with GitHub Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
                  nullable: true
                https_enforced:
                  type: boolean
                  description: Specify whether HTTPS should be enforced for the repository.
                build_type:
                  type: string
                  description: The process by which the GitHub Pages site will be
                    built. `workflow` means that the site is built by a custom GitHub
                    Actions workflow. `legacy` means that the site is built by GitHub
                    when changes are pushed to a specific branch.
                  enum:
                  - legacy
                  - workflow
                source:
                  anyOf:
                  - type: string
                    description: Update the source for the repository. Must include
                      the branch name, and may optionally specify the subdirectory
                      `/docs`. Possible values are `"gh-pages"`, `"master"`, and `"master
                      /docs"`.
                    enum:
                    - gh-pages
                    - master
                    - master /docs
                  - type: object
                    description: Update the source for the repository. Must include
                      the branch name and path.
                    properties:
                      branch:
                        type: string
                        description: The repository branch used to publish your site's
                          source files.
                      path:
                        type: string
                        description: The repository directory that includes the source
                          files for the Pages site. Allowed paths are `/` or `/docs`.
                        enum:
                        - "/"
                        - "/docs"
                    required:
                    - branch
                    - path
              anyOf:
              - required:
                - build_type
              - required:
                - source
              - required:
                - cname
              - required:
                - public
              - required:
                - https_enforced
            examples:
              default:
                value:
                  cname: octocatblog.com
                  source:
                    branch: main
                    path: "/"
      responses:
        '204':
          description: Response
        '400':
          "$ref": "#/components/responses/bad_request"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    delete:
      summary: Delete a GitHub Pages site
      description: |-
        Deletes a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages).

        To use this endpoint, you must be a repository administrator, maintainer, or have the 'manage GitHub Pages settings' permission. A token with the `repo` scope or Pages write permission is required. GitHub Apps must have the `administration:write` and `pages:write` permissions.
      tags:
      - repos
      operationId: repos/delete-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#delete-a-apiname-pages-site
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds":
    get:
      summary: List GitHub Pages builds
      description: |-
        Lists builts of a GitHub Pages site.

        A token with the `repo` scope is required. GitHub Apps must have the `pages:read` permission.
      tags:
      - repos
      operationId: repos/list-pages-builds
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#list-apiname-pages-builds
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/page-build"
              examples:
                default:
                  "$ref": "#/components/examples/page-build-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    post:
      summary: Request a GitHub Pages build
      description: |-
        You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.

        Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.
      tags:
      - repos
      operationId: repos/request-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#request-a-apiname-pages-build
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-build-status"
              examples:
                default:
                  "$ref": "#/components/examples/page-build-status"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds/latest":
    get:
      summary: Get latest Pages build
      description: |-
        Gets information about the single most recent build of a GitHub Pages site.

        A token with the `repo` scope is required. GitHub Apps must have the `pages:read` permission.
      tags:
      - repos
      operationId: repos/get-latest-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-latest-pages-build
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-build"
              examples:
                default:
                  "$ref": "#/components/examples/page-build"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  "/repos/{owner}/{repo}/pages/builds/{build_id}":
    get:
      summary: Get GitHub Pages build
      description: |-
        Gets information about a GitHub Pages build.

        A token with the `repo` scope is required. GitHub Apps must have the `pages:read` permission.
      tags:
      - repos
      operationId: repos/get-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-apiname-pages-build
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: build_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-build"
              examples:
                default:
                  "$ref": "#/components/examples/page-build"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  "/repos/{owner}/{repo}/pages/deployment":
    post:
      summary: Create a GitHub Pages deployment
      description: |-
        Create a GitHub Pages deployment for a repository.

        Users must have write permissions. GitHub Apps must have the `pages:write` permission to use this endpoint.
      tags:
      - repos
      operationId: repos/create-pages-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#create-a-github-pages-deployment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The object used to create GitHub Pages deployment
              properties:
                artifact_url:
                  type: string
                  description: The URL of an artifact that contains the .zip or .tar
                    of static assets to deploy. The artifact belongs to the repository.
                environment:
                  type: string
                  description: The target environment for this GitHub Pages deployment.
                  default: github-pages
                pages_build_version:
                  type: string
                  description: A unique string that represents the version of the
                    build for this deployment.
                  default: GITHUB_SHA
                oidc_token:
                  type: string
                  description: The OIDC token issued by GitHub Actions certifying
                    the origin of the deployment.
              required:
              - artifact_url
              - pages_build_version
              - oidc_token
            examples:
              default:
                value:
                  artifact_url: https://downloadcontent/
                  environment: github-pages
                  pages_build_version: 4fd754f7e594640989b406850d0bc8f06a121251
                  oidc_token: j.w.t
                  preview: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page-deployment"
              examples:
                default:
                  "$ref": "#/components/examples/page-deployment"
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  "/repos/{owner}/{repo}/pages/health":
    get:
      summary: Get a DNS health check for GitHub Pages
      description: |-
        Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.

        The first request to this endpoint returns a `202 Accepted` status and starts an asynchronous background task to get the results for the domain. After the background task completes, subsequent requests to this endpoint return a `200 OK` status with the health check results in the response.

        To use this endpoint, you must be a repository administrator, maintainer, or have the 'manage GitHub Pages settings' permission. A token with the `repo` scope or Pages write permission is required. GitHub Apps must have the `administrative:write` and `pages:write` permissions.
      tags:
      - repos
      operationId: repos/get-pages-health-check
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-a-dns-health-check-for-github-pages
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pages-health-check"
              examples:
                default:
                  "$ref": "#/components/examples/pages-health-check"
        '202':
          description: Empty response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '400':
          description: Custom domains are not available for GitHub Pages
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: There isn't a CNAME for this page
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  "/repos/{owner}/{repo}/private-vulnerability-reporting":
    put:
      summary: Enable private vulnerability reporting for a repository
      description: Enables private vulnerability reporting for a repository. The authenticated
        user must have admin access to the repository. For more information, see "[Privately
        reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)."
      tags:
      - repos
      operationId: repos/enable-private-vulnerability-reporting
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#enable-private-vulnerability-reporting-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          "$ref": "#/components/responses/no_content"
        '422':
          "$ref": "#/components/responses/bad_request"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Disable private vulnerability reporting for a repository
      description: Disables private vulnerability reporting for a repository. The
        authenticated user must have admin access to the repository. For more information,
        see "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)".
      tags:
      - repos
      operationId: repos/disable-private-vulnerability-reporting
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#disable-private-vulnerability-reporting-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          "$ref": "#/components/responses/no_content"
        '422':
          "$ref": "#/components/responses/bad_request"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/projects":
    get:
      summary: List repository projects
      description: Lists the projects in a repository. Returns a `404 Not Found` status
        if projects are disabled in the repository. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/list-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#list-repository-projects
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: state
        description: Indicates the state of the projects to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
    post:
      summary: Create a repository project
      description: Creates a repository project board. Returns a `410 Gone` status
        if projects are disabled in the repository or if the repository does not have
        existing classic projects. If you do not have sufficient privileges to perform
        this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
      - projects
      operationId: projects/create-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#create-a-repository-project
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
              - name
            examples:
              default:
                value:
                  name: Projects Documentation
                  body: Developer documentation project for the developer site.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-3"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '410':
          "$ref": "#/components/responses/gone"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
  "/repos/{owner}/{repo}/pulls":
    get:
      summary: List pull requests
      description: Draft pull requests are available in public repositories with GitHub
        Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository
        billing plans, and in public and private repositories with GitHub Team and
        GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)
        in the GitHub Help documentation.
      tags:
      - pulls
      operationId: pulls/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#list-pull-requests
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: state
        description: Either `open`, `closed`, or `all` to filter by state.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: head
        description: 'Filter pulls by head user or head organization and branch name
          in the format of `user:ref-name` or `organization:ref-name`. For example:
          `github:new-script-format` or `octocat:test-branch`.'
        in: query
        required: false
        schema:
          type: string
      - name: base
        description: 'Filter pulls by base branch name. Example: `gh-pages`.'
        in: query
        required: false
        schema:
          type: string
      - name: sort
        description: What to sort results by. `popularity` will sort by the number
          of comments. `long-running` will sort by date created and will limit the
          results to pull requests that have been open for more than a month and have
          had activity within the past month.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - popularity
          - long-running
          default: created
      - name: direction
        description: 'The direction of the sort. Default: `desc` when sort is `created`
          or sort is not specified, otherwise `asc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
    post:
      summary: Create a pull request
      description: |-
        Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
      tags:
      - pulls
      operationId: pulls/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#create-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the new pull request. Required unless
                    `issue` is specified.
                head:
                  type: string
                  description: 'The name of the branch where your changes are implemented.
                    For cross-repository pull requests in the same network, namespace
                    `head` with a user like this: `username:branch`.'
                head_repo:
                  type: string
                  description: The name of the repository where the changes in the
                    pull request were made. This field is required for cross-repository
                    pull requests if both repositories are owned by the same organization.
                  format: repo.nwo
                  example: octo-org/octo-repo
                base:
                  type: string
                  description: The name of the branch you want the changes pulled
                    into. This should be an existing branch on the current repository.
                    You cannot submit a pull request to one repository that requests
                    a merge to a base of another repository.
                body:
                  type: string
                  description: The contents of the pull request.
                maintainer_can_modify:
                  type: boolean
                  description: Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
                    the pull request.
                draft:
                  type: boolean
                  description: Indicates whether the pull request is a draft. See
                    "[Draft Pull Requests](https://docs.github.com/articles/about-pull-requests#draft-pull-requests)"
                    in the GitHub Help documentation to learn more.
                issue:
                  type: integer
                  format: int64
                  example: 1
                  description: An issue in the repository to convert to a pull request.
                    The issue title, body, and comments will become the title, body,
                    and comments on the new pull request. Required unless `title`
                    is specified.
              required:
              - head
              - base
            examples:
              default:
                value:
                  title: Amazing new feature
                  body: Please pull these awesome changes in!
                  head: octocat:new-feature
                  base: master
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  "/repos/{owner}/{repo}/pulls/comments":
    get:
      summary: List review comments in a repository
      description: Lists review comments for all pull requests in a repository. By
        default, review comments are in ascending order by ID.
      tags:
      - pulls
      operationId: pulls/list-review-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#list-review-comments-in-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sort
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - created_at
      - name: direction
        description: The direction to sort results. Ignored without `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}":
    get:
      summary: Get a review comment for a pull request
      description: Provides details for a review comment.
      tags:
      - pulls
      operationId: pulls/get-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-2"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
    patch:
      summary: Update a review comment for a pull request
      description: Enables you to edit a review comment.
      tags:
      - pulls
      operationId: pulls/update-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#update-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the reply to the review comment.
              required:
              - body
            examples:
              default:
                value:
                  body: I like this too!
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
    delete:
      summary: Delete a review comment for a pull request
      description: Deletes a review comment.
      tags:
      - pulls
      operationId: pulls/delete-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#delete-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions":
    get:
      summary: List reactions for a pull request review comment
      description: List the reactions to a [pull request review comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request).
      tags:
      - reactions
      operationId: reactions/list-for-pull-request-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-pull-request-review-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a pull request review comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a pull request review comment
      description: Create a reaction to a [pull request review comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request).
        A response with an HTTP `200` status means that you already added the reaction
        type to this pull request review comment.
      tags:
      - reactions
      operationId: reactions/create-for-pull-request-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-pull-request-review-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the pull request review comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Delete a pull request comment reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`

        Delete a reaction to a [pull request review comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request).
      tags:
      - reactions
      operationId: reactions/delete-for-pull-request-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-a-pull-request-comment-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/comment-id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/pulls/{pull_number}":
    get:
      summary: Get a pull request
      description: |-
        Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        Lists details of a pull request by providing its number.

        When you get, [create](https://docs.github.com/rest/pulls/pulls/#create-a-pull-request), or [edit](https://docs.github.com/rest/pulls/pulls#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".

        The value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.

        The value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:

        *   If merged as a [merge commit](https://docs.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.
        *   If merged via a [squash](https://docs.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.
        *   If [rebased](https://docs.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.

        Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.
      tags:
      - pulls
      operationId: pulls/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#get-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      responses:
        '200':
          description: Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests)
            to fetch diff and patch formats.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
    patch:
      summary: Update a pull request
      description: |-
        Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.
      tags:
      - pulls
      operationId: pulls/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#update-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the pull request.
                body:
                  type: string
                  description: The contents of the pull request.
                state:
                  type: string
                  description: State of this Pull Request. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                base:
                  type: string
                  description: The name of the branch you want your changes pulled
                    into. This should be an existing branch on the current repository.
                    You cannot update the base branch on a pull request to point to
                    another repository.
                maintainer_can_modify:
                  type: boolean
                  description: Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/)
                    the pull request.
            examples:
              default:
                value:
                  title: new title
                  body: updated body
                  state: open
                  base: master
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  "/repos/{owner}/{repo}/pulls/{pull_number}/codespaces":
    post:
      summary: Create a codespace from a pull request
      description: |-
        Creates a codespace owned by the authenticated user for the specified pull request.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/create-with-pr-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#create-a-codespace-from-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                location:
                  description: The requested location for a new codespace. Best efforts
                    are made to respect this upon creation. Assigned by IP if not
                    provided.
                  type: string
                geo:
                  description: The geographic area for this codespace. If not specified,
                    the value is assigned by IP. This property replaces `location`,
                    which is being deprecated.
                  type: string
                  enum:
                  - EuropeWest
                  - SoutheastAsia
                  - UsEast
                  - UsWest
                client_ip:
                  description: IP for location auto-detection when proxying a request
                  type: string
                machine:
                  description: Machine type to use for this codespace
                  type: string
                devcontainer_path:
                  description: Path to devcontainer.json config to use for this codespace
                  type: string
                multi_repo_permissions_opt_out:
                  description: Whether to authorize requested permissions from devcontainer.json
                  type: boolean
                working_directory:
                  description: Working directory for this codespace
                  type: string
                idle_timeout_minutes:
                  description: Time in minutes before codespace stops from inactivity
                  type: integer
                display_name:
                  description: Display name for this codespace
                  type: string
                retention_period_minutes:
                  description: Duration in minutes after codespace has gone idle in
                    which it will be deleted. Must be integer minutes between 0 and
                    43200 (30 days).
                  type: integer
            examples:
              default:
                value:
                  repository_id: 1
                  ref: main
      responses:
        '201':
          description: Response when the codespace was successfully created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '202':
          description: Response when the codespace creation partially failed but is
            being retried in the background
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments":
    get:
      summary: List review comments on a pull request
      description: Lists all review comments for a pull request. By default, review
        comments are in ascending order by ID.
      tags:
      - pulls
      operationId: pulls/list-review-comments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#list-review-comments-on-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/sort"
      - name: direction
        description: The direction to sort results. Ignored without `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
    post:
      summary: Create a review comment for a pull request
      description: |2-

        Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see "[Create an issue comment](https://docs.github.com/rest/issues/comments#create-an-issue-comment)." We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.

        The `position` parameter is deprecated. If you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required.

        **Note:** The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - pulls
      operationId: pulls/create-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#create-a-review-comment-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the review comment.
                commit_id:
                  type: string
                  description: The SHA of the commit needing a comment. Not using
                    the latest commit SHA may render your comment outdated if a subsequent
                    commit modifies the line you specify as the `position`.
                path:
                  type: string
                  description: The relative path to the file that necessitates a comment.
                position:
                  type: integer
                  description: "**This parameter is deprecated. Use `line` instead**.
                    The position in the diff where you want to add a review comment.
                    Note this value is not the same as the line number in the file.
                    For help finding the position value, read the note above."
                  deprecated: true
                  x-github:
                    deprecationDate: '2022-11-01'
                side:
                  type: string
                  description: In a split diff view, the side of the diff that the
                    pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use
                    `LEFT` for deletions that appear in red. Use `RIGHT` for additions
                    that appear in green or unchanged lines that appear in white and
                    are shown for context. For a multi-line comment, side represents
                    whether the last line of the comment range is a deletion or addition.
                    For more information, see "[Diff view options](https://docs.github.com/articles/about-comparing-branches-in-pull-requests#diff-view-options)"
                    in the GitHub Help documentation.
                  enum:
                  - LEFT
                  - RIGHT
                line:
                  type: integer
                  description: "**Required unless using `subject_type:file`**. The
                    line of the blob in the pull request diff that the comment applies
                    to. For a multi-line comment, the last line of the range that
                    your comment applies to."
                start_line:
                  type: integer
                  description: '**Required when using multi-line comments unless using
                    `in_reply_to`**. The `start_line` is the first line in the pull
                    request diff that your multi-line comment applies to. To learn
                    more about multi-line comments, see "[Commenting on a pull request](https://docs.github.com/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)"
                    in the GitHub Help documentation.'
                start_side:
                  type: string
                  description: '**Required when using multi-line comments unless using
                    `in_reply_to`**. The `start_side` is the starting side of the
                    diff that the comment applies to. Can be `LEFT` or `RIGHT`. To
                    learn more about multi-line comments, see "[Commenting on a pull
                    request](https://docs.github.com/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)"
                    in the GitHub Help documentation. See `side` in this table for
                    additional context.'
                  enum:
                  - LEFT
                  - RIGHT
                  - side
                in_reply_to:
                  type: integer
                  example: 2
                  description: The ID of the review comment to reply to. To find the
                    ID of a review comment with ["List review comments on a pull request"](#list-review-comments-on-a-pull-request).
                    When specified, all parameters other than `body` in the request
                    body are ignored.
                subject_type:
                  type: string
                  description: The level at which the comment is targeted.
                  enum:
                  - line
                  - file
              required:
              - body
              - commit_id
              - path
            examples:
              example-for-a-multi-line-comment:
                summary: Example for a multi-line comment
                value:
                  body: Great stuff!
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  path: file1.txt
                  start_line: 1
                  start_side: RIGHT
                  line: 2
                  side: RIGHT
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                example-for-a-multi-line-comment:
                  "$ref": "#/components/examples/pull-request-review-comment-example-for-a-multi-line-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies":
    post:
      summary: Create a reply for a review comment
      description: |-
        Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - pulls
      operationId: pulls/create-reply-for-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#create-a-reply-for-a-review-comment
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/comment-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the review comment.
              required:
              - body
            examples:
              default:
                value:
                  body: Great stuff!
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-comment"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: pulls
        subcategory: comments
  "/repos/{owner}/{repo}/pulls/{pull_number}/commits":
    get:
      summary: List commits on a pull request
      description: Lists a maximum of 250 commits for a pull request. To receive a
        complete commit list for pull requests with more than 250 commits, use the
        [List commits](https://docs.github.com/rest/commits/commits#list-commits)
        endpoint.
      tags:
      - pulls
      operationId: pulls/list-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#list-commits-on-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit"
              examples:
                default:
                  "$ref": "#/components/examples/commit-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  "/repos/{owner}/{repo}/pulls/{pull_number}/files":
    get:
      summary: List pull requests files
      description: "**Note:** Responses include a maximum of 3000 files. The paginated
        response returns 30 files per page by default."
      tags:
      - pulls
      operationId: pulls/list-files
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#list-pull-requests-files
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/diff-entry"
              examples:
                default:
                  "$ref": "#/components/examples/diff-entry-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge":
    get:
      summary: Check if a pull request has been merged
      description: Checks if a pull request has been merged into the base branch.
        The HTTP status of the response indicates whether or not the pull request
        has been merged; the response body is empty.
      tags:
      - pulls
      operationId: pulls/check-if-merged
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#check-if-a-pull-request-has-been-merged
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      responses:
        '204':
          description: Response if pull request has been merged
        '404':
          description: Not Found if pull request has not been merged
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
    put:
      summary: Merge a pull request
      description: |-
        Merges a pull request into the base branch.
        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - pulls
      operationId: pulls/merge
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#merge-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                commit_title:
                  type: string
                  description: Title for the automatic commit message.
                commit_message:
                  type: string
                  description: Extra detail to append to automatic commit message.
                sha:
                  type: string
                  description: SHA that pull request head must match to allow merge.
                merge_method:
                  type: string
                  description: The merge method to use.
                  enum:
                  - merge
                  - squash
                  - rebase
            examples:
              response-if-merge-was-successful:
                value:
                  commit_title: Expand enum
                  commit_message: Add a new value to the merge_method enum
      responses:
        '200':
          description: if merge was successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-merge-result"
              examples:
                response-if-merge-was-successful:
                  "$ref": "#/components/examples/pull-request-merge-result-response-if-merge-was-successful"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '405':
          description: Method Not Allowed if merge cannot be performed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-merge-cannot-be-performed:
                  value:
                    message: Pull Request is not mergeable
        '409':
          description: Conflict if sha was provided and pull request head did not
            match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-sha-was-provided-and-pull-request-head-did-not-match:
                  value:
                    message: Head branch was modified. Review and try the merge again.
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers":
    get:
      summary: Get all requested reviewers for a pull request
      description: Gets the users or teams whose review is requested for a pull request.
        Once a requested reviewer submits a review, they are no longer considered
        a requested reviewer. Their review will instead be returned by the [List reviews
        for a pull request](https://docs.github.com/rest/pulls/reviews#list-reviews-for-a-pull-request)
        operation.
      tags:
      - pulls
      operationId: pulls/list-requested-reviewers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/review-requests#get-all-requested-reviewers-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review-request"
              examples:
                default:
                  "$ref": "#/components/examples/simple-pull-request-review-request"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: review-requests
    post:
      summary: Request reviewers for a pull request
      description: |-
        Requests reviews for a pull request from a given set of users and/or teams.
        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - pulls
      operationId: pulls/request-reviewers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/review-requests#request-reviewers-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewers:
                  type: array
                  description: An array of user `login`s that will be requested.
                  items:
                    type: string
                team_reviewers:
                  type: array
                  description: An array of team `slug`s that will be requested.
                  items:
                    type: string
              anyOf:
              - required:
                - reviewers
              - required:
                - team_reviewers
            examples:
              default:
                value:
                  reviewers:
                  - octocat
                  - hubot
                  - other_user
                  team_reviewers:
                  - justice-league
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          description: Unprocessable Entity if user is not a collaborator
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: review-requests
    delete:
      summary: Remove requested reviewers from a pull request
      description: Removes review requests from a pull request for a given set of
        users and/or teams.
      tags:
      - pulls
      operationId: pulls/remove-requested-reviewers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/review-requests#remove-requested-reviewers-from-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewers:
                  type: array
                  description: An array of user `login`s that will be removed.
                  items:
                    type: string
                team_reviewers:
                  type: array
                  description: An array of team `slug`s that will be removed.
                  items:
                    type: string
              required:
              - reviewers
            examples:
              default:
                value:
                  reviewers:
                  - octocat
                  - hubot
                  - other_user
                  team_reviewers:
                  - justice-league
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-simple"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-simple"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: review-requests
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews":
    get:
      summary: List reviews for a pull request
      description: The list of reviews returns in chronological order.
      tags:
      - pulls
      operationId: pulls/list-reviews
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#list-reviews-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: The list of reviews returns in chronological order.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
    post:
      summary: Create a review for a pull request
      description: |-
        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.

        Pull request reviews created in the `PENDING` state are not submitted and therefore do not include the `submitted_at` property in the response. To create a pending review for a pull request, leave the `event` parameter blank. For more information about submitting a `PENDING` review, see "[Submit a review for a pull request](https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request)."

        **Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API offers the `application/vnd.github.v3.diff` [media type](https://docs.github.com/rest/overview/media-types#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://docs.github.com/rest/pulls/pulls#get-a-pull-request) endpoint.

        The `position` value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.
      tags:
      - pulls
      operationId: pulls/create-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#create-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                commit_id:
                  type: string
                  description: The SHA of the commit that needs a review. Not using
                    the latest commit SHA may render your review comment outdated
                    if a subsequent commit modifies the line you specify as the `position`.
                    Defaults to the most recent commit in the pull request when you
                    do not specify a value.
                body:
                  type: string
                  description: "**Required** when using `REQUEST_CHANGES` or `COMMENT`
                    for the `event` parameter. The body text of the pull request review."
                event:
                  type: string
                  description: 'The review action you want to perform. The review
                    actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By
                    leaving this blank, you set the review action state to `PENDING`,
                    which means you will need to [submit the pull request review](https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request)
                    when you are ready.'
                  enum:
                  - APPROVE
                  - REQUEST_CHANGES
                  - COMMENT
                comments:
                  type: array
                  description: Use the following table to specify the location, destination,
                    and contents of the draft review comment.
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                        description: The relative path to the file that necessitates
                          a review comment.
                      position:
                        type: integer
                        description: The position in the diff where you want to add
                          a review comment. Note this value is not the same as the
                          line number in the file. For help finding the position value,
                          read the note below.
                      body:
                        type: string
                        description: Text of the review comment.
                      line:
                        type: integer
                        example: 28
                      side:
                        type: string
                        example: RIGHT
                      start_line:
                        type: integer
                        example: 26
                      start_side:
                        type: string
                        example: LEFT
                    required:
                    - path
                    - body
            examples:
              default:
                value:
                  commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                  body: This is close to perfect! Please address the suggested inline
                    change.
                  event: REQUEST_CHANGES
                  comments:
                  - path: file.md
                    position: 6
                    body: Please add more information here, and fix this typo.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}":
    get:
      summary: Get a review for a pull request
      description: Retrieves a pull request review by its ID.
      tags:
      - pulls
      operationId: pulls/get-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#get-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-4"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
    put:
      summary: Update a review for a pull request
      description: Update the review summary comment with new text.
      tags:
      - pulls
      operationId: pulls/update-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#update-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The body text of the pull request review.
              required:
              - body
            examples:
              default:
                value:
                  body: This is close to perfect! Please address the suggested inline
                    change. And add more about this.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-5"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
    delete:
      summary: Delete a pending review for a pull request
      description: Deletes a pull request review that has not been submitted. Submitted
        reviews cannot be deleted.
      tags:
      - pulls
      operationId: pulls/delete-pending-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#delete-a-pending-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments":
    get:
      summary: List comments for a pull request review
      description: List comments for a specific pull request review.
      tags:
      - pulls
      operationId: pulls/list-comments-for-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#list-comments-for-a-pull-request-review
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/review-comment"
              examples:
                default:
                  "$ref": "#/components/examples/review-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals":
    put:
      summary: Dismiss a review for a pull request
      description: "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/rest/branches/branch-protection),
        you must be a repository administrator or be included in the list of people
        or teams who can dismiss pull request reviews."
      tags:
      - pulls
      operationId: pulls/dismiss-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#dismiss-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message for the pull request review dismissal
                event:
                  type: string
                  example: '"DISMISS"'
                  enum:
                  - DISMISS
              required:
              - message
            examples:
              default:
                value:
                  message: You are dismissed
                  event: DISMISS
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-3"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events":
    post:
      summary: Submit a review for a pull request
      description: Submits a pending review for a pull request. For more information
        about creating a pending review for a pull request, see "[Create a review
        for a pull request](https://docs.github.com/rest/pulls/reviews#create-a-review-for-a-pull-request)."
      tags:
      - pulls
      operationId: pulls/submit-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      - "$ref": "#/components/parameters/review-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The body text of the pull request review
                event:
                  type: string
                  description: 'The review action you want to perform. The review
                    actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When
                    you leave this blank, the API returns _HTTP 422 (Unrecognizable
                    entity)_ and sets the review action state to `PENDING`, which
                    means you will need to re-submit the pull request review using
                    a review action.'
                  enum:
                  - APPROVE
                  - REQUEST_CHANGES
                  - COMMENT
              required:
              - event
            examples:
              default:
                value:
                  body: Here is the body for the review.
                  event: REQUEST_CHANGES
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pull-request-review"
              examples:
                default:
                  "$ref": "#/components/examples/pull-request-review-4"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch":
    put:
      summary: Update a pull request branch
      description: Updates the pull request branch with the latest upstream changes
        by merging HEAD from the base branch into the pull request branch.
      tags:
      - pulls
      operationId: pulls/update-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#update-a-pull-request-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/pull-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                expected_head_sha:
                  type: string
                  description: 'The expected SHA of the pull request''s HEAD ref.
                    This is the most recent commit on the pull request''s branch.
                    If the expected SHA does not match the pull request''s HEAD, you
                    will receive a `422 Unprocessable Entity` status. You can use
                    the "[List commits](https://docs.github.com/rest/commits/commits#list-commits)"
                    endpoint to find the most recent commit SHA. Default: SHA of the
                    pull request''s current HEAD ref.'
            examples:
              default:
                value:
                  expected_head_sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/notification-read"
              examples:
                default:
                  value:
                    message: Updating pull request branch.
                    url: https://github.com/repos/octocat/Hello-World/pulls/53
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: pulls
        subcategory: pulls
  "/repos/{owner}/{repo}/readme":
    get:
      summary: Get a repository README
      description: |-
        Gets the preferred README for a repository.

        READMEs support [custom media types](https://docs.github.com/rest/overview/media-types) for retrieving the raw content or rendered HTML.
      tags:
      - repos
      operationId: repos/get-readme
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#get-a-repository-readme
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s
          default branch.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/content-file"
              examples:
                default:
                  "$ref": "#/components/examples/content-file"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/readme/{dir}":
    get:
      summary: Get a repository README for a directory
      description: |-
        Gets the README from a repository directory.

        READMEs support [custom media types](https://docs.github.com/rest/overview/media-types) for retrieving the raw content or rendered HTML.
      tags:
      - repos
      operationId: repos/get-readme-in-directory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#get-a-repository-readme-for-a-directory
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: dir
        description: The alternate path to look for a README file
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s
          default branch.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/content-file"
              examples:
                default:
                  "$ref": "#/components/examples/content-file"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/releases":
    get:
      summary: List releases
      description: |-
        This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/repos/repos#list-repository-tags).

        Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.
      tags:
      - repos
      operationId: repos/list-releases
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#list-releases
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
    post:
      summary: Create a release
      description: |-
        Users with push access to the repository can create a release.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - repos
      operationId: repos/create-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#create-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where
                    the Git tag is created from. Can be any branch or commit SHA.
                    Unused if the Git tag already exists. Default: the repository''s
                    default branch.'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: "`true` to create a draft (unpublished) release, `false`
                    to create a published one."
                  default: false
                prerelease:
                  type: boolean
                  description: "`true` to identify the release as a prerelease. `false`
                    to identify the release as a full release."
                  default: false
                discussion_category_name:
                  type: string
                  description: If specified, a discussion of the specified category
                    is created and linked to the release. The value must be a category
                    that already exists in the repository. For more information, see
                    "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
                generate_release_notes:
                  type: boolean
                  description: Whether to automatically generate the name and body
                    for this release. If `name` is specified, the specified name will
                    be used; otherwise, a name will be automatically generated. If
                    `body` is specified, the body will be pre-pended to the automatically
                    generated notes.
                  default: false
                make_latest:
                  type: string
                  description: Specifies whether this release should be set as the
                    latest release for the repository. Drafts and prereleases cannot
                    be set as latest. Defaults to `true` for newly published releases.
                    `legacy` specifies that the latest release should be determined
                    based on the release creation date and higher semantic version.
                  enum:
                  - 'true'
                  - 'false'
                  - legacy
                  default: true
              required:
              - tag_name
            examples:
              default:
                value:
                  tag_name: v1.0.0
                  target_commitish: master
                  name: v1.0.0
                  body: Description of the release
                  draft: false
                  prerelease: false
                  generate_release_notes: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/releases/1
              schema:
                type: string
        '404':
          description: Not Found if the discussion category name is invalid
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  "/repos/{owner}/{repo}/releases/assets/{asset_id}":
    get:
      summary: Get a release asset
      description: To download the asset's binary content, set the `Accept` header
        of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types).
        The API will either redirect the client to the location, or stream it directly
        if possible. API clients should handle both a `200` or `302` response.
      tags:
      - repos
      operationId: repos/get-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#get-a-release-asset
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/asset-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-asset"
              examples:
                default:
                  "$ref": "#/components/examples/release-asset"
        '302':
          "$ref": "#/components/responses/found"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
    patch:
      summary: Update a release asset
      description: Users with push access to the repository can edit a release asset.
      tags:
      - repos
      operationId: repos/update-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#update-a-release-asset
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/asset-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The file name of the asset.
                label:
                  type: string
                  description: An alternate short description of the asset. Used in
                    place of the filename.
                state:
                  type: string
                  example: '"uploaded"'
            examples:
              default:
                value:
                  name: foo-1.0.0-osx.zip
                  label: Mac binary
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-asset"
              examples:
                default:
                  "$ref": "#/components/examples/release-asset"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
    delete:
      summary: Delete a release asset
      description: ''
      tags:
      - repos
      operationId: repos/delete-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#delete-a-release-asset
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/asset-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
  "/repos/{owner}/{repo}/releases/generate-notes":
    post:
      summary: Generate release notes content for a release
      description: Generate a name and body describing a [release](https://docs.github.com/rest/releases/releases#get-a-release).
        The body content will be markdown formatted and contain information like the
        changes since last release and users who contributed. The generated release
        notes are not saved anywhere. They are intended to be generated and used when
        creating a new release.
      tags:
      - repos
      operationId: repos/generate-release-notes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The tag name for the release. This can be an existing
                    tag or a new one.
                target_commitish:
                  type: string
                  description: Specifies the commitish value that will be the target
                    for the release's tag. Required if the supplied tag_name does
                    not reference an existing tag. Ignored if the tag_name already
                    exists.
                previous_tag_name:
                  type: string
                  description: The name of the previous tag to use as the starting
                    point for the release notes. Use to manually specify the range
                    for the set of changes considered as part this release.
                configuration_file_path:
                  type: string
                  description: Specifies a path to a file in the repository containing
                    configuration settings used for generating the release notes.
                    If unspecified, the configuration file located in the repository
                    at '.github/release.yml' or '.github/release.yaml' will be used.
                    If that is not present, the default configuration will be used.
              required:
              - tag_name
            examples:
              default:
                value:
                  tag_name: v1.0.0
                  target_commitish: main
                  previous_tag_name: v0.9.2
                  configuration_file_path: ".github/custom_release_config.yml"
      responses:
        '200':
          description: Name and body of generated release notes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-notes-content"
              examples:
                default:
                  "$ref": "#/components/examples/release-notes-content"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  "/repos/{owner}/{repo}/releases/latest":
    get:
      summary: Get the latest release
      description: |-
        View the latest published full release for the repository.

        The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.
      tags:
      - repos
      operationId: repos/get-latest-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#get-the-latest-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  "/repos/{owner}/{repo}/releases/tags/{tag}":
    get:
      summary: Get a release by tag name
      description: Get a published release with the specified tag.
      tags:
      - repos
      operationId: repos/get-release-by-tag
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#get-a-release-by-tag-name
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: tag
        description: tag parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  "/repos/{owner}/{repo}/releases/{release_id}":
    get:
      summary: Get a release
      description: "**Note:** This returns an `upload_url` key corresponding to the
        endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)."
      tags:
      - repos
      operationId: repos/get-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#get-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      responses:
        '200':
          description: "**Note:** This returns an `upload_url` key corresponding to
            the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)."
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
        '401':
          description: Unauthorized
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
    patch:
      summary: Update a release
      description: Users with push access to the repository can edit a release.
      tags:
      - repos
      operationId: repos/update-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#update-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where
                    the Git tag is created from. Can be any branch or commit SHA.
                    Unused if the Git tag already exists. Default: the repository''s
                    default branch.'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: "`true` makes the release a draft, and `false` publishes
                    the release."
                prerelease:
                  type: boolean
                  description: "`true` to identify the release as a prerelease, `false`
                    to identify the release as a full release."
                make_latest:
                  type: string
                  description: Specifies whether this release should be set as the
                    latest release for the repository. Drafts and prereleases cannot
                    be set as latest. Defaults to `true` for newly published releases.
                    `legacy` specifies that the latest release should be determined
                    based on the release creation date and higher semantic version.
                  enum:
                  - 'true'
                  - 'false'
                  - legacy
                  default: true
                discussion_category_name:
                  type: string
                  description: If specified, a discussion of the specified category
                    is created and linked to the release. The value must be a category
                    that already exists in the repository. If there is already a discussion
                    linked to the release, this parameter is ignored. For more information,
                    see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
            examples:
              default:
                value:
                  tag_name: v1.0.0
                  target_commitish: master
                  name: v1.0.0
                  body: Description of the release
                  draft: false
                  prerelease: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release"
              examples:
                default:
                  "$ref": "#/components/examples/release"
        '404':
          description: Not Found if the discussion category name is invalid
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
    delete:
      summary: Delete a release
      description: Users with push access to the repository can delete a release.
      tags:
      - repos
      operationId: repos/delete-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#delete-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  "/repos/{owner}/{repo}/releases/{release_id}/assets":
    get:
      summary: List release assets
      description: ''
      tags:
      - repos
      operationId: repos/list-release-assets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#list-release-assets
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/release-asset"
              examples:
                default:
                  "$ref": "#/components/examples/release-asset-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
    post:
      summary: Upload a release asset
      description: "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)
        to determine which URL to access. The endpoint you call to upload release
        assets is specific to your release. Use the `upload_url` returned in\nthe
        response of the [Create a release endpoint](https://docs.github.com/rest/releases/releases#create-a-release)
        to upload a release asset.\n\nYou need to use an HTTP client which supports
        [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to
        this endpoint.\n\nMost libraries will set the required `Content-Length` header
        automatically. Use the required `Content-Type` header to provide the media
        type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml).
        For example: \n\n`application/zip`\n\nGitHub expects the asset data in its
        raw binary form, rather than JSON. You will send the raw binary content of
        the asset as the request body. Everything else about the endpoint is the same
        as the rest of the API. For example,\nyou'll still need to pass your authentication
        to be able to upload an asset.\n\nWhen an upstream failure occurs, you will
        receive a `502 Bad Gateway` status. This may leave an empty asset with a state
        of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub renames
        asset filenames that have special characters, non-alphanumeric characters,
        and leading or trailing periods. The \"[List release assets](https://docs.github.com/rest/releases/assets#list-release-assets)\"\nendpoint
        lists the renamed filenames. For more information and help, contact [GitHub
        Support](https://support.github.com/contact?tags=dotcom-rest-api).\n*   To
        find the `release_id` query the [`GET /repos/{owner}/{repo}/releases/latest`
        endpoint](https://docs.github.com/rest/releases/releases#get-the-latest-release).
        \n*   If you upload an asset with the same filename as another uploaded asset,
        you'll receive an error and must delete the old file before you can re-upload
        the new asset."
      tags:
      - repos
      operationId: repos/upload-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#upload-a-release-asset
      servers:
      - url: https://uploads.github.com
        description: The URL origin (protocol + host name + port) is included in `upload_url`
          returned in the response of the "Create a release" endpoint
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: label
        in: query
        schema:
          type: string
      requestBody:
        required: false
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: The raw file data
            examples:
              default:
                value: "@example.zip"
      responses:
        '201':
          description: Response for successful upload
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release-asset"
              examples:
                response-for-successful-upload:
                  "$ref": "#/components/examples/release-asset-response-for-successful-upload"
        '422':
          description: Response if you upload an asset with the same filename as another
            uploaded asset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
  "/repos/{owner}/{repo}/releases/{release_id}/reactions":
    get:
      summary: List reactions for a release
      description: List the reactions to a [release](https://docs.github.com/rest/releases/releases#get-a-release).
      tags:
      - reactions
      operationId: reactions/list-for-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a release.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - laugh
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a release
      description: 'Create a reaction to a [release](https://docs.github.com/rest/releases/releases#get-a-release).
        A response with a `Status: 200 OK` means that you already added the reaction
        type to this release.'
      tags:
      - reactions
      operationId: reactions/create-for-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-release
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the release.
                  enum:
                  - "+1"
                  - laugh
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}":
    delete:
      summary: Delete a release reaction
      description: |-
        **Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/releases/:release_id/reactions/:reaction_id`.

        Delete a reaction to a [release](https://docs.github.com/rest/releases/releases#get-a-release).
      tags:
      - reactions
      operationId: reactions/delete-for-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-a-release-reaction
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/release-id"
      - "$ref": "#/components/parameters/reaction-id"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  "/repos/{owner}/{repo}/rules/branches/{branch}":
    get:
      summary: Get rules for a branch
      description: |-
        Returns all active rules that apply to the specified branch. The branch does not need to exist; rules that would apply
        to a branch with that name will be returned. All active rules that apply will be returned, regardless of the level
        at which they are configured (e.g. repository or organization). Rules in rulesets with "evaluate" or "disabled"
        enforcement statuses are not returned.
      tags:
      - repos
      operationId: repos/get-branch-rules
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-rules-for-a-branch
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/branch"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-rule-detailed"
              examples:
                default:
                  "$ref": "#/components/examples/repository-rule-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
  "/repos/{owner}/{repo}/rulesets":
    get:
      summary: Get all repository rulesets
      description: Get all the rulesets for a repository.
      tags:
      - repos
      operationId: repos/get-repo-rulesets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-all-repository-rulesets
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - name: includes_parents
        description: Include rulesets configured at higher levels that apply to this
          repository
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/repository-ruleset-items"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
    post:
      summary: Create a repository ruleset
      description: Create a ruleset for a repository.
      tags:
      - repos
      operationId: repos/create-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#create-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset.
                  enum:
                  - branch
                  - tag
                enforcement:
                  "$ref": "#/components/schemas/repository-rule-enforcement"
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    "$ref": "#/components/schemas/repository-ruleset-bypass-actor"
                conditions:
                  "$ref": "#/components/schemas/repository-ruleset-conditions"
                rules:
                  type: array
                  description: An array of rules within the ruleset.
                  items:
                    "$ref": "#/components/schemas/repository-rule"
              required:
              - name
              - enforcement
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/repository-ruleset"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
  "/repos/{owner}/{repo}/rulesets/rule-suites":
    get:
      summary: List repository rule suites
      description: |-
        Lists suites of rule evaluations at the repository level.
        For more information, see "[Managing rulesets for a repository](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/managing-rulesets-for-a-repository#viewing-insights-for-rulesets)."
      tags:
      - repos
      operationId: repos/get-repo-rule-suites
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rule-suites#list-repository-rule-suites
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/ref-in-query"
      - "$ref": "#/components/parameters/time-period"
      - "$ref": "#/components/parameters/actor-name-in-query"
      - "$ref": "#/components/parameters/rule-suite-result"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rule-suites"
              examples:
                default:
                  "$ref": "#/components/examples/rule-suite-items"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rule-suites
  "/repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}":
    get:
      summary: Get a repository rule suite
      description: |-
        Gets information about a suite of rule evaluations from within a repository.
        For more information, see "[Managing rulesets for a repository](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/managing-rulesets-for-a-repository#viewing-insights-for-rulesets)."
      tags:
      - repos
      operationId: repos/get-repo-rule-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rule-suites#get-a-repository-rule-suite
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/rule-suite-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rule-suite"
              examples:
                default:
                  "$ref": "#/components/examples/rule-suite"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rule-suites
  "/repos/{owner}/{repo}/rulesets/{ruleset_id}":
    get:
      summary: Get a repository ruleset
      description: Get a ruleset for a repository.
      tags:
      - repos
      operationId: repos/get-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      - name: includes_parents
        description: Include rulesets configured at higher levels that apply to this
          repository
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/repository-ruleset"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
    put:
      summary: Update a repository ruleset
      description: Update a ruleset for a repository.
      tags:
      - repos
      operationId: repos/update-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#update-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Request body
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset.
                  enum:
                  - branch
                  - tag
                enforcement:
                  "$ref": "#/components/schemas/repository-rule-enforcement"
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    "$ref": "#/components/schemas/repository-ruleset-bypass-actor"
                conditions:
                  "$ref": "#/components/schemas/repository-ruleset-conditions"
                rules:
                  description: An array of rules within the ruleset.
                  type: array
                  items:
                    "$ref": "#/components/schemas/repository-rule"
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-ruleset"
              examples:
                default:
                  "$ref": "#/components/examples/repository-ruleset"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
    delete:
      summary: Delete a repository ruleset
      description: Delete a ruleset for a repository.
      tags:
      - repos
      operationId: repos/delete-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#delete-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
  "/repos/{owner}/{repo}/secret-scanning/alerts":
    get:
      summary: List secret scanning alerts for a repository
      description: |-
        Lists secret scanning alerts for an eligible repository, from newest to oldest.
        To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the `repo` scope or `security_events` scope.
        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
      tags:
      - secret-scanning
      operationId: secret-scanning/list-alerts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/secret-scanning-alert-state"
      - "$ref": "#/components/parameters/secret-scanning-alert-secret-type"
      - "$ref": "#/components/parameters/secret-scanning-alert-resolution"
      - "$ref": "#/components/parameters/secret-scanning-alert-sort"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/secret-scanning-pagination-before-org-repo"
      - "$ref": "#/components/parameters/secret-scanning-pagination-after-org-repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/secret-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/secret-scanning-alert-list"
        '404':
          description: Repository is public or secret scanning is disabled for the
            repository
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}":
    get:
      summary: Get a secret scanning alert
      description: |-
        Gets a single secret scanning alert detected in an eligible repository.
        To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the `repo` scope or `security_events` scope.
        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
      tags:
      - secret-scanning
      operationId: secret-scanning/get-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#get-a-secret-scanning-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/alert-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/secret-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/secret-scanning-alert-open"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          description: Repository is public, or secret scanning is disabled for the
            repository, or the resource is not found
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
    patch:
      summary: Update a secret scanning alert
      description: |-
        Updates the status of a secret scanning alert in an eligible repository.
        To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the `repo` scope or `security_events` scope.
        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.
      operationId: secret-scanning/update-alert
      tags:
      - secret-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#update-a-secret-scanning-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/alert-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  "$ref": "#/components/schemas/secret-scanning-alert-state"
                resolution:
                  "$ref": "#/components/schemas/secret-scanning-alert-resolution"
                resolution_comment:
                  "$ref": "#/components/schemas/secret-scanning-alert-resolution-comment"
              required:
              - state
            examples:
              default:
                value:
                  state: resolved
                  resolution: false_positive
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/secret-scanning-alert"
              examples:
                default:
                  "$ref": "#/components/examples/secret-scanning-alert-resolved"
        '400':
          description: Bad request, resolution comment is invalid or the resolution
            was not changed.
        '404':
          description: Repository is public, or secret scanning is disabled for the
            repository, or the resource is not found
        '422':
          description: State does not match the resolution or resolution comment
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: secret-scanning
        subcategory: secret-scanning
  "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations":
    get:
      summary: List locations for a secret scanning alert
      description: |-
        Lists all locations for a given secret scanning alert for an eligible repository.
        To use this endpoint, you must be an administrator for the repository or for the organization that owns the repository, and you must use a personal access token with the `repo` scope or `security_events` scope.
        For public repositories, you may instead use the `public_repo` scope.

        GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
      tags:
      - secret-scanning
      operationId: secret-scanning/list-locations-for-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-locations-for-a-secret-scanning-alert
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/alert-number"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                description: List of locations where the secret was detected
                items:
                  "$ref": "#/components/schemas/secret-scanning-location"
              examples:
                default:
                  "$ref": "#/components/examples/secret-scanning-location-list"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          description: Repository is public, or secret scanning is disabled for the
            repository, or the resource is not found
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  "/repos/{owner}/{repo}/security-advisories":
    get:
      summary: List repository security advisories
      description: |-
        Lists security advisories in a repository.
        You must authenticate using an access token with the `repo` scope or `repository_advisories:read` permission
        in order to get published security advisories in a private repository, or any unpublished security advisories that you have access to.

        You can access unpublished security advisories from a repository if you are a security manager or administrator of that repository, or if you are a collaborator on any security advisory.
      tags:
      - security-advisories
      operationId: security-advisories/list-repository-advisories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#list-repository-security-advisories
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/direction"
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - published
          default: created
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - name: per_page
        description: Number of advisories to return per page.
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 30
      - name: state
        description: Filter by state of the repository advisories. Only advisories
          of this state will be returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - triage
          - draft
          - published
          - closed
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/list-repository-advisories"
        '400':
          "$ref": "#/components/responses/bad_request"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
    post:
      summary: Create a repository security advisory
      description: |-
        Creates a new repository security advisory.
        You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.

        In order to create a draft repository security advisory, you must be a security manager or administrator of that repository.
      tags:
      - security-advisories
      operationId: security-advisories/create-repository-advisory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#create-a-repository-security-advisory
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/repository-advisory-create"
            examples:
              default:
                value:
                  summary: A new important advisory
                  description: A more in-depth description of what the problem is.
                  severity: high
                  vulnerabilities:
                  - package:
                      name: a-package
                      ecosystem: npm
                    vulnerable_version_range: "< 1.0.0"
                    patched_versions: 1.0.0
                    vulnerable_functions:
                    - important_function
                  cwe_ids:
                  - CWE-1101
                  - CWE-20
                  credits:
                  - login: monalisa
                    type: reporter
                  - login: octocat
                    type: analyst
              withVectorString:
                value:
                  summary: A new important advisory
                  description: A more in-depth description of what the problem is.
                  cvss_vector_string: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
                  vulnerabilities:
                  - package:
                      name: a-package
                      ecosystem: npm
                    vulnerable_version_range: "< 1.0.0"
                    patched_versions: 1.0.0
                    vulnerable_functions:
                    - important_function
                  cwe_ids:
                  - CWE-1101
                  - CWE-20
                  credits:
                  - login: monalisa
                    type: reporter
                  - login: octocat
                    type: analyst
              minimal:
                value:
                  summary: A new important advisory
                  description: A more in-depth description of what the problem is.
                  vulnerabilities:
                  - package:
                      ecosystem: npm
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/repository-advisory"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
  "/repos/{owner}/{repo}/security-advisories/reports":
    post:
      summary: Privately report a security vulnerability
      description: |-
        Report a security vulnerability to the maintainers of the repository.
        See "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)" for more information about private vulnerability reporting.
      tags:
      - security-advisories
      operationId: security-advisories/create-private-vulnerability-report
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#privately-report-a-security-vulnerability
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/private-vulnerability-report-create"
            examples:
              default:
                value:
                  summary: A newly discovered vulnerability
                  description: A more in-depth description of what the problem is.
                  severity: high
                  vulnerabilities:
                  - package:
                      name: a-package
                      ecosystem: npm
                    vulnerable_version_range: "< 1.0.0"
                    patched_versions: 1.0.0
                    vulnerable_functions:
                    - important_function
                  cwe_ids:
                  - CWE-123
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/repository-advisory-pvr"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
  "/repos/{owner}/{repo}/security-advisories/{ghsa_id}":
    get:
      summary: Get a repository security advisory
      description: |-
        Get a repository security advisory using its GitHub Security Advisory (GHSA) identifier.
        You can access any published security advisory on a public repository.
        You must authenticate using an access token with the `repo` scope or `repository_advisories:read` permission
        in order to get a published security advisory in a private repository, or any unpublished security advisory that you have access to.

        You can access an unpublished security advisory from a repository if you are a security manager or administrator of that repository, or if you are a
        collaborator on the security advisory.
      tags:
      - security-advisories
      operationId: security-advisories/get-repository-advisory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#get-a-repository-security-advisory
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/ghsa_id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/repository-advisory"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
    patch:
      summary: Update a repository security advisory
      description: |-
        Update a repository security advisory using its GitHub Security Advisory (GHSA) identifier.
        You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.

        In order to update any security advisory, you must be a security manager or administrator of that repository,
        or a collaborator on the repository security advisory.
      tags:
      - security-advisories
      operationId: security-advisories/update-repository-advisory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#update-a-repository-security-advisory
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/ghsa_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/repository-advisory-update"
            examples:
              default:
                summary: Updating the severity and state.
                value:
                  severity: critical
                  state: published
              add_credit:
                summary: When adding a credit to an advisory, you must send the whole
                  array of values.
                value:
                  credits:
                  - login: monauser
                    type: remediation_developer
              update_vvrs:
                summary: When adding vulnerable versions, you must include existing
                  vulnerable versions in the array.
                value:
                - package:
                    ecosystem: pip
                    name: a-package
                  vulnerable_version_range: ">= 1.0.0, < 1.0.1"
                  patched_versions: 1.0.1
                  vulnerable_functions:
                  - function1
                - package:
                    ecosystem: pip
                    name: another-package
                  vulnerable_version_range: ">= 1.0.0, < 1.0.2"
                  patched_versions: 1.0.2
                  vulnerable_functions:
                  - function2
              invalid_state_transition:
                summary: Some state transitions are invalid, such as changing the
                  state from `published` to `draft`
                value:
                  state: draft
              update_severity_with_cvss_set:
                summary: Severity cannot be updated when the CVSS is already set.
                value:
                  severity: low
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/repository-advisory"
                add_credit:
                  "$ref": "#/components/examples/repository-advisory"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Validation failed, or the endpoint has been spammed.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/validation-error"
              examples:
                invalid_state_transition:
                  value:
                    message: Invalid state transition from `published` to `draft`.
                update_severity_with_cvss_set:
                  value:
                    message: Cannot update severity value when CVSS is set.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
  "/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve":
    post:
      summary: Request a CVE for a repository security advisory
      description: |-
        If you want a CVE identification number for the security vulnerability in your project, and don't already have one, you can request a CVE identification number from GitHub. For more information see "[Requesting a CVE identification number](https://docs.github.com/code-security/security-advisories/repository-security-advisories/publishing-a-repository-security-advisory#requesting-a-cve-identification-number-optional)."

        You may request a CVE for public repositories, but cannot do so for private repositories.

        You must authenticate using an access token with the `repo` scope or `repository_advisories:write` permission to use this endpoint.

        In order to request a CVE for a repository security advisory, you must be a security manager or administrator of that repository.
      tags:
      - security-advisories
      operationId: security-advisories/create-repository-advisory-cve-request
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/repository-advisories#request-a-cve-for-a-repository-security-advisory
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/ghsa_id"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '400':
          "$ref": "#/components/responses/bad_request"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: repository-advisories
  "/repos/{owner}/{repo}/stargazers":
    get:
      summary: List stargazers
      description: |-
        Lists the people that have starred the repository.

        You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header: `application/vnd.github.star+json`.
      tags:
      - activity
      operationId: activity/list-stargazers-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#list-stargazers
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/stargazer-response"
              examples:
                default-response:
                  "$ref": "#/components/examples/simple-user-items-default-response"
                alternative-response-with-star-creation-timestamps:
                  "$ref": "#/components/examples/stargazer-items-alternative-response-with-star-creation-timestamps"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: starring
  "/repos/{owner}/{repo}/stats/code_frequency":
    get:
      summary: Get the weekly commit activity
      description: Returns a weekly aggregate of the number of additions and deletions
        pushed to a repository.
      tags:
      - repos
      operationId: repos/get-code-frequency-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-weekly-commit-activity
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Returns a weekly aggregate of the number of additions and deletions
            pushed to a repository.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-frequency-stat"
              examples:
                default:
                  "$ref": "#/components/examples/code-frequency-stat-items"
        '202':
          "$ref": "#/components/responses/accepted"
        '204':
          "$ref": "#/components/responses/no_content"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/commit_activity":
    get:
      summary: Get the last year of commit activity
      description: Returns the last year of commit activity grouped by week. The `days`
        array is a group of commits per day, starting on `Sunday`.
      tags:
      - repos
      operationId: repos/get-commit-activity-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-last-year-of-commit-activity
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/commit-activity"
              examples:
                default:
                  "$ref": "#/components/examples/commit-activity-items"
        '202':
          "$ref": "#/components/responses/accepted"
        '204':
          "$ref": "#/components/responses/no_content"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/contributors":
    get:
      summary: Get all contributor commit activity
      description: |2-

        Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:

        *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
        *   `a` - Number of additions
        *   `d` - Number of deletions
        *   `c` - Number of commits
      tags:
      - repos
      operationId: repos/get-contributors-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-all-contributor-commit-activity
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/contributor-activity"
              examples:
                default:
                  "$ref": "#/components/examples/contributor-activity-items"
        '202':
          "$ref": "#/components/responses/accepted"
        '204':
          "$ref": "#/components/responses/no_content"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/participation":
    get:
      summary: Get the weekly commit count
      description: |-
        Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.

        The array order is oldest week (index 0) to most recent week.

        The most recent week is seven days ago at UTC midnight to today at UTC midnight.
      tags:
      - repos
      operationId: repos/get-participation-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-weekly-commit-count
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: The array order is oldest week (index 0) to most recent week.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/participation-stats"
              examples:
                default:
                  "$ref": "#/components/examples/participation-stats"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  "/repos/{owner}/{repo}/stats/punch_card":
    get:
      summary: Get the hourly commit count for each day
      description: |-
        Each array contains the day number, hour number, and number of commits:

        *   `0-6`: Sunday - Saturday
        *   `0-23`: Hour of day
        *   Number of commits

        For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.
      tags:
      - repos
      operationId: repos/get-punch-card-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-hourly-commit-count-for-each-day
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: For example, `[2, 14, 25]` indicates that there were 25 total
            commits, during the 2:00pm hour on Tuesdays. All times are based on the
            time zone of individual commits.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/code-frequency-stat"
              examples:
                default:
                  "$ref": "#/components/examples/code-frequency-stat-items-2"
        '204':
          "$ref": "#/components/responses/no_content"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  "/repos/{owner}/{repo}/statuses/{sha}":
    post:
      summary: Create a commit status
      description: |-
        Users with push access in a repository can create commit statuses for a given SHA.

        Note: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.
      tags:
      - repos
      operationId: repos/create-commit-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/statuses#create-a-commit-status
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: sha
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status.
                  enum:
                  - error
                  - failure
                  - pending
                  - success
                target_url:
                  type: string
                  nullable: true
                  description: "The target URL to associate with this status. This
                    URL will be linked from the GitHub UI to allow users to easily
                    see the source of the status.  \nFor example, if your continuous
                    integration system is posting build status, you would want to
                    provide the deep link for the build output for this specific SHA:
                    \ \n`http://ci.example.com/user/repo/build/sha`"
                description:
                  type: string
                  nullable: true
                  description: A short description of the status.
                context:
                  type: string
                  description: A string label to differentiate this status from the
                    status of other systems. This field is case-insensitive.
                  default: default
              required:
              - state
            examples:
              default:
                value:
                  state: success
                  target_url: https://example.com/build/status
                  description: The build succeeded!
                  context: continuous-integration/jenkins
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status"
              examples:
                default:
                  "$ref": "#/components/examples/status"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: statuses
  "/repos/{owner}/{repo}/subscribers":
    get:
      summary: List watchers
      description: Lists the people watching the specified repository.
      tags:
      - activity
      operationId: activity/list-watchers-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#list-watchers
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: watching
  "/repos/{owner}/{repo}/subscription":
    get:
      summary: Get a repository subscription
      description: Gets information about whether the authenticated user is subscribed
        to the repository.
      tags:
      - activity
      operationId: activity/get-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#get-a-repository-subscription
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: if you subscribe to the repository
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-subscription"
              examples:
                response-if-you-subscribe-to-the-repository:
                  "$ref": "#/components/examples/repository-subscription-response-if-you-subscribe-to-the-repository"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: Not Found if you don't subscribe to the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
    put:
      summary: Set a repository subscription
      description: If you would like to watch a repository, set `subscribed` to `true`.
        If you would like to ignore notifications made within a repository, set `ignored`
        to `true`. If you would like to stop watching a repository, [delete the repository's
        subscription](https://docs.github.com/rest/activity/watching#delete-a-repository-subscription)
        completely.
      tags:
      - activity
      operationId: activity/set-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#set-a-repository-subscription
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribed:
                  type: boolean
                  description: Determines if notifications should be received from
                    this repository.
                ignored:
                  type: boolean
                  description: Determines if all notifications should be blocked from
                    this repository.
            examples:
              default:
                value:
                  subscribed: true
                  ignored: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-subscription"
              examples:
                default:
                  "$ref": "#/components/examples/repository-subscription"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
    delete:
      summary: Delete a repository subscription
      description: This endpoint should only be used to stop watching a repository.
        To control whether or not you wish to receive notifications from a repository,
        [set the repository's subscription manually](https://docs.github.com/rest/activity/watching#set-a-repository-subscription).
      tags:
      - activity
      operationId: activity/delete-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#delete-a-repository-subscription
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
  "/repos/{owner}/{repo}/tags":
    get:
      summary: List repository tags
      description: ''
      tags:
      - repos
      operationId: repos/list-tags
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-tags
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag"
              examples:
                default:
                  "$ref": "#/components/examples/tag-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/tags/protection":
    get:
      summary: List tag protection states for a repository
      description: |-
        This returns the tag protection states of a repository.

        This information is only available to repository administrators.
      tags:
      - repos
      operationId: repos/list-tag-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/tags#list-tag-protection-states-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag-protection"
              examples:
                default:
                  "$ref": "#/components/examples/tag-protection-items"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: tags
    post:
      summary: Create a tag protection state for a repository
      description: |-
        This creates a tag protection state for a repository.
        This endpoint is only available to repository administrators.
      tags:
      - repos
      operationId: repos/create-tag-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/tags#create-a-tag-protection-state-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pattern:
                  type: string
                  description: An optional glob pattern to match against when enforcing
                    tag protection.
              required:
              - pattern
            examples:
              default:
                value:
                  pattern: v1.*
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag-protection"
              examples:
                default:
                  "$ref": "#/components/examples/tag-protection"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: tags
  "/repos/{owner}/{repo}/tags/protection/{tag_protection_id}":
    delete:
      summary: Delete a tag protection state for a repository
      description: |-
        This deletes a tag protection state for a repository.
        This endpoint is only available to repository administrators.
      tags:
      - repos
      operationId: repos/delete-tag-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/tags#delete-a-tag-protection-state-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/tag-protection-id"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: tags
  "/repos/{owner}/{repo}/tarball/{ref}":
    get:
      summary: Download a repository archive (tar)
      description: |-
        Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually
        `main`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use
        the `Location` header to make a second `GET` request.
        **Note**: For private repositories, these links are temporary and expire after five minutes.
      tags:
      - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#download-a-repository-archive-tar
      operationId: repos/download-tarball-archive
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        in: path
        required: true
        x-multi-segment: true
        schema:
          type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  "/repos/{owner}/{repo}/teams":
    get:
      summary: List repository teams
      description: |-
        Lists the teams that have access to the specified repository and that are also visible to the authenticated user.

        For a public repository, a team is listed only if that team added the public repository explicitly.

        Personal access tokens require the following scopes:
        * `public_repo` to call this endpoint on a public repository
        * `repo` to call this endpoint on a private repository (this scope also includes public repositories)

        This endpoint is not compatible with fine-grained personal access tokens.
      tags:
      - repos
      operationId: repos/list-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-teams
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                default:
                  "$ref": "#/components/examples/team-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/topics":
    get:
      summary: Get all repository topics
      description: ''
      tags:
      - repos
      operationId: repos/get-all-topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#get-all-repository-topics
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/topic"
              examples:
                default:
                  "$ref": "#/components/examples/topic"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    put:
      summary: Replace all repository topics
      description: ''
      tags:
      - repos
      operationId: repos/replace-all-topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#replace-all-repository-topics
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  description: An array of topics to add to the repository. Pass one
                    or more topics to _replace_ the set of existing topics. Send an
                    empty array (`[]`) to clear all topics from the repository. **Note:**
                    Topic `names` cannot contain uppercase letters.
                  items:
                    type: string
              required:
              - names
            examples:
              default:
                value:
                  names:
                  - octocat
                  - atom
                  - electron
                  - api
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/topic"
              examples:
                default:
                  "$ref": "#/components/examples/topic"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/traffic/clones":
    get:
      summary: Get repository clones
      description: Get the total number of clones and breakdown per day or week for
        the last 14 days. Timestamps are aligned to UTC midnight of the beginning
        of the day or week. Week begins on Monday.
      tags:
      - repos
      operationId: repos/get-clones
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-repository-clones
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/clone-traffic"
              examples:
                default:
                  "$ref": "#/components/examples/clone-traffic"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  "/repos/{owner}/{repo}/traffic/popular/paths":
    get:
      summary: Get top referral paths
      description: Get the top 10 popular contents over the last 14 days.
      tags:
      - repos
      operationId: repos/get-top-paths
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-top-referral-paths
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/content-traffic"
              examples:
                default:
                  "$ref": "#/components/examples/content-traffic-items"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  "/repos/{owner}/{repo}/traffic/popular/referrers":
    get:
      summary: Get top referral sources
      description: Get the top 10 referrers over the last 14 days.
      tags:
      - repos
      operationId: repos/get-top-referrers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-top-referral-sources
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/referrer-traffic"
              examples:
                default:
                  "$ref": "#/components/examples/referrer-traffic-items"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  "/repos/{owner}/{repo}/traffic/views":
    get:
      summary: Get page views
      description: Get the total number of views and breakdown per day or week for
        the last 14 days. Timestamps are aligned to UTC midnight of the beginning
        of the day or week. Week begins on Monday.
      tags:
      - repos
      operationId: repos/get-views
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-page-views
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/per"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/view-traffic"
              examples:
                default:
                  "$ref": "#/components/examples/view-traffic"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  "/repos/{owner}/{repo}/transfer":
    post:
      summary: Transfer a repository
      description: |-
        A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).
        You must use a personal access token (classic) or an OAuth token for this endpoint. An installation access token or a fine-grained personal access token cannot be used because they are only granted access to a single account.
      tags:
      - repos
      operationId: repos/transfer
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#transfer-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_owner:
                  type: string
                  description: The username or organization name the repository will
                    be transferred to.
                new_name:
                  type: string
                  description: The new name to be given to the repository.
                team_ids:
                  type: array
                  description: ID of the team or teams to add to the repository. Teams
                    can only be added to organization-owned repositories.
                  items:
                    type: integer
              required:
              - new_owner
            examples:
              default:
                value:
                  new_owner: github
                  team_ids:
                  - 12
                  - 345
                  new_name: octorepo
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/vulnerability-alerts":
    get:
      summary: Check if vulnerability alerts are enabled for a repository
      description: Shows whether dependency alerts are enabled or disabled for a repository.
        The authenticated user must have admin read access to the repository. For
        more information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/check-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response if repository is enabled with vulnerability alerts
        '404':
          description: Not Found if repository is not enabled with vulnerability alerts
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
    put:
      summary: Enable vulnerability alerts
      description: Enables dependency alerts and the dependency graph for a repository.
        The authenticated user must have admin access to the repository. For more
        information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/enable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#enable-vulnerability-alerts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Disable vulnerability alerts
      description: |-
        Disables dependency alerts and the dependency graph for a repository.
        The authenticated user must have admin access to the repository. For more information,
        see "[About security alerts for vulnerable dependencies](https://docs.github.com/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/disable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#disable-vulnerability-alerts
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repos/{owner}/{repo}/zipball/{ref}":
    get:
      summary: Download a repository archive (zip)
      description: |-
        Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually
        `main`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use
        the `Location` header to make a second `GET` request.

        **Note**: For private repositories, these links are temporary and expire after five minutes. If the repository is empty, you will receive a 404 when you follow the redirect.
      tags:
      - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#download-a-repository-archive-zip
      operationId: repos/download-zipball-archive
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - name: ref
        in: path
        required: true
        x-multi-segment: true
        schema:
          type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  "/repos/{template_owner}/{template_repo}/generate":
    post:
      summary: Create a repository using a template
      description: |-
        Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. If the repository is not public, the authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/rest/repos/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.

        **OAuth scope requirements**

        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
        *   `repo` scope to create a private repository
      tags:
      - repos
      operationId: repos/create-using-template
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-a-repository-using-a-template
      parameters:
      - name: template_owner
        description: The account owner of the template repository. The name is not
          case sensitive.
        in: path
        required: true
        schema:
          type: string
      - name: template_repo
        description: The name of the template repository without the `.git` extension.
          The name is not case sensitive.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                  description: The organization or person who will own the new repository.
                    To create a new repository in an organization, the authenticated
                    user must be a member of the specified organization.
                name:
                  type: string
                  description: The name of the new repository.
                description:
                  type: string
                  description: A short description of the new repository.
                include_all_branches:
                  type: boolean
                  description: 'Set to `true` to include the directory structure and
                    files from all branches in the template repository, and not just
                    the default branch. Default: `false`.'
                  default: false
                private:
                  type: boolean
                  description: Either `true` to create a new private repository or
                    `false` to create a new public one.
                  default: false
              required:
              - name
            examples:
              default:
                value:
                  owner: octocat
                  name: Hello-World
                  description: This is your first repository
                  include_all_branches: false
                  private: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository-3"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
  "/repositories":
    get:
      summary: List public repositories
      description: |-
        Lists all public repositories in the order that they were created.

        Note:
        - For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.
        - Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers) to get the URL for the next page of repositories.
      tags:
      - repos
      operationId: repos/list-public
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-public-repositories
      parameters:
      - "$ref": "#/components/parameters/since-repo"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/public-repository-items"
          headers:
            Link:
              example: <https://api.github.com/repositories?since=364>; rel="next"
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/repositories/{repository_id}/environments/{environment_name}/secrets":
    get:
      summary: List environment secrets
      description: |-
        Lists all secrets available in an environment without revealing their
        encrypted values.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/list-environment-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-environment-secrets
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/actions-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repositories/{repository_id}/environments/{environment_name}/secrets/public-key":
    get:
      summary: Get an environment public key
      description: |-
        Get the public key for an environment, which you need to encrypt environment
        secrets. You need to encrypt a secret before you can create or update secrets.

        Anyone with read access to the repository can use this endpoint.
        If the repository is private you must use an access token with the `repo` scope.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/get-environment-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-environment-public-key
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/actions-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}":
    get:
      summary: Get an environment secret
      description: |-
        Gets a single environment secret without revealing its encrypted value.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/get-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-environment-secret
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-secret"
              examples:
                default:
                  "$ref": "#/components/examples/actions-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an environment secret
      description: |-
        Creates or updates an environment secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/create-or-update-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#create-or-update-an-environment-secret
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an environment public
                    key](https://docs.github.com/rest/actions/secrets#get-an-environment-public-key)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
              required:
              - encrypted_value
              - key_id
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an environment secret
      description: |-
        Deletes a secret in an environment using the secret name.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `secrets` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read secrets.
      tags:
      - actions
      operationId: actions/delete-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#delete-an-environment-secret
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Default response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  "/repositories/{repository_id}/environments/{environment_name}/variables":
    get:
      summary: List environment variables
      description: |-
        Lists all environment variables.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `environments:read` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/list-environment-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-environment-variables
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/variables-per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-variable-response"
              examples:
                default:
                  "$ref": "#/components/examples/actions-variables-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create an environment variable
      description: |-
        Create an environment variable that you can reference in a GitHub Actions workflow.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `environment:write` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/create-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#create-an-environment-variable
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
              required:
              - name
              - value
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/repositories/{repository_id}/environments/{environment_name}/variables/{name}":
    get:
      summary: Get an environment variable
      description: |-
        Gets a specific variable in an environment.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `environments:read` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/get-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#get-an-environment-variable
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/environment-name"
      - "$ref": "#/components/parameters/variable-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-variable"
              examples:
                default:
                  "$ref": "#/components/examples/actions-variable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update an environment variable
      description: |-
        Updates an environment variable that you can reference in a GitHub Actions workflow.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `environment:write` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/update-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#update-an-environment-variable
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/variable-name"
      - "$ref": "#/components/parameters/environment-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete an environment variable
      description: |-
        Deletes an environment variable using the variable name.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
        GitHub Apps must have the `environment:write` repository permission to use this endpoint.
        Authenticated users must have collaborator access to a repository to create, update, or read variables.
      tags:
      - actions
      operationId: actions/delete-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#delete-an-environment-variable
      parameters:
      - "$ref": "#/components/parameters/repository-id"
      - "$ref": "#/components/parameters/variable-name"
      - "$ref": "#/components/parameters/environment-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  "/search/code":
    get:
      summary: Search code
      description: |-
        Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:

        `q=addClass+in:file+language:js+repo:jquery/jquery`

        This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.

        Considerations for code search:

        Due to the complexity of searching code, there are a few restrictions on how searches are performed:

        *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.
        *   Only files smaller than 384 KB are searchable.
        *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing
        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.

        This endpoint requires you to authenticate and limits you to 10 requests per minute.
      tags:
      - search
      operationId: search/code
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-code
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
          See "[Searching code](https://docs.github.com/search-github/searching-on-github/searching-code)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        deprecated: true
        description: "**This field is deprecated.** Sorts the results of your query.
          Can only be `indexed`, which indicates how recently a file has been indexed
          by the GitHub search infrastructure. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)"
        in: query
        required: false
        schema:
          type: string
          enum:
          - indexed
      - name: order
        description: "**This field is deprecated.** Determines whether the first search
          result returned is the highest number of matches (`desc`) or lowest number
          of matches (`asc`). This parameter is ignored unless you provide `sort`. "
        in: query
        deprecated: true
        required: false
        schema:
          type: string
          enum:
          - desc
          - asc
          default: desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/code-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/code-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/search/commits":
    get:
      summary: Search commits
      description: |-
        Find commits via various criteria on the default branch (usually `main`). This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match
        metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:

        `q=repo:octocat/Spoon-Knife+css`
      tags:
      - search
      operationId: search/commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-commits
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
          See "[Searching commits](https://docs.github.com/search-github/searching-on-github/searching-commits)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by `author-date` or `committer-date`.
          Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - author-date
          - committer-date
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/commit-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/commit-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/search/issues":
    get:
      summary: Search issues and pull requests
      description: |-
        Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted
        search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.

        `q=windows+label:bug+language:python+state:open&sort=created&order=asc`

        This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.

        **Note:** For requests made by GitHub Apps with a user access token, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see "[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests)."
      tags:
      - search
      operationId: search/issues-and-pull-requests
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-issues-and-pull-requests
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
          See "[Searching issues and pull requests](https://docs.github.com/search-github/searching-on-github/searching-issues-and-pull-requests)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by the number of `comments`,
          `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`,
          `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort
          results by how recently the items were `created` or `updated`, Default:
          [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - comments
          - reactions
          - reactions-+1
          - reactions--1
          - reactions-smile
          - reactions-thinking_face
          - reactions-heart
          - reactions-tada
          - interactions
          - created
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/issue-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/issue-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/search/labels":
    get:
      summary: Search labels
      description: |-
        Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:

        `q=bug+defect+enhancement&repository_id=64778136`

        The labels that best match the query appear first in the search results.
      tags:
      - search
      operationId: search/labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-labels
      parameters:
      - name: repository_id
        description: The id of the repository.
        in: query
        required: true
        schema:
          type: integer
      - name: q
        description: The search keywords. This endpoint does not accept qualifiers
          in the query. To learn more about the format of the query, see [Constructing
          a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by when the label was `created`
          or `updated`. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/label-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/label-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/search/repositories":
    get:
      summary: Search repositories
      description: |-
        Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:

        `q=tetris+language:assembly&sort=stars&order=desc`

        This query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.
      tags:
      - search
      operationId: search/repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-repositories
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
          See "[Searching for repositories](https://docs.github.com/articles/searching-for-repositories/)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `stars`, `forks`,
          or `help-wanted-issues` or how recently the items were `updated`. Default:
          [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - stars
          - forks
          - help-wanted-issues
          - updated
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repo-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/repo-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/search/topics":
    get:
      summary: Search topics
      description: |-
        Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination). See "[Searching topics](https://docs.github.com/articles/searching-topics/)" for a detailed list of qualifiers.

        When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:

        `q=ruby+is:featured`

        This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
      tags:
      - search
      operationId: search/topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-topics
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/topic-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/topic-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/search/users":
    get:
      summary: Search users
      description: |-
        Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).

        When searching for users, you can get text match metadata for the issue **login**, public **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

        For example, if you're looking for a list of popular users, you might try this query:

        `q=tom+repos:%3E42+followers:%3E1000`

        This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.

        This endpoint does not accept authentication and will only include publicly visible users. As an alternative, you can use the GraphQL API. The GraphQL API requires authentication and will return private users, including Enterprise Managed Users (EMUs), that you are authorized to view. For more information, see "[GraphQL Queries](https://docs.github.com/graphql/reference/queries#search)."
      tags:
      - search
      operationId: search/users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-users
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
          See "[Searching users](https://docs.github.com/search-github/searching-on-github/searching-users)"
          for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `followers` or
          `repositories`, or when the person `joined` GitHub. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - followers
          - repositories
          - joined
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user-search-result-item-response"
              examples:
                default:
                  "$ref": "#/components/examples/user-search-result-item-paginated"
        '304':
          "$ref": "#/components/responses/not_modified"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  "/teams/{team_id}":
    get:
      summary: Get a team (Legacy)
      description: "**Deprecation Notice:** This endpoint route is deprecated and
        will be removed from the Teams API. We recommend migrating your existing code
        to use the [Get a team by name](https://docs.github.com/rest/teams/teams#get-a-team-by-name)
        endpoint."
      tags:
      - teams
      operationId: teams/get-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#get-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    patch:
      summary: Update a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://docs.github.com/rest/teams/teams#update-a-team) endpoint.

        To edit a team, the authenticated user must either be an organization owner or a team maintainer.

        **Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.
      tags:
      - teams
      operationId: teams/update-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#update-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: "The level of privacy this team should have. Editing
                    teams without specifying this parameter leaves `privacy` intact.
                    The options are:  \n**For a non-nested team:**  \n * `secret`
                    - only visible to organization owners and members of this team.
                    \ \n * `closed` - visible to all members of this organization.
                    \ \n**For a parent or child team:**  \n * `closed` - visible to
                    all members of this organization."
                  enum:
                  - secret
                  - closed
                notification_setting:
                  type: string
                  description: "The notification setting the team has chosen. Editing
                    teams without specifying this parameter leaves `notification_setting`
                    intact. The options are: \n * `notifications_enabled` - team members
                    receive notifications when the team is @mentioned.  \n * `notifications_disabled`
                    - no one receives notifications."
                  enum:
                  - notifications_enabled
                  - notifications_disabled
                permission:
                  type: string
                  description: "**Deprecated**. The permission that new repositories
                    will be added to the team with when none is specified."
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                  nullable: true
              required:
              - name
            examples:
              default:
                value:
                  name: new team name
                  description: new team description
                  privacy: closed
                  notification_setting: notifications_enabled
      responses:
        '200':
          description: Response when the updated information already exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    delete:
      summary: Delete a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a team](https://docs.github.com/rest/teams/teams#delete-a-team) endpoint.

        To delete a team, the authenticated user must be an organization owner or team maintainer.

        If you are an organization owner, deleting a parent team will delete all of its child teams as well.
      tags:
      - teams
      operationId: teams/delete-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#delete-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  "/teams/{team_id}/discussions":
    get:
      summary: List discussions (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/rest/teams/discussions#list-discussions) endpoint.

        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/list-discussions-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#list-discussions-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    post:
      summary: Create a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create a discussion`](https://docs.github.com/rest/teams/discussions#create-a-discussion) endpoint.

        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - teams
      operationId: teams/create-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#create-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: Private posts are only visible to team members, organization
                    owners, and team maintainers. Public posts are visible to all
                    members of the organization. Set to `true` to create a private
                    post.
                  default: false
              required:
              - title
              - body
            examples:
              default:
                value:
                  title: Our first team post
                  body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}":
    get:
      summary: Get a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion) endpoint.

        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/get-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#get-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    patch:
      summary: Update a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://docs.github.com/rest/teams/discussions#update-a-discussion) endpoint.

        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/update-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#update-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            examples:
              default:
                value:
                  title: Welcome to our first team post
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    delete:
      summary: Delete a discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://docs.github.com/rest/teams/discussions#delete-a-discussion) endpoint.

        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/delete-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#delete-a-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/comments":
    get:
      summary: List discussion comments (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/rest/teams/discussion-comments#list-discussion-comments) endpoint.

        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/list-discussion-comments-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#list-discussion-comments-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    post:
      summary: Create a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Create a discussion comment](https://docs.github.com/rest/teams/discussion-comments#create-a-discussion-comment) endpoint.

        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
      - teams
      operationId: teams/create-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#create-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like apples?
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}":
    get:
      summary: Get a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment) endpoint.

        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/get-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    patch:
      summary: Update a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion comment](https://docs.github.com/rest/teams/discussion-comments#update-a-discussion-comment) endpoint.

        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/update-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#update-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like pineapples?
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-discussion-comment"
              examples:
                default:
                  "$ref": "#/components/examples/team-discussion-comment-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    delete:
      summary: Delete a discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a discussion comment](https://docs.github.com/rest/teams/discussion-comments#delete-a-discussion-comment) endpoint.

        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - teams
      operationId: teams/delete-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#delete-a-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions":
    get:
      summary: List reactions for a team discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment) endpoint.

        List the reactions to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a team discussion comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
    post:
      summary: Create reaction for a team discussion comment (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new "[Create reaction for a team discussion comment](https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment)" endpoint.

        Create a reaction to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - "$ref": "#/components/parameters/comment-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the team discussion comment.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
  "/teams/{team_id}/discussions/{discussion_number}/reactions":
    get:
      summary: List reactions for a team discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion) endpoint.

        List the reactions to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions).
          Omit this parameter to list all reactions to a team discussion.
        in: query
        required: false
        schema:
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
    post:
      summary: Create reaction for a team discussion (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion`](https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion) endpoint.

        Create a reaction to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion.
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/discussion-number"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions)
                    to add to the team discussion.
                  enum:
                  - "+1"
                  - "-1"
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/reaction"
              examples:
                default:
                  "$ref": "#/components/examples/reaction"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
  "/teams/{team_id}/invitations":
    get:
      summary: List pending team invitations (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List pending team invitations`](https://docs.github.com/rest/teams/members#list-pending-team-invitations) endpoint.

        The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.
      tags:
      - teams
      operationId: teams/list-pending-invitations-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-pending-team-invitations-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/organization-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/members":
    get:
      summary: List team members (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/rest/teams/members#list-team-members) endpoint.

        Team members will include the members of child teams.
      tags:
      - teams
      operationId: teams/list-members-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-team-members-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - name: role
        description: Filters members returned by their role in the team.
        in: query
        required: false
        schema:
          type: string
          enum:
          - member
          - maintainer
          - all
          default: all
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/members/{username}":
    get:
      summary: Get team member (Legacy)
      description: |-
        The "Get team member" endpoint (described below) is deprecated.

        We recommend using the [Get team membership for a user](https://docs.github.com/rest/teams/members#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.

        To list members in a team, the team must be visible to the authenticated user.
      tags:
      - teams
      operationId: teams/get-member-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#get-team-member-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: if user is a member
        '404':
          description: if user is not a member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    put:
      summary: Add team member (Legacy)
      description: |-
        The "Add team member" endpoint (described below) is deprecated.

        We recommend using the [Add or update team membership for a user](https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
      - teams
      operationId: teams/add-member-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#add-team-member-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: Not Found if team synchronization is set up
        '422':
          description: Unprocessable Entity if you attempt to add an organization
            to a team or you attempt to add a user to a team when they are not a member
            of at least one other team in the same organization
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    delete:
      summary: Remove team member (Legacy)
      description: |-
        The "Remove team member" endpoint (described below) is deprecated.

        We recommend using the [Remove team membership for a user](https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      tags:
      - teams
      operationId: teams/remove-member-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#remove-team-member-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '404':
          description: Not Found if team synchronization is setup
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/memberships/{username}":
    get:
      summary: Get team membership for a user (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/rest/teams/members#get-team-membership-for-a-user) endpoint.

        Team members will include the members of child teams.

        To get a user's membership with a team, the team must be visible to the authenticated user.

        **Note:**
        The response contains the `state` of the membership and the member's `role`.

        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/teams/teams#create-a-team).
      tags:
      - teams
      operationId: teams/get-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#get-team-membership-for-a-user-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-user-is-a-team-maintainer:
                  "$ref": "#/components/examples/team-membership-response-if-user-is-a-team-maintainer"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    put:
      summary: Add or update team membership for a user (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team membership for a user](https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user) endpoint.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."

        If the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the "pending" state until the user accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.

        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.
      tags:
      - teams
      operationId: teams/add-or-update-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: The role that this user should have in the team.
                  enum:
                  - member
                  - maintainer
                  default: member
            examples:
              default:
                summary: Assign the member role for a user in a team
                value:
                  role: member
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-membership"
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  "$ref": "#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending"
        '403':
          description: Forbidden if team synchronization is set up
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Unprocessable Entity if you attempt to add an organization
            to a team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    delete:
      summary: Remove team membership for a user (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove team membership for a user](https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user) endpoint.

        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.

        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.

        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."
      tags:
      - teams
      operationId: teams/remove-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '403':
          description: if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  "/teams/{team_id}/projects":
    get:
      summary: List team projects (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/rest/teams/teams#list-team-projects) endpoint.

        Lists the organization projects for a team.
      tags:
      - teams
      operationId: teams/list-projects-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-projects-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  "/teams/{team_id}/projects/{project_id}":
    get:
      summary: Check team permissions for a project (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project) endpoint.

        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.
      tags:
      - teams
      operationId: teams/check-permissions-for-project-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-project"
              examples:
                default:
                  "$ref": "#/components/examples/team-project"
        '404':
          description: Not Found if project is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    put:
      summary: Add or update team project permissions (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team project permissions](https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions) endpoint.

        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.
      tags:
      - teams
      operationId: teams/add-or-update-project-permissions-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/project-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant to the team for this project.
                    Default: the team''s `permission` attribute will be used to determine
                    what permission to grant the team on this project. Note that,
                    if you choose not to pass any parameters, you''ll need to set
                    `Content-Length` to zero when calling this endpoint. For more
                    information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."'
                  enum:
                  - read
                  - write
                  - admin
            examples:
              default:
                summary: Example of setting permission to read
                value:
                  permission: read
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    delete:
      summary: Remove a project from a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a project from a team](https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team) endpoint.

        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.
      tags:
      - teams
      operationId: teams/remove-project-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/project-id"
      responses:
        '204':
          description: Response
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  "/teams/{team_id}/repos":
    get:
      summary: List team repositories (Legacy)
      description: "**Deprecation Notice:** This endpoint route is deprecated and
        will be removed from the Teams API. We recommend migrating your existing code
        to use the new [List team repositories](https://docs.github.com/rest/teams/teams#list-team-repositories)
        endpoint."
      tags:
      - teams
      operationId: teams/list-repos-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-repositories-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  "/teams/{team_id}/repos/{owner}/{repo}":
    get:
      summary: Check team permissions for a repository (Legacy)
      description: |-
        **Note**: Repositories inherited through a parent team will also be checked.

        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-repository) endpoint.

        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:
      tags:
      - teams
      operationId: teams/check-permissions-for-repo-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-repository-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '200':
          description: Alternative response with extra repository information
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/team-repository"
              examples:
                alternative-response-with-extra-repository-information:
                  "$ref": "#/components/examples/team-repository-alternative-response-with-extra-repository-information"
        '204':
          description: Response if repository is managed by this team
        '404':
          description: Not Found if repository is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    put:
      summary: Add or update team repository permissions (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new "[Add or update team repository permissions](https://docs.github.com/rest/teams/teams#add-or-update-team-repository-permissions)" endpoint.

        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
      - teams
      operationId: teams/add-or-update-repo-permissions-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-repository-permissions-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: The permission to grant the team on this repository.
                    If no permission is specified, the team's `permission` attribute
                    will be used to determine what permission to grant the team on
                    this repository.
                  enum:
                  - pull
                  - push
                  - admin
            examples:
              default:
                summary: Example of setting permission to pull
                value:
                  permission: push
      responses:
        '204':
          description: Response
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    delete:
      summary: Remove a repository from a team (Legacy)
      description: |-
        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a repository from a team](https://docs.github.com/rest/teams/teams#remove-a-repository-from-a-team) endpoint.

        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.
      tags:
      - teams
      operationId: teams/remove-repo-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-repository-from-a-team-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  "/teams/{team_id}/teams":
    get:
      summary: List child teams (Legacy)
      description: "**Deprecation Notice:** This endpoint route is deprecated and
        will be removed from the Teams API. We recommend migrating your existing code
        to use the new [`List child teams`](https://docs.github.com/rest/teams/teams#list-child-teams)
        endpoint."
      tags:
      - teams
      operationId: teams/list-child-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-child-teams-legacy
      parameters:
      - "$ref": "#/components/parameters/team-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team"
              examples:
                response-if-child-teams-exist:
                  "$ref": "#/components/examples/team-items-response-if-child-teams-exist"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  "/user":
    get:
      summary: Get the authenticated user
      description: |-
        If the authenticated user is authenticated with an OAuth token with the `user` scope, then the response lists public and private profile information.

        If the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.
      tags:
      - users
      operationId: users/get-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#get-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user-response"
              examples:
                response-with-public-and-private-profile-information:
                  "$ref": "#/components/examples/private-user-response-with-public-and-private-profile-information"
                response-with-public-profile-information:
                  "$ref": "#/components/examples/private-user-response-with-public-profile-information"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: users
    patch:
      summary: Update the authenticated user
      description: "**Note:** If your email is set to private and you send an `email`
        parameter as part of this request to update your profile, your privacy settings
        are still enforced: the email address will not be displayed on your public
        profile or via the API."
      tags:
      - users
      operationId: users/update-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#update-the-authenticated-user
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The new name of the user.
                  type: string
                  example: Omar Jahandar
                email:
                  description: The publicly visible email address of the user.
                  type: string
                  example: omar@example.com
                blog:
                  description: The new blog URL of the user.
                  type: string
                  example: blog.example.com
                twitter_username:
                  description: The new Twitter username of the user.
                  type: string
                  example: therealomarj
                  nullable: true
                company:
                  description: The new company of the user.
                  type: string
                  example: Acme corporation
                location:
                  description: The new location of the user.
                  type: string
                  example: Berlin, Germany
                hireable:
                  description: The new hiring availability of the user.
                  type: boolean
                bio:
                  description: The new short biography of the user.
                  type: string
            examples:
              default:
                summary: Example of updating blog and name
                value:
                  blog: https://github.com/blog
                  name: monalisa octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/private-user"
              examples:
                default:
                  "$ref": "#/components/examples/private-user"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: users
  "/user/blocks":
    get:
      summary: List users blocked by the authenticated user
      description: List the users you've blocked on your personal account.
      tags:
      - users
      operationId: users/list-blocked-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/blocking#list-users-blocked-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
  "/user/blocks/{username}":
    get:
      summary: Check if a user is blocked by the authenticated user
      description: Returns a 204 if the given user is blocked by the authenticated
        user. Returns a 404 if the given user is not blocked by the authenticated
        user, or if the given user account has been identified as spam by GitHub.
      tags:
      - users
      operationId: users/check-blocked
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/blocking#check-if-a-user-is-blocked-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: If the user is blocked
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: If the user is not blocked
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
    put:
      summary: Block a user
      description: Blocks the given user and returns a 204. If the authenticated user
        cannot block the given user a 422 is returned.
      tags:
      - users
      operationId: users/block
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/blocking#block-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
    delete:
      summary: Unblock a user
      description: Unblocks the given user and returns a 204.
      tags:
      - users
      operationId: users/unblock
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/blocking#unblock-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
  "/user/codespaces":
    get:
      summary: List codespaces for the authenticated user
      description: |-
        Lists the authenticated user's codespaces.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have read access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#list-codespaces-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/repository-id-in-query"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-list"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
    post:
      summary: Create a codespace for the authenticated user
      description: |-
        Creates a new codespace, owned by the authenticated user.

        This endpoint requires either a `repository_id` OR a `pull_request` but not both.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#create-a-codespace-for-the-authenticated-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                required:
                - repository_id
                properties:
                  repository_id:
                    description: Repository id for this codespace
                    type: integer
                  ref:
                    description: Git ref (typically a branch name) for this codespace
                    type: string
                  location:
                    description: The requested location for a new codespace. Best
                      efforts are made to respect this upon creation. Assigned by
                      IP if not provided.
                    type: string
                  geo:
                    description: The geographic area for this codespace. If not specified,
                      the value is assigned by IP. This property replaces `location`,
                      which is being deprecated.
                    type: string
                    enum:
                    - EuropeWest
                    - SoutheastAsia
                    - UsEast
                    - UsWest
                  client_ip:
                    description: IP for location auto-detection when proxying a request
                    type: string
                  machine:
                    description: Machine type to use for this codespace
                    type: string
                  devcontainer_path:
                    description: Path to devcontainer.json config to use for this
                      codespace
                    type: string
                  multi_repo_permissions_opt_out:
                    description: Whether to authorize requested permissions from devcontainer.json
                    type: boolean
                  working_directory:
                    description: Working directory for this codespace
                    type: string
                  idle_timeout_minutes:
                    description: Time in minutes before codespace stops from inactivity
                    type: integer
                  display_name:
                    description: Display name for this codespace
                    type: string
                  retention_period_minutes:
                    description: Duration in minutes after codespace has gone idle
                      in which it will be deleted. Must be integer minutes between
                      0 and 43200 (30 days).
                    type: integer
              - type: object
                required:
                - pull_request
                properties:
                  pull_request:
                    required:
                    - pull_request_number
                    - repository_id
                    description: Pull request number for this codespace
                    type: object
                    properties:
                      pull_request_number:
                        description: Pull request number
                        type: integer
                      repository_id:
                        description: Repository id for this codespace
                        type: integer
                  location:
                    description: The requested location for a new codespace. Best
                      efforts are made to respect this upon creation. Assigned by
                      IP if not provided.
                    type: string
                  geo:
                    description: The geographic area for this codespace. If not specified,
                      the value is assigned by IP. This property replaces `location`,
                      which is being deprecated.
                    type: string
                    enum:
                    - EuropeWest
                    - SoutheastAsia
                    - UsEast
                    - UsWest
                  machine:
                    description: Machine type to use for this codespace
                    type: string
                  devcontainer_path:
                    description: Path to devcontainer.json config to use for this
                      codespace
                    type: string
                  working_directory:
                    description: Working directory for this codespace
                    type: string
                  idle_timeout_minutes:
                    description: Time in minutes before codespace stops from inactivity
                    type: integer
            examples:
              default:
                value:
                  repository_id: 1
                  ref: main
                  geo: UsWest
      responses:
        '201':
          description: Response when the codespace was successfully created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '202':
          description: Response when the codespace creation partially failed but is
            being retried in the background
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '503':
          "$ref": "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/user/codespaces/secrets":
    get:
      summary: List secrets for the authenticated user
      description: |-
        Lists all secrets available for a user's Codespaces without revealing their
        encrypted values.

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.

        GitHub Apps must have read access to the `codespaces_user_secrets` user permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-secrets-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#list-secrets-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-secret-response"
              examples:
                default:
                  "$ref": "#/components/examples/repo-codespaces-secret-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
  "/user/codespaces/secrets/public-key":
    get:
      summary: Get public key for the authenticated user
      description: |-
        Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets.

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.

        GitHub Apps must have read access to the `codespaces_user_secrets` user permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-public-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#get-public-key-for-the-authenticated-user
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-user-public-key"
              examples:
                default:
                  "$ref": "#/components/examples/codespaces-user-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
  "/user/codespaces/secrets/{secret_name}":
    get:
      summary: Get a secret for the authenticated user
      description: |-
        Gets a secret available to a user's codespaces without revealing its encrypted value.

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.

        GitHub Apps must have read access to the `codespaces_user_secrets` user permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#get-a-secret-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespaces-secret"
              examples:
                default:
                  "$ref": "#/components/examples/user-codespaces-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
    put:
      summary: Create or update a secret for the authenticated user
      description: |-
        Creates or updates a secret for a user's codespace with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must also have Codespaces access to use this endpoint.

        GitHub Apps must have write access to the `codespaces_user_secrets` user permission and `codespaces_secrets` repository permission on all referenced repositories to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/create-or-update-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#create-or-update-a-secret-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get the public key for
                    the authenticated user](https://docs.github.com/rest/codespaces/secrets#get-public-key-for-the-authenticated-user)
                    endpoint.
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the user
                    secret. You can manage the list of selected repositories using
                    the [List selected repositories for a user secret](https://docs.github.com/rest/codespaces/secrets#list-selected-repositories-for-a-user-secret),
                    [Set selected repositories for a user secret](https://docs.github.com/rest/codespaces/secrets#set-selected-repositories-for-a-user-secret),
                    and [Remove a selected repository from a user secret](https://docs.github.com/rest/codespaces/secrets#remove-a-selected-repository-from-a-user-secret)
                    endpoints.
                  items:
                    anyOf:
                    - type: integer
                    - type: string
              required:
              - key_id
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: '012345678912345678'
                  selected_repository_ids:
                  - '1234567'
                  - '2345678'
      responses:
        '201':
          description: Response after successfully creating a secret
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty-object"
              examples:
                default: {}
        '204':
          description: Response after successfully updating a secret
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
    delete:
      summary: Delete a secret for the authenticated user
      description: |-
        Deletes a secret from a user's codespaces using the secret name. Deleting the secret will remove access from all codespaces that were allowed to access the secret.

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.

        GitHub Apps must have write access to the `codespaces_user_secrets` user permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/delete-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#delete-a-secret-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
  "/user/codespaces/secrets/{secret_name}/repositories":
    get:
      summary: List selected repositories for a user secret
      description: |-
        List the repositories that have been granted the ability to use a user's codespace secret.

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.

        GitHub Apps must have read access to the `codespaces_user_secrets` user permission and write access to the `codespaces_secrets` repository permission on all referenced repositories to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/list-repositories-for-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#list-selected-repositories-for-a-user-secret
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/minimal-repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-paginated"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
    put:
      summary: Set selected repositories for a user secret
      description: |-
        Select the repositories that will use a user's codespace secret.

        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.

        GitHub Apps must have write access to the `codespaces_user_secrets` user permission and write access to the `codespaces_secrets` repository permission on all referenced repositories to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/set-repositories-for-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#set-selected-repositories-for-a-user-secret
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: An array of repository ids for which a codespace can
                    access the secret. You can manage the list of selected repositories
                    using the [List selected repositories for a user secret](https://docs.github.com/rest/codespaces/secrets#list-selected-repositories-for-a-user-secret),
                    [Add a selected repository to a user secret](https://docs.github.com/rest/codespaces/secrets#add-a-selected-repository-to-a-user-secret),
                    and [Remove a selected repository from a user secret](https://docs.github.com/rest/codespaces/secrets#remove-a-selected-repository-from-a-user-secret)
                    endpoints.
                  items:
                    type: integer
              required:
              - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                  - '1296269'
                  - '1296280'
      responses:
        '204':
          description: No Content when repositories were added to the selected list
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
  "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}":
    put:
      summary: Add a selected repository to a user secret
      description: |-
        Adds a repository to the selected repositories for a user's codespace secret.
        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.
        GitHub Apps must have write access to the `codespaces_user_secrets` user permission and write access to the `codespaces_secrets` repository permission on the referenced repository to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/add-repository-for-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#add-a-selected-repository-to-a-user-secret
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
    delete:
      summary: Remove a selected repository from a user secret
      description: |-
        Removes a repository from the selected repositories for a user's codespace secret.
        You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.
        GitHub Apps must have write access to the `codespaces_user_secrets` user permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/remove-repository-for-secret-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/secrets#remove-a-selected-repository-from-a-user-secret
      parameters:
      - "$ref": "#/components/parameters/secret-name"
      - name: repository_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content when repository was removed from the selected list
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: secrets
  "/user/codespaces/{codespace_name}":
    get:
      summary: Get a codespace for the authenticated user
      description: |-
        Gets information about a user's codespace.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have read access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#get-a-codespace-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
    patch:
      summary: Update a codespace for the authenticated user
      description: |-
        Updates a codespace owned by the authenticated user. Currently only the codespace's machine type and recent folders can be modified using this endpoint.

        If you specify a new machine type it will be applied the next time your codespace is started.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/update-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#update-a-codespace-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                machine:
                  description: A valid machine to transition this codespace to.
                  type: string
                display_name:
                  description: Display name for this codespace
                  type: string
                recent_folders:
                  description: Recently opened folders inside the codespace. It is
                    currently used by the clients to determine the folder path to
                    load the codespace in.
                  type: array
                  items:
                    type: string
            examples:
              default:
                value:
                  machine: standardLinux
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
    delete:
      summary: Delete a codespace for the authenticated user
      description: |-
        Deletes a user's codespace.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/delete-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#delete-a-codespace-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '202':
          "$ref": "#/components/responses/accepted"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/user/codespaces/{codespace_name}/exports":
    post:
      summary: Export a codespace for the authenticated user
      description: |-
        Triggers an export of the specified codespace and returns a URL and ID where the status of the export can be monitored.

        If changes cannot be pushed to the codespace's repository, they will be pushed to a new or previously-existing fork instead.

        You must authenticate using a personal access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces_lifecycle_admin` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/export-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#export-a-codespace-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-export-details"
              examples:
                default:
                  "$ref": "#/components/examples/user-export-details"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/user/codespaces/{codespace_name}/exports/{export_id}":
    get:
      summary: Get details about a codespace export
      description: |-
        Gets information about an export of a codespace.

        You must authenticate using a personal access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have read access to the `codespaces_lifecycle_admin` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/get-export-details-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#get-details-about-a-codespace-export
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      - "$ref": "#/components/parameters/export-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-export-details"
              examples:
                default:
                  "$ref": "#/components/examples/user-export-details"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/user/codespaces/{codespace_name}/machines":
    get:
      summary: List machine types for a codespace
      description: |-
        List the machine types a codespace can transition to use.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have read access to the `codespaces_metadata` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/codespace-machines-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/machines#list-machine-types-for-a-codespace
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-machine-response"
              examples:
                default:
                  "$ref": "#/components/examples/codespace-machines-list"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: machines
  "/user/codespaces/{codespace_name}/publish":
    post:
      summary: Create a repository from an unpublished codespace
      description: |-
        Publishes an unpublished codespace, creating a new repository and assigning it to the codespace.

        The codespace's token is granted write permissions to the repository, allowing the user to push their changes.

        This will fail for a codespace that is already published, meaning it has an associated repository.

        You must authenticate using a personal access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/publish-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#create-a-repository-from-an-unpublished-codespace
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: A name for the new repository.
                  type: string
                private:
                  description: Whether the new repository should be private.
                  type: boolean
                  default: false
            examples:
              default:
                value:
                  repository: monalisa-octocat-hello-world-g4wpq6h95q
                  private: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace-with-full-repository"
              examples:
                default:
                  "$ref": "#/components/examples/codespace-with-full-repository"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        category: codespaces
        subcategory: codespaces
  "/user/codespaces/{codespace_name}/start":
    post:
      summary: Start a codespace for the authenticated user
      description: |-
        Starts a user's codespace.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces_lifecycle_admin` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/start-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#start-a-codespace-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          "$ref": "#/components/responses/bad_request"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '402':
          description: Payment required
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/user/codespaces/{codespace_name}/stop":
    post:
      summary: Stop a codespace for the authenticated user
      description: |-
        Stops a user's codespace.

        You must authenticate using an access token with the `codespace` scope to use this endpoint.

        GitHub Apps must have write access to the `codespaces_lifecycle_admin` repository permission to use this endpoint.
      tags:
      - codespaces
      operationId: codespaces/stop-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/codespaces/codespaces#stop-a-codespace-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/codespace-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/codespace"
              examples:
                default:
                  "$ref": "#/components/examples/codespace"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '500':
          "$ref": "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: codespaces
        subcategory: codespaces
  "/user/docker/conflicts":
    get:
      summary: Get list of conflicting packages during Docker migration for authenticated-user
      description: |-
        Lists all packages that are owned by the authenticated user within the user's namespace, and that encountered a conflict during a Docker migration.
        To use this endpoint, you must authenticate using an access token with the `read:packages` scope.
      tags:
      - packages
      operationId: packages/list-docker-migration-conflicting-packages-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-list-of-conflicting-packages-during-docker-migration-for-authenticated-user
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/packages-for-user"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/email/visibility":
    patch:
      summary: Set primary email visibility for the authenticated user
      description: Sets the visibility for your primary email addresses.
      tags:
      - users
      operationId: users/set-primary-email-visibility-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/emails#set-primary-email-visibility-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                visibility:
                  description: Denotes whether an email is publicly visible.
                  type: string
                  enum:
                  - public
                  - private
              required:
              - visibility
              type: object
            examples:
              default:
                summary: Example setting the primary email address to private
                value:
                  visibility: private
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items-3"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  "/user/emails":
    get:
      summary: List email addresses for the authenticated user
      description: Lists all of your email addresses, and specifies which one is visible
        to the public. This endpoint is accessible with the `user:email` scope.
      tags:
      - users
      operationId: users/list-emails-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/emails#list-email-addresses-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
    post:
      summary: Add an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      tags:
      - users
      operationId: users/add-email-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/emails#add-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  emails:
                    description: Adds one or more email addresses to your GitHub account.
                      Must contain at least one email address. **Note:** Alternatively,
                      you can pass a single email address or an `array` of emails
                      addresses directly, but we recommend that you pass an object
                      using the `emails` key.
                    type: array
                    items:
                      type: string
                      example: username@example.com
                    example: []
                required:
                - emails
                example:
                  emails:
                  - octocat@github.com
                  - mona@github.com
              - type: array
                items:
                  type: string
                  example: username@example.com
              - type: string
            examples:
              default:
                summary: Example adding multiple email addresses
                value:
                  emails:
                  - octocat@github.com
                  - mona@github.com
                  - octocat@octocat.org
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
    delete:
      summary: Delete an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      tags:
      - users
      operationId: users/delete-email-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/emails#delete-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                description: Deletes one or more email addresses from your GitHub
                  account. Must contain at least one email address. **Note:** Alternatively,
                  you can pass a single email address or an `array` of emails addresses
                  directly, but we recommend that you pass an object using the `emails`
                  key.
                properties:
                  emails:
                    description: Email addresses associated with the GitHub user account.
                    type: array
                    items:
                      type: string
                      example: username@example.com
                example:
                  emails:
                  - octocat@github.com
                  - mona@github.com
                required:
                - emails
              - type: array
                items:
                  type: string
                  example: username@example.com
              - type: string
            examples:
              default:
                summary: Example deleting multiple email accounts
                value:
                  emails:
                  - octocat@github.com
                  - mona@github.com
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  "/user/followers":
    get:
      summary: List followers of the authenticated user
      description: Lists the people following the authenticated user.
      tags:
      - users
      operationId: users/list-followers-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#list-followers-of-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  "/user/following":
    get:
      summary: List the people the authenticated user follows
      description: Lists the people who the authenticated user follows.
      tags:
      - users
      operationId: users/list-followed-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#list-the-people-the-authenticated-user-follows
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  "/user/following/{username}":
    get:
      summary: Check if a person is followed by the authenticated user
      description: ''
      tags:
      - users
      operationId: users/check-person-is-followed-by-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#check-if-a-person-is-followed-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: if the person is followed by the authenticated user
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: if the person is not followed by the authenticated user
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
    put:
      summary: Follow a user
      description: |-
        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."

        Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.
      tags:
      - users
      operationId: users/follow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#follow-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
    delete:
      summary: Unfollow a user
      description: Unfollowing a user requires the user to be logged in and authenticated
        with basic auth or OAuth with the `user:follow` scope.
      tags:
      - users
      operationId: users/unfollow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#unfollow-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  "/user/gpg_keys":
    get:
      summary: List GPG keys for the authenticated user
      description: Lists the current user's GPG keys. Requires that you are authenticated
        via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/list-gpg-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/gpg-keys#list-gpg-keys-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
    post:
      summary: Create a GPG key for the authenticated user
      description: Adds a GPG key to the authenticated user's GitHub account. Requires
        that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key`
        [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      operationId: users/create-gpg-key-for-authenticated-user
      tags:
      - users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/gpg-keys#create-a-gpg-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: A descriptive name for the new key.
                  type: string
                armored_public_key:
                  description: A GPG key in ASCII-armored format.
                  type: string
              type: object
              required:
              - armored_public_key
            examples:
              default:
                value:
                  name: Octocat's GPG Key
                  armored_public_key: |-
                    -----BEGIN PGP PUBLIC KEY BLOCK-----
                    Version: GnuPG v1

                    mQINBFnZ2ZIBEADQ2Z7Z7
                    -----END PGP PUBLIC KEY BLOCK-----
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
  "/user/gpg_keys/{gpg_key_id}":
    get:
      summary: Get a GPG key for the authenticated user
      description: View extended details for a single GPG key. Requires that you are
        authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/get-gpg-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/gpg-keys#get-a-gpg-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/gpg-key-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
    delete:
      summary: Delete a GPG key for the authenticated user
      description: Removes a GPG key from the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at least
        `admin:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/delete-gpg-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/gpg-keys#delete-a-gpg-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/gpg-key-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
  "/user/installations":
    get:
      summary: List app installations accessible to the user access token
      description: |-
        Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.

        You must use a [user access token](https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-user-access-token-for-a-github-app), created for a user who has authorized your GitHub App, to access this endpoint.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.

        You can find the permissions for the installation under the `permissions` key.
      tags:
      - apps
      operationId: apps/list-installations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/installations#list-app-installations-accessible-to-the-user-access-token
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: You can find the permissions for the installation under the
            `permissions` key.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation-response"
              examples:
                default:
                  "$ref": "#/components/examples/base-installation-for-auth-user-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  "/user/installations/{installation_id}/repositories":
    get:
      summary: List repositories accessible to the user access token
      description: |-
        List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.

        You must use a [user access token](https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-user-access-token-for-a-github-app), created for a user who has authorized your GitHub App, to access this endpoint.

        The access the user has to each repository is included in the hash under the `permissions` key.
      tags:
      - apps
      operationId: apps/list-installation-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/installations#list-repositories-accessible-to-the-user-access-token
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: The access the user has to each repository is included in the
            hash under the `permissions` key.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository-response"
              examples:
                default:
                  "$ref": "#/components/examples/repository-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  "/user/installations/{installation_id}/repositories/{repository_id}":
    put:
      summary: Add a repository to an app installation
      description: |-
        Add a single repository to an installation. The authenticated user must have admin access to the repository.

        You must use a personal access token (which you can create via the [command line](https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.
      tags:
      - apps
      operationId: apps/add-repo-to-installation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/installations#add-a-repository-to-an-app-installation
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      - "$ref": "#/components/parameters/repository-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
    delete:
      summary: Remove a repository from an app installation
      description: |-
        Remove a single repository from an installation. The authenticated user must have admin access to the repository. The installation must have the `repository_selection` of `selected`.

        You must use a personal access token (which you can create via the [command line](https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.
      tags:
      - apps
      operationId: apps/remove-repo-from-installation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/installations#remove-a-repository-from-an-app-installation
      parameters:
      - "$ref": "#/components/parameters/installation-id"
      - "$ref": "#/components/parameters/repository-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          description: Returned when the application is installed on `all` repositories
            in the organization, or if this request would remove the last repository
            that the application has access to in the organization.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  "/user/interaction-limits":
    get:
      summary: Get interaction restrictions for your public repositories
      description: Shows which type of GitHub user can interact with your public repositories
        and when the restriction expires.
      tags:
      - interactions
      operationId: interactions/get-restrictions-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/user#get-interaction-restrictions-for-your-public-repositories
      responses:
        '200':
          description: Default response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/interaction-limit-response-any"
              examples:
                default:
                  "$ref": "#/components/examples/interaction-limit-response"
        '204':
          description: Response when there are no restrictions
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: interactions
        subcategory: user
    put:
      summary: Set interaction restrictions for your public repositories
      description: Temporarily restricts which type of GitHub user can interact with
        your public repositories. Setting the interaction limit at the user level
        will overwrite any interaction limits that are set for individual repositories
        owned by the user.
      tags:
      - interactions
      operationId: interactions/set-restrictions-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/user#set-interaction-restrictions-for-your-public-repositories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/interaction-limit"
            examples:
              default:
                value:
                  limit: collaborators_only
                  expiry: one_month
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/interaction-limit-response"
              examples:
                default:
                  "$ref": "#/components/examples/interaction-limit-user"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: interactions
        subcategory: user
    delete:
      summary: Remove interaction restrictions from your public repositories
      description: Removes any interaction restrictions from your public repositories.
      tags:
      - interactions
      operationId: interactions/remove-restrictions-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/interactions/user#remove-interaction-restrictions-from-your-public-repositories
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: interactions
        subcategory: user
  "/user/issues":
    get:
      summary: List user account issues assigned to the authenticated user
      description: |-
        List issues across owned and member repositories assigned to the authenticated user.

        **Note**: GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/pulls/pulls#list-pull-requests)" endpoint.
      tags:
      - issues
      operationId: issues/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/issues/issues#list-user-account-issues-assigned-to-the-authenticated-user
      parameters:
      - name: filter
        description: Indicates which sorts of issues to return. `assigned` means issues
          assigned to you. `created` means issues created by you. `mentioned` means
          issues mentioning you. `subscribed` means issues you're subscribed to updates
          for. `all` or `repos` means all issues you can see, regardless of participation
          or creation.
        in: query
        required: false
        schema:
          type: string
          enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - repos
          - all
          default: assigned
      - name: state
        description: Indicates the state of the issues to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/labels"
      - name: sort
        description: What to sort results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - comments
          default: created
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/issue"
              examples:
                default:
                  "$ref": "#/components/examples/issue-with-repo-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: issues
  "/user/keys":
    get:
      summary: List public SSH keys for the authenticated user
      description: Lists the public SSH keys for the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at least
        `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/list-public-ssh-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/keys#list-public-ssh-keys-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/key"
              examples:
                default:
                  "$ref": "#/components/examples/key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
    post:
      summary: Create a public SSH key for the authenticated user
      description: Adds a public SSH key to the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth, or OAuth with at least
        `write:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      operationId: users/create-public-ssh-key-for-authenticated-user
      tags:
      - users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/keys#create-a-public-ssh-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: A descriptive name for the new key.
                  type: string
                  example: Personal MacBook Air
                key:
                  description: The public SSH key to add to your GitHub account.
                  type: string
                  pattern: "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) "
              required:
              - key
              type: object
            examples:
              default:
                value:
                  title: ssh-rsa AAAAB3NzaC1yc2EAAA
                  key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/key"
              examples:
                default:
                  "$ref": "#/components/examples/key"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
  "/user/keys/{key_id}":
    get:
      summary: Get a public SSH key for the authenticated user
      description: View extended details for a single public SSH key. Requires that
        you are authenticated via Basic Auth or via OAuth with at least `read:public_key`
        [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/get-public-ssh-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/keys#get-a-public-ssh-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/key-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/key"
              examples:
                default:
                  "$ref": "#/components/examples/key"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
    delete:
      summary: Delete a public SSH key for the authenticated user
      description: Removes a public SSH key from the authenticated user's GitHub account.
        Requires that you are authenticated via Basic Auth or via OAuth with at least
        `admin:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
      - users
      operationId: users/delete-public-ssh-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/keys#delete-a-public-ssh-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/key-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
  "/user/marketplace_purchases":
    get:
      summary: List subscriptions for the authenticated user
      description: Lists the active subscriptions for the authenticated user. GitHub
        Apps must use a [user access token](https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-user-access-token-for-a-github-app),
        created for a user who has authorized your GitHub App, to access this endpoint.
        OAuth apps must authenticate using an [OAuth token](https://docs.github.com/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps).
      tags:
      - apps
      operationId: apps/list-subscriptions-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#list-subscriptions-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/user-marketplace-purchase"
              examples:
                default:
                  "$ref": "#/components/examples/user-marketplace-purchase-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/user/marketplace_purchases/stubbed":
    get:
      summary: List subscriptions for the authenticated user (stubbed)
      description: Lists the active subscriptions for the authenticated user. GitHub
        Apps must use a [user access token](https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-user-access-token-for-a-github-app),
        created for a user who has authorized your GitHub App, to access this endpoint.
        OAuth apps must authenticate using an [OAuth token](https://docs.github.com/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps).
      tags:
      - apps
      operationId: apps/list-subscriptions-for-authenticated-user-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/marketplace#list-subscriptions-for-the-authenticated-user-stubbed
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/user-marketplace-purchase"
              examples:
                default:
                  "$ref": "#/components/examples/user-marketplace-purchase-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  "/user/memberships/orgs":
    get:
      summary: List organization memberships for the authenticated user
      description: Lists all of the authenticated user's organization memberships.
      tags:
      - orgs
      operationId: orgs/list-memberships-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-organization-memberships-for-the-authenticated-user
      parameters:
      - name: state
        description: Indicates the state of the memberships to return. If not specified,
          the API returns both active and pending memberships.
        in: query
        required: false
        schema:
          type: string
          enum:
          - active
          - pending
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/org-membership"
              examples:
                default:
                  "$ref": "#/components/examples/org-membership-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/user/memberships/orgs/{org}":
    get:
      summary: Get an organization membership for the authenticated user
      description: If the authenticated user is an active or pending member of the
        organization, this endpoint will return the user's membership. If the authenticated
        user is not affiliated with the organization, a `404` is returned. This endpoint
        will return a `403` if the request is made by a GitHub App that is blocked
        by the organization.
      tags:
      - orgs
      operationId: orgs/get-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#get-an-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                default:
                  "$ref": "#/components/examples/org-membership"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    patch:
      summary: Update an organization membership for the authenticated user
      description: Converts the authenticated user to an active member of the organization,
        if that user has a pending invitation from the organization.
      tags:
      - orgs
      operationId: orgs/update-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#update-an-organization-membership-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state that the membership should be in. Only `"active"`
                    will be accepted.
                  enum:
                  - active
              required:
              - state
            examples:
              default:
                value:
                  state: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/org-membership"
              examples:
                default:
                  "$ref": "#/components/examples/org-membership-2"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  "/user/migrations":
    get:
      summary: List user migrations
      description: Lists all migrations a user has started.
      tags:
      - migrations
      operationId: migrations/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#list-user-migrations
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/migration"
              examples:
                default:
                  "$ref": "#/components/examples/migration-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
    post:
      summary: Start a user migration
      description: Initiates the generation of a user migration archive.
      tags:
      - migrations
      operationId: migrations/start-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#start-a-user-migration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                lock_repositories:
                  description: Lock the repositories being migrated at the start of
                    the migration
                  example: true
                  readOnly: false
                  type: boolean
                exclude_metadata:
                  description: Indicates whether metadata should be excluded and only
                    git source should be included for the migration.
                  example: true
                  readOnly: false
                  type: boolean
                exclude_git_data:
                  description: Indicates whether the repository git data should be
                    excluded from the migration.
                  example: true
                  readOnly: false
                  type: boolean
                exclude_attachments:
                  description: Do not include attachments in the migration
                  example: true
                  readOnly: false
                  type: boolean
                exclude_releases:
                  description: Do not include releases in the migration
                  example: true
                  readOnly: false
                  type: boolean
                exclude_owner_projects:
                  description: Indicates whether projects owned by the organization
                    or users should be excluded.
                  example: true
                  readOnly: false
                  type: boolean
                org_metadata_only:
                  type: boolean
                  example: true
                  description: Indicates whether this should only include organization
                    metadata (repositories array should be empty and will ignore other
                    flags).
                  default: false
                exclude:
                  description: Exclude attributes from the API response to improve
                    performance
                  example:
                  - repositories
                  readOnly: false
                  type: array
                  items:
                    description: Allowed values that can be passed to the exclude
                      param.
                    enum:
                    - repositories
                    example: repositories
                    type: string
                repositories:
                  type: array
                  items:
                    description: Repository path, owner and name
                    example: acme/widgets
                    type: string
              required:
              - repositories
              type: object
            examples:
              default:
                value:
                  repositories:
                  - octocat/Hello-World
                  lock_repositories: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/migration"
              examples:
                default:
                  "$ref": "#/components/examples/migration-2"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  "/user/migrations/{migration_id}":
    get:
      summary: Get a user migration status
      description: |-
        Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:

        *   `pending` - the migration hasn't started yet.
        *   `exporting` - the migration is in progress.
        *   `exported` - the migration finished successfully.
        *   `failed` - the migration failed.

        Once the migration has been `exported` you can [download the migration archive](https://docs.github.com/rest/migrations/users#download-a-user-migration-archive).
      tags:
      - migrations
      operationId: migrations/get-status-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#get-a-user-migration-status
      parameters:
      - "$ref": "#/components/parameters/migration-id"
      - name: exclude
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/migration"
              examples:
                default:
                  "$ref": "#/components/examples/migration"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  "/user/migrations/{migration_id}/archive":
    get:
      summary: Download a user migration archive
      description: |-
        Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:

        *   attachments
        *   bases
        *   commit\_comments
        *   issue\_comments
        *   issue\_events
        *   issues
        *   milestones
        *   organizations
        *   projects
        *   protected\_branches
        *   pull\_request\_reviews
        *   pull\_requests
        *   releases
        *   repositories
        *   review\_comments
        *   schema
        *   users

        The archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.
      tags:
      - migrations
      operationId: migrations/get-archive-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#download-a-user-migration-archive
      parameters:
      - "$ref": "#/components/parameters/migration-id"
      responses:
        '302':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
    delete:
      summary: Delete a user migration archive
      description: Deletes a previous migration archive. Downloadable migration archives
        are automatically deleted after seven days. Migration metadata, which is returned
        in the [List user migrations](https://docs.github.com/rest/migrations/users#list-user-migrations)
        and [Get a user migration status](https://docs.github.com/rest/migrations/users#get-a-user-migration-status)
        endpoints, will continue to be available even after an archive is deleted.
      tags:
      - migrations
      operationId: migrations/delete-archive-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#delete-a-user-migration-archive
      parameters:
      - "$ref": "#/components/parameters/migration-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  "/user/migrations/{migration_id}/repos/{repo_name}/lock":
    delete:
      summary: Unlock a user repository
      description: Unlocks a repository. You can lock repositories when you [start
        a user migration](https://docs.github.com/rest/migrations/users#start-a-user-migration).
        Once the migration is complete you can unlock each repository to begin using
        it again or [delete the repository](https://docs.github.com/rest/repos/repos#delete-a-repository)
        if you no longer need the source data. Returns a status of `404 Not Found`
        if the repository is not locked.
      tags:
      - migrations
      operationId: migrations/unlock-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#unlock-a-user-repository
      parameters:
      - "$ref": "#/components/parameters/migration-id"
      - "$ref": "#/components/parameters/repo-name"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  "/user/migrations/{migration_id}/repositories":
    get:
      summary: List repositories for a user migration
      description: Lists all the repositories for this user migration.
      tags:
      - migrations
      operationId: migrations/list-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/migrations/users#list-repositories-for-a-user-migration
      parameters:
      - "$ref": "#/components/parameters/migration-id"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: migrations
        subcategory: users
  "/user/orgs":
    get:
      summary: List organizations for the authenticated user
      description: |-
        List organizations for the authenticated user.

        **OAuth scope requirements**

        This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.
      tags:
      - orgs
      operationId: orgs/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-organizations-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: orgs
  "/user/packages":
    get:
      summary: List packages for the authenticated user's namespace
      description: |-
        Lists packages owned by the authenticated user within the user's namespace.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/list-packages-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#list-packages-for-the-authenticated-users-namespace
      parameters:
      - name: package_type
        description: The type of supported package. Packages in GitHub's Gradle registry
          have the type `maven`. Docker images pushed to GitHub's Container registry
          (`ghcr.io`) have the type `container`. You can use the type `docker` to
          find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`),
          even if these have now been migrated to the Container registry.
        in: query
        required: true
        schema:
          type: string
          enum:
          - npm
          - maven
          - rubygems
          - docker
          - nuget
          - container
      - "$ref": "#/components/parameters/package-visibility"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/packages-for-user"
        '400':
          "$ref": "#/components/responses/package_es_list_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/packages/{package_type}/{package_name}":
    get:
      summary: Get a package for the authenticated user
      description: |-
        Gets a specific package for a package owned by the authenticated user.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-a-package-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/package-user"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package for the authenticated user
      description: |-
        Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `delete:packages` scopes.
        If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/delete-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#delete-a-package-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/packages/{package_type}/{package_name}/restore":
    post:
      summary: Restore a package for the authenticated user
      description: |-
        Restores a package owned by the authenticated user.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `write:packages` scopes. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/restore-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#restore-a-package-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - name: token
        description: package token
        schema:
          type: string
        required: false
        in: query
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/packages/{package_type}/{package_name}/versions":
    get:
      summary: List package versions for a package owned by the authenticated user
      description: |-
        Lists package versions for a package owned by the authenticated user.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#list-package-versions-for-a-package-owned-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      - name: state
        in: query
        required: false
        description: The state of the package, either active or deleted.
        schema:
          type: string
          enum:
          - active
          - deleted
          default: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package-version"
              examples:
                default:
                  "$ref": "#/components/examples/package-versions-for-authenticated-user"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/packages/{package_type}/{package_name}/versions/{package_version_id}":
    get:
      summary: Get a package version for the authenticated user
      description: |-
        Gets a specific package version for a package owned by the authenticated user.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-a-package-version-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/package-version"
              examples:
                default:
                  "$ref": "#/components/examples/package-version-authenticated-user"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package version for the authenticated user
      description: |-
        Deletes a specific package version for a package owned by the authenticated user.  If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `read:packages` and `delete:packages` scopes.
        If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/delete-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#delete-a-package-version-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore":
    post:
      summary: Restore a package version for the authenticated user
      description: |-
        Restores a package version owned by the authenticated user.

        You can restore a deleted package version under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `write:packages` scopes. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/restore-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#restore-a-package-version-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/user/projects":
    post:
      summary: Create a user project
      description: Creates a user project board. Returns a `410 Gone` status if the
        user does not have existing classic projects. If you do not have sufficient
        privileges to perform this action, a `401 Unauthorized` or `410 Gone` status
        is returned.
      tags:
      - projects
      operationId: projects/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#create-a-user-project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in
                    January
                  type: string
                  nullable: true
              required:
              - name
              type: object
            examples:
              default:
                summary: Create a new project
                value:
                  name: My Projects
                  body: A board to manage my personal projects.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: projects
  "/user/public_emails":
    get:
      summary: List public email addresses for the authenticated user
      description: Lists your publicly visible email address, which you can set with
        the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/users/emails#set-primary-email-visibility-for-the-authenticated-user)
        endpoint. This endpoint is accessible with the `user:email` scope.
      tags:
      - users
      operationId: users/list-public-emails-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/emails#list-public-email-addresses-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/email"
              examples:
                default:
                  "$ref": "#/components/examples/email-items-2"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  "/user/repos":
    get:
      summary: List repositories for the authenticated user
      description: |-
        Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
      tags:
      - repos
      operationId: repos/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repositories-for-the-authenticated-user
      parameters:
      - name: visibility
        description: Limit results to repositories with the specified visibility.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - public
          - private
          default: all
      - name: affiliation
        description: "Comma-separated list of values. Can include:  \n * `owner`:
          Repositories that are owned by the authenticated user.  \n * `collaborator`:
          Repositories that the user has been added to as a collaborator.  \n * `organization_member`:
          Repositories that the user has access to through being a member of an organization.
          This includes every repository on every team that the user is on."
        in: query
        required: false
        schema:
          type: string
          default: owner,collaborator,organization_member
      - name: type
        description: Limit results to repositories of the specified type. Will cause
          a `422` error if used in the same request as **visibility** or **affiliation**.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - owner
          - public
          - private
          - member
          default: all
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: full_name
      - name: direction
        description: 'The order to sort by. Default: `asc` when using `full_name`,
          otherwise `desc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/since-repo-date"
      - "$ref": "#/components/parameters/before-repo-date"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository-items-default-response"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
    post:
      summary: Create a repository for the authenticated user
      description: |-
        Creates a new repository for the authenticated user.

        **OAuth scope requirements**

        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:

        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
        *   `repo` scope to create a private repository.
      tags:
      - repos
      operationId: repos/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the repository.
                  type: string
                  example: Team Environment
                description:
                  description: A short description of the repository.
                  type: string
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                private:
                  description: Whether the repository is private.
                  default: false
                  type: boolean
                has_issues:
                  description: Whether issues are enabled.
                  default: true
                  type: boolean
                  example: true
                has_projects:
                  description: Whether projects are enabled.
                  default: true
                  type: boolean
                  example: true
                has_wiki:
                  description: Whether the wiki is enabled.
                  default: true
                  type: boolean
                  example: true
                has_discussions:
                  description: Whether discussions are enabled.
                  default: false
                  type: boolean
                  example: true
                team_id:
                  description: The id of the team that will be granted access to this
                    repository. This is only valid when creating a repository in an
                    organization.
                  type: integer
                auto_init:
                  description: Whether the repository is initialized with a minimal
                    README.
                  default: false
                  type: boolean
                gitignore_template:
                  description: The desired language or platform to apply to the .gitignore.
                  example: Haskell
                  type: string
                license_template:
                  description: The license keyword of the open source license for
                    this repository.
                  example: mit
                  type: string
                allow_squash_merge:
                  description: Whether to allow squash merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_merge_commit:
                  description: Whether to allow merge commits for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_rebase_merge:
                  description: Whether to allow rebase merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_auto_merge:
                  description: Whether to allow Auto-merge to be used on pull requests.
                  default: false
                  type: boolean
                  example: false
                delete_branch_on_merge:
                  description: Whether to delete head branches when pull requests
                    are merged
                  default: false
                  type: boolean
                  example: false
                squash_merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - COMMIT_OR_PR_TITLE
                  description: |-
                    The default value for a squash merge commit title:

                    - `PR_TITLE` - default to the pull request's title.
                    - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
                squash_merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - COMMIT_MESSAGES
                  - BLANK
                  description: |-
                    The default value for a squash merge commit message:

                    - `PR_BODY` - default to the pull request's body.
                    - `COMMIT_MESSAGES` - default to the branch's commit messages.
                    - `BLANK` - default to a blank commit message.
                merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - MERGE_MESSAGE
                  description: |-
                    The default value for a merge commit title.

                    - `PR_TITLE` - default to the pull request's title.
                    - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
                merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - PR_TITLE
                  - BLANK
                  description: |-
                    The default value for a merge commit message.

                    - `PR_TITLE` - default to the pull request's title.
                    - `PR_BODY` - default to the pull request's body.
                    - `BLANK` - default to a blank commit message.
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  description: Whether this repository acts as a template that can
                    be used to generate new repositories.
                  default: false
                  type: boolean
                  example: true
              required:
              - name
              type: object
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repo!
                  homepage: https://github.com
                  private: false
                  is_template: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/repository"
              examples:
                default:
                  "$ref": "#/components/examples/repository"
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
        '400':
          "$ref": "#/components/responses/bad_request"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
  "/user/repository_invitations":
    get:
      summary: List repository invitations for the authenticated user
      description: When authenticating as a user, this endpoint will list all currently
        open repository invitations for that user.
      tags:
      - repos
      operationId: repos/list-invitations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#list-repository-invitations-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository-invitation"
              examples:
                default:
                  "$ref": "#/components/examples/repository-invitation-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
  "/user/repository_invitations/{invitation_id}":
    patch:
      summary: Accept a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/accept-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#accept-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/invitation-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
    delete:
      summary: Decline a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/decline-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#decline-a-repository-invitation
      parameters:
      - "$ref": "#/components/parameters/invitation-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '409':
          "$ref": "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
  "/user/social_accounts":
    get:
      summary: List social accounts for the authenticated user
      description: Lists all of your social accounts.
      tags:
      - users
      operationId: users/list-social-accounts-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/social-accounts#list-social-accounts-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/social-account"
              examples:
                default:
                  "$ref": "#/components/examples/social-account-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: social-accounts
    post:
      summary: Add social accounts for the authenticated user
      description: Add one or more social accounts to the authenticated user's profile.
        This endpoint is accessible with the `user` scope.
      tags:
      - users
      operationId: users/add-social-account-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/social-accounts#add-social-accounts-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_urls:
                  description: Full URLs for the social media profiles to add.
                  type: array
                  items:
                    type: string
                    example: https://twitter.com/github
                  example: []
              required:
              - account_urls
              example:
                account_urls:
                - https://www.linkedin.com/company/github/
                - https://twitter.com/github
            examples:
              default:
                summary: Adding multiple social accounts
                value:
                  account_urls:
                  - https://facebook.com/GitHub
                  - https://www.youtube.com/@GitHub
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/social-account"
              examples:
                default:
                  "$ref": "#/components/examples/social-account-items"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: social-accounts
    delete:
      summary: Delete social accounts for the authenticated user
      description: Deletes one or more social accounts from the authenticated user's
        profile. This endpoint is accessible with the `user` scope.
      tags:
      - users
      operationId: users/delete-social-account-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/social-accounts#delete-social-accounts-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_urls:
                  description: Full URLs for the social media profiles to delete.
                  type: array
                  items:
                    type: string
                    example: https://twitter.com/github
                  example: []
              required:
              - account_urls
              example:
                account_urls:
                - https://www.linkedin.com/company/github/
                - https://twitter.com/github
            examples:
              default:
                summary: Deleting multiple social accounts
                value:
                  account_urls:
                  - https://facebook.com/GitHub
                  - https://www.youtube.com/@GitHub
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: social-accounts
  "/user/ssh_signing_keys":
    get:
      summary: List SSH signing keys for the authenticated user
      description: Lists the SSH signing keys for the authenticated user's GitHub
        account. You must authenticate with Basic Authentication, or you must authenticate
        with OAuth with at least `read:ssh_signing_key` scope. For more information,
        see "[Understanding scopes for OAuth apps](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
      tags:
      - users
      operationId: users/list-ssh-signing-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/ssh-signing-keys#list-ssh-signing-keys-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ssh-signing-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-signing-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        previews: []
        category: users
        subcategory: ssh-signing-keys
    post:
      summary: Create a SSH signing key for the authenticated user
      description: Creates an SSH signing key for the authenticated user's GitHub
        account. You must authenticate with Basic Authentication, or you must authenticate
        with OAuth with at least `write:ssh_signing_key` scope. For more information,
        see "[Understanding scopes for OAuth apps](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
      operationId: users/create-ssh-signing-key-for-authenticated-user
      tags:
      - users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/ssh-signing-keys#create-a-ssh-signing-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: A descriptive name for the new key.
                  type: string
                  example: Personal MacBook Air
                key:
                  description: The public SSH key to add to your GitHub account. For
                    more information, see "[Checking for existing SSH keys](https://docs.github.com/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys)."
                  type: string
                  pattern: "^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521)
                    |^(sk-ssh-ed25519|sk-ecdsa-sha2-nistp256)@openssh.com "
              required:
              - key
              type: object
            examples:
              default:
                value:
                  key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
                  title: ssh-rsa AAAAB3NzaC1yc2EAAA
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ssh-signing-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-signing-key"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: ssh-signing-keys
  "/user/ssh_signing_keys/{ssh_signing_key_id}":
    get:
      summary: Get an SSH signing key for the authenticated user
      description: Gets extended details for an SSH signing key. You must authenticate
        with Basic Authentication, or you must authenticate with OAuth with at least
        `read:ssh_signing_key` scope. For more information, see "[Understanding scopes
        for OAuth apps](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
      tags:
      - users
      operationId: users/get-ssh-signing-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/ssh-signing-keys#get-an-ssh-signing-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/ssh-signing-key-id"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ssh-signing-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-signing-key"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: ssh-signing-keys
    delete:
      summary: Delete an SSH signing key for the authenticated user
      description: Deletes an SSH signing key from the authenticated user's GitHub
        account. You must authenticate with Basic Authentication, or you must authenticate
        with OAuth with at least `admin:ssh_signing_key` scope. For more information,
        see "[Understanding scopes for OAuth apps](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
      tags:
      - users
      operationId: users/delete-ssh-signing-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/ssh-signing-keys#delete-an-ssh-signing-key-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/ssh-signing-key-id"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: ssh-signing-keys
  "/user/starred":
    get:
      summary: List repositories starred by the authenticated user
      description: |-
        Lists repositories the authenticated user has starred.

        You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header: `application/vnd.github.star+json`.
      tags:
      - activity
      operationId: activity/list-repos-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#list-repositories-starred-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/sort-starred"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repository"
              examples:
                default-response:
                  "$ref": "#/components/examples/repository-items-default-response"
            application/vnd.github.v3.star+json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/starred-repository"
              examples:
                alternative-response-with-star-creation-timestamps:
                  "$ref": "#/components/examples/starred-repository-items-alternative-response-with-star-creation-timestamps"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
  "/user/starred/{owner}/{repo}":
    get:
      summary: Check if a repository is starred by the authenticated user
      description: Whether the authenticated user has starred the repository.
      tags:
      - activity
      operationId: activity/check-repo-is-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#check-if-a-repository-is-starred-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response if this repository is starred by you
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          description: Not Found if this repository is not starred by you
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
    put:
      summary: Star a repository for the authenticated user
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
      - activity
      operationId: activity/star-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#star-a-repository-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
    delete:
      summary: Unstar a repository for the authenticated user
      description: Unstar a repository that the authenticated user has previously
        starred.
      tags:
      - activity
      operationId: activity/unstar-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#unstar-a-repository-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      responses:
        '204':
          description: Response
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
  "/user/subscriptions":
    get:
      summary: List repositories watched by the authenticated user
      description: Lists repositories the authenticated user is watching.
      tags:
      - activity
      operationId: activity/list-watched-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#list-repositories-watched-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
  "/user/teams":
    get:
      summary: List teams for the authenticated user
      description: List all of the teams across all of the organizations to which
        the authenticated user belongs. This method requires `user`, `repo`, or `read:org`
        [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)
        when authenticating via [OAuth](https://docs.github.com/apps/building-oauth-apps/).
        When using a fine-grained personal access token, the resource owner of the
        token [must be a single organization](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#fine-grained-personal-access-tokens),
        and have at least read-only member organization permissions. The response
        payload only contains the teams from a single organization when using a fine-grained
        personal access token.
      tags:
      - teams
      operationId: teams/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-teams-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/team-full"
              examples:
                default:
                  "$ref": "#/components/examples/team-full-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '304':
          "$ref": "#/components/responses/not_modified"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: teams
        subcategory: teams
  "/users":
    get:
      summary: List users
      description: |-
        Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.

        Note: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers) to get the URL for the next page of users.
      tags:
      - users
      operationId: users/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#list-users
      parameters:
      - "$ref": "#/components/parameters/since-user"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              example: <https://api.github.com/users?since=135>; rel="next"
              schema:
                type: string
        '304':
          "$ref": "#/components/responses/not_modified"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: users
  "/users/{username}":
    get:
      summary: Get a user
      description: |-
        Provides publicly available information about someone with a GitHub account.

        GitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See "[Identifying and authorizing users for GitHub Apps](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)" for details about authentication. For an example response, see 'Response with GitHub plan information' below"

        The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication).

        The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "[Emails API](https://docs.github.com/rest/users/emails)".
      tags:
      - users
      operationId: users/get-by-username
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#get-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user-response"
              examples:
                default-response:
                  "$ref": "#/components/examples/public-user-default-response"
                response-with-git-hub-plan-information:
                  "$ref": "#/components/examples/public-user-response-with-git-hub-plan-information"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: users
  "/users/{username}/docker/conflicts":
    get:
      summary: Get list of conflicting packages during Docker migration for user
      description: |-
        Lists all packages that are in a specific user's namespace, that the requesting user has access to, and that encountered a conflict during Docker migration.
        To use this endpoint, you must authenticate using an access token with the `read:packages` scope.
      tags:
      - packages
      operationId: packages/list-docker-migration-conflicting-packages-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-list-of-conflicting-packages-during-docker-migration-for-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/packages-for-user"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/events":
    get:
      summary: List events for the authenticated user
      description: If you are authenticated as the given user, you will see your private
        events. Otherwise, you'll only see public events.
      tags:
      - activity
      operationId: activity/list-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-events-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/user-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/users/{username}/events/orgs/{org}":
    get:
      summary: List organization events for the authenticated user
      description: This is the user's organization dashboard. You must be authenticated
        as the user to view this.
      tags:
      - activity
      operationId: activity/list-org-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-organization-events-for-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/org"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/user-org-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: events
  "/users/{username}/events/public":
    get:
      summary: List public events for a user
      description: ''
      tags:
      - activity
      operationId: activity/list-public-events-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/user-public-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/users/{username}/followers":
    get:
      summary: List followers of a user
      description: Lists the people following the specified user.
      tags:
      - users
      operationId: users/list-followers-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#list-followers-of-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  "/users/{username}/following":
    get:
      summary: List the people a user follows
      description: Lists the people who the specified user follows.
      tags:
      - users
      operationId: users/list-following-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#list-the-people-a-user-follows
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/simple-user"
              examples:
                default:
                  "$ref": "#/components/examples/simple-user-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  "/users/{username}/following/{target_user}":
    get:
      summary: Check if a user follows another user
      description: ''
      tags:
      - users
      operationId: users/check-following-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/followers#check-if-a-user-follows-another-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: target_user
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: if the user follows the target user
        '404':
          description: if the user does not follow the target user
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  "/users/{username}/gists":
    get:
      summary: List gists for a user
      description: 'Lists public gists for the specified user:'
      tags:
      - gists
      operationId: gists/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/gists/gists#list-gists-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/since"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/base-gist"
              examples:
                default:
                  "$ref": "#/components/examples/base-gist-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: gists
        subcategory: gists
  "/users/{username}/gpg_keys":
    get:
      summary: List GPG keys for a user
      description: Lists the GPG keys for a user. This information is accessible by
        anyone.
      tags:
      - users
      operationId: users/list-gpg-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/gpg-keys#list-gpg-keys-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/gpg-key"
              examples:
                default:
                  "$ref": "#/components/examples/gpg-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: gpg-keys
  "/users/{username}/hovercard":
    get:
      summary: Get contextual information for a user
      description: |-
        Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.

        The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:

        ```shell
         curl -u username:token
          https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        ```
      tags:
      - users
      operationId: users/get-context-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/users#get-contextual-information-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: subject_type
        description: Identifies which additional information you'd like to receive
          about the person's hovercard. Can be `organization`, `repository`, `issue`,
          `pull_request`. **Required** when using `subject_id`.
        in: query
        required: false
        schema:
          type: string
          enum:
          - organization
          - repository
          - issue
          - pull_request
      - name: subject_id
        description: Uses the ID for the `subject_type` you specified. **Required**
          when using `subject_type`.
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/hovercard"
              examples:
                default:
                  "$ref": "#/components/examples/hovercard"
        '404':
          "$ref": "#/components/responses/not_found"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: users
  "/users/{username}/installation":
    get:
      summary: Get a user installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the user’s installation information.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
      - apps
      operationId: apps/get-user-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/apps/apps#get-a-user-installation-for-the-authenticated-app
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/installation"
              examples:
                default:
                  "$ref": "#/components/examples/installation"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: apps
  "/users/{username}/keys":
    get:
      summary: List public keys for a user
      description: Lists the _verified_ public SSH keys for a user. This is accessible
        by anyone.
      tags:
      - users
      operationId: users/list-public-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/keys#list-public-keys-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/key-simple"
              examples:
                default:
                  "$ref": "#/components/examples/key-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: keys
  "/users/{username}/orgs":
    get:
      summary: List organizations for a user
      description: |-
        List [public organization memberships](https://docs.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.

        This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/orgs/orgs#list-organizations-for-the-authenticated-user) API instead.
      tags:
      - orgs
      operationId: orgs/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-organizations-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/organization-simple"
              examples:
                default:
                  "$ref": "#/components/examples/organization-simple-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  "/users/{username}/packages":
    get:
      summary: List packages for a user
      description: |-
        Lists all packages in a user's namespace for which the requesting user has access.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/list-packages-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#list-packages-for-a-user
      parameters:
      - name: package_type
        description: The type of supported package. Packages in GitHub's Gradle registry
          have the type `maven`. Docker images pushed to GitHub's Container registry
          (`ghcr.io`) have the type `container`. You can use the type `docker` to
          find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`),
          even if these have now been migrated to the Container registry.
        in: query
        required: true
        schema:
          type: string
          enum:
          - npm
          - maven
          - rubygems
          - docker
          - nuget
          - container
      - "$ref": "#/components/parameters/package-visibility"
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/per-page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/packages-for-user"
        '400':
          "$ref": "#/components/responses/package_es_list_error"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/packages/{package_type}/{package_name}":
    get:
      summary: Get a package for a user
      description: |-
        Gets a specific package metadata for a public package owned by a user.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-package-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-a-package-for-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/package"
              examples:
                default:
                  "$ref": "#/components/examples/package-user"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete a package for a user
      description: |-
        Deletes an entire package for a user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `delete:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package you want to delete. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/delete-package-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#delete-a-package-for-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/packages/{package_type}/{package_name}/restore":
    post:
      summary: Restore a package for a user
      description: |-
        Restores an entire package for a user.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `write:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package you want to restore. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/restore-package-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#restore-a-package-for-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/username"
      - name: token
        description: package token
        schema:
          type: string
        required: false
        in: query
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/packages/{package_type}/{package_name}/versions":
    get:
      summary: List package versions for a package owned by a user
      description: |-
        Lists package versions for a public package owned by a specified user.

        To use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#list-package-versions-for-a-package-owned-by-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/package-version"
              examples:
                default:
                  "$ref": "#/components/examples/package-versions-for-user"
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}":
    get:
      summary: Get a package version for a user
      description: |-
        Gets a specific package version for a public package owned by a specified user.

        At this time, to use this endpoint, you must authenticate using an access token with the `read:packages` scope. If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of GitHub Packages registries that only support repository-scoped permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
      tags:
      - packages
      operationId: packages/get-package-version-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#get-a-package-version-for-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/package-version-id"
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/package-version"
              examples:
                default:
                  "$ref": "#/components/examples/package-version-user"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
    delete:
      summary: Delete package version for a user
      description: |-
        Deletes a specific package version for a user. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `delete:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package whose version you want to delete. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/delete-package-version-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#delete-package-version-for-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore":
    post:
      summary: Restore package version for a user
      description: |-
        Restores a specific package version for a user.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `read:packages` and `write:packages` scopes. In addition:
        - If the `package_type` belongs to a GitHub Packages registry that only supports repository-scoped permissions, your token must also include the `repo` scope. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
        - If the `package_type` belongs to a GitHub Packages registry that supports granular permissions, you must have admin permissions to the package whose version you want to restore. For the list of these registries, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      tags:
      - packages
      operationId: packages/restore-package-version-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/packages/packages#restore-package-version-for-a-user
      parameters:
      - "$ref": "#/components/parameters/package-type"
      - "$ref": "#/components/parameters/package-name"
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/package-version-id"
      responses:
        '204':
          description: Response
        '401':
          "$ref": "#/components/responses/requires_authentication"
        '403':
          "$ref": "#/components/responses/forbidden"
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: packages
  "/users/{username}/projects":
    get:
      summary: List user projects
      description: Lists projects for a user.
      tags:
      - projects
      operationId: projects/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/projects/projects#list-user-projects
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: state
        description: Indicates the state of the projects to return.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/project"
              examples:
                default:
                  "$ref": "#/components/examples/project-items-3"
          headers:
            Link:
              "$ref": "#/components/headers/link"
        '422':
          "$ref": "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: projects
        subcategory: projects
  "/users/{username}/received_events":
    get:
      summary: List events received by the authenticated user
      description: These are events that you've received by watching repos and following
        users. If you are authenticated as the given user, you will see private events.
        Otherwise, you'll only see public events.
      tags:
      - activity
      operationId: activity/list-received-events-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-events-received-by-the-authenticated-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/user-received-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/users/{username}/received_events/public":
    get:
      summary: List public events received by a user
      description: ''
      tags:
      - activity
      operationId: activity/list-received-public-events-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events-received-by-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/event"
              examples:
                default:
                  "$ref": "#/components/examples/user-received-public-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  "/users/{username}/repos":
    get:
      summary: List repositories for a user
      description: 'Lists public repositories for the specified user. Note: For GitHub
        AE, this endpoint will list internal repositories for the specified user.'
      tags:
      - repos
      operationId: repos/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repositories-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - name: type
        description: Limit results to repositories of the specified type.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - owner
          - member
          default: owner
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: full_name
      - name: direction
        description: 'The order to sort by. Default: `asc` when using `full_name`,
          otherwise `desc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  "/users/{username}/settings/billing/actions":
    get:
      summary: Get GitHub Actions billing for a user
      description: |-
        Gets the summary of the free and paid GitHub Actions minutes used.

        Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage returned includes any minute multipliers for macOS and Windows runners, and is rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        Access tokens must have the `user` scope.
      operationId: billing/get-github-actions-billing-user
      tags:
      - billing
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/billing/billing#get-github-actions-billing-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/actions-billing-usage"
              examples:
                default:
                  "$ref": "#/components/examples/actions-billing-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: billing
        subcategory: billing
  "/users/{username}/settings/billing/packages":
    get:
      summary: Get GitHub Packages billing for a user
      description: |-
        Gets the free and paid storage used for GitHub Packages in gigabytes.

        Paid minutes only apply to packages stored for private repositories. For more information, see "[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."

        Access tokens must have the `user` scope.
      operationId: billing/get-github-packages-billing-user
      tags:
      - billing
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/billing/billing#get-github-packages-billing-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/packages-billing-usage"
              examples:
                default:
                  "$ref": "#/components/examples/packages-billing-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: billing
        subcategory: billing
  "/users/{username}/settings/billing/shared-storage":
    get:
      summary: Get shared storage billing for a user
      description: |-
        Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.

        Paid minutes only apply to packages stored for private repositories. For more information, see "[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages)."

        Access tokens must have the `user` scope.
      operationId: billing/get-shared-storage-billing-user
      tags:
      - billing
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/billing/billing#get-shared-storage-billing-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/combined-billing-usage"
              examples:
                default:
                  "$ref": "#/components/examples/combined-billing-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: billing
        subcategory: billing
  "/users/{username}/social_accounts":
    get:
      summary: List social accounts for a user
      description: Lists social media accounts for a user. This endpoint is accessible
        by anyone.
      tags:
      - users
      operationId: users/list-social-accounts-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/social-accounts#list-social-accounts-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/social-account"
              examples:
                default:
                  "$ref": "#/components/examples/social-account-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: social-accounts
  "/users/{username}/ssh_signing_keys":
    get:
      summary: List SSH signing keys for a user
      description: Lists the SSH signing keys for a user. This operation is accessible
        by anyone.
      tags:
      - users
      operationId: users/list-ssh-signing-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/users/ssh-signing-keys#list-ssh-signing-keys-for-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ssh-signing-key"
              examples:
                default:
                  "$ref": "#/components/examples/ssh-signing-key-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: ssh-signing-keys
  "/users/{username}/starred":
    get:
      summary: List repositories starred by a user
      description: |-
        Lists repositories a user has starred.

        You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header: `application/vnd.github.star+json`.
      tags:
      - activity
      operationId: activity/list-repos-starred-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#list-repositories-starred-by-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/sort-starred"
      - "$ref": "#/components/parameters/direction"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/starred-repository-response"
              examples:
                default-response:
                  "$ref": "#/components/examples/repository-items-default-response"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: starring
  "/users/{username}/subscriptions":
    get:
      summary: List repositories watched by a user
      description: Lists repositories a user is watching.
      tags:
      - activity
      operationId: activity/list-repos-watched-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#list-repositories-watched-by-a-user
      parameters:
      - "$ref": "#/components/parameters/username"
      - "$ref": "#/components/parameters/per-page"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/minimal-repository"
              examples:
                default:
                  "$ref": "#/components/examples/minimal-repository-items"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: watching
  "/versions":
    get:
      summary: Get all API versions
      description: Get all supported GitHub API versions.
      tags:
      - meta
      operationId: meta/get-all-versions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#get-all-api-versions
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: date
                  example: '2021-01-01'
              examples:
                default:
                  value:
                  - '2021-01-01'
                  - '2021-06-01'
                  - '2022-01-01'
        '404':
          "$ref": "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
  "/zen":
    get:
      summary: Get the Zen of GitHub
      description: Get a random sentence from the Zen of GitHub
      tags:
      - meta
      operationId: meta/get-zen
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#get-the-zen-of-github
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: string
              examples:
                default:
                  summary: Example response
                  value: Responsive is better than fast
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
components:
  schemas:
    root:
      type: object
      properties:
        current_user_url:
          type: string
          format: uri-template
        current_user_authorizations_html_url:
          type: string
          format: uri-template
        authorizations_url:
          type: string
          format: uri-template
        code_search_url:
          type: string
          format: uri-template
        commit_search_url:
          type: string
          format: uri-template
        emails_url:
          type: string
          format: uri-template
        emojis_url:
          type: string
          format: uri-template
        events_url:
          type: string
          format: uri-template
        feeds_url:
          type: string
          format: uri-template
        followers_url:
          type: string
          format: uri-template
        following_url:
          type: string
          format: uri-template
        gists_url:
          type: string
          format: uri-template
        hub_url:
          type: string
          format: uri-template
        issue_search_url:
          type: string
          format: uri-template
        issues_url:
          type: string
          format: uri-template
        keys_url:
          type: string
          format: uri-template
        label_search_url:
          type: string
          format: uri-template
        notifications_url:
          type: string
          format: uri-template
        organization_url:
          type: string
          format: uri-template
        organization_repositories_url:
          type: string
          format: uri-template
        organization_teams_url:
          type: string
          format: uri-template
        public_gists_url:
          type: string
          format: uri-template
        rate_limit_url:
          type: string
          format: uri-template
        repository_url:
          type: string
          format: uri-template
        repository_search_url:
          type: string
          format: uri-template
        current_user_repositories_url:
          type: string
          format: uri-template
        starred_url:
          type: string
          format: uri-template
        starred_gists_url:
          type: string
          format: uri-template
        topic_search_url:
          type: string
          format: uri-template
        user_url:
          type: string
          format: uri-template
        user_organizations_url:
          type: string
          format: uri-template
        user_repositories_url:
          type: string
          format: uri-template
        user_search_url:
          type: string
          format: uri-template
      required:
      - current_user_url
      - current_user_authorizations_html_url
      - authorizations_url
      - code_search_url
      - commit_search_url
      - emails_url
      - emojis_url
      - events_url
      - feeds_url
      - followers_url
      - following_url
      - gists_url
      - hub_url
      - issue_search_url
      - issues_url
      - keys_url
      - label_search_url
      - notifications_url
      - organization_url
      - organization_repositories_url
      - organization_teams_url
      - public_gists_url
      - rate_limit_url
      - repository_url
      - repository_search_url
      - current_user_repositories_url
      - starred_url
      - starred_gists_url
      - user_url
      - user_organizations_url
      - user_repositories_url
      - user_search_url
    security-advisory-ecosystems:
      type: string
      description: The package's language or package management ecosystem.
      enum:
      - rubygems
      - npm
      - pip
      - maven
      - nuget
      - composer
      - go
      - rust
      - erlang
      - actions
      - pub
      - other
      - swift
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    security-advisory-credit-types:
      type: string
      description: The type of credit the user is receiving.
      enum:
      - analyst
      - finder
      - reporter
      - coordinator
      - remediation_developer
      - remediation_reviewer
      - remediation_verifier
      - tool
      - sponsor
      - other
    global-advisory:
      description: A GitHub Security Advisory.
      type: object
      properties:
        ghsa_id:
          type: string
          description: The GitHub Security Advisory ID.
          readOnly: true
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
          readOnly: true
        url:
          type: string
          description: The API URL for the advisory.
          readOnly: true
        html_url:
          type: string
          format: uri
          description: The URL for the advisory.
          readOnly: true
        repository_advisory_url:
          type: string
          format: uri
          description: The API URL for the repository advisory.
          readOnly: true
          nullable: true
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory entails.
          maxLength: 65535
          nullable: true
        type:
          type: string
          description: The type of advisory.
          readOnly: true
          enum:
          - reviewed
          - unreviewed
          - malware
        severity:
          type: string
          description: The severity of the advisory.
          enum:
          - critical
          - high
          - medium
          - low
          - unknown
        source_code_location:
          type: string
          format: uri
          description: The URL of the advisory's source code.
          nullable: true
        identifiers:
          type: array
          nullable: true
          readOnly: true
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of identifier.
                enum:
                - CVE
                - GHSA
              value:
                type: string
                description: The identifier value.
            required:
            - type
            - value
        references:
          type: array
          nullable: true
          items:
            type: string
            description: URLs with more information regarding the advisory.
        published_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was published, in ISO
            8601 format.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was last updated, in
            ISO 8601 format.
          readOnly: true
        github_reviewed_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was reviewed by GitHub,
            in ISO 8601 format.
          readOnly: true
          nullable: true
        nvd_published_at:
          type: string
          format: date-time
          description: |-
            The date and time when the advisory was published in the National Vulnerability Database, in ISO 8601 format.
            This field is only populated when the advisory is imported from the National Vulnerability Database.
          readOnly: true
          nullable: true
        withdrawn_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was withdrawn, in ISO
            8601 format.
          readOnly: true
          nullable: true
        vulnerabilities:
          type: array
          description: The products and respective version ranges affected by the
            advisory.
          nullable: true
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                nullable: true
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
                - name
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              first_patched_version:
                type: string
                description: The package version that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected by the
                  vulnerability.
                nullable: true
                readOnly: true
                items:
                  type: string
            required:
            - package
            - vulnerable_version_range
            - first_patched_version
            - vulnerable_functions
        cvss:
          type: object
          nullable: true
          properties:
            vector_string:
              type: string
              description: The CVSS vector.
              nullable: true
            score:
              type: number
              description: The CVSS score.
              minimum: 0
              maximum: 10
              nullable: true
              readOnly: true
          required:
          - vector_string
          - score
        cwes:
          type: array
          nullable: true
          items:
            type: object
            properties:
              cwe_id:
                type: string
                description: The Common Weakness Enumeration (CWE) identifier.
              name:
                type: string
                description: The name of the CWE.
                readOnly: true
            required:
            - cwe_id
            - name
        credits:
          type: array
          description: The users who contributed to the advisory.
          nullable: true
          readOnly: true
          items:
            type: object
            properties:
              user:
                "$ref": "#/components/schemas/simple-user"
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
            required:
            - user
            - type
      required:
      - ghsa_id
      - cve_id
      - url
      - html_url
      - repository_advisory_url
      - summary
      - description
      - type
      - severity
      - source_code_location
      - identifiers
      - references
      - published_at
      - updated_at
      - github_reviewed_at
      - nvd_published_at
      - withdrawn_at
      - vulnerabilities
      - cvss
      - cwes
      - credits
      additionalProperties: false
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to specific
        repositories. They come with granular permissions and built-in webhooks. GitHub
        apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: PEM ENCODED RSA PRIVATE KEY
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
    manifest-conversions:
      allOf:
      - "$ref": "#/components/schemas/integration"
      - type: object
        properties:
          client_id:
            type: string
          client_secret:
            type: string
          webhook_secret:
            type: string
            nullable: true
          pem:
            type: string
        required:
        - client_id
        - client_secret
        - webhook_secret
        - pem
        additionalProperties: true
    webhook-config-url:
      type: string
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
    webhook-config-content-type:
      type: string
      description: The media type used to serialize the payloads. Supported values
        include `json` and `form`. The default is `form`.
      example: '"json"'
    webhook-config-secret:
      type: string
      description: If provided, the `secret` will be used as the `key` to generate
        the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
    webhook-config-insecure-ssl:
      oneOf:
      - type: string
        description: Determines whether the SSL certificate of the host for `url`
          will be verified when delivering payloads. Supported values include `0`
          (verification is performed) and `1` (verification is not performed). The
          default is `0`. **We strongly recommend not setting this to `1` as you are
          subject to man-in-the-middle and other attacks.**
        example: '"0"'
      - type: number
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          "$ref": "#/components/schemas/webhook-config-url"
        content_type:
          "$ref": "#/components/schemas/webhook-config-content-type"
        secret:
          "$ref": "#/components/schemas/webhook-config-secret"
        insecure_ssl:
          "$ref": "#/components/schemas/webhook-config-insecure-ssl"
    hook-delivery-item:
      title: Simple webhook delivery
      description: Delivery made by a webhook, without request and response information.
      type: object
      properties:
        id:
          description: Unique identifier of the webhook delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries
            for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the webhook delivery occurred.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the webhook delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Describes the response returned after attempting the delivery.
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this
            event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries
            for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this
            event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
      - request
      - response
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    integration-installation-request:
      title: Integration Installation Request
      description: Request to install an integration on a target
      type: object
      properties:
        id:
          description: Unique identifier of the request installation.
          type: integer
          example: 42
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        account:
          anyOf:
          - "$ref": "#/components/schemas/simple-user"
          - "$ref": "#/components/schemas/enterprise"
        requester:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2022-07-08T16:18:44-04:00'
      required:
      - id
      - account
      - requester
      - created_at
    app-permissions:
      title: App Permissions
      type: object
      description: The permissions granted to the user access token.
      properties:
        actions:
          type: string
          description: The level of permission to grant the access token for GitHub
            Actions workflows, workflow runs, and artifacts.
          enum:
          - read
          - write
        administration:
          type: string
          description: The level of permission to grant the access token for repository
            creation, deletion, settings, teams, and collaborators creation.
          enum:
          - read
          - write
        checks:
          type: string
          description: The level of permission to grant the access token for checks
            on code.
          enum:
          - read
          - write
        contents:
          type: string
          description: The level of permission to grant the access token for repository
            contents, commits, branches, downloads, releases, and merges.
          enum:
          - read
          - write
        deployments:
          type: string
          description: The level of permission to grant the access token for deployments
            and deployment statuses.
          enum:
          - read
          - write
        environments:
          type: string
          description: The level of permission to grant the access token for managing
            repository environments.
          enum:
          - read
          - write
        issues:
          type: string
          description: The level of permission to grant the access token for issues
            and related comments, assignees, labels, and milestones.
          enum:
          - read
          - write
        metadata:
          type: string
          description: The level of permission to grant the access token to search
            repositories, list collaborators, and access repository metadata.
          enum:
          - read
          - write
        packages:
          type: string
          description: The level of permission to grant the access token for packages
            published to GitHub Packages.
          enum:
          - read
          - write
        pages:
          type: string
          description: The level of permission to grant the access token to retrieve
            Pages statuses, configuration, and builds, as well as create new builds.
          enum:
          - read
          - write
        pull_requests:
          type: string
          description: The level of permission to grant the access token for pull
            requests and related comments, assignees, labels, milestones, and merges.
          enum:
          - read
          - write
        repository_hooks:
          type: string
          description: The level of permission to grant the access token to manage
            the post-receive hooks for a repository.
          enum:
          - read
          - write
        repository_projects:
          type: string
          description: The level of permission to grant the access token to manage
            repository projects, columns, and cards.
          enum:
          - read
          - write
          - admin
        secret_scanning_alerts:
          type: string
          description: The level of permission to grant the access token to view and
            manage secret scanning alerts.
          enum:
          - read
          - write
        secrets:
          type: string
          description: The level of permission to grant the access token to manage
            repository secrets.
          enum:
          - read
          - write
        security_events:
          type: string
          description: The level of permission to grant the access token to view and
            manage security events like code scanning alerts.
          enum:
          - read
          - write
        single_file:
          type: string
          description: The level of permission to grant the access token to manage
            just a single file.
          enum:
          - read
          - write
        statuses:
          type: string
          description: The level of permission to grant the access token for commit
            statuses.
          enum:
          - read
          - write
        vulnerability_alerts:
          type: string
          description: The level of permission to grant the access token to manage
            Dependabot alerts.
          enum:
          - read
          - write
        workflows:
          type: string
          description: The level of permission to grant the access token to update
            GitHub Actions workflow files.
          enum:
          - write
        members:
          type: string
          description: The level of permission to grant the access token for organization
            teams and members.
          enum:
          - read
          - write
        organization_administration:
          type: string
          description: The level of permission to grant the access token to manage
            access to an organization.
          enum:
          - read
          - write
        organization_custom_roles:
          type: string
          description: The level of permission to grant the access token for custom
            repository roles management. This property is in beta and is subject to
            change.
          enum:
          - read
          - write
        organization_announcement_banners:
          type: string
          description: The level of permission to grant the access token to view and
            manage announcement banners for an organization.
          enum:
          - read
          - write
        organization_hooks:
          type: string
          description: The level of permission to grant the access token to manage
            the post-receive hooks for an organization.
          enum:
          - read
          - write
        organization_personal_access_tokens:
          type: string
          description: The level of permission to grant the access token for viewing
            and managing fine-grained personal access token requests to an organization.
          enum:
          - read
          - write
        organization_personal_access_token_requests:
          type: string
          description: The level of permission to grant the access token for viewing
            and managing fine-grained personal access tokens that have been approved
            by an organization.
          enum:
          - read
          - write
        organization_plan:
          type: string
          description: The level of permission to grant the access token for viewing
            an organization's plan.
          enum:
          - read
        organization_projects:
          type: string
          description: The level of permission to grant the access token to manage
            organization projects and projects beta (where available).
          enum:
          - read
          - write
          - admin
        organization_packages:
          type: string
          description: The level of permission to grant the access token for organization
            packages published to GitHub Packages.
          enum:
          - read
          - write
        organization_secrets:
          type: string
          description: The level of permission to grant the access token to manage
            organization secrets.
          enum:
          - read
          - write
        organization_self_hosted_runners:
          type: string
          description: The level of permission to grant the access token to view and
            manage GitHub Actions self-hosted runners available to an organization.
          enum:
          - read
          - write
        organization_user_blocking:
          type: string
          description: The level of permission to grant the access token to view and
            manage users blocked by the organization.
          enum:
          - read
          - write
        team_discussions:
          type: string
          description: The level of permission to grant the access token to manage
            team discussions and related comments.
          enum:
          - read
          - write
      example:
        contents: read
        issues: read
        deployments: write
        single_file: read
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
          - "$ref": "#/components/schemas/simple-user"
          - "$ref": "#/components/schemas/enterprise"
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/app/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        target_id:
          description: The ID of the user or organization this token is being scoped
            to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          "$ref": "#/components/schemas/app-permissions"
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - ".github/issue_TEMPLATE.md"
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
      - id
      - app_id
      - app_slug
      - target_id
      - target_type
      - single_file_name
      - repository_selection
      - access_tokens_url
      - html_url
      - repositories_url
      - events
      - account
      - permissions
      - created_at
      - updated_at
      - suspended_by
      - suspended_at
    installation-response:
      title: Installation
      description: Installation
      type: object
      required:
      - total_count
      - installations
      properties:
        total_count:
          type: integer
        installations:
          type: array
          items:
            "$ref": "#/components/schemas/installation"
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      nullable: true
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            use_squash_pr_title_as_default:
              type: boolean
            squash_merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - COMMIT_OR_PR_TITLE
              description: |-
                The default value for a squash merge commit title:

                - `PR_TITLE` - default to the pull request's title.
                - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
            squash_merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - COMMIT_MESSAGES
              - BLANK
              description: |-
                The default value for a squash merge commit message:

                - `PR_BODY` - default to the pull request's body.
                - `COMMIT_MESSAGES` - default to the branch's commit messages.
                - `BLANK` - default to a blank commit message.
            merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - MERGE_MESSAGE
              description: |-
                The default value for a merge commit title.

                - `PR_TITLE` - default to the pull request's title.
                - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
            merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - PR_TITLE
              - BLANK
              description: |-
                The default value for a merge commit message.

                - `PR_TITLE` - default to the pull request's title.
                - `PR_BODY` - default to the pull request's body.
                - `BLANK` - default to a blank commit message.
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its
            base branch can always be updated even if it is not required to be up
            to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title
            as default. **This property has been deprecated. Please use `squash_merge_commit_title`
            instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

            - `PR_TITLE` - default to the pull request's title.
            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    repository-response:
      title: Repository
      description: A repository on GitHub.
      type: object
      required:
      - total_count
      - repositories
      properties:
        total_count:
          type: integer
        repository_selection:
          type: string
        repositories:
          type: array
          items:
            "$ref": "#/components/schemas/repository"
    installation-token:
      title: Installation Token
      description: Authentication token for a GitHub App installed on a user or org.
      type: object
      properties:
        token:
          type: string
        expires_at:
          type: string
        permissions:
          "$ref": "#/components/schemas/app-permissions"
        repository_selection:
          type: string
          enum:
          - all
          - selected
        repositories:
          type: array
          items:
            "$ref": "#/components/schemas/repository"
        single_file:
          type: string
          example: README.md
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - ".github/issue_TEMPLATE.md"
      required:
      - token
      - expires_at
    nullable-scoped-installation:
      title: Scoped Installation
      type: object
      properties:
        permissions:
          "$ref": "#/components/schemas/app-permissions"
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - ".github/issue_TEMPLATE.md"
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        account:
          "$ref": "#/components/schemas/simple-user"
      required:
      - permissions
      - repository_selection
      - single_file_name
      - repositories_url
      - account
      nullable: true
    authorization:
      title: Authorization
      description: The authorization for an OAuth app, GitHub App, or a Personal Access
        Token.
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          nullable: true
        token:
          type: string
        token_last_eight:
          type: string
          nullable: true
        hashed_token:
          type: string
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - client_id
          - name
          - url
        note:
          type: string
          nullable: true
        note_url:
          type: string
          format: uri
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        fingerprint:
          type: string
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        installation:
          "$ref": "#/components/schemas/nullable-scoped-installation"
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
      - app
      - id
      - note
      - note_url
      - scopes
      - token
      - hashed_token
      - token_last_eight
      - fingerprint
      - url
      - created_at
      - updated_at
      - expires_at
    simple-classroom-repository:
      title: Simple Classroom Repository
      description: A GitHub repository view for Classroom
      type: object
      properties:
        id:
          type: integer
          example: 1296269
          description: A unique identifier of the repository.
        full_name:
          type: string
          example: octocat/Hello-World
          description: The full, globally unique name of the repository.
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
          description: The URL to view the repository on GitHub.com.
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          description: The GraphQL identifier of the repository.
        private:
          type: boolean
          description: Whether the repository is private.
        default_branch:
          type: string
          example: main
          description: The default branch for the repository.
      required:
      - id
      - full_name
      - html_url
      - node_id
      - private
      - default_branch
    simple-classroom-organization:
      title: Organization Simple for Classroom
      description: A GitHub organization.
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: github
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        html_url:
          type: string
          format: uri
          example: https://github.com/github
        name:
          type: string
          example: Github - Code thigns happen here
          nullable: true
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
      required:
      - id
      - login
      - node_id
      - html_url
      - name
      - avatar_url
    classroom:
      title: Classroom
      description: A GitHub Classroom classroom
      type: object
      properties:
        id:
          description: Unique identifier of the classroom.
          example: 42
          type: integer
        name:
          description: The name of the classroom.
          type: string
          example: Programming Elixir
        archived:
          description: Whether classroom is archived.
          type: boolean
          example: false
        organization:
          "$ref": "#/components/schemas/simple-classroom-organization"
        url:
          description: The URL of the classroom on GitHub Classroom.
          type: string
          example: https://classroom.github.com/classrooms/1-programming-elixir
      required:
      - id
      - name
      - archived
      - organization
      - url
    classroom-assignment:
      title: Classroom Assignment
      description: A GitHub Classroom assignment
      type: object
      properties:
        id:
          description: Unique identifier of the repository.
          type: integer
          example: 42
        public_repo:
          description: Whether an accepted assignment creates a public repository.
          type: boolean
          example: true
        title:
          description: Assignment title.
          type: string
          example: Intro to Binaries
        type:
          description: Whether it's a group assignment or individual assignment.
          type: string
          example: individual
          enum:
          - individual
          - group
        invite_link:
          description: The link that a student can use to accept the assignment.
          type: string
          example: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled:
          description: Whether the invitation link is enabled. Visiting an enabled
            invitation link will accept the assignment.
          type: boolean
          example: true
        slug:
          description: Sluggified name of the assignment.
          type: string
          example: intro-to-binaries
        students_are_repo_admins:
          description: Whether students are admins on created repository when a student
            accepts the assignment.
          type: boolean
          example: true
        feedback_pull_requests_enabled:
          description: Whether feedback pull request will be created when a student
            accepts the assignment.
          type: boolean
          example: true
        max_teams:
          description: The maximum allowable teams for the assignment.
          nullable: true
          type: integer
          example: 0
        max_members:
          description: The maximum allowable members per team.
          nullable: true
          type: integer
          example: 0
        editor:
          description: The selected editor for the assignment.
          type: string
          example: codespaces
        accepted:
          description: The number of students that have accepted the assignment.
          type: integer
          example: 25
        submitted:
          description: The number of students that have submitted the assignment.
          type: integer
          example: 10
        passing:
          description: The number of students that have passed the assignment.
          type: integer
          example: 10
        language:
          description: The programming language used in the assignment.
          type: string
          example: elixir
        deadline:
          description: The time at which the assignment is due.
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        starter_code_repository:
          "$ref": "#/components/schemas/simple-classroom-repository"
        classroom:
          "$ref": "#/components/schemas/classroom"
      required:
      - id
      - public_repo
      - title
      - type
      - invite_link
      - invitations_enabled
      - slug
      - students_are_repo_admins
      - feedback_pull_requests_enabled
      - max_teams
      - max_members
      - editor
      - accepted
      - submitted
      - passing
      - language
      - deadline
      - starter_code_repository
      - classroom
    simple-classroom-user:
      title: Simple Classroom User
      description: A GitHub user simplified for Classroom.
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: octocat
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
      required:
      - id
      - login
      - avatar_url
      - html_url
    simple-classroom:
      title: Simple Classroom
      description: A GitHub Classroom classroom
      type: object
      properties:
        id:
          description: Unique identifier of the classroom.
          example: 42
          type: integer
        name:
          description: The name of the classroom.
          type: string
          example: Programming Elixir
        archived:
          description: Returns whether classroom is archived or not.
          type: boolean
          example: false
        url:
          description: The url of the classroom on GitHub Classroom.
          type: string
          example: https://classroom.github.com/classrooms/1-programming-elixir
      required:
      - id
      - name
      - archived
      - url
    simple-classroom-assignment:
      title: Simple Classroom Assignment
      description: A GitHub Classroom assignment
      type: object
      properties:
        id:
          description: Unique identifier of the repository.
          type: integer
          example: 42
        public_repo:
          description: Whether an accepted assignment creates a public repository.
          type: boolean
          example: true
        title:
          description: Assignment title.
          type: string
          example: Intro to Binaries
        type:
          description: Whether it's a Group Assignment or Individual Assignment.
          type: string
          example: individual
          enum:
          - individual
          - group
        invite_link:
          description: The link that a student can use to accept the assignment.
          type: string
          example: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled:
          description: Whether the invitation link is enabled. Visiting an enabled
            invitation link will accept the assignment.
          type: boolean
          example: true
        slug:
          description: Sluggified name of the assignment.
          type: string
          example: intro-to-binaries
        students_are_repo_admins:
          description: Whether students are admins on created repository on accepted
            assignment.
          type: boolean
          example: true
        feedback_pull_requests_enabled:
          description: Whether feedback pull request will be created on assignment
            acceptance.
          type: boolean
          example: true
        max_teams:
          description: The maximum allowable teams for the assignment.
          nullable: true
          type: integer
          example: 0
        max_members:
          description: The maximum allowable members per team.
          nullable: true
          type: integer
          example: 0
        editor:
          description: The selected editor for the assignment.
          type: string
          example: codespaces
        accepted:
          description: The number of students that have accepted the assignment.
          type: integer
          example: 25
        submitted:
          description: The number of students that have submitted the assignment.
          type: integer
          example: 10
        passing:
          description: The number of students that have passed the assignment.
          type: integer
          example: 10
        language:
          description: The programming language used in the assignment.
          type: string
          example: elixir
        deadline:
          description: The time at which the assignment is due.
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        classroom:
          "$ref": "#/components/schemas/simple-classroom"
      required:
      - id
      - public_repo
      - title
      - type
      - invite_link
      - invitations_enabled
      - slug
      - students_are_repo_admins
      - feedback_pull_requests_enabled
      - editor
      - accepted
      - submitted
      - passing
      - language
      - deadline
      - classroom
    classroom-accepted-assignment:
      title: Classroom Accepted Assignment
      description: A GitHub Classroom accepted assignment
      type: object
      properties:
        id:
          description: Unique identifier of the repository.
          type: integer
          example: 42
        submitted:
          description: Whether an accepted assignment has been submitted.
          type: boolean
          example: true
        passing:
          description: Whether a submission passed.
          type: boolean
          example: true
        commit_count:
          description: Count of student commits.
          type: integer
          example: 5
        grade:
          description: Most recent grade.
          type: string
          example: 10/10
        students:
          type: array
          items:
            "$ref": "#/components/schemas/simple-classroom-user"
        repository:
          "$ref": "#/components/schemas/simple-classroom-repository"
        assignment:
          "$ref": "#/components/schemas/simple-classroom-assignment"
      required:
      - id
      - submitted
      - passing
      - commit_count
      - grade
      - students
      - repository
      - assignment
    classroom-assignment-grade:
      title: Classroom Assignment Grade
      description: Grade for a student or groups GitHub Classroom assignment
      type: object
      properties:
        assignment_name:
          description: Name of the assignment
          type: string
        assignment_url:
          description: URL of the assignment
          type: string
        starter_code_url:
          description: URL of the starter code for the assignment
          type: string
        github_username:
          description: GitHub username of the student
          type: string
        roster_identifier:
          description: Roster identifier of the student
          type: string
        student_repository_name:
          description: Name of the student's assignment repository
          type: string
        student_repository_url:
          description: URL of the student's assignment repository
          type: string
        submission_timestamp:
          description: Timestamp of the student's assignment submission
          type: string
        points_awarded:
          description: Number of points awarded to the student
          type: integer
        points_available:
          description: Number of points available for the assignment
          type: integer
        group_name:
          description: If a group assignment, name of the group the student is in
          type: string
      required:
      - assignment_name
      - assignment_url
      - starter_code_url
      - github_username
      - roster_identifier
      - student_repository_name
      - student_repository_url
      - submission_timestamp
      - points_awarded
      - points_available
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    alert-number:
      type: integer
      description: The security alert number.
      readOnly: true
    dependabot-alert-package:
      type: object
      description: Details for the vulnerable package.
      readOnly: true
      properties:
        ecosystem:
          type: string
          description: The package's language or package management ecosystem.
          readOnly: true
        name:
          type: string
          description: The unique package name within its ecosystem.
          readOnly: true
      required:
      - ecosystem
      - name
      additionalProperties: false
    dependabot-alert-security-vulnerability:
      type: object
      description: Details pertaining to one vulnerable version range for the advisory.
      readOnly: true
      properties:
        package:
          "$ref": "#/components/schemas/dependabot-alert-package"
        severity:
          type: string
          description: The severity of the vulnerability.
          readOnly: true
          enum:
          - low
          - medium
          - high
          - critical
        vulnerable_version_range:
          type: string
          description: Conditions that identify vulnerable versions of this vulnerability's
            package.
          readOnly: true
        first_patched_version:
          type: object
          description: Details pertaining to the package version that patches this
            vulnerability.
          readOnly: true
          nullable: true
          properties:
            identifier:
              type: string
              description: The package version that patches this vulnerability.
              readOnly: true
          required:
          - identifier
          additionalProperties: false
      required:
      - package
      - severity
      - vulnerable_version_range
      - first_patched_version
      additionalProperties: false
    dependabot-alert-security-advisory:
      type: object
      description: Details for the GitHub Security Advisory.
      readOnly: true
      properties:
        ghsa_id:
          type: string
          description: The unique GitHub Security Advisory ID assigned to the advisory.
          readOnly: true
        cve_id:
          type: string
          description: The unique CVE ID assigned to the advisory.
          readOnly: true
          nullable: true
        summary:
          type: string
          description: A short, plain text summary of the advisory.
          readOnly: true
          maxLength: 1024
        description:
          type: string
          description: A long-form Markdown-supported description of the advisory.
          readOnly: true
        vulnerabilities:
          type: array
          description: Vulnerable version range information for the advisory.
          readOnly: true
          items:
            "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
        severity:
          type: string
          description: The severity of the advisory.
          readOnly: true
          enum:
          - low
          - medium
          - high
          - critical
        cvss:
          type: object
          description: Details for the advisory pertaining to the Common Vulnerability
            Scoring System.
          readOnly: true
          properties:
            score:
              type: number
              description: The overall CVSS score of the advisory.
              minimum: 0
              maximum: 10
              readOnly: true
            vector_string:
              type: string
              description: The full CVSS vector string for the advisory.
              readOnly: true
              nullable: true
          required:
          - score
          - vector_string
          additionalProperties: false
        cwes:
          type: array
          description: Details for the advisory pertaining to Common Weakness Enumeration.
          readOnly: true
          items:
            type: object
            description: A CWE weakness assigned to the advisory.
            readOnly: true
            properties:
              cwe_id:
                type: string
                description: The unique CWE ID.
                readOnly: true
              name:
                type: string
                description: The short, plain text name of the CWE.
                readOnly: true
            required:
            - cwe_id
            - name
            additionalProperties: false
        identifiers:
          type: array
          description: Values that identify this advisory among security information
            sources.
          readOnly: true
          items:
            type: object
            description: An advisory identifier.
            readOnly: true
            properties:
              type:
                type: string
                description: The type of advisory identifier.
                readOnly: true
                enum:
                - CVE
                - GHSA
              value:
                type: string
                description: The value of the advisory identifer.
                readOnly: true
            required:
            - value
            - type
            additionalProperties: false
        references:
          type: array
          description: Links to additional advisory information.
          readOnly: true
          items:
            type: object
            description: A link to additional advisory information.
            readOnly: true
            properties:
              url:
                type: string
                description: The URL of the reference.
                format: uri
                readOnly: true
            required:
            - url
            additionalProperties: false
        published_at:
          type: string
          description: 'The time that the advisory was published in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          format: date-time
          readOnly: true
        updated_at:
          type: string
          description: 'The time that the advisory was last modified in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          format: date-time
          readOnly: true
        withdrawn_at:
          type: string
          description: 'The time that the advisory was withdrawn in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          format: date-time
          readOnly: true
          nullable: true
      required:
      - ghsa_id
      - cve_id
      - summary
      - description
      - vulnerabilities
      - severity
      - cvss
      - cwes
      - identifiers
      - references
      - published_at
      - updated_at
      - withdrawn_at
      additionalProperties: false
    alert-url:
      type: string
      description: The REST API URL of the alert resource.
      format: uri
      readOnly: true
    alert-html-url:
      type: string
      description: The GitHub URL of the alert resource.
      format: uri
      readOnly: true
    alert-created-at:
      type: string
      description: 'The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    alert-updated-at:
      type: string
      description: 'The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    alert-dismissed-at:
      type: string
      description: 'The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    alert-fixed-at:
      type: string
      description: 'The time that the alert was no longer detected and was considered
        fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    alert-auto-dismissed-at:
      type: string
      description: 'The time that the alert was auto-dismissed in ISO 8601 format:
        `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    simple-repository:
      title: Simple Repository
      description: A GitHub repository.
      type: object
      properties:
        id:
          type: integer
          example: 1296269
          description: A unique identifier of the repository.
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          description: The GraphQL identifier of the repository.
        name:
          type: string
          example: Hello-World
          description: The name of the repository.
        full_name:
          type: string
          example: octocat/Hello-World
          description: The full, globally unique, name of the repository.
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
          description: Whether the repository is private.
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
          description: The URL to view the repository on GitHub.com.
        description:
          type: string
          example: This your first repo!
          nullable: true
          description: The repository description.
        fork:
          type: boolean
          description: Whether the repository is a fork.
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
          description: The URL to get more information about the repository from the
            GitHub API.
        archive_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          description: A template for the API URL to download the repository as an
            archive.
        assignees_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          description: A template for the API URL to list the available assignees
            for issues in the repository.
        blobs_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          description: A template for the API URL to create or retrieve a raw Git
            blob in the repository.
        branches_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          description: A template for the API URL to get information about branches
            in the repository.
        collaborators_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          description: A template for the API URL to get information about collaborators
            of the repository.
        comments_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          description: A template for the API URL to get information about comments
            on the repository.
        commits_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          description: A template for the API URL to get information about commits
            on the repository.
        compare_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          description: A template for the API URL to compare two commits or refs.
        contents_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          description: A template for the API URL to get the contents of the repository.
        contributors_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contributors
          description: A template for the API URL to list the contributors to the
            repository.
        deployments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/deployments
          description: The API URL to list the deployments of the repository.
        downloads_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/downloads
          description: The API URL to list the downloads on the repository.
        events_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/events
          description: The API URL to list the events of the repository.
        forks_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/forks
          description: The API URL to list the forks of the repository.
        git_commits_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          description: A template for the API URL to get information about Git commits
            of the repository.
        git_refs_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          description: A template for the API URL to get information about Git refs
            of the repository.
        git_tags_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          description: A template for the API URL to get information about Git tags
            of the repository.
        issue_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          description: A template for the API URL to get information about issue comments
            on the repository.
        issue_events_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          description: A template for the API URL to get information about issue events
            on the repository.
        issues_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          description: A template for the API URL to get information about issues
            on the repository.
        keys_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          description: A template for the API URL to get information about deploy
            keys on the repository.
        labels_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          description: A template for the API URL to get information about labels
            of the repository.
        languages_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/languages
          description: The API URL to get information about the languages of the repository.
        merges_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/merges
          description: The API URL to merge branches in the repository.
        milestones_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          description: A template for the API URL to get information about milestones
            of the repository.
        notifications_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          description: A template for the API URL to get information about notifications
            on the repository.
        pulls_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          description: A template for the API URL to get information about pull requests
            on the repository.
        releases_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          description: A template for the API URL to get information about releases
            on the repository.
        stargazers_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/stargazers
          description: The API URL to list the stargazers on the repository.
        statuses_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          description: A template for the API URL to get information about statuses
            of a commit.
        subscribers_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/subscribers
          description: The API URL to list the subscribers on the repository.
        subscription_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/subscription
          description: The API URL to subscribe to notifications for this repository.
        tags_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/tags
          description: The API URL to get information about tags on the repository.
        teams_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/teams
          description: The API URL to list the teams on the repository.
        trees_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          description: A template for the API URL to create or retrieve a raw Git
            tree of the repository.
        hooks_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks
          description: The API URL to list the hooks on the repository.
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    dependabot-alert-with-repository:
      type: object
      description: A Dependabot alert.
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        state:
          type: string
          description: The state of the Dependabot alert.
          readOnly: true
          enum:
          - auto_dismissed
          - dismissed
          - fixed
          - open
        dependency:
          type: object
          description: Details for the vulnerable dependency.
          readOnly: true
          properties:
            package:
              "$ref": "#/components/schemas/dependabot-alert-package"
            manifest_path:
              type: string
              description: The full path to the dependency manifest file, relative
                to the root of the repository.
              readOnly: true
            scope:
              type: string
              description: The execution scope of the vulnerable dependency.
              readOnly: true
              nullable: true
              enum:
              - development
              - runtime
        security_advisory:
          "$ref": "#/components/schemas/dependabot-alert-security-advisory"
        security_vulnerability:
          "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_reason:
          type: string
          description: The reason that the alert was dismissed.
          nullable: true
          enum:
          - fix_started
          - inaccurate
          - no_bandwidth
          - not_used
          - tolerable_risk
        dismissed_comment:
          type: string
          description: An optional comment associated with the alert's dismissal.
          nullable: true
          maxLength: 280
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        auto_dismissed_at:
          "$ref": "#/components/schemas/alert-auto-dismissed-at"
        repository:
          "$ref": "#/components/schemas/simple-repository"
      required:
      - number
      - state
      - dependency
      - security_advisory
      - security_vulnerability
      - url
      - html_url
      - created_at
      - updated_at
      - dismissed_at
      - dismissed_by
      - dismissed_reason
      - dismissed_comment
      - fixed_at
      - repository
      additionalProperties: false
    nullable-alert-updated-at:
      type: string
      description: 'The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    secret-scanning-alert-state:
      description: Sets the state of the secret scanning alert. You must provide `resolution`
        when you set the state to `resolved`.
      type: string
      enum:
      - open
      - resolved
    secret-scanning-alert-resolution:
      type: string
      description: "**Required when the `state` is `resolved`.** The reason for resolving
        the alert."
      nullable: true
      enum:
      - false_positive
      - wont_fix
      - revoked
      - used_in_tests
    organization-secret-scanning-alert:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/nullable-alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        locations_url:
          type: string
          format: uri
          description: The REST API URL of the code locations for this alert.
        state:
          "$ref": "#/components/schemas/secret-scanning-alert-state"
        resolution:
          "$ref": "#/components/schemas/secret-scanning-alert-resolution"
        resolved_at:
          type: string
          format: date-time
          description: 'The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolved_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        secret_type:
          type: string
          description: The type of secret that secret scanning detected.
        secret_type_display_name:
          type: string
          description: |-
            User-friendly name for the detected secret, matching the `secret_type`.
            For a list of built-in patterns, see "[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)."
        secret:
          type: string
          description: The secret that was detected.
        repository:
          "$ref": "#/components/schemas/simple-repository"
        push_protection_bypassed:
          type: boolean
          description: Whether push protection was bypassed for the detected secret.
          nullable: true
        push_protection_bypassed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        push_protection_bypassed_at:
          type: string
          format: date-time
          description: 'The time that push protection was bypassed in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolution_comment:
          type: string
          description: The comment that was optionally added when this alert was closed
          nullable: true
    actor:
      title: Actor
      description: Actor
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        display_login:
          type: string
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - login
      - gravatar_id
      - url
      - avatar_url
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
      nullable: true
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to specific
        repositories. They come with granular permissions and built-in webhooks. GitHub
        apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: PEM ENCODED RSA PRIVATE KEY
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
      nullable: true
    author-association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
      - COLLABORATOR
      - CONTRIBUTOR
      - FIRST_TIMER
      - FIRST_TIME_CONTRIBUTOR
      - MANNEQUIN
      - MEMBER
      - NONE
      - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        "+1":
          type: integer
        "-1":
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - "+1"
      - "-1"
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      type: object
      properties:
        id:
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        state_reason:
          description: The reason for the current state
          example: not_planned
          type: string
          nullable: true
          enum:
          - completed
          - reopened
          - not_planned
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try
            and create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        labels:
          description: Labels to associate with this issue; pass one or more label
            names to replace the set of labels on this issue; send an empty array
            to clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
          - bug
          - registration
          type: array
          items:
            oneOf:
            - type: string
            - type: object
              properties:
                id:
                  type: integer
                  format: int64
                node_id:
                  type: string
                url:
                  type: string
                  format: uri
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                color:
                  type: string
                  nullable: true
                default:
                  type: boolean
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/repository"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        author_association:
          "$ref": "#/components/schemas/author-association"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
    issue-comment:
      title: Issue Comment
      description: Comments provide a way for people to collaborate on an issue.
      type: object
      properties:
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          "$ref": "#/components/schemas/author-association"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - id
      - node_id
      - html_url
      - issue_url
      - author_association
      - user
      - url
      - created_at
      - updated_at
    event:
      title: Event
      description: Event
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          nullable: true
        actor:
          "$ref": "#/components/schemas/actor"
        repo:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            url:
              type: string
              format: uri
          required:
          - id
          - name
          - url
        org:
          "$ref": "#/components/schemas/actor"
        payload:
          type: object
          properties:
            action:
              type: string
            issue:
              "$ref": "#/components/schemas/issue"
            comment:
              "$ref": "#/components/schemas/issue-comment"
            pages:
              type: array
              items:
                type: object
                properties:
                  page_name:
                    type: string
                  title:
                    type: string
                  summary:
                    type: string
                    nullable: true
                  action:
                    type: string
                  sha:
                    type: string
                  html_url:
                    type: string
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
      required:
      - id
      - type
      - actor
      - repo
      - payload
      - public
      - created_at
    link-with-type:
      title: Link With Type
      description: Hypermedia Link with Type
      type: object
      properties:
        href:
          type: string
        type:
          type: string
      required:
      - href
      - type
    feed:
      title: Feed
      description: Feed
      type: object
      properties:
        timeline_url:
          type: string
          example: https://github.com/timeline
        user_url:
          type: string
          example: https://github.com/{user}
        current_user_public_url:
          type: string
          example: https://github.com/octocat
        current_user_url:
          type: string
          example: https://github.com/octocat.private?token=abc123
        current_user_actor_url:
          type: string
          example: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url:
          type: string
          example: https://github.com/octocat-org
        current_user_organization_urls:
          type: array
          example:
          - https://github.com/organizations/github/octocat.private.atom?token=abc123
          items:
            type: string
            format: uri
        security_advisories_url:
          type: string
          example: https://github.com/security-advisories
        repository_discussions_url:
          type: string
          example: https://github.com/{user}/{repo}/discussions
          description: A feed of discussions for a given repository.
        repository_discussions_category_url:
          type: string
          example: https://github.com/{user}/{repo}/discussions/categories/{category}
          description: A feed of discussions for a given repository and category.
        _links:
          type: object
          properties:
            timeline:
              "$ref": "#/components/schemas/link-with-type"
            user:
              "$ref": "#/components/schemas/link-with-type"
            security_advisories:
              "$ref": "#/components/schemas/link-with-type"
            current_user:
              "$ref": "#/components/schemas/link-with-type"
            current_user_public:
              "$ref": "#/components/schemas/link-with-type"
            current_user_actor:
              "$ref": "#/components/schemas/link-with-type"
            current_user_organization:
              "$ref": "#/components/schemas/link-with-type"
            current_user_organizations:
              type: array
              items:
                "$ref": "#/components/schemas/link-with-type"
            repository_discussions:
              "$ref": "#/components/schemas/link-with-type"
            repository_discussions_category:
              "$ref": "#/components/schemas/link-with-type"
          required:
          - timeline
          - user
      required:
      - _links
      - timeline_url
      - user_url
    base-gist:
      title: Base Gist
      description: Base Gist
      type: object
      properties:
        url:
          type: string
          format: uri
        forks_url:
          type: string
          format: uri
        commits_url:
          type: string
          format: uri
        id:
          type: string
        node_id:
          type: string
        git_pull_url:
          type: string
          format: uri
        git_push_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        files:
          type: object
          additionalProperties:
            type: object
            properties:
              filename:
                type: string
              type:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        comments:
          type: integer
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        comments_url:
          type: string
          format: uri
        owner:
          "$ref": "#/components/schemas/simple-user"
        truncated:
          type: boolean
        forks:
          type: array
          items: {}
        history:
          type: array
          items: {}
      required:
      - id
      - node_id
      - url
      - forks_url
      - commits_url
      - git_pull_url
      - git_push_url
      - html_url
      - comments_url
      - public
      - description
      - comments
      - user
      - files
      - created_at
      - updated_at
    public-user:
      title: Public User
      description: Public User
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        name:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          nullable: true
        twitter_username:
          type: string
          nullable: true
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        private_gists:
          type: integer
          example: 1
        total_private_repos:
          type: integer
          example: 2
        owned_private_repos:
          type: integer
          example: 2
        disk_usage:
          type: integer
          example: 1
        collaborators:
          type: integer
          example: 3
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - bio
      - blog
      - company
      - email
      - followers
      - following
      - hireable
      - location
      - name
      - public_gists
      - public_repos
      - created_at
      - updated_at
      additionalProperties: false
    gist-history:
      title: Gist History
      description: Gist History
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        version:
          type: string
        committed_at:
          type: string
          format: date-time
        change_status:
          type: object
          properties:
            total:
              type: integer
            additions:
              type: integer
            deletions:
              type: integer
        url:
          type: string
          format: uri
    gist-simple:
      title: Gist Simple
      description: Gist Simple
      type: object
      properties:
        forks:
          deprecated: true
          nullable: true
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              url:
                type: string
                format: uri
              user:
                "$ref": "#/components/schemas/public-user"
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
        history:
          deprecated: true
          nullable: true
          type: array
          items:
            "$ref": "#/components/schemas/gist-history"
        fork_of:
          nullable: true
          title: Gist
          description: Gist
          type: object
          properties:
            url:
              type: string
              format: uri
            forks_url:
              type: string
              format: uri
            commits_url:
              type: string
              format: uri
            id:
              type: string
            node_id:
              type: string
            git_pull_url:
              type: string
              format: uri
            git_push_url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            files:
              type: object
              additionalProperties:
                type: object
                properties:
                  filename:
                    type: string
                  type:
                    type: string
                  language:
                    type: string
                  raw_url:
                    type: string
                  size:
                    type: integer
            public:
              type: boolean
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            description:
              type: string
              nullable: true
            comments:
              type: integer
            user:
              "$ref": "#/components/schemas/nullable-simple-user"
            comments_url:
              type: string
              format: uri
            owner:
              "$ref": "#/components/schemas/nullable-simple-user"
            truncated:
              type: boolean
            forks:
              type: array
              items: {}
            history:
              type: array
              items: {}
          required:
          - id
          - node_id
          - url
          - forks_url
          - commits_url
          - git_pull_url
          - git_push_url
          - html_url
          - comments_url
          - public
          - description
          - comments
          - user
          - files
          - created_at
          - updated_at
        url:
          type: string
        forks_url:
          type: string
        commits_url:
          type: string
        id:
          type: string
        node_id:
          type: string
        git_pull_url:
          type: string
        git_push_url:
          type: string
        html_url:
          type: string
        files:
          type: object
          additionalProperties:
            nullable: true
            type: object
            properties:
              filename:
                type: string
              type:
                type: string
              language:
                type: string
              raw_url:
                type: string
              size:
                type: integer
              truncated:
                type: boolean
              content:
                type: string
        public:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
        description:
          type: string
          nullable: true
        comments:
          type: integer
        user:
          type: string
          nullable: true
        comments_url:
          type: string
        owner:
          "$ref": "#/components/schemas/simple-user"
        truncated:
          type: boolean
    gist-comment:
      title: Gist Comment
      description: A comment made to a gist.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOkdpc3RDb21tZW50MQ==
        url:
          type: string
          format: uri
          example: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body:
          description: The comment text.
          type: string
          maxLength: 65535
          example: Body of the attachment
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-18T23:23:56Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-18T23:23:56Z'
        author_association:
          "$ref": "#/components/schemas/author-association"
      required:
      - url
      - id
      - node_id
      - user
      - body
      - author_association
      - created_at
      - updated_at
    gist-commit:
      title: Gist Commit
      description: Gist Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
        version:
          type: string
          example: 57a7f021a713b1c5a6a199b54cc514735d2d462f
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        change_status:
          type: object
          properties:
            total:
              type: integer
            additions:
              type: integer
            deletions:
              type: integer
        committed_at:
          type: string
          format: date-time
          example: '2010-04-14T02:15:15Z'
      required:
      - url
      - user
      - version
      - committed_at
      - change_status
    gitignore-template:
      title: Gitignore Template
      description: Gitignore Template
      type: object
      properties:
        name:
          type: string
          example: C
        source:
          type: string
          example: |
            # Object files
            *.o

            # Libraries
            *.lib
            *.a

            # Shared objects (inc. Windows DLLs)
            *.dll
            *.so
            *.so.*
            *.dylib

            # Executables
            *.exe
            *.out
            *.app
      required:
      - name
      - source
    license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
    license:
      title: License
      description: License
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        spdx_id:
          type: string
          example: MIT
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/licenses/mit
          nullable: true
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
          example: http://choosealicense.com/licenses/mit/
        description:
          type: string
          example: A permissive license that is short and to the point. It lets people
            do anything with your code with proper attribution and without warranty.
        implementation:
          type: string
          example: Create a text file (typically named LICENSE or LICENSE.txt) in
            the root of your source code and copy the text of the license into the
            file. Replace [year] with the current year and [fullname] with the name
            (or names) of the copyright holders.
        permissions:
          type: array
          example:
          - commercial-use
          - modifications
          - distribution
          - sublicense
          - private-use
          items:
            type: string
        conditions:
          type: array
          example:
          - include-copyright
          items:
            type: string
        limitations:
          type: array
          example:
          - no-liability
          items:
            type: string
        body:
          type: string
          example: |2


            The MIT License (MIT)

            Copyright (c) [year] [fullname]

            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the "Software"), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the following conditions:

            The above copyright notice and this permission notice shall be included in all
            copies or substantial portions of the Software.

            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
            IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
            FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
            AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
            LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
            OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
            SOFTWARE.
        featured:
          type: boolean
          example: true
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      - html_url
      - description
      - implementation
      - permissions
      - conditions
      - limitations
      - body
      - featured
    marketplace-listing-plan:
      title: Marketplace Listing Plan
      description: Marketplace Listing Plan
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/marketplace_listing/plans/1313
        accounts_url:
          type: string
          format: uri
          example: https://api.github.com/marketplace_listing/plans/1313/accounts
        id:
          type: integer
          example: 1313
        number:
          type: integer
          example: 3
        name:
          type: string
          example: Pro
        description:
          type: string
          example: A professional-grade CI solution
        monthly_price_in_cents:
          type: integer
          example: 1099
        yearly_price_in_cents:
          type: integer
          example: 11870
        price_model:
          type: string
          enum:
          - FREE
          - FLAT_RATE
          - PER_UNIT
          example: FLAT_RATE
        has_free_trial:
          type: boolean
          example: true
        unit_name:
          type: string
          nullable: true
        state:
          type: string
          example: published
        bullets:
          type: array
          items:
            type: string
          example:
          - Up to 25 private repositories
          - 11 concurrent builds
      required:
      - url
      - accounts_url
      - id
      - number
      - name
      - description
      - has_free_trial
      - price_model
      - unit_name
      - monthly_price_in_cents
      - state
      - yearly_price_in_cents
      - bullets
    marketplace-purchase:
      title: Marketplace Purchase
      description: Marketplace Purchase
      type: object
      properties:
        url:
          type: string
        type:
          type: string
        id:
          type: integer
        login:
          type: string
        organization_billing_email:
          type: string
        email:
          type: string
          nullable: true
        marketplace_pending_change:
          type: object
          properties:
            is_installed:
              type: boolean
            effective_date:
              type: string
            unit_count:
              type: integer
              nullable: true
            id:
              type: integer
            plan:
              "$ref": "#/components/schemas/marketplace-listing-plan"
          nullable: true
        marketplace_purchase:
          type: object
          properties:
            billing_cycle:
              type: string
            next_billing_date:
              type: string
              nullable: true
            is_installed:
              type: boolean
            unit_count:
              type: integer
              nullable: true
            on_free_trial:
              type: boolean
            free_trial_ends_on:
              type: string
              nullable: true
            updated_at:
              type: string
            plan:
              "$ref": "#/components/schemas/marketplace-listing-plan"
      required:
      - url
      - id
      - type
      - login
      - marketplace_purchase
    api-overview:
      title: Api Overview
      description: Api Overview
      type: object
      properties:
        verifiable_password_authentication:
          type: boolean
          example: true
        ssh_key_fingerprints:
          type: object
          properties:
            SHA256_RSA:
              type: string
            SHA256_DSA:
              type: string
            SHA256_ECDSA:
              type: string
            SHA256_ED25519:
              type: string
        ssh_keys:
          type: array
          items:
            type: string
          example:
          - ssh-ed25519 ABCDEFGHIJKLMNOPQRSTUVWXYZ
        hooks:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        github_enterprise_importer:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        web:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        api:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        git:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        packages:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        pages:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        importer:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        actions:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        dependabot:
          type: array
          items:
            type: string
          example:
          - 192.0.2.1
        domains:
          type: object
          properties:
            website:
              type: array
              items:
                type: string
                example:
                - example.com
            codespaces:
              type: array
              items:
                type: string
                example:
                - example.com
            copilot:
              type: array
              items:
                type: string
                example:
                - example.com
            packages:
              type: array
              items:
                type: string
                example:
                - example.com
      required:
      - verifiable_password_authentication
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for
                the repository.
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
              nullable: true
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    minimal-repository-response:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      required:
      - total_count
      - repositories
      properties:
        total_count:
          type: integer
        repositories:
          type: array
          items:
            "$ref": "#/components/schemas/minimal-repository"
    notification-thread:
      title: Thread
      description: Thread
      type: object
      properties:
        id:
          type: string
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        subject:
          type: object
          properties:
            title:
              type: string
            url:
              type: string
            latest_comment_url:
              type: string
            type:
              type: string
          required:
          - title
          - url
          - latest_comment_url
          - type
        reason:
          type: string
        unread:
          type: boolean
        updated_at:
          type: string
        last_read_at:
          type: string
          nullable: true
        url:
          type: string
        subscription_url:
          type: string
          example: https://api.github.com/notifications/threads/2/subscription
      required:
      - id
      - unread
      - reason
      - updated_at
      - last_read_at
      - subject
      - repository
      - url
      - subscription_url
    notification-read:
      type: object
      properties:
        message:
          type: string
        url:
          type: string
    thread-subscription:
      title: Thread Subscription
      description: Thread Subscription
      type: object
      properties:
        subscribed:
          type: boolean
          example: true
        ignored:
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-10-06T21:34:12Z'
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1/subscription
        thread_url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/1
      required:
      - created_at
      - ignored
      - reason
      - url
      - subscribed
    organization-simple:
      title: Organization Simple
      description: A GitHub organization.
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
    organization-full:
      title: Organization Full
      description: Organization Full
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        advanced_security_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        dependabot_alerts_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether GitHub Advanced Security is automatically enabled for new repositories and repositories transferred to
            this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        dependabot_security_updates_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether dependabot security updates are automatically enabled for new repositories and repositories transferred
            to this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        dependency_graph_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether dependency graph is automatically enabled for new repositories and repositories transferred to this
            organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        secret_scanning_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether secret scanning is automatically enabled for new repositories and repositories transferred to this
            organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        secret_scanning_push_protection_enabled_for_new_repositories:
          type: boolean
          example: false
          description: |-
            Whether secret scanning push protection is automatically enabled for new repositories and repositories
            transferred to this organization.

            This field is only visible to organization owners or members of a team with the security manager role.
        secret_scanning_push_protection_custom_link_enabled:
          type: boolean
          example: false
          description: Whether a custom link is shown to contributors who are blocked
            from pushing a secret by push protection.
        secret_scanning_push_protection_custom_link:
          type: string
          example: https://github.com/test-org/test-repo/blob/main/README.md
          nullable: true
          description: An optional URL string to display to contributors who are blocked
            from pushing a secret.
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
        archived_at:
          type: string
          format: date-time
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
      - archived_at
    actions-cache-usage-org-enterprise:
      type: object
      properties:
        total_active_caches_count:
          type: integer
          description: The count of active caches across all repositories of an enterprise
            or an organization.
        total_active_caches_size_in_bytes:
          type: integer
          description: The total size in bytes of all active cache items across all
            repositories of an enterprise or an organization.
      required:
      - total_active_caches_count
      - total_active_caches_size_in_bytes
    actions-cache-usage-by-repository:
      title: Actions Cache Usage by repository
      description: GitHub Actions Cache Usage by repository.
      type: object
      properties:
        full_name:
          description: The repository owner and name for the cache usage being shown.
          type: string
          example: octo-org/Hello-World
        active_caches_size_in_bytes:
          description: The sum of the size in bytes of all the active cache items
            in the repository.
          type: integer
          example: 2322142
        active_caches_count:
          description: The number of active caches in the repository.
          type: integer
          example: 3
      required:
      - full_name
      - active_caches_size_in_bytes
      - active_caches_count
    actions-cache-usage-by-repository-response:
      title: Actions Cache Usage by repository
      description: GitHub Actions Cache Usage by repository.
      type: object
      required:
      - total_count
      - repository_cache_usages
      properties:
        total_count:
          type: integer
        repository_cache_usages:
          type: array
          items:
            "$ref": "#/components/schemas/actions-cache-usage-by-repository"
    oidc-custom-sub:
      title: Actions OIDC Subject customization
      description: Actions OIDC Subject customization
      type: object
      properties:
        include_claim_keys:
          description: Array of unique strings. Each claim key can only contain alphanumeric
            characters and underscores.
          type: array
          items:
            type: string
      required:
      - include_claim_keys
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    enabled-repositories:
      type: string
      description: The policy that controls the repositories in the organization that
        are allowed to run GitHub Actions.
      enum:
      - all
      - none
      - selected
    allowed-actions:
      type: string
      description: The permissions policy that controls the actions and reusable workflows
        that are allowed to run.
      enum:
      - all
      - local_only
      - selected
    selected-actions-url:
      type: string
      description: The API URL to use to get or set the actions and reusable workflows
        that are allowed to run, when `allowed_actions` is set to `selected`.
    actions-organization-permissions:
      type: object
      properties:
        enabled_repositories:
          "$ref": "#/components/schemas/enabled-repositories"
        selected_repositories_url:
          type: string
          description: The API URL to use to get or set the selected repositories
            that are allowed to run GitHub Actions, when `enabled_repositories` is
            set to `selected`.
        allowed_actions:
          "$ref": "#/components/schemas/allowed-actions"
        selected_actions_url:
          "$ref": "#/components/schemas/selected-actions-url"
      required:
      - enabled_repositories
    selected-actions:
      type: object
      properties:
        github_owned_allowed:
          type: boolean
          description: Whether GitHub-owned actions are allowed. For example, this
            includes the actions in the `actions` organization.
        verified_allowed:
          type: boolean
          description: Whether actions from GitHub Marketplace verified creators are
            allowed. Set to `true` to allow all actions by GitHub Marketplace verified
            creators.
        patterns_allowed:
          type: array
          description: |-
            Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.

            **Note**: The `patterns_allowed` setting only applies to public repositories.
          items:
            type: string
    actions-default-workflow-permissions:
      type: string
      description: The default workflow permissions granted to the GITHUB_TOKEN when
        running workflows.
      enum:
      - read
      - write
    actions-can-approve-pull-request-reviews:
      type: boolean
      description: Whether GitHub Actions can approve pull requests. Enabling this
        can be a security risk.
    actions-get-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          "$ref": "#/components/schemas/actions-default-workflow-permissions"
        can_approve_pull_request_reviews:
          "$ref": "#/components/schemas/actions-can-approve-pull-request-reviews"
      required:
      - default_workflow_permissions
      - can_approve_pull_request_reviews
    actions-set-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          "$ref": "#/components/schemas/actions-default-workflow-permissions"
        can_approve_pull_request_reviews:
          "$ref": "#/components/schemas/actions-can-approve-pull-request-reviews"
    runner-label:
      title: Self hosted runner label
      description: A label for a self hosted runner
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the label.
        name:
          type: string
          description: Name of the label.
        type:
          type: string
          description: The type of label. Read-only labels are applied automatically
            when the runner is configured.
          enum:
          - read-only
          - custom
      required:
      - name
    runner-label-response:
      title: Self hosted runner label
      description: A label for a self hosted runner
      type: object
      required:
      - total_count
      - labels
      properties:
        total_count:
          type: integer
        labels:
          type: array
          items:
            "$ref": "#/components/schemas/runner-label"
    runner:
      title: Self hosted runners
      description: A self hosted runner
      type: object
      properties:
        id:
          description: The id of the runner.
          type: integer
          example: 5
        runner_group_id:
          description: The id of the runner group.
          type: integer
          example: 1
        name:
          description: The name of the runner.
          type: string
          example: iMac
        os:
          description: The Operating System of the runner.
          type: string
          example: macos
        status:
          description: The status of the runner.
          type: string
          example: online
        busy:
          type: boolean
        labels:
          type: array
          items:
            "$ref": "#/components/schemas/runner-label"
      required:
      - id
      - name
      - os
      - status
      - busy
      - labels
    jit-config:
      type: object
      required:
      - runner
      - encoded_jit_config
      properties:
        runner:
          "$ref": "#/components/schemas/runner"
        encoded_jit_config:
          type: string
          description: The base64 encoded runner configuration.
    runner-response:
      title: Self hosted runners
      description: A self hosted runner
      type: object
      required:
      - total_count
      - runners
      properties:
        total_count:
          type: integer
        runners:
          type: array
          items:
            "$ref": "#/components/schemas/runner"
    runner-application:
      title: Runner Application
      description: Runner Application
      type: object
      properties:
        os:
          type: string
        architecture:
          type: string
        download_url:
          type: string
        filename:
          type: string
        temp_download_token:
          description: A short lived bearer token used to download the runner, if
            needed.
          type: string
        sha256_checksum:
          type: string
      required:
      - os
      - architecture
      - download_url
      - filename
    authentication-token:
      title: Authentication Token
      description: Authentication Token
      type: object
      properties:
        token:
          description: The token used for authentication
          type: string
          example: v1.1f699f1069f60xxx
        expires_at:
          description: The time this token expires
          type: string
          format: date-time
          example: '2016-07-11T22:14:10Z'
        permissions:
          type: object
          example:
            issues: read
            deployments: write
        repositories:
          description: The repositories this token has access to
          type: array
          items:
            "$ref": "#/components/schemas/repository"
        single_file:
          type: string
          example: config.yaml
          nullable: true
        repository_selection:
          description: Describe whether all repositories have been selected or there's
            a selection involved
          type: string
          enum:
          - all
          - selected
      required:
      - token
      - expires_at
    organization-actions-secret:
      title: Actions Secret for an Organization
      description: Secrets for GitHub Actions for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/secrets/my_secret/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
    organization-actions-secret-response:
      title: Actions Secret for an Organization
      description: Secrets for GitHub Actions for an organization.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/organization-actions-secret"
    actions-public-key:
      title: ActionsPublicKey
      description: The public key used for setting Actions Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
      required:
      - key_id
      - key
    organization-actions-variable:
      title: Actions Variable for an Organization
      description: Organization variable for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: The date and time at which the variable was created, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          example: '2019-01-24T22:45:36.000Z'
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the variable was last updated, in
            ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          example: '2019-01-24T22:45:36.000Z'
          type: string
          format: date-time
        visibility:
          description: Visibility of a variable
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/variables/USERNAME/repositories
      required:
      - name
      - value
      - created_at
      - updated_at
      - visibility
    organization-actions-variable-response:
      title: Actions Variable for an Organization
      description: Organization variable for GitHub Actions.
      type: object
      required:
      - total_count
      - variables
      properties:
        total_count:
          type: integer
        variables:
          type: array
          items:
            "$ref": "#/components/schemas/organization-actions-variable"
    code-scanning-analysis-tool-name:
      type: string
      description: The name of the tool used to generate the code scanning analysis.
    code-scanning-analysis-tool-guid:
      nullable: true
      type: string
      description: The GUID of the tool used to generate the code scanning analysis,
        if provided in the uploaded SARIF data.
    code-scanning-alert-state-query:
      type: string
      description: State of a code scanning alert.
      enum:
      - open
      - closed
      - dismissed
      - fixed
    code-scanning-alert-severity:
      type: string
      description: Severity of a code scanning alert.
      enum:
      - critical
      - high
      - medium
      - low
      - warning
      - note
      - error
    alert-instances-url:
      type: string
      description: The REST API URL for fetching the list of instances for an alert.
      format: uri
      readOnly: true
    code-scanning-alert-state:
      type: string
      description: State of a code scanning alert.
      enum:
      - open
      - dismissed
      - fixed
    code-scanning-alert-dismissed-reason:
      type: string
      description: "**Required when the state is dismissed.** The reason for dismissing
        or closing the alert."
      nullable: true
      enum:
      -
      - false positive
      - won't fix
      - used in tests
    code-scanning-alert-dismissed-comment:
      type: string
      description: The dismissal comment associated with the dismissal of the alert.
      nullable: true
      maxLength: 280
    code-scanning-alert-rule:
      type: object
      properties:
        id:
          nullable: true
          type: string
          description: A unique identifier for the rule used to detect the alert.
        name:
          type: string
          description: The name of the rule used to detect the alert.
        severity:
          nullable: true
          type: string
          description: The severity of the alert.
          enum:
          - none
          - note
          - warning
          - error
        security_severity_level:
          nullable: true
          type: string
          description: The security severity of the alert.
          enum:
          - low
          - medium
          - high
          - critical
        description:
          type: string
          description: A short description of the rule used to detect the alert.
        full_description:
          type: string
          description: description of the rule used to detect the alert.
        tags:
          nullable: true
          type: array
          description: A set of tags applicable for the rule.
          items:
            type: string
        help:
          nullable: true
          type: string
          description: Detailed documentation for the rule as GitHub Flavored Markdown.
        help_uri:
          nullable: true
          type: string
          description: A link to the documentation for the rule used to detect the
            alert.
    code-scanning-analysis-tool-version:
      nullable: true
      type: string
      description: The version of the tool used to generate the code scanning analysis.
    code-scanning-analysis-tool:
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
        version:
          "$ref": "#/components/schemas/code-scanning-analysis-tool-version"
        guid:
          "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
    code-scanning-ref:
      type: string
      description: |-
        The full Git reference, formatted as `refs/heads/<branch name>`,
        `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
    code-scanning-analysis-analysis-key:
      type: string
      description: Identifies the configuration under which the analysis was executed.
        For example, in GitHub Actions this includes the workflow filename and job
        name.
    code-scanning-alert-environment:
      type: string
      description: Identifies the variable values associated with the environment
        in which the analysis that generated this alert instance was performed, such
        as the language that was analyzed.
    code-scanning-analysis-category:
      type: string
      description: Identifies the configuration under which the analysis was executed.
        Used to distinguish between multiple analyses for the same tool and commit,
        but performed on different languages or different parts of the code.
    code-scanning-alert-location:
      type: object
      description: Describe a region within a file for the alert.
      properties:
        path:
          type: string
        start_line:
          type: integer
        end_line:
          type: integer
        start_column:
          type: integer
        end_column:
          type: integer
    code-scanning-alert-classification:
      type: string
      description: A classification of the file. For example to identify it as generated.
      nullable: true
      enum:
      - source
      - generated
      - test
      - library
    code-scanning-alert-instance:
      type: object
      properties:
        ref:
          "$ref": "#/components/schemas/code-scanning-ref"
        analysis_key:
          "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
        environment:
          "$ref": "#/components/schemas/code-scanning-alert-environment"
        category:
          "$ref": "#/components/schemas/code-scanning-analysis-category"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        commit_sha:
          type: string
        message:
          type: object
          properties:
            text:
              type: string
        location:
          "$ref": "#/components/schemas/code-scanning-alert-location"
        html_url:
          type: string
        classifications:
          type: array
          description: |-
            Classifications that have been applied to the file that triggered the alert.
            For example identifying it as documentation, or a generated file.
          items:
            "$ref": "#/components/schemas/code-scanning-alert-classification"
    code-scanning-organization-alert-items:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        instances_url:
          "$ref": "#/components/schemas/alert-instances-url"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_reason:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
        dismissed_comment:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
        rule:
          "$ref": "#/components/schemas/code-scanning-alert-rule"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        most_recent_instance:
          "$ref": "#/components/schemas/code-scanning-alert-instance"
        repository:
          "$ref": "#/components/schemas/simple-repository"
      required:
      - number
      - created_at
      - url
      - html_url
      - instances_url
      - state
      - dismissed_by
      - dismissed_at
      - dismissed_reason
      - rule
      - tool
      - most_recent_instance
      - repository
    nullable-codespace-machine:
      type: object
      title: Codespace machine
      description: A description of the machine powering a codespace.
      properties:
        name:
          type: string
          description: The name of the machine.
          example: standardLinux
        display_name:
          type: string
          description: The display name of the machine includes cores, memory, and
            storage.
          example: 4 cores, 16 GB RAM, 64 GB storage
        operating_system:
          type: string
          description: The operating system of the machine.
          example: linux
        storage_in_bytes:
          type: integer
          description: How much storage is available to the codespace.
          example: 68719476736
        memory_in_bytes:
          type: integer
          description: How much memory is available to the codespace.
          example: 17179869184
        cpus:
          type: integer
          description: How many cores are available to the codespace.
          example: 4
        prebuild_availability:
          type: string
          description: Whether a prebuild is currently available when creating a codespace
            for this machine and repository. If a branch was not specified as a ref,
            the default branch will be assumed. Value will be "null" if prebuilds
            are not supported or prebuild availability could not be determined. Value
            will be "none" if no prebuild is available. Latest values "ready" and
            "in_progress" indicate the prebuild availability status.
          example: ready
          enum:
          - none
          - ready
          - in_progress
          nullable: true
      required:
      - name
      - display_name
      - operating_system
      - storage_in_bytes
      - memory_in_bytes
      - cpus
      - prebuild_availability
      nullable: true
    codespace:
      type: object
      title: Codespace
      description: A codespace.
      properties:
        id:
          type: integer
          example: 1
        name:
          description: Automatically generated name of this codespace.
          type: string
          example: monalisa-octocat-hello-world-g4wpq6h95q
        display_name:
          description: Display name for this codespace.
          type: string
          example: bookish space pancake
          nullable: true
        environment_id:
          description: UUID identifying this codespace's environment.
          type: string
          example: 26a7c758-7299-4a73-b978-5a92a7ae98a0
          nullable: true
        owner:
          "$ref": "#/components/schemas/simple-user"
        billable_owner:
          "$ref": "#/components/schemas/simple-user"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        machine:
          "$ref": "#/components/schemas/nullable-codespace-machine"
        devcontainer_path:
          description: Path to devcontainer.json from repo root used to create Codespace.
          type: string
          example: ".devcontainer/example/devcontainer.json"
          nullable: true
        prebuild:
          description: Whether the codespace was created from a prebuild.
          type: boolean
          example: false
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        last_used_at:
          description: Last known time this codespace was started.
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        state:
          description: State of this codespace.
          enum:
          - Unknown
          - Created
          - Queued
          - Provisioning
          - Available
          - Awaiting
          - Unavailable
          - Deleted
          - Moved
          - Shutdown
          - Archived
          - Starting
          - ShuttingDown
          - Failed
          - Exporting
          - Updating
          - Rebuilding
          example: Available
          type: string
        url:
          description: API URL for this codespace.
          type: string
          format: uri
        git_status:
          description: Details about the codespace's git repository.
          type: object
          properties:
            ahead:
              description: The number of commits the local repository is ahead of
                the remote.
              type: integer
              example: 0
            behind:
              description: The number of commits the local repository is behind the
                remote.
              type: integer
              example: 0
            has_unpushed_changes:
              description: Whether the local repository has unpushed changes.
              type: boolean
            has_uncommitted_changes:
              description: Whether the local repository has uncommitted changes.
              type: boolean
            ref:
              description: The current branch (or SHA if in detached HEAD state) of
                the local repository.
              type: string
              example: main
        location:
          description: The initally assigned location of a new codespace.
          enum:
          - EastUs
          - SouthEastAsia
          - WestEurope
          - WestUs2
          example: WestUs2
          type: string
        idle_timeout_minutes:
          description: The number of minutes of inactivity after which this codespace
            will be automatically stopped.
          type: integer
          example: 60
          nullable: true
        web_url:
          description: URL to access this codespace on the web.
          type: string
          format: uri
        machines_url:
          description: API URL to access available alternate machine types for this
            codespace.
          type: string
          format: uri
        start_url:
          description: API URL to start this codespace.
          type: string
          format: uri
        stop_url:
          description: API URL to stop this codespace.
          type: string
          format: uri
        publish_url:
          description: API URL to publish this codespace to a new repository.
          type: string
          format: uri
          nullable: true
        pulls_url:
          description: API URL for the Pull Request associated with this codespace,
            if any.
          type: string
          format: uri
          nullable: true
        recent_folders:
          type: array
          items:
            type: string
        runtime_constraints:
          type: object
          properties:
            allowed_port_privacy_settings:
              description: The privacy settings a user can select from when forwarding
                a port.
              type: array
              items:
                type: string
              nullable: true
        pending_operation:
          description: Whether or not a codespace has a pending async operation. This
            would mean that the codespace is temporarily unavailable. The only thing
            that you can do with a codespace in this state is delete it.
          type: boolean
          nullable: true
        pending_operation_disabled_reason:
          description: Text to show user when codespace is disabled by a pending operation
          type: string
          nullable: true
        idle_timeout_notice:
          description: Text to show user when codespace idle timeout minutes has been
            overriden by an organization policy
          type: string
          nullable: true
        retention_period_minutes:
          description: Duration in minutes after codespace has gone idle in which
            it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
          type: integer
          example: 60
          nullable: true
        retention_expires_at:
          description: When a codespace will be auto-deleted based on the "retention_period_minutes"
            and "last_used_at"
          type: string
          format: date-time
          example: '2011-01-26T20:01:12Z'
          nullable: true
        last_known_stop_notice:
          description: The text to display to a user when a codespace has been stopped
            for a potentially actionable reason.
          type: string
          example: you've used 100% of your spending limit for Codespaces
          nullable: true
      required:
      - id
      - name
      - environment_id
      - owner
      - billable_owner
      - repository
      - machine
      - prebuild
      - created_at
      - updated_at
      - last_used_at
      - state
      - url
      - git_status
      - location
      - idle_timeout_minutes
      - web_url
      - machines_url
      - start_url
      - stop_url
      - pulls_url
      - recent_folders
    devcontainers:
      title: Dev Containers
      description: Dev Containers
      type: object
      required:
      - path
      properties:
        path:
          type: string
        name:
          type: string
        display_name:
          type: string
    devcontainers-response:
      title: Dev Containers
      description: Dev Containers
      type: object
      required:
      - total_count
      - devcontainers
      properties:
        total_count:
          type: integer
        devcontainers:
          type: array
          items:
            "$ref": "#/components/schemas/devcontainers"
    codespace-response:
      title: Codespace
      description: A codespace.
      type: object
      required:
      - total_count
      - codespaces
      properties:
        total_count:
          type: integer
        codespaces:
          type: array
          items:
            "$ref": "#/components/schemas/codespace"
    codespaces-org-secret:
      title: Codespaces Secret
      description: Secrets for a GitHub Codespace.
      type: object
      properties:
        name:
          description: The name of the secret
          example: SECRET_NAME
          type: string
        created_at:
          description: The date and time at which the secret was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the secret was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        visibility:
          description: The type of repositories in the organization that the secret
            is visible to
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          description: The API URL at which the list of repositories this secret is
            visible to can be retrieved
          type: string
          format: uri
          example: https://api.github.com/orgs/ORGANIZATION/codespaces/secrets/SECRET_NAME/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
    codespaces-org-secret-response:
      title: Codespaces Secret Response
      description: Secrets for a GitHub Codespace.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/codespaces-org-secret"
    codespaces-public-key:
      title: CodespacesPublicKey
      description: The public key used for setting Codespaces secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
      required:
      - key_id
      - key
    copilot-seat-breakdown:
      title: Copilot for Business Seat Breakdown
      description: The breakdown of Copilot for Business seats for the organization.
      type: object
      properties:
        total:
          type: integer
          description: The total number of seats being billed for the organization
            as of the current billing cycle.
        added_this_cycle:
          type: integer
          description: Seats added during the current billing cycle.
        pending_cancellation:
          type: integer
          description: The number of seats that are pending cancellation at the end
            of the current billing cycle.
        pending_invitation:
          type: integer
          description: The number of seats that have been assigned to users that have
            not yet accepted an invitation to this organization.
        active_this_cycle:
          type: integer
          description: The number of seats that have used Copilot during the current
            billing cycle.
        inactive_this_cycle:
          type: integer
          description: The number of seats that have not used Copilot during the current
            billing cycle.
    copilot-organization-details:
      title: Copilot for Business Organization Details
      description: Information about the seat breakdown and policies set for an organization
        with a Copilot for Business subscription.
      type: object
      properties:
        seat_breakdown:
          "$ref": "#/components/schemas/copilot-seat-breakdown"
        public_code_suggestions:
          type: string
          description: The organization policy for allowing or disallowing Copilot
            to make suggestions that match public code.
          enum:
          - allow
          - block
          - unconfigured
          - unknown
        copilot_chat:
          type: string
          description: The organization policy for allowing or disallowing organization
            members to use Copilot Chat within their editor.
          enum:
          - enabled
          - disabled
          - unconfigured
        seat_management_setting:
          type: string
          description: The mode of assigning new seats.
          enum:
          - assign_all
          - assign_selected
          - disabled
          - unconfigured
      required:
      - seat_breakdown
      - public_code_suggestions
      - seat_management_setting
      additionalProperties: true
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          "$ref": "#/components/schemas/nullable-team-simple"
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    organization:
      title: Organization
      description: GitHub account for managing multiple users, teams, and repositories
      type: object
      properties:
        login:
          description: Unique login name of the organization
          example: new-org
          type: string
        url:
          description: URL for the organization
          example: https://api.github.com/orgs/github
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        hooks_url:
          type: string
        issues_url:
          type: string
        members_url:
          type: string
        public_members_url:
          type: string
        avatar_url:
          type: string
        description:
          type: string
          nullable: true
        blog:
          description: Display blog url for the organization
          example: blog.example-org.com
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        name:
          description: Display name for the organization
          example: New Org
          type: string
        company:
          description: Display company name for the organization
          example: Acme corporation
          type: string
        location:
          description: Display location for the organization
          example: Berlin, Germany
          type: string
        email:
          description: Display email for the organization
          example: org@example.com
          type: string
          format: email
        has_organization_projects:
          description: Specifies if organization projects are enabled for this org
          type: boolean
        has_repository_projects:
          description: Specifies if repository projects are enabled for repositories
            that belong to this org
          type: boolean
        is_verified:
          type: boolean
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        type:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
    copilot-seat-details:
      title: Copilot for Business Seat Detail
      description: Information about a Copilot for Business seat assignment for a
        user, team, or organization.
      type: object
      properties:
        assignee:
          type: object
          description: The assignee that has been granted access to GitHub Copilot.
          additionalProperties: true
          oneOf:
          - "$ref": "#/components/schemas/simple-user"
          - "$ref": "#/components/schemas/team"
          - "$ref": "#/components/schemas/organization"
        assigning_team:
          description: The team that granted access to GitHub Copilot to the assignee.
            This will be null if the user was assigned a seat individually.
          oneOf:
          - "$ref": "#/components/schemas/team"
          nullable: true
        pending_cancellation_date:
          type: string
          format: date
          nullable: true
          description: The pending cancellation date for the seat, in `YYYY-MM-DD`
            format. This will be null unless the assignee's Copilot access has been
            canceled during the current billing cycle. If the seat has been cancelled,
            this corresponds to the start of the organization's next billing cycle.
        last_activity_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp of user's last GitHub Copilot activity, in ISO 8601
            format.
        last_activity_editor:
          type: string
          nullable: true
          description: Last editor that was used by the user for a GitHub Copilot
            completion.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the assignee was last granted access to GitHub
            Copilot, in ISO 8601 format.
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the assignee's GitHub Copilot access was
            last updated, in ISO 8601 format.
      required:
      - assignee
      - created_at
      additionalProperties: false
    copilot-seat-details-response:
      title: Copilot for Business Seat Detail
      description: Information about a Copilot for Business seat assignment for a
        user, team, or organization.
      type: object
      properties:
        total_seats:
          type: integer
          description: Total number of Copilot For Business seats for the organization
            currently being billed.
        seats:
          type: array
          items:
            "$ref": "#/components/schemas/copilot-seat-details"
    copilot-seat-cancelled:
      type: object
      description: The total number of seat assignments cancelled.
      properties:
        seats_cancelled:
          type: integer
      required:
      - seats_cancelled
    copilot-seat-created:
      type: object
      description: The total number of seat assignments created.
      properties:
        seats_created:
          type: integer
      required:
      - seats_created
    organization-dependabot-secret:
      title: Dependabot Secret for an Organization
      description: Secrets for GitHub Dependabot for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/dependabot/secrets/my_secret/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
    organization-dependabot-secret-response:
      title: Dependabot Secret for an Organization
      description: Secrets for GitHub Dependabot for an organization.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/organization-dependabot-secret"
    dependabot-public-key:
      title: DependabotPublicKey
      description: The public key used for setting Dependabot Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
      required:
      - key_id
      - key
    nullable-minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      nullable: true
    package:
      title: Package
      description: A software package
      type: object
      properties:
        id:
          description: Unique identifier of the package.
          type: integer
          example: 1
        name:
          description: The name of the package.
          type: string
          example: super-linter
        package_type:
          type: string
          example: docker
          enum:
          - npm
          - maven
          - rubygems
          - docker
          - nuget
          - container
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter
        html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/package/super-linter
        version_count:
          description: The number of versions of the package.
          type: integer
          example: 1
        visibility:
          type: string
          example: private
          enum:
          - private
          - public
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        repository:
          "$ref": "#/components/schemas/nullable-minimal-repository"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
      - package_type
      - visibility
      - url
      - html_url
      - version_count
      - created_at
      - updated_at
    organization-invitation:
      title: Organization Invitation
      description: Organization Invitation
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
        created_at:
          type: string
        failed_at:
          type: string
          nullable: true
        failed_reason:
          type: string
          nullable: true
        inviter:
          "$ref": "#/components/schemas/simple-user"
        team_count:
          type: integer
        node_id:
          type: string
          example: '"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x"'
        invitation_teams_url:
          type: string
          example: '"https://api.github.com/organizations/16/invitations/1/teams"'
        invitation_source:
          type: string
          example: '"member"'
      required:
      - id
      - login
      - email
      - role
      - created_at
      - inviter
      - team_count
      - invitation_teams_url
      - node_id
    org-hook:
      title: Org Hook
      description: Org Hook
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name:
          type: string
          example: web
        events:
          type: array
          example:
          - push
          - pull_request
          items:
            type: string
        active:
          type: boolean
          example: true
        config:
          type: object
          properties:
            url:
              type: string
              example: '"http://example.com/2"'
            insecure_ssl:
              type: string
              example: '"0"'
            content_type:
              type: string
              example: '"form"'
            secret:
              type: string
              example: '"********"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        type:
          type: string
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
    interaction-group:
      type: string
      description: The type of GitHub user that can comment, open issues, or create
        pull requests while the interaction limit is in effect.
      example: collaborators_only
      enum:
      - existing_users
      - contributors_only
      - collaborators_only
    interaction-limit-response:
      title: Interaction Limits
      description: Interaction limit settings.
      type: object
      properties:
        limit:
          "$ref": "#/components/schemas/interaction-group"
        origin:
          type: string
          example: repository
        expires_at:
          type: string
          format: date-time
          example: '2018-08-17T04:18:39Z'
      required:
      - limit
      - origin
      - expires_at
    interaction-limit-response-any:
      title: Interaction Limits
      description: Interaction limit settings.
      anyOf:
      - "$ref": "#/components/schemas/interaction-limit-response"
      - type: object
        properties: {}
        additionalProperties: false
    interaction-expiry:
      type: string
      description: 'The duration of the interaction restriction. Default: `one_day`.'
      example: one_month
      enum:
      - one_day
      - three_days
      - one_week
      - one_month
      - six_months
    interaction-limit:
      title: Interaction Restrictions
      description: Limit interactions to a specific type of user for a specified duration
      type: object
      properties:
        limit:
          "$ref": "#/components/schemas/interaction-group"
        expiry:
          "$ref": "#/components/schemas/interaction-expiry"
      required:
      - limit
    org-membership:
      title: Org Membership
      description: Org Membership
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/memberships/defunkt
        state:
          type: string
          description: The state of the member in the organization. The `pending`
            state indicates the user has not yet accepted an invitation.
          example: active
          enum:
          - active
          - pending
        role:
          type: string
          description: The user's membership type in the organization.
          example: admin
          enum:
          - admin
          - member
          - billing_manager
        organization_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat
        organization:
          "$ref": "#/components/schemas/organization-simple"
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        permissions:
          type: object
          properties:
            can_create_repository:
              type: boolean
          required:
          - can_create_repository
      required:
      - state
      - role
      - organization_url
      - url
      - organization
      - user
    migration:
      title: Migration
      description: A migration.
      type: object
      properties:
        id:
          type: integer
          example: 79
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        guid:
          type: string
          example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state:
          type: string
          example: pending
        lock_repositories:
          type: boolean
          example: true
        exclude_metadata:
          type: boolean
        exclude_git_data:
          type: boolean
        exclude_attachments:
          type: boolean
        exclude_releases:
          type: boolean
        exclude_owner_projects:
          type: boolean
        org_metadata_only:
          type: boolean
        repositories:
          type: array
          description: The repositories included in the migration. Only returned for
            export migrations.
          items:
            "$ref": "#/components/schemas/repository"
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octo-org/migrations/79
        created_at:
          type: string
          format: date-time
          example: '2015-07-06T15:33:38-07:00'
        updated_at:
          type: string
          format: date-time
          example: '2015-07-06T15:33:38-07:00'
        node_id:
          type: string
        archive_url:
          type: string
          format: uri
        exclude:
          description: 'Exclude related items from being returned in the response
            in order to improve performance of the request. The array can include
            any of: `"repositories"`.'
          type: array
          items:
            description: 'Allowed values that can be passed to the exclude parameter.
              The array can include any of: `"repositories"`.'
            type: string
      required:
      - id
      - node_id
      - owner
      - guid
      - state
      - lock_repositories
      - exclude_metadata
      - exclude_git_data
      - exclude_attachments
      - exclude_releases
      - exclude_owner_projects
      - org_metadata_only
      - repositories
      - url
      - created_at
      - updated_at
    package-version:
      title: Package Version
      description: A version of a software package
      type: object
      properties:
        id:
          description: Unique identifier of the package version.
          type: integer
          example: 1
        name:
          description: The name of the package version.
          type: string
          example: latest
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter/versions/786068
        package_html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/package/super-linter
        html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/super-linter/786068
        license:
          type: string
          example: MIT
        description:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        deleted_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        metadata:
          type: object
          title: Package Version Metadata
          properties:
            package_type:
              type: string
              example: docker
              enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
            container:
              type: object
              title: Container Metadata
              properties:
                tags:
                  type: array
                  items:
                    type: string
              required:
              - tags
            docker:
              type: object
              title: Docker Metadata
              properties:
                tag:
                  type: array
                  items:
                    type: string
              required:
              - tags
          required:
          - package_type
      required:
      - id
      - name
      - url
      - package_html_url
      - created_at
      - updated_at
    organization-programmatic-access-grant-request:
      title: Simple Organization Programmatic Access Grant Request
      description: Minimal representation of an organization programmatic access grant
        request for enumerations
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the request for access via fine-grained
            personal access token. The `pat_request_id` used to review PAT requests.
        reason:
          type: string
          nullable: true
          description: Reason for requesting access.
        owner:
          "$ref": "#/components/schemas/simple-user"
        repository_selection:
          type: string
          enum:
          - none
          - all
          - subset
          description: Type of repository selection requested.
        repositories_url:
          type: string
          description: URL to the list of repositories requested to be accessed via
            fine-grained personal access token. Should only be followed when `repository_selection`
            is `subset`.
        permissions:
          type: object
          description: Permissions requested, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        created_at:
          type: string
          description: Date and time when the request for access was created.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has
            expired.
        token_expires_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token expires.
        token_last_used_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token was last used for authentication.
      required:
      - id
      - reason
      - owner
      - repository_selection
      - repositories_url
      - permissions
      - created_at
      - token_expired
      - token_expires_at
      - token_last_used_at
    organization-programmatic-access-grant:
      title: Organization Programmatic Access Grant
      description: Minimal representation of an organization programmatic access grant
        for enumerations
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the fine-grained personal access token.
            The `pat_id` used to get details about an approved fine-grained personal
            access token.
        owner:
          "$ref": "#/components/schemas/simple-user"
        repository_selection:
          type: string
          enum:
          - none
          - all
          - subset
          description: Type of repository selection requested.
        repositories_url:
          type: string
          description: URL to the list of repositories the fine-grained personal access
            token can access. Only follow when `repository_selection` is `subset`.
        permissions:
          type: object
          description: Permissions requested, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        access_granted_at:
          type: string
          description: Date and time when the fine-grained personal access token was
            approved to access the organization.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has
            expired.
        token_expires_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token expires.
        token_last_used_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access
            token was last used for authentication.
      required:
      - id
      - owner
      - repository_selection
      - repositories_url
      - permissions
      - access_granted_at
      - token_expired
      - token_expires_at
      - token_last_used_at
    project:
      title: Project
      description: Projects are a way to organize columns and cards of work.
      type: object
      properties:
        owner_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604
        html_url:
          type: string
          format: uri
          example: https://github.com/api-playground/projects-test/projects/12
        columns_url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604/columns
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDc6UHJvamVjdDEwMDI2MDQ=
        name:
          description: Name of the project
          example: Week One Sprint
          type: string
        body:
          description: Body of the project
          example: This project represents the sprint of the first week in January
          type: string
          nullable: true
        number:
          type: integer
          example: 1
        state:
          description: State of the project; either 'open' or 'closed'
          example: open
          type: string
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        organization_permission:
          description: The baseline permission that all organization members have
            on this project. Only present if owner is an organization.
          type: string
          enum:
          - read
          - write
          - admin
          - none
        private:
          description: Whether or not this project can be seen by everyone. Only present
            if owner is an organization.
          type: boolean
      required:
      - id
      - node_id
      - number
      - name
      - body
      - state
      - url
      - html_url
      - owner_url
      - creator
      - columns_url
      - created_at
      - updated_at
    repository-rule-enforcement:
      type: string
      description: The enforcement level of the ruleset. `evaluate` allows admins
        to test rules before enforcing them. Admins can view insights on the Rule
        Insights page (`evaluate` is only available with GitHub Enterprise).
      enum:
      - disabled
      - active
      - evaluate
    repository-ruleset-bypass-actor:
      title: Repository Ruleset Bypass Actor
      type: object
      description: An actor that can bypass rules in a ruleset
      required:
      - actor_id
      - actor_type
      - bypass_mode
      properties:
        actor_id:
          type: integer
          description: The ID of the actor that can bypass a ruleset. If `actor_type`
            is `OrganizationAdmin`, this should be `1`.
        actor_type:
          type: string
          enum:
          - RepositoryRole
          - Team
          - Integration
          - OrganizationAdmin
          description: The type of actor that can bypass a ruleset
        bypass_mode:
          type: string
          description: When the specified actor can bypass the ruleset. `pull_request`
            means that an actor can only bypass rules on pull requests.
          enum:
          - always
          - pull_request
    repository-ruleset-conditions:
      title: Repository ruleset conditions for ref names
      type: object
      description: Parameters for a repository ruleset ref name condition
      properties:
        ref_name:
          type: object
          properties:
            include:
              type: array
              description: Array of ref names or patterns to include. One of these
                patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH`
                to include the default branch or `~ALL` to include all branches.
              items:
                type: string
            exclude:
              type: array
              description: Array of ref names or patterns to exclude. The condition
                will not pass if any of these patterns match.
              items:
                type: string
    repository-ruleset-conditions-repository-name-target:
      title: Repository ruleset conditions for repository names
      type: object
      description: Parameters for a repository name condition
      properties:
        repository_name:
          type: object
          properties:
            include:
              type: array
              description: Array of repository names or patterns to include. One of
                these patterns must match for the condition to pass. Also accepts
                `~ALL` to include all repositories.
              items:
                type: string
            exclude:
              type: array
              description: Array of repository names or patterns to exclude. The condition
                will not pass if any of these patterns match.
              items:
                type: string
            protected:
              type: boolean
              description: Whether renaming of target repositories is prevented.
      required:
      - repository_name
    repository-ruleset-conditions-repository-id-target:
      title: Repository ruleset conditions for repository IDs
      type: object
      description: Parameters for a repository ID condition
      properties:
        repository_id:
          type: object
          properties:
            repository_ids:
              type: array
              description: The repository IDs that the ruleset applies to. One of
                these IDs must match for the condition to pass.
              items:
                type: integer
      required:
      - repository_id
    org-ruleset-conditions:
      title: Organization ruleset conditions
      type: object
      description: 'Conditions for an organization ruleset. The conditions object
        should contain both `repository_name` and `ref_name` properties or both `repository_id`
        and `ref_name` properties.

        '
      oneOf:
      - type: object
        title: repository_name_and_ref_name
        description: Conditions to target repositories by name and refs by name
        allOf:
        - "$ref": "#/components/schemas/repository-ruleset-conditions"
        - "$ref": "#/components/schemas/repository-ruleset-conditions-repository-name-target"
      - type: object
        title: repository_id_and_ref_name
        description: Conditions to target repositories by id and refs by name
        allOf:
        - "$ref": "#/components/schemas/repository-ruleset-conditions"
        - "$ref": "#/components/schemas/repository-ruleset-conditions-repository-id-target"
    repository-rule-creation:
      title: creation
      description: Only allow users with bypass permission to create matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - creation
    repository-rule-update:
      title: update
      description: Only allow users with bypass permission to update matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - update
        parameters:
          type: object
          properties:
            update_allows_fetch_and_merge:
              type: boolean
              description: Branch can pull changes from its upstream repository
          required:
          - update_allows_fetch_and_merge
    repository-rule-deletion:
      title: deletion
      description: Only allow users with bypass permissions to delete matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - deletion
    repository-rule-required-linear-history:
      title: required_linear_history
      description: Prevent merge commits from being pushed to matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_linear_history
    repository-rule-required-deployments:
      title: required_deployments
      description: Choose which environments must be successfully deployed to before
        refs can be merged into a branch that matches this rule.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_deployments
        parameters:
          type: object
          properties:
            required_deployment_environments:
              type: array
              description: The environments that must be successfully deployed to
                before branches can be merged.
              items:
                type: string
          required:
          - required_deployment_environments
    repository-rule-required-signatures:
      title: required_signatures
      description: Commits pushed to matching refs must have verified signatures.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_signatures
    repository-rule-pull-request:
      title: pull_request
      description: Require all commits be made to a non-target branch and submitted
        via a pull request before they can be merged.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - pull_request
        parameters:
          type: object
          properties:
            dismiss_stale_reviews_on_push:
              type: boolean
              description: New, reviewable commits pushed will dismiss previous pull
                request review approvals.
            require_code_owner_review:
              type: boolean
              description: Require an approving review in pull requests that modify
                files that have a designated code owner.
            require_last_push_approval:
              type: boolean
              description: Whether the most recent reviewable push must be approved
                by someone other than the person who pushed it.
            required_approving_review_count:
              type: integer
              description: The number of approving reviews that are required before
                a pull request can be merged.
              minimum: 0
              maximum: 10
            required_review_thread_resolution:
              type: boolean
              description: All conversations on code must be resolved before a pull
                request can be merged.
          required:
          - dismiss_stale_reviews_on_push
          - require_code_owner_review
          - require_last_push_approval
          - required_approving_review_count
          - required_review_thread_resolution
    repository-rule-params-status-check-configuration:
      title: StatusCheckConfiguration
      description: Required status check
      type: object
      properties:
        context:
          type: string
          description: The status check context name that must be present on the commit.
        integration_id:
          type: integer
          description: The optional integration ID that this status check must originate
            from.
      required:
      - context
    repository-rule-required-status-checks:
      title: required_status_checks
      description: Choose which status checks must pass before branches can be merged
        into a branch that matches this rule. When enabled, commits must first be
        pushed to another branch, then merged or pushed directly to a ref that matches
        this rule after status checks have passed.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_status_checks
        parameters:
          type: object
          properties:
            required_status_checks:
              type: array
              description: Status checks that are required.
              items:
                "$ref": "#/components/schemas/repository-rule-params-status-check-configuration"
            strict_required_status_checks_policy:
              type: boolean
              description: Whether pull requests targeting a matching branch must
                be tested with the latest code. This setting will not take effect
                unless at least one status check is enabled.
          required:
          - required_status_checks
          - strict_required_status_checks_policy
    repository-rule-non-fast-forward:
      title: non_fast_forward
      description: Prevent users with push access from force pushing to refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - non_fast_forward
    repository-rule-commit-message-pattern:
      title: commit_message_pattern
      description: Parameters to be used for the commit_message_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - commit_message_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-commit-author-email-pattern:
      title: commit_author_email_pattern
      description: Parameters to be used for the commit_author_email_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - commit_author_email_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-committer-email-pattern:
      title: committer_email_pattern
      description: Parameters to be used for the committer_email_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - committer_email_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-branch-name-pattern:
      title: branch_name_pattern
      description: Parameters to be used for the branch_name_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - branch_name_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-tag-name-pattern:
      title: tag_name_pattern
      description: Parameters to be used for the tag_name_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - tag_name_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule:
      title: Repository Rule
      type: object
      description: A repository rule.
      oneOf:
      - "$ref": "#/components/schemas/repository-rule-creation"
      - "$ref": "#/components/schemas/repository-rule-update"
      - "$ref": "#/components/schemas/repository-rule-deletion"
      - "$ref": "#/components/schemas/repository-rule-required-linear-history"
      - "$ref": "#/components/schemas/repository-rule-required-deployments"
      - "$ref": "#/components/schemas/repository-rule-required-signatures"
      - "$ref": "#/components/schemas/repository-rule-pull-request"
      - "$ref": "#/components/schemas/repository-rule-required-status-checks"
      - "$ref": "#/components/schemas/repository-rule-non-fast-forward"
      - "$ref": "#/components/schemas/repository-rule-commit-message-pattern"
      - "$ref": "#/components/schemas/repository-rule-commit-author-email-pattern"
      - "$ref": "#/components/schemas/repository-rule-committer-email-pattern"
      - "$ref": "#/components/schemas/repository-rule-branch-name-pattern"
      - "$ref": "#/components/schemas/repository-rule-tag-name-pattern"
    repository-ruleset:
      title: Repository ruleset
      type: object
      description: A set of rules to apply when specified conditions are met.
      required:
      - id
      - name
      - source
      - enforcement
      properties:
        id:
          type: integer
          description: The ID of the ruleset
        name:
          type: string
          description: The name of the ruleset
        target:
          type: string
          description: The target of the ruleset
          enum:
          - branch
          - tag
        source_type:
          type: string
          description: The type of the source of the ruleset
          enum:
          - Repository
          - Organization
        source:
          type: string
          description: The name of the source
        enforcement:
          "$ref": "#/components/schemas/repository-rule-enforcement"
        bypass_actors:
          type: array
          description: The actors that can bypass the rules in this ruleset
          items:
            "$ref": "#/components/schemas/repository-ruleset-bypass-actor"
        current_user_can_bypass:
          type: string
          description: |-
            The bypass type of the user making the API request for this ruleset. This field is only returned when
            querying the repository-level endpoint.
          enum:
          - always
          - pull_requests_only
          - never
        node_id:
          type: string
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  description: The URL of the ruleset
            html:
              type: object
              properties:
                href:
                  type: string
                  description: The html URL of the ruleset
        conditions:
          anyOf:
          - "$ref": "#/components/schemas/repository-ruleset-conditions"
          - "$ref": "#/components/schemas/org-ruleset-conditions"
        rules:
          type: array
          items:
            "$ref": "#/components/schemas/repository-rule"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    rule-suites:
      title: Rule Suites
      description: Response
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: The unique identifier of the rule insight.
          actor_id:
            type: integer
            description: The number that identifies the user.
          actor_name:
            type: string
            description: The handle for the GitHub user account.
          before_sha:
            type: string
            description: The first commit sha before the push evaluation.
          after_sha:
            type: string
            description: The last commit sha in the push evaluation.
          ref:
            type: string
            description: The ref name that the evaluation ran on.
          repository_id:
            type: integer
            description: The ID of the repository associated with the rule evaluation.
          repository_name:
            type: string
            description: The name of the repository without the `.git` extension.
          pushed_at:
            type: string
            format: date-time
            example: '2011-01-26T19:06:43Z'
          result:
            type: string
            enum:
            - pass
            - fail
            - bypass
            description: The result of the rule evaluations for rules with the `active`
              enforcement status.
          evaluation_result:
            type: string
            enum:
            - pass
            - fail
            description: The result of the rule evaluations for rules with the `active`
              and `evaluate` enforcement statuses, demonstrating whether rules would
              pass or fail if all rules in the rule suite were `active`.
    rule-suite:
      title: Rule Suite
      description: Response
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the rule insight.
        actor_id:
          type: integer
          description: The number that identifies the user.
        actor_name:
          type: string
          description: The handle for the GitHub user account.
        before_sha:
          type: string
          description: The first commit sha before the push evaluation.
        after_sha:
          type: string
          description: The last commit sha in the push evaluation.
        ref:
          type: string
          description: The ref name that the evaluation ran on.
        repository_id:
          type: integer
          description: The ID of the repository associated with the rule evaluation.
        repository_name:
          type: string
          description: The name of the repository without the `.git` extension.
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        result:
          type: string
          enum:
          - pass
          - fail
          - bypass
          description: The result of the rule evaluations for rules with the `active`
            enforcement status.
        evaluation_result:
          type: string
          enum:
          - pass
          - fail
          description: The result of the rule evaluations for rules with the `active`
            and `evaluate` enforcement statuses, demonstrating whether rules would
            pass or fail if all rules in the rule suite were `active`.
        rule_evaluations:
          type: array
          description: Details on the evaluated rules.
          items:
            type: object
            properties:
              rule_source:
                type: object
                properties:
                  type:
                    type: string
                    description: The type of rule source.
                  id:
                    type: integer
                    nullable: true
                    description: The ID of the rule source.
                  name:
                    type: string
                    nullable: true
                    description: The name of the rule source.
              enforcement:
                type: string
                enum:
                - active
                - evaluate
                - deleted ruleset
                description: The enforcement level of this rule source.
              result:
                type: string
                enum:
                - pass
                - fail
                description: The result of the evaluation of the individual rule.
              rule_type:
                type: string
                description: The type of rule.
              details:
                type: string
                description: Any associated details with the rule evaluation.
    repository-advisory-vulnerability:
      description: A product affected by the vulnerability detailed in a repository
        security advisory.
      type: object
      properties:
        package:
          description: The name of the package affected by the vulnerability.
          type: object
          nullable: true
          properties:
            ecosystem:
              "$ref": "#/components/schemas/security-advisory-ecosystems"
            name:
              type: string
              description: The unique package name within its ecosystem.
              nullable: true
          required:
          - ecosystem
          - name
        vulnerable_version_range:
          type: string
          description: The range of the package versions affected by the vulnerability.
          nullable: true
        patched_versions:
          type: string
          description: The package version(s) that resolve the vulnerability.
          nullable: true
        vulnerable_functions:
          type: array
          description: The functions in the package that are affected.
          nullable: true
          items:
            type: string
      required:
      - package
      - vulnerable_version_range
      - patched_versions
      - vulnerable_functions
      additionalProperties: false
    repository-advisory-credit:
      description: A credit given to a user for a repository security advisory.
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/simple-user"
        type:
          "$ref": "#/components/schemas/security-advisory-credit-types"
        state:
          type: string
          description: The state of the user's acceptance of the credit.
          enum:
          - accepted
          - declined
          - pending
      required:
      - user
      - type
      - state
      additionalProperties: false
    repository-advisory:
      description: A repository security advisory.
      type: object
      properties:
        ghsa_id:
          type: string
          description: The GitHub Security Advisory ID.
          readOnly: true
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
        url:
          type: string
          description: The API URL for the advisory.
        html_url:
          type: string
          format: uri
          description: The URL for the advisory.
          readOnly: true
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory entails.
          maxLength: 65535
          nullable: true
        severity:
          type: string
          description: The severity of the advisory.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        author:
          readOnly: true
          nullable: true
          description: The author of the advisory.
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        publisher:
          readOnly: true
          nullable: true
          description: The publisher of the advisory.
          allOf:
          - "$ref": "#/components/schemas/simple-user"
        identifiers:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of identifier.
                enum:
                - CVE
                - GHSA
              value:
                type: string
                description: The identifier value.
            required:
            - type
            - value
          readOnly: true
        state:
          type: string
          description: The state of the advisory.
          enum:
          - published
          - closed
          - withdrawn
          - draft
          - triage
        created_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was created, in ISO
            8601 format.
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was last updated, in
            ISO 8601 format.
          readOnly: true
          nullable: true
        published_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was published, in ISO
            8601 format.
          readOnly: true
          nullable: true
        closed_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was closed, in ISO 8601
            format.
          readOnly: true
          nullable: true
        withdrawn_at:
          type: string
          format: date-time
          description: The date and time of when the advisory was withdrawn, in ISO
            8601 format.
          readOnly: true
          nullable: true
        submission:
          type: object
          nullable: true
          readOnly: true
          properties:
            accepted:
              type: boolean
              description: Whether a private vulnerability report was accepted by
                the repository's administrators.
              readOnly: true
          required:
          - accepted
        vulnerabilities:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/repository-advisory-vulnerability"
        cvss:
          type: object
          nullable: true
          properties:
            vector_string:
              type: string
              description: The CVSS vector.
              nullable: true
            score:
              type: number
              description: The CVSS score.
              minimum: 0
              maximum: 10
              nullable: true
              readOnly: true
          required:
          - vector_string
          - score
        cwes:
          type: array
          nullable: true
          items:
            type: object
            properties:
              cwe_id:
                type: string
                description: The Common Weakness Enumeration (CWE) identifier.
              name:
                type: string
                description: The name of the CWE.
                readOnly: true
            required:
            - cwe_id
            - name
          readOnly: true
        cwe_ids:
          type: array
          description: A list of only the CWE IDs.
          nullable: true
          items:
            type: string
        credits:
          type: array
          nullable: true
          items:
            type: object
            properties:
              login:
                type: string
                description: The username of the user credited.
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
        credits_detailed:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/repository-advisory-credit"
          readOnly: true
        collaborating_users:
          type: array
          description: A list of users that collaborate on the advisory.
          nullable: true
          items:
            "$ref": "#/components/schemas/simple-user"
        collaborating_teams:
          type: array
          description: A list of teams that collaborate on the advisory.
          nullable: true
          items:
            "$ref": "#/components/schemas/team"
        private_fork:
          readOnly: true
          nullable: true
          description: A temporary private fork of the advisory's repository for collaborating
            on a fix.
          allOf:
          - "$ref": "#/components/schemas/simple-repository"
      required:
      - ghsa_id
      - cve_id
      - url
      - html_url
      - summary
      - description
      - severity
      - author
      - publisher
      - identifiers
      - state
      - created_at
      - updated_at
      - published_at
      - closed_at
      - withdrawn_at
      - submission
      - vulnerabilities
      - cvss
      - cwes
      - cwe_ids
      - credits
      - credits_detailed
      - collaborating_users
      - collaborating_teams
      - private_fork
      additionalProperties: false
    team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
    actions-billing-usage:
      type: object
      properties:
        total_minutes_used:
          type: integer
          description: The sum of the free and paid GitHub Actions minutes used.
        total_paid_minutes_used:
          type: integer
          description: The total paid GitHub Actions minutes used.
        included_minutes:
          type: integer
          description: The amount of free GitHub Actions minutes available.
        minutes_used_breakdown:
          type: object
          properties:
            UBUNTU:
              type: integer
              description: Total minutes used on Ubuntu runner machines.
            MACOS:
              type: integer
              description: Total minutes used on macOS runner machines.
            WINDOWS:
              type: integer
              description: Total minutes used on Windows runner machines.
            ubuntu_4_core:
              type: integer
              description: Total minutes used on Ubuntu 4 core runner machines.
            ubuntu_8_core:
              type: integer
              description: Total minutes used on Ubuntu 8 core runner machines.
            ubuntu_16_core:
              type: integer
              description: Total minutes used on Ubuntu 16 core runner machines.
            ubuntu_32_core:
              type: integer
              description: Total minutes used on Ubuntu 32 core runner machines.
            ubuntu_64_core:
              type: integer
              description: Total minutes used on Ubuntu 64 core runner machines.
            windows_4_core:
              type: integer
              description: Total minutes used on Windows 4 core runner machines.
            windows_8_core:
              type: integer
              description: Total minutes used on Windows 8 core runner machines.
            windows_16_core:
              type: integer
              description: Total minutes used on Windows 16 core runner machines.
            windows_32_core:
              type: integer
              description: Total minutes used on Windows 32 core runner machines.
            windows_64_core:
              type: integer
              description: Total minutes used on Windows 64 core runner machines.
            macos_12_core:
              type: integer
              description: Total minutes used on macOS 12 core runner machines.
            total:
              type: integer
              description: Total minutes used on all runner machines.
      required:
      - total_minutes_used
      - total_paid_minutes_used
      - included_minutes
      - minutes_used_breakdown
    packages-billing-usage:
      type: object
      properties:
        total_gigabytes_bandwidth_used:
          type: integer
          description: Sum of the free and paid storage space (GB) for GitHuub Packages.
        total_paid_gigabytes_bandwidth_used:
          type: integer
          description: Total paid storage space (GB) for GitHuub Packages.
        included_gigabytes_bandwidth:
          type: integer
          description: Free storage space (GB) for GitHub Packages.
      required:
      - total_gigabytes_bandwidth_used
      - total_paid_gigabytes_bandwidth_used
      - included_gigabytes_bandwidth
    combined-billing-usage:
      type: object
      properties:
        days_left_in_billing_cycle:
          type: integer
          description: Numbers of days left in billing cycle.
        estimated_paid_storage_for_month:
          type: integer
          description: Estimated storage space (GB) used in billing cycle.
        estimated_storage_for_month:
          type: integer
          description: Estimated sum of free and paid storage space (GB) used in billing
            cycle.
      required:
      - days_left_in_billing_cycle
      - estimated_paid_storage_for_month
      - estimated_storage_for_month
    team-organization:
      title: Team Organization
      description: Team Organization
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        updated_at:
          type: string
          format: date-time
        archived_at:
          type: string
          format: date-time
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
      - archived_at
    team-full:
      title: Full Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          example: 42
          type: integer
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        name:
          description: Name of the team
          example: Developers
          type: string
        slug:
          type: string
          example: justice-league
        description:
          type: string
          example: A great team.
          nullable: true
        privacy:
          description: The level of privacy this team should have
          type: string
          enum:
          - closed
          - secret
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          enum:
          - notifications_enabled
          - notifications_disabled
          example: notifications_enabled
        permission:
          description: Permission that the team will have for its repositories
          example: push
          type: string
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        parent:
          "$ref": "#/components/schemas/nullable-team-simple"
        members_count:
          type: integer
          example: 3
        repos_count:
          type: integer
          example: 10
        created_at:
          type: string
          format: date-time
          example: '2017-07-14T16:53:42Z'
        updated_at:
          type: string
          format: date-time
          example: '2017-08-17T12:37:15Z'
        organization:
          "$ref": "#/components/schemas/team-organization"
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - created_at
      - updated_at
      - members_count
      - repos_count
      - organization
    team-discussion:
      title: Team Discussion
      description: A team discussion is a persistent record of a free-form conversation
        within a team.
      type: object
      properties:
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          description: The main text of the discussion.
          example: Please suggest improvements to our workflow in comments.
          type: string
        body_html:
          type: string
          example: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version:
          description: The current version of the body content. If provided, this
            update operation will be rejected if the given version does not match
            the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        comments_count:
          type: integer
          example: 0
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1/comments
        created_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id:
          type: string
          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number:
          description: The unique sequence number of a team discussion.
          example: 42
          type: integer
        pinned:
          description: Whether or not this discussion should be pinned for easy retrieval.
          example: true
          type: boolean
        private:
          description: Whether or not this discussion should be restricted to team
            members and organization administrators.
          example: true
          type: boolean
        team_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027
        title:
          description: The title of the discussion.
          example: How can we improve our workflow?
          type: string
        updated_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - author
      - body
      - body_html
      - body_version
      - comments_count
      - comments_url
      - created_at
      - last_edited_at
      - html_url
      - pinned
      - private
      - node_id
      - number
      - team_url
      - title
      - updated_at
      - url
    team-discussion-comment:
      title: Team Discussion Comment
      description: A reply to a discussion within a team.
      type: object
      properties:
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          description: The main text of the comment.
          example: I agree with this suggestion.
          type: string
        body_html:
          type: string
          example: "<p>Do you like apples?</p>"
        body_version:
          description: The current version of the body content. If provided, this
            update operation will be rejected if the given version does not match
            the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        created_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        discussion_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id:
          type: string
          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number:
          description: The unique sequence number of a team discussion comment.
          example: 42
          type: integer
        updated_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - author
      - body
      - body_html
      - body_version
      - created_at
      - last_edited_at
      - discussion_url
      - html_url
      - node_id
      - number
      - updated_at
      - url
    reaction:
      title: Reaction
      description: Reactions to conversations provide a way to help people express
        their feelings more simply and effectively.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDg6UmVhY3Rpb24x
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        content:
          description: The reaction to use
          example: heart
          type: string
          enum:
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
        created_at:
          type: string
          format: date-time
          example: '2016-05-20T20:09:31Z'
      required:
      - id
      - node_id
      - user
      - content
      - created_at
    team-membership:
      title: Team Membership
      description: Team Membership
      type: object
      properties:
        url:
          type: string
          format: uri
        role:
          description: The role of the user in the team.
          enum:
          - member
          - maintainer
          default: member
          example: member
          type: string
        state:
          description: The state of the user's membership in the team.
          type: string
          enum:
          - active
          - pending
      required:
      - role
      - state
      - url
    team-project:
      title: Team Project
      description: A team's access to a project.
      type: object
      properties:
        owner_url:
          type: string
        url:
          type: string
        html_url:
          type: string
        columns_url:
          type: string
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        body:
          type: string
          nullable: true
        number:
          type: integer
        state:
          type: string
        creator:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
        updated_at:
          type: string
        organization_permission:
          description: The organization permission for this project. Only present
            when owner is an organization.
          type: string
        private:
          description: Whether the project is private or not. Only present when owner
            is an organization.
          type: boolean
        permissions:
          type: object
          properties:
            read:
              type: boolean
            write:
              type: boolean
            admin:
              type: boolean
          required:
          - read
          - write
          - admin
      required:
      - owner_url
      - url
      - html_url
      - columns_url
      - id
      - node_id
      - name
      - body
      - number
      - state
      - creator
      - created_at
      - updated_at
      - permissions
    nullable-repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            use_squash_pr_title_as_default:
              type: boolean
            squash_merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - COMMIT_OR_PR_TITLE
              description: |-
                The default value for a squash merge commit title:

                - `PR_TITLE` - default to the pull request's title.
                - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
            squash_merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - COMMIT_MESSAGES
              - BLANK
              description: |-
                The default value for a squash merge commit message:

                - `PR_BODY` - default to the pull request's body.
                - `COMMIT_MESSAGES` - default to the branch's commit messages.
                - `BLANK` - default to a blank commit message.
            merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - MERGE_MESSAGE
              description: |-
                The default value for a merge commit title.

                - `PR_TITLE` - default to the pull request's title.
                - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
            merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - PR_TITLE
              - BLANK
              description: |-
                The default value for a merge commit message.

                - `PR_TITLE` - default to the pull request's title.
                - `PR_BODY` - default to the pull request's body.
                - `BLANK` - default to a blank commit message.
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its
            base branch can always be updated even if it is not required to be up
            to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title
            as default. **This property has been deprecated. Please use `squash_merge_commit_title`
            instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

            - `PR_TITLE` - default to the pull request's title.
            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      nullable: true
    team-repository:
      title: Team Repository
      description: A team's access to a repository.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        role_name:
          type: string
          example: admin
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          "$ref": "#/components/schemas/nullable-repository"
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          default: false
          type: boolean
          example: false
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
          example: false
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    project-card:
      title: Project Card
      description: Project cards represent a scope of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/cards/1478
        id:
          description: The project card's ID
          example: 42
          type: integer
        node_id:
          type: string
          example: MDExOlByb2plY3RDYXJkMTQ3OA==
        note:
          type: string
          example: Add payload for delete Project column
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:21:06Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:20:22Z'
        archived:
          description: Whether or not the card is archived
          example: false
          type: boolean
        column_name:
          type: string
        project_id:
          type: string
        column_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        content_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
      required:
      - id
      - node_id
      - note
      - url
      - column_url
      - project_url
      - creator
      - created_at
      - updated_at
    project-column:
      title: Project Column
      description: Project columns contain cards of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
        cards_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367/cards
        id:
          description: The unique identifier of the project column
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name:
          description: Name of the project column
          example: Remaining tasks
          type: string
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:18:44Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:22:28Z'
      required:
      - id
      - node_id
      - url
      - project_url
      - cards_url
      - name
      - created_at
      - updated_at
    project-collaborator-permission:
      title: Project Collaborator Permission
      description: Project Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - permission
      - user
    rate-limit:
      title: Rate Limit
      type: object
      properties:
        limit:
          type: integer
        remaining:
          type: integer
        reset:
          type: integer
        used:
          type: integer
      required:
      - limit
      - remaining
      - reset
      - used
    rate-limit-overview:
      title: Rate Limit Overview
      description: Rate Limit Overview
      type: object
      properties:
        resources:
          type: object
          properties:
            core:
              "$ref": "#/components/schemas/rate-limit"
            graphql:
              "$ref": "#/components/schemas/rate-limit"
            search:
              "$ref": "#/components/schemas/rate-limit"
            code_search:
              "$ref": "#/components/schemas/rate-limit"
            source_import:
              "$ref": "#/components/schemas/rate-limit"
            integration_manifest:
              "$ref": "#/components/schemas/rate-limit"
            code_scanning_upload:
              "$ref": "#/components/schemas/rate-limit"
            actions_runner_registration:
              "$ref": "#/components/schemas/rate-limit"
            scim:
              "$ref": "#/components/schemas/rate-limit"
            dependency_snapshots:
              "$ref": "#/components/schemas/rate-limit"
          required:
          - core
          - search
        rate:
          "$ref": "#/components/schemas/rate-limit"
      required:
      - rate
      - resources
    code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
      - url
      - key
      - name
      - html_url
    full-repository:
      title: Full Repository
      description: Full Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
          example:
          - octocat
          - atom
          - electron
          - API
        has_issues:
          type: boolean
          example: true
        has_projects:
          type: boolean
          example: true
        has_wiki:
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
          example: true
        has_discussions:
          type: boolean
          example: true
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
          example: public
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - pull
          - push
        allow_rebase_merge:
          type: boolean
          example: true
        template_repository:
          "$ref": "#/components/schemas/nullable-repository"
        temp_clone_token:
          type: string
          nullable: true
        allow_squash_merge:
          type: boolean
          example: true
        allow_auto_merge:
          type: boolean
          example: false
        delete_branch_on_merge:
          type: boolean
          example: false
        allow_merge_commit:
          type: boolean
          example: true
        allow_update_branch:
          type: boolean
          example: true
        use_squash_pr_title_as_default:
          type: boolean
          example: false
        squash_merge_commit_title:
          type: string
          example: PR_TITLE
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          example: PR_BODY
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          example: PR_TITLE
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

              - `PR_TITLE` - default to the pull request's title.
              - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          example: PR_BODY
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_forking:
          type: boolean
          example: true
        web_commit_signoff_required:
          type: boolean
          example: false
        subscribers_count:
          type: integer
          example: 42
        network_count:
          type: integer
          example: 0
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        parent:
          "$ref": "#/components/schemas/repository"
        source:
          "$ref": "#/components/schemas/repository"
        forks:
          type: integer
        master_branch:
          type: string
        open_issues:
          type: integer
        watchers:
          type: integer
        anonymous_access_enabled:
          description: Whether anonymous git access is allowed.
          default: true
          type: boolean
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct-simple"
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - has_discussions
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - network_count
      - subscribers_count
    artifact:
      title: Artifact
      description: An artifact
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        name:
          description: The name of the artifact.
          type: string
          example: AdventureWorks.Framework
        size_in_bytes:
          description: The size in bytes of the artifact.
          type: integer
          example: 12345
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5
        archive_download_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip
        expired:
          description: Whether or not the artifact has expired.
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        workflow_run:
          type: object
          nullable: true
          properties:
            id:
              example: 10
              type: integer
            repository_id:
              example: 42
              type: integer
            head_repository_id:
              example: 42
              type: integer
            head_branch:
              example: main
              type: string
            head_sha:
              example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
              type: string
      required:
      - id
      - node_id
      - name
      - size_in_bytes
      - url
      - archive_download_url
      - expired
      - created_at
      - expires_at
      - updated_at
    artifact-response:
      title: Artifact
      description: An artifact
      type: object
      required:
      - total_count
      - artifacts
      properties:
        total_count:
          type: integer
        artifacts:
          type: array
          items:
            "$ref": "#/components/schemas/artifact"
    actions-cache-list:
      title: Repository actions caches
      description: Repository actions caches
      type: object
      properties:
        total_count:
          description: Total number of caches
          type: integer
          example: 2
        actions_caches:
          description: Array of caches
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 2
              ref:
                type: string
                example: refs/heads/main
              key:
                type: string
                example: Linux-node-958aff96db2d75d67787d1e634ae70b659de937b
              version:
                type: string
                example: 73885106f58cc52a7df9ec4d4a5622a5614813162cb516c759a30af6bf56e6f0
              last_accessed_at:
                type: string
                format: date-time
                example: '2019-01-24T22:45:36.000Z'
              created_at:
                type: string
                format: date-time
                example: '2019-01-24T22:45:36.000Z'
              size_in_bytes:
                type: integer
                example: 1024
      required:
      - total_count
      - actions_caches
    job:
      title: Job
      description: Information of a job execution in a workflow run
      type: object
      properties:
        id:
          description: The id of the job.
          example: 21
          type: integer
        run_id:
          description: The id of the associated workflow run.
          example: 5
          type: integer
        run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        run_attempt:
          type: integer
          description: Attempt number of the associated workflow run, 1 for first
            attempt and higher if the workflow was re-run.
          example: 1
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        head_sha:
          description: The SHA of the commit that is being run.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/jobs/21
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        status:
          description: The phase of the lifecycle that the job is currently in.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
        conclusion:
          description: The outcome of the job.
          example: success
          type: string
          nullable: true
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
        created_at:
          description: The time that the job created, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
        started_at:
          description: The time that the job started, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
        completed_at:
          description: The time that the job finished, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
          nullable: true
        name:
          description: The name of the job.
          example: test-coverage
          type: string
        steps:
          description: Steps in this job.
          type: array
          items:
            type: object
            required:
            - name
            - status
            - conclusion
            - number
            properties:
              status:
                description: The phase of the lifecycle that the job is currently
                  in.
                example: queued
                type: string
                enum:
                - queued
                - in_progress
                - completed
              conclusion:
                description: The outcome of the job.
                example: success
                type: string
                nullable: true
              name:
                description: The name of the job.
                example: test-coverage
                type: string
              number:
                type: integer
                example: 1
              started_at:
                description: The time that the step started, in ISO 8601 format.
                example: '2019-08-08T08:00:00-07:00'
                format: date-time
                type: string
                nullable: true
              completed_at:
                description: The time that the job finished, in ISO 8601 format.
                example: '2019-08-08T08:00:00-07:00'
                format: date-time
                type: string
                nullable: true
        check_run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        labels:
          type: array
          items:
            type: string
          description: Labels for the workflow job. Specified by the "runs_on" attribute
            in the action's workflow file.
          example:
          - self-hosted
          - foo
          - bar
        runner_id:
          type: integer
          nullable: true
          example: 1
          description: The ID of the runner to which this job has been assigned. (If
            a runner hasn't yet been assigned, this will be null.)
        runner_name:
          type: string
          nullable: true
          example: my runner
          description: The name of the runner to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        runner_group_id:
          type: integer
          nullable: true
          example: 2
          description: The ID of the runner group to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        runner_group_name:
          type: string
          nullable: true
          example: my runner group
          description: The name of the runner group to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        workflow_name:
          type: string
          description: The name of the workflow.
          nullable: true
          example: Build
        head_branch:
          type: string
          description: The name of the current branch.
          nullable: true
          example: main
      required:
      - id
      - node_id
      - run_id
      - run_url
      - head_sha
      - workflow_name
      - head_branch
      - name
      - url
      - html_url
      - status
      - conclusion
      - started_at
      - completed_at
      - check_run_url
      - labels
      - runner_id
      - runner_name
      - runner_group_id
      - runner_group_name
      - created_at
    job-response:
      title: Job
      description: Information of a job execution in a workflow run
      type: object
      required:
      - total_count
      - jobs
      properties:
        total_count:
          type: integer
        jobs:
          type: array
          items:
            "$ref": "#/components/schemas/job"
    oidc-custom-sub-repo:
      title: Actions OIDC subject customization for a repository
      description: Actions OIDC subject customization for a repository
      type: object
      properties:
        use_default:
          description: Whether to use the default template or not. If `true`, the
            `include_claim_keys` field is ignored.
          type: boolean
        include_claim_keys:
          description: Array of unique strings. Each claim key can only contain alphanumeric
            characters and underscores.
          type: array
          items:
            type: string
      required:
      - use_default
    actions-secret:
      title: Actions Secret
      description: Set secrets for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - name
      - created_at
      - updated_at
    actions-secret-response:
      title: Actions Secret
      description: Set secrets for GitHub Actions.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/actions-secret"
    actions-variable:
      title: Actions Variable
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: The date and time at which the variable was created, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
          example: '2019-01-24T22:45:36.000Z'
        updated_at:
          description: The date and time at which the variable was last updated, in
            ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
          example: '2019-01-24T22:45:36.000Z'
      required:
      - name
      - value
      - created_at
      - updated_at
    actions-variable-response:
      title: Actions Variable
      type: object
      required:
      - total_count
      - variables
      properties:
        total_count:
          type: integer
        variables:
          type: array
          items:
            "$ref": "#/components/schemas/actions-variable"
    actions-enabled:
      type: boolean
      description: Whether GitHub Actions is enabled on the repository.
    actions-repository-permissions:
      type: object
      properties:
        enabled:
          "$ref": "#/components/schemas/actions-enabled"
        allowed_actions:
          "$ref": "#/components/schemas/allowed-actions"
        selected_actions_url:
          "$ref": "#/components/schemas/selected-actions-url"
      required:
      - enabled
    actions-workflow-access-to-repository:
      type: object
      properties:
        access_level:
          type: string
          description: |-
            Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the
            repository.

            `none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repos only. `organization` level access allows sharing across the organization.
          enum:
          - none
          - user
          - organization
      required:
      - access_level
    referenced-workflow:
      title: Referenced workflow
      description: A workflow referenced/reused by the initial caller workflow
      type: object
      properties:
        path:
          type: string
        sha:
          type: string
        ref:
          type: string
      required:
      - path
      - sha
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
      required:
      - id
      - number
      - url
      - head
      - base
    nullable-simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree_id:
          type: string
          description: SHA for the commit's tree
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        timestamp:
          description: Timestamp of the commit
          example: '2014-08-09T08:02:04+12:00'
          format: date-time
          type: string
        author:
          type: object
          description: Information about the Git author
          properties:
            name:
              description: Name of the commit's author
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's author
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
        committer:
          type: object
          description: Information about the Git committer
          properties:
            name:
              description: Name of the commit's committer
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's committer
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
      required:
      - id
      - tree_id
      - message
      - timestamp
      - author
      - committer
      nullable: true
    workflow-run:
      title: Workflow Run
      description: An invocation of a workflow
      type: object
      properties:
        id:
          type: integer
          description: The ID of the workflow run.
          example: 5
        name:
          type: string
          description: The name of the workflow run.
          nullable: true
          example: Build
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        check_suite_id:
          type: integer
          description: The ID of the associated check suite.
          example: 42
        check_suite_node_id:
          type: string
          description: The node ID of the associated check suite.
          example: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch:
          type: string
          nullable: true
          example: master
        head_sha:
          description: The SHA of the head commit that points to the version of the
            workflow being run.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        path:
          description: The full path of the workflow
          example: octocat/octo-repo/.github/workflows/ci.yml@main
          type: string
        run_number:
          type: integer
          description: The auto incrementing run number for the workflow run.
          example: 106
        run_attempt:
          type: integer
          description: Attempt number of the run, 1 for first attempt and higher if
            the workflow was re-run.
          example: 1
        referenced_workflows:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/referenced-workflow"
        event:
          type: string
          example: push
        status:
          type: string
          nullable: true
          example: completed
        conclusion:
          type: string
          nullable: true
          example: neutral
        workflow_id:
          type: integer
          description: The ID of the parent workflow.
          example: 5
        url:
          type: string
          description: The URL to the workflow run.
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        html_url:
          type: string
          example: https://github.com/github/hello-world/suites/4
        pull_requests:
          description: Pull requests that are open with a `head_sha` or `head_branch`
            that matches the workflow run. The returned pull requests do not necessarily
            indicate pull requests that triggered the run.
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        actor:
          "$ref": "#/components/schemas/simple-user"
        triggering_actor:
          "$ref": "#/components/schemas/simple-user"
        run_started_at:
          type: string
          format: date-time
          description: The start time of the latest run. Resets on re-run.
        jobs_url:
          description: The URL to the jobs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
        logs_url:
          description: The URL to download the logs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/logs
        check_suite_url:
          description: The URL to the associated check suite.
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/12
        artifacts_url:
          description: The URL to the artifacts for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
        cancel_url:
          description: The URL to cancel the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
        rerun_url:
          description: The URL to rerun the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
        previous_attempt_url:
          nullable: true
          description: The URL to the previous attempted run of this workflow, if
            one exists.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
        workflow_url:
          description: The URL to the workflow.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
        head_commit:
          "$ref": "#/components/schemas/nullable-simple-commit"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        head_repository:
          "$ref": "#/components/schemas/minimal-repository"
        head_repository_id:
          type: integer
          example: 5
        display_title:
          type: string
          example: Simple Workflow
          description: The event-specific title associated with the run or the run-name
            if set, or the value of `run-name` if it is set in the workflow.
      required:
      - id
      - node_id
      - head_branch
      - run_number
      - display_title
      - event
      - status
      - conclusion
      - head_sha
      - path
      - workflow_id
      - url
      - html_url
      - created_at
      - updated_at
      - head_commit
      - head_repository
      - repository
      - jobs_url
      - logs_url
      - check_suite_url
      - cancel_url
      - rerun_url
      - artifacts_url
      - workflow_url
      - pull_requests
    workflow-run-response:
      title: Workflow Run
      description: An invocation of a workflow
      type: object
      required:
      - total_count
      - workflow_runs
      properties:
        total_count:
          type: integer
        workflow_runs:
          type: array
          items:
            "$ref": "#/components/schemas/workflow-run"
    environment-approvals:
      title: Environment Approval
      description: An entry in the reviews log for environment deployments
      type: object
      properties:
        environments:
          description: The list of environments that were approved or rejected
          type: array
          items:
            type: object
            properties:
              id:
                description: The id of the environment.
                example: 56780428
                type: integer
              node_id:
                type: string
                example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
              name:
                description: The name of the environment.
                example: staging
                type: string
              url:
                type: string
                example: https://api.github.com/repos/github/hello-world/environments/staging
              html_url:
                type: string
                example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
              created_at:
                description: The time that the environment was created, in ISO 8601
                  format.
                example: '2020-11-23T22:00:40Z'
                format: date-time
                type: string
              updated_at:
                description: The time that the environment was last updated, in ISO
                  8601 format.
                example: '2020-11-23T22:00:40Z'
                format: date-time
                type: string
        state:
          description: Whether deployment to the environment(s) was approved or rejected
            or pending (with comments)
          enum:
          - approved
          - rejected
          - pending
          example: approved
          type: string
        user:
          "$ref": "#/components/schemas/simple-user"
        comment:
          type: string
          description: The comment submitted with the deployment review
          example: Ship it!
      required:
      - environments
      - state
      - user
      - comment
    review-custom-gates-comment-required:
      type: object
      properties:
        environment_name:
          type: string
          description: The name of the environment to approve or reject.
        comment:
          type: string
          description: Comment associated with the pending deployment protection rule.
            **Required when state is not provided.**
      required:
      - environment_name
      - comment
    review-custom-gates-state-required:
      type: object
      properties:
        environment_name:
          type: string
          description: The name of the environment to approve or reject.
        state:
          type: string
          description: Whether to approve or reject deployment to the specified environments.
          enum:
          - approved
          - rejected
        comment:
          type: string
          description: Optional comment to include with the review.
      required:
      - environment_name
      - state
    deployment-reviewer-type:
      type: string
      description: The type of reviewer.
      enum:
      - User
      - Team
      example: User
    pending-deployment:
      title: Pending Deployment
      description: Details of a deployment that is waiting for protection rules to
        pass
      type: object
      properties:
        environment:
          type: object
          properties:
            id:
              description: The id of the environment.
              example: 56780428
              type: integer
            node_id:
              type: string
              example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
            name:
              description: The name of the environment.
              example: staging
              type: string
            url:
              type: string
              example: https://api.github.com/repos/github/hello-world/environments/staging
            html_url:
              type: string
              example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        wait_timer:
          type: integer
          description: The set duration of the wait timer
          example: 30
        wait_timer_started_at:
          description: The time that the wait timer began.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
          nullable: true
        current_user_can_approve:
          description: Whether the currently authenticated user can approve the deployment
          type: boolean
          example: true
        reviewers:
          type: array
          description: The people or teams that may approve jobs that reference the
            environment. You can list up to six users or teams as reviewers. The reviewers
            must have at least read access to the repository. Only one of the required
            reviewers needs to approve the job for it to proceed.
          items:
            type: object
            properties:
              type:
                "$ref": "#/components/schemas/deployment-reviewer-type"
              reviewer:
                anyOf:
                - "$ref": "#/components/schemas/simple-user"
                - "$ref": "#/components/schemas/team"
      required:
      - environment
      - wait_timer
      - wait_timer_started_at
      - current_user_can_approve
      - reviewers
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          oneOf:
          - type: object
            additionalProperties: true
          - type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist
            at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly
            interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - sha
      - ref
      - task
      - environment
      - creator
      - payload
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    workflow-run-usage:
      title: Workflow Run Usage
      description: Workflow Run Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              required:
              - total_ms
              - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                    - job_id
                    - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            MACOS:
              type: object
              required:
              - total_ms
              - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                    - job_id
                    - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            WINDOWS:
              type: object
              required:
              - total_ms
              - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                    - job_id
                    - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
        run_duration_ms:
          type: integer
      required:
      - billable
    workflow:
      title: Workflow
      description: A GitHub Actions workflow
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDg6V29ya2Zsb3cxMg==
        name:
          type: string
          example: CI
        path:
          type: string
          example: ruby.yaml
        state:
          type: string
          example: active
          enum:
          - active
          - deleted
          - disabled_fork
          - disabled_inactivity
          - disabled_manually
        created_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        url:
          type: string
          example: https://api.github.com/repos/actions/setup-ruby/workflows/5
        html_url:
          type: string
          example: https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml
        badge_url:
          type: string
          example: https://github.com/actions/setup-ruby/workflows/CI/badge.svg
        deleted_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
      required:
      - id
      - node_id
      - name
      - path
      - state
      - url
      - html_url
      - badge_url
      - created_at
      - updated_at
    workflow-response:
      title: Workflow
      description: A GitHub Actions workflow
      type: object
      required:
      - total_count
      - workflows
      properties:
        total_count:
          type: integer
        workflows:
          type: array
          items:
            "$ref": "#/components/schemas/workflow"
    workflow-usage:
      title: Workflow Usage
      description: Workflow Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              properties:
                total_ms:
                  type: integer
            MACOS:
              type: object
              properties:
                total_ms:
                  type: integer
            WINDOWS:
              type: object
              properties:
                total_ms:
                  type: integer
      required:
      - billable
    activity:
      title: Activity
      description: Activity
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        before:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          description: The SHA of the commit before the activity.
        after:
          type: string
          example: 827efc6d56897b048c772eb4087f854f46256132
          description: The SHA of the commit after the activity.
        ref:
          type: string
          example: refs/heads/main
          description: The full Git reference, formatted as `refs/heads/<branch name>`.
        timestamp:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          description: The time when the activity occurred.
        activity_type:
          type: string
          example: force_push
          enum:
          - push
          - force_push
          - branch_deletion
          - branch_creation
          - pr_merge
          - merge_queue_merge
          description: The type of the activity that was performed.
        actor:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - id
      - node_id
      - before
      - after
      - ref
      - timestamp
      - activity_type
      - actor
    autolink:
      title: Autolink reference
      description: An autolink reference.
      type: object
      properties:
        id:
          type: integer
          example: 3
        key_prefix:
          description: The prefix of a key that is linkified.
          example: TICKET-
          type: string
        url_template:
          description: A template for the target URL that is generated if a key was
            found.
          example: https://example.com/TICKET?query=<num>
          type: string
        is_alphanumeric:
          description: Whether this autolink reference matches alphanumeric characters.
            If false, this autolink reference only matches numeric characters.
          example: true
          type: boolean
      required:
      - id
      - key_prefix
      - url_template
      - is_alphanumeric
    check-automated-security-fixes:
      title: Check Automated Security Fixes
      description: Check Automated Security Fixes
      type: object
      properties:
        enabled:
          type: boolean
          example: true
          description: Whether automated security fixes are enabled for the repository.
        paused:
          type: boolean
          example: false
          description: Whether automated security fixes are paused for the repository.
      required:
      - enabled
      - paused
    protected-branch-required-status-check:
      title: Protected Branch Required Status Check
      description: Protected Branch Required Status Check
      type: object
      properties:
        url:
          type: string
        enforcement_level:
          type: string
        contexts:
          type: array
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
              app_id:
                type: integer
                nullable: true
            required:
            - context
            - app_id
        contexts_url:
          type: string
        strict:
          type: boolean
      required:
      - contexts
      - checks
    protected-branch-admin-enforced:
      title: Protected Branch Admin Enforced
      description: Protected Branch Admin Enforced
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled:
          type: boolean
          example: true
      required:
      - url
      - enabled
    protected-branch-pull-request-review:
      title: Protected Branch Pull Request Review
      description: Protected Branch Pull Request Review
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
        dismissal_restrictions:
          type: object
          properties:
            users:
              description: The list of users with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/simple-user"
            teams:
              description: The list of teams with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/team"
            apps:
              description: The list of apps with review dismissal access.
              type: array
              items:
                "$ref": "#/components/schemas/integration"
            url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"'
            users_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"'
            teams_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"'
        bypass_pull_request_allowances:
          type: object
          description: Allow specific users, teams, or apps to bypass pull request
            requirements.
          properties:
            users:
              description: The list of users allowed to bypass pull request requirements.
              type: array
              items:
                "$ref": "#/components/schemas/simple-user"
            teams:
              description: The list of teams allowed to bypass pull request requirements.
              type: array
              items:
                "$ref": "#/components/schemas/team"
            apps:
              description: The list of apps allowed to bypass pull request requirements.
              type: array
              items:
                "$ref": "#/components/schemas/integration"
        dismiss_stale_reviews:
          type: boolean
          example: true
        require_code_owner_reviews:
          type: boolean
          example: true
        required_approving_review_count:
          type: integer
          minimum: 0
          maximum: 6
          example: 2
        require_last_push_approval:
          description: Whether the most recent push must be approved by someone other
            than the person who pushed it.
          type: boolean
          example: true
          default: false
      required:
      - dismiss_stale_reviews
      - require_code_owner_reviews
    branch-restriction-policy:
      title: Branch Restriction Policy
      description: Branch Restriction Policy
      type: object
      properties:
        url:
          type: string
          format: uri
        users_url:
          type: string
          format: uri
        teams_url:
          type: string
          format: uri
        apps_url:
          type: string
          format: uri
        users:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
              node_id:
                type: string
              avatar_url:
                type: string
              gravatar_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              starred_url:
                type: string
              subscriptions_url:
                type: string
              organizations_url:
                type: string
              repos_url:
                type: string
              events_url:
                type: string
              received_events_url:
                type: string
              type:
                type: string
              site_admin:
                type: boolean
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              name:
                type: string
              slug:
                type: string
              description:
                type: string
                nullable: true
              privacy:
                type: string
              notification_setting:
                type: string
              permission:
                type: string
              members_url:
                type: string
              repositories_url:
                type: string
              parent:
                type: string
                nullable: true
        apps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                type: string
              node_id:
                type: string
              owner:
                type: object
                properties:
                  login:
                    type: string
                  id:
                    type: integer
                  node_id:
                    type: string
                  url:
                    type: string
                  repos_url:
                    type: string
                  events_url:
                    type: string
                  hooks_url:
                    type: string
                  issues_url:
                    type: string
                  members_url:
                    type: string
                  public_members_url:
                    type: string
                  avatar_url:
                    type: string
                  description:
                    type: string
                  gravatar_id:
                    type: string
                    example: '""'
                  html_url:
                    type: string
                    example: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                  followers_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"'
                  following_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"'
                  gists_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"'
                  starred_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"'
                  subscriptions_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"'
                  organizations_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"'
                  received_events_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"'
                  type:
                    type: string
                    example: '"Organization"'
                  site_admin:
                    type: boolean
                    example: false
              name:
                type: string
              description:
                type: string
              external_url:
                type: string
              html_url:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              permissions:
                type: object
                properties:
                  metadata:
                    type: string
                  contents:
                    type: string
                  issues:
                    type: string
                  single_file:
                    type: string
              events:
                type: array
                items:
                  type: string
      required:
      - url
      - users_url
      - teams_url
      - apps_url
      - users
      - teams
      - apps
    branch-protection:
      title: Branch Protection
      description: Branch Protection
      type: object
      properties:
        url:
          type: string
        enabled:
          type: boolean
        required_status_checks:
          "$ref": "#/components/schemas/protected-branch-required-status-check"
        enforce_admins:
          "$ref": "#/components/schemas/protected-branch-admin-enforced"
        required_pull_request_reviews:
          "$ref": "#/components/schemas/protected-branch-pull-request-review"
        restrictions:
          "$ref": "#/components/schemas/branch-restriction-policy"
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
        block_creations:
          type: object
          properties:
            enabled:
              type: boolean
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
        name:
          type: string
          example: '"branch/with/protection"'
        protection_url:
          type: string
          example: '"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"'
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        lock_branch:
          type: object
          description: Whether to set the branch as read-only. If this is true, users
            will not be able to push to the branch.
          properties:
            enabled:
              default: false
              type: boolean
        allow_fork_syncing:
          type: object
          description: Whether users can pull changes from upstream when the branch
            is locked. Set to `true` to allow fork syncing. Set to `false` to prevent
            fork syncing.
          properties:
            enabled:
              default: false
              type: boolean
    short-branch:
      title: Short Branch
      description: Short Branch
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        protected:
          type: boolean
        protection:
          "$ref": "#/components/schemas/branch-protection"
        protection_url:
          type: string
          format: uri
      required:
      - name
      - commit
      - protected
    nullable-git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
      nullable: true
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
      required:
      - verified
      - reason
      - payload
      - signature
    diff-entry:
      title: Diff Entry
      description: Diff Entry
      type: object
      properties:
        sha:
          type: string
          example: bbcd538c8e72b8c175046e27cc8f907076331401
        filename:
          type: string
          example: file1.txt
        status:
          type: string
          enum:
          - added
          - removed
          - modified
          - renamed
          - copied
          - changed
          - unchanged
          example: added
        additions:
          type: integer
          example: 103
        deletions:
          type: integer
          example: 21
        changes:
          type: integer
          example: 124
        blob_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch:
          type: string
          example: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
        previous_filename:
          type: string
          example: file.txt
      required:
      - additions
      - blob_url
      - changes
      - contents_url
      - deletions
      - filename
      - raw_url
      - sha
      - status
    commit:
      title: Commit
      description: Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id:
          type: string
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              "$ref": "#/components/schemas/nullable-git-user"
            committer:
              "$ref": "#/components/schemas/nullable-git-user"
            message:
              type: string
              example: Fix all the bugs
            comment_count:
              type: integer
              example: 0
            tree:
              type: object
              properties:
                sha:
                  type: string
                  example: 827efc6d56897b048c772eb4087f854f46256132
                url:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
              required:
              - sha
              - url
            verification:
              "$ref": "#/components/schemas/verification"
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        committer:
          "$ref": "#/components/schemas/nullable-simple-user"
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
              url:
                type: string
                format: uri
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              html_url:
                type: string
                format: uri
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            required:
            - sha
            - url
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        files:
          type: array
          items:
            "$ref": "#/components/schemas/diff-entry"
      required:
      - url
      - sha
      - node_id
      - html_url
      - comments_url
      - commit
      - author
      - committer
      - parents
    branch-with-protection:
      title: Branch With Protection
      description: Branch With Protection
      type: object
      properties:
        name:
          type: string
        commit:
          "$ref": "#/components/schemas/commit"
        _links:
          type: object
          properties:
            html:
              type: string
            self:
              type: string
              format: uri
          required:
          - html
          - self
        protected:
          type: boolean
        protection:
          "$ref": "#/components/schemas/branch-protection"
        protection_url:
          type: string
          format: uri
        pattern:
          type: string
          example: '"mas*"'
        required_approving_review_count:
          type: integer
          example: 1
      required:
      - name
      - commit
      - _links
      - protection
      - protected
      - protection_url
    status-check-policy:
      title: Status Check Policy
      description: Status Check Policy
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict:
          type: boolean
          example: true
        contexts:
          type: array
          example:
          - continuous-integration/travis-ci
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
                example: continuous-integration/travis-ci
              app_id:
                type: integer
                nullable: true
            required:
            - context
            - app_id
        contexts_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
      required:
      - url
      - contexts_url
      - strict
      - contexts
      - checks
    protected-branch:
      title: Protected Branch
      description: Branch protections protect branches
      type: object
      properties:
        url:
          type: string
          format: uri
        required_status_checks:
          "$ref": "#/components/schemas/status-check-policy"
        required_pull_request_reviews:
          type: object
          properties:
            url:
              type: string
              format: uri
            dismiss_stale_reviews:
              type: boolean
            require_code_owner_reviews:
              type: boolean
            required_approving_review_count:
              type: integer
            require_last_push_approval:
              description: Whether the most recent push must be approved by someone
                other than the person who pushed it.
              type: boolean
              default: false
            dismissal_restrictions:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                users_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                users:
                  type: array
                  items:
                    "$ref": "#/components/schemas/simple-user"
                teams:
                  type: array
                  items:
                    "$ref": "#/components/schemas/team"
                apps:
                  type: array
                  items:
                    "$ref": "#/components/schemas/integration"
              required:
              - url
              - users_url
              - teams_url
              - users
              - teams
            bypass_pull_request_allowances:
              type: object
              properties:
                users:
                  type: array
                  items:
                    "$ref": "#/components/schemas/simple-user"
                teams:
                  type: array
                  items:
                    "$ref": "#/components/schemas/team"
                apps:
                  type: array
                  items:
                    "$ref": "#/components/schemas/integration"
              required:
              - users
              - teams
          required:
          - url
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        enforce_admins:
          type: object
          properties:
            url:
              type: string
              format: uri
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - url
          - enabled
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        restrictions:
          "$ref": "#/components/schemas/branch-restriction-policy"
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
        block_creations:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        lock_branch:
          type: object
          description: Whether to set the branch as read-only. If this is true, users
            will not be able to push to the branch.
          properties:
            enabled:
              default: false
              type: boolean
          additionalProperties: false
        allow_fork_syncing:
          type: object
          description: Whether users can pull changes from upstream when the branch
            is locked. Set to `true` to allow fork syncing. Set to `false` to prevent
            fork syncing.
          properties:
            enabled:
              default: false
              type: boolean
          additionalProperties: false
      required:
      - url
    deployment-simple:
      title: Deployment
      description: A deployment created as the result of an Actions check run from
        a workflow that references an environment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist
            at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly
            interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - task
      - environment
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    check-run:
      title: CheckRun
      description: A check performed on the code of a given code change
      type: object
      properties:
        id:
          description: The id of the check.
          example: 21
          type: integer
        head_sha:
          description: The SHA of the commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        external_id:
          type: string
          example: '42'
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        details_url:
          type: string
          example: https://example.com
          nullable: true
        status:
          description: The phase of the lifecycle that the check is currently in.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
        conclusion:
          type: string
          example: neutral
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          nullable: true
        started_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        completed_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        output:
          type: object
          properties:
            title:
              type: string
              nullable: true
            summary:
              type: string
              nullable: true
            text:
              type: string
              nullable: true
            annotations_count:
              type: integer
            annotations_url:
              type: string
              format: uri
          required:
          - title
          - summary
          - text
          - annotations_count
          - annotations_url
        name:
          description: The name of the check.
          example: test-coverage
          type: string
        check_suite:
          type: object
          properties:
            id:
              type: integer
          required:
          - id
          nullable: true
        app:
          "$ref": "#/components/schemas/nullable-integration"
        pull_requests:
          description: Pull requests that are open with a `head_sha` or `head_branch`
            that matches the check. The returned pull requests do not necessarily
            indicate pull requests that triggered the check.
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        deployment:
          "$ref": "#/components/schemas/deployment-simple"
      required:
      - id
      - node_id
      - head_sha
      - name
      - url
      - html_url
      - details_url
      - status
      - conclusion
      - started_at
      - completed_at
      - external_id
      - check_suite
      - output
      - app
      - pull_requests
    check-run-response:
      title: CheckRun
      description: A check performed on the code of a given code change
      type: object
      required:
      - total_count
      - check_runs
      properties:
        total_count:
          type: integer
        check_runs:
          type: array
          items:
            "$ref": "#/components/schemas/check-run"
    check-annotation:
      title: Check Annotation
      description: Check Annotation
      type: object
      properties:
        path:
          type: string
          example: README.md
        start_line:
          type: integer
          example: 2
        end_line:
          type: integer
          example: 2
        start_column:
          type: integer
          example: 5
          nullable: true
        end_column:
          type: integer
          example: 10
          nullable: true
        annotation_level:
          type: string
          example: warning
          nullable: true
        title:
          type: string
          example: Spell Checker
          nullable: true
        message:
          type: string
          example: Check your spelling for 'banaas'.
          nullable: true
        raw_details:
          type: string
          example: Do you mean 'bananas' or 'banana'?
          nullable: true
        blob_href:
          type: string
      required:
      - path
      - blob_href
      - start_line
      - end_line
      - start_column
      - end_column
      - annotation_level
      - title
      - message
      - raw_details
    simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree_id:
          type: string
          description: SHA for the commit's tree
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        timestamp:
          description: Timestamp of the commit
          example: '2014-08-09T08:02:04+12:00'
          format: date-time
          type: string
        author:
          type: object
          description: Information about the Git author
          properties:
            name:
              description: Name of the commit's author
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's author
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
        committer:
          type: object
          description: Information about the Git committer
          properties:
            name:
              description: Name of the commit's committer
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's committer
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
      required:
      - id
      - tree_id
      - message
      - timestamp
      - author
      - committer
    check-suite:
      title: CheckSuite
      description: A suite of checks performed on the code of a given code change
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        head_branch:
          type: string
          example: master
          nullable: true
        head_sha:
          description: The SHA of the head commit that is being checked.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        status:
          type: string
          example: completed
          enum:
          - queued
          - in_progress
          - completed
          nullable: true
        conclusion:
          type: string
          example: neutral
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          - startup_failure
          - stale
          -
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/5
          nullable: true
        before:
          type: string
          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          nullable: true
        after:
          type: string
          example: d6fde92930d4715a2b49857d24b940956b26d2d3
          nullable: true
        pull_requests:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
          nullable: true
        app:
          "$ref": "#/components/schemas/nullable-integration"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        head_commit:
          "$ref": "#/components/schemas/simple-commit"
        latest_check_runs_count:
          type: integer
        check_runs_url:
          type: string
        rerequestable:
          type: boolean
        runs_rerequestable:
          type: boolean
      required:
      - id
      - node_id
      - head_branch
      - status
      - conclusion
      - head_sha
      - url
      - before
      - after
      - created_at
      - updated_at
      - app
      - head_commit
      - repository
      - latest_check_runs_count
      - check_runs_url
      - pull_requests
    check-suite-response:
      title: CheckSuite
      description: A suite of checks performed on the code of a given code change
      type: object
      required:
      - total_count
      - check_suites
      properties:
        total_count:
          type: integer
        check_suites:
          type: array
          items:
            "$ref": "#/components/schemas/check-suite"
    check-suite-preference:
      title: Check Suite Preference
      description: Check suite configuration preferences for a repository.
      type: object
      required:
      - preferences
      - repository
      properties:
        preferences:
          type: object
          properties:
            auto_trigger_checks:
              type: array
              items:
                type: object
                properties:
                  app_id:
                    type: integer
                  setting:
                    type: boolean
                required:
                - app_id
                - setting
        repository:
          "$ref": "#/components/schemas/minimal-repository"
    code-scanning-alert-rule-summary:
      type: object
      properties:
        id:
          nullable: true
          type: string
          description: A unique identifier for the rule used to detect the alert.
        name:
          type: string
          description: The name of the rule used to detect the alert.
        tags:
          nullable: true
          type: array
          description: A set of tags applicable for the rule.
          items:
            type: string
        severity:
          nullable: true
          type: string
          description: The severity of the alert.
          enum:
          - none
          - note
          - warning
          - error
        description:
          type: string
          description: A short description of the rule used to detect the alert.
    code-scanning-alert-items:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        instances_url:
          "$ref": "#/components/schemas/alert-instances-url"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_reason:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
        dismissed_comment:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
        rule:
          "$ref": "#/components/schemas/code-scanning-alert-rule-summary"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        most_recent_instance:
          "$ref": "#/components/schemas/code-scanning-alert-instance"
      required:
      - number
      - created_at
      - url
      - html_url
      - instances_url
      - state
      - dismissed_by
      - dismissed_at
      - dismissed_reason
      - rule
      - tool
      - most_recent_instance
    code-scanning-alert:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        instances_url:
          "$ref": "#/components/schemas/alert-instances-url"
        state:
          "$ref": "#/components/schemas/code-scanning-alert-state"
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_reason:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
        dismissed_comment:
          "$ref": "#/components/schemas/code-scanning-alert-dismissed-comment"
        rule:
          "$ref": "#/components/schemas/code-scanning-alert-rule"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        most_recent_instance:
          "$ref": "#/components/schemas/code-scanning-alert-instance"
      required:
      - number
      - created_at
      - url
      - html_url
      - instances_url
      - state
      - dismissed_by
      - dismissed_at
      - dismissed_reason
      - rule
      - tool
      - most_recent_instance
    code-scanning-alert-set-state:
      description: Sets the state of the code scanning alert. You must provide `dismissed_reason`
        when you set the state to `dismissed`.
      type: string
      enum:
      - open
      - dismissed
    code-scanning-analysis-sarif-id:
      type: string
      description: An identifier for the upload.
      example: 6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53
    code-scanning-analysis-commit-sha:
      description: The SHA of the commit to which the analysis you are uploading relates.
      type: string
      minLength: 40
      maxLength: 40
      pattern: "^[0-9a-fA-F]+$"
    code-scanning-analysis-environment:
      type: string
      description: Identifies the variable values associated with the environment
        in which this analysis was performed.
    code-scanning-analysis-created-at:
      type: string
      description: 'The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    code-scanning-analysis-url:
      type: string
      description: The REST API URL of the analysis resource.
      format: uri
      readOnly: true
    code-scanning-analysis:
      type: object
      properties:
        ref:
          "$ref": "#/components/schemas/code-scanning-ref"
        commit_sha:
          "$ref": "#/components/schemas/code-scanning-analysis-commit-sha"
        analysis_key:
          "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
        environment:
          "$ref": "#/components/schemas/code-scanning-analysis-environment"
        category:
          "$ref": "#/components/schemas/code-scanning-analysis-category"
        error:
          type: string
          example: error reading field xyz
        created_at:
          "$ref": "#/components/schemas/code-scanning-analysis-created-at"
        results_count:
          type: integer
          description: The total number of results in the analysis.
        rules_count:
          type: integer
          description: The total number of rules used in the analysis.
        id:
          type: integer
          description: Unique identifier for this analysis.
        url:
          "$ref": "#/components/schemas/code-scanning-analysis-url"
        sarif_id:
          "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
        tool:
          "$ref": "#/components/schemas/code-scanning-analysis-tool"
        deletable:
          type: boolean
        warning:
          type: string
          description: Warning generated when processing the analysis
          example: 123 results were ignored
      required:
      - ref
      - commit_sha
      - analysis_key
      - environment
      - error
      - created_at
      - results_count
      - rules_count
      - id
      - url
      - sarif_id
      - tool
      - deletable
      - warning
    code-scanning-analysis-deletion:
      title: Analysis deletion
      description: Successful deletion of a code scanning analysis
      type: object
      properties:
        next_analysis_url:
          type: string
          description: Next deletable analysis in chain, without last analysis deletion
            confirmation
          format: uri
          readOnly: true
          nullable: true
        confirm_delete_url:
          type: string
          description: Next deletable analysis in chain, with last analysis deletion
            confirmation
          format: uri
          readOnly: true
          nullable: true
      required:
      - next_analysis_url
      - confirm_delete_url
    code-scanning-codeql-database:
      title: CodeQL Database
      description: A CodeQL database.
      type: object
      properties:
        id:
          type: integer
          description: The ID of the CodeQL database.
        name:
          type: string
          description: The name of the CodeQL database.
        language:
          type: string
          description: The language of the CodeQL database.
        uploader:
          "$ref": "#/components/schemas/simple-user"
        content_type:
          type: string
          description: The MIME type of the CodeQL database file.
        size:
          type: integer
          description: The size of the CodeQL database file in bytes.
        created_at:
          type: string
          format: date-time
          description: The date and time at which the CodeQL database was created,
            in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
        updated_at:
          type: string
          format: date-time
          description: The date and time at which the CodeQL database was last updated,
            in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
        url:
          type: string
          format: uri
          description: The URL at which to download the CodeQL database. The `Accept`
            header must be set to the value of the `content_type` property.
        commit_oid:
          type: string
          description: The commit SHA of the repository at the time the CodeQL database
            was created.
          nullable: true
      required:
      - id
      - name
      - language
      - uploader
      - content_type
      - size
      - created_at
      - updated_at
      - url
    code-scanning-default-setup:
      description: Configuration for code scanning default setup.
      type: object
      properties:
        state:
          description: Code scanning default setup has been configured or not.
          type: string
          enum:
          - configured
          - not-configured
        languages:
          description: Languages to be analyzed.
          type: array
          items:
            type: string
            enum:
            - c-cpp
            - csharp
            - go
            - java-kotlin
            - javascript-typescript
            - javascript
            - python
            - ruby
            - typescript
            - swift
        query_suite:
          description: CodeQL query suite to be used.
          type: string
          enum:
          - default
          - extended
        updated_at:
          description: Timestamp of latest configuration update.
          nullable: true
          type: string
          format: date-time
          example: '2023-12-06T14:20:20.000Z'
        schedule:
          description: The frequency of the periodic analysis.
          nullable: true
          type: string
          enum:
          - weekly
    code-scanning-default-setup-update:
      description: Configuration for code scanning default setup.
      type: object
      properties:
        state:
          description: Whether code scanning default setup has been configured or
            not.
          type: string
          enum:
          - configured
          - not-configured
        query_suite:
          description: CodeQL query suite to be used.
          type: string
          enum:
          - default
          - extended
        languages:
          description: CodeQL languages to be analyzed.
          type: array
          items:
            type: string
            enum:
            - c-cpp
            - csharp
            - go
            - java-kotlin
            - javascript-typescript
            - python
            - ruby
            - swift
      required:
      - state
    code-scanning-default-setup-update-response:
      description: |-
        You can use `run_url` to track the status of the run. This includes a property status and conclusion.
        You should not rely on this always being an actions workflow run object.
      type: object
      properties:
        run_id:
          description: ID of the corresponding run.
          type: integer
        run_url:
          description: URL of the corresponding run.
          type: string
    code-scanning-analysis-sarif-file:
      description: A Base64 string representing the SARIF file to upload. You must
        first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html)
        and then translate the contents of the file into a Base64 encoding string.
        For more information, see "[SARIF support for code scanning](https://docs.github.com/code-security/secure-coding/sarif-support-for-code-scanning)."
      type: string
    code-scanning-sarifs-receipt:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
        url:
          type: string
          description: The REST API URL for checking the status of the upload.
          format: uri
          readOnly: true
    code-scanning-sarifs-status:
      type: object
      properties:
        processing_status:
          type: string
          enum:
          - pending
          - complete
          - failed
          description: "`pending` files have not yet been processed, while `complete`
            means results from the SARIF have been stored. `failed` files have either
            not been processed at all, or could only be partially processed."
        analyses_url:
          type: string
          description: The REST API URL for getting the analyses associated with the
            upload.
          format: uri
          readOnly: true
          nullable: true
        errors:
          type: array
          items:
            type: string
          description: Any errors that ocurred during processing of the delivery.
          readOnly: true
          nullable: true
    codeowners-errors:
      title: CODEOWNERS errors
      description: A list of errors found in a repo's CODEOWNERS file
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              line:
                description: The line number where this errors occurs.
                type: integer
                example: 7
              column:
                description: The column number where this errors occurs.
                type: integer
                example: 3
              source:
                description: The contents of the line where the error occurs.
                type: string
                example: "* user"
              kind:
                description: The type of error.
                type: string
                example: Invalid owner
              suggestion:
                description: Suggested action to fix the error. This will usually
                  be `null`, but is provided for some common errors.
                type: string
                nullable: true
                example: The pattern `/` will never match anything, did you mean `*`
                  instead?
              message:
                description: A human-readable description of the error, combining
                  information from multiple fields, laid out for display in a monospaced
                  typeface (for example, a command-line setting).
                type: string
                example: |-
                  Invalid owner on line 7:

                    * user
                      ^
              path:
                description: The path of the file where the error occured.
                type: string
                example: ".github/CODEOWNERS"
            required:
            - line
            - column
            - kind
            - message
            - path
      required:
      - errors
    codespace-machine:
      type: object
      title: Codespace machine
      description: A description of the machine powering a codespace.
      properties:
        name:
          type: string
          description: The name of the machine.
          example: standardLinux
        display_name:
          type: string
          description: The display name of the machine includes cores, memory, and
            storage.
          example: 4 cores, 16 GB RAM, 64 GB storage
        operating_system:
          type: string
          description: The operating system of the machine.
          example: linux
        storage_in_bytes:
          type: integer
          description: How much storage is available to the codespace.
          example: 68719476736
        memory_in_bytes:
          type: integer
          description: How much memory is available to the codespace.
          example: 17179869184
        cpus:
          type: integer
          description: How many cores are available to the codespace.
          example: 4
        prebuild_availability:
          type: string
          description: Whether a prebuild is currently available when creating a codespace
            for this machine and repository. If a branch was not specified as a ref,
            the default branch will be assumed. Value will be "null" if prebuilds
            are not supported or prebuild availability could not be determined. Value
            will be "none" if no prebuild is available. Latest values "ready" and
            "in_progress" indicate the prebuild availability status.
          example: ready
          enum:
          - none
          - ready
          - in_progress
          nullable: true
      required:
      - name
      - display_name
      - operating_system
      - storage_in_bytes
      - memory_in_bytes
      - cpus
      - prebuild_availability
    codespace-machine-response:
      type: object
      title: Codespace machine
      description: A description of the machine powering a codespace.
      required:
      - total_count
      - machines
      properties:
        total_count:
          type: integer
        machines:
          type: array
          items:
            "$ref": "#/components/schemas/codespace-machine"
    codespace-default:
      title: Codespace attributes
      description: Codespace default attributes
      type: object
      required:
      - location
      - devcontainer_path
      properties:
        location:
          type: string
        devcontainer_path:
          type: string
          nullable: true
    codespace-default-response:
      title: Codespace attributes
      description: Codespace default attributes
      type: object
      properties:
        billable_owner:
          "$ref": "#/components/schemas/simple-user"
        defaults:
          "$ref": "#/components/schemas/codespace-default"
    codespaces-permissions-check-for-devcontainer:
      title: Codespaces Permissions Check
      description: Permission check result for a given devcontainer config.
      type: object
      properties:
        accepted:
          description: Whether the user has accepted the permissions defined by the
            devcontainer config
          example: true
          type: boolean
      required:
      - accepted
    repo-codespaces-secret:
      title: Codespaces Secret
      description: Set repository secrets for GitHub Codespaces.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - name
      - created_at
      - updated_at
    repo-codespaces-secret-response:
      title: Codespaces Secret
      description: Set repository secrets for GitHub Codespaces.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/repo-codespaces-secret"
    collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
        role_name:
          type: string
          example: admin
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - role_name
    repository-invitation:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        id:
          description: Unique identifier of the repository invitation.
          example: 42
          type: integer
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        invitee:
          "$ref": "#/components/schemas/nullable-simple-user"
        inviter:
          "$ref": "#/components/schemas/nullable-simple-user"
        permissions:
          description: The permission associated with the invitation.
          example: read
          type: string
          enum:
          - read
          - write
          - admin
          - triage
          - maintain
        created_at:
          type: string
          format: date-time
          example: '2016-06-13T14:52:50-05:00'
        expired:
          description: Whether or not the invitation has expired
          type: boolean
        url:
          description: URL for the repository invitation
          example: https://api.github.com/user/repository-invitations/1
          type: string
        html_url:
          type: string
          example: https://github.com/octocat/Hello-World/invitations
        node_id:
          type: string
      required:
      - id
      - node_id
      - permissions
      - inviter
      - invitee
      - repository
      - url
      - html_url
      - created_at
    nullable-collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
        role_name:
          type: string
          example: admin
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - role_name
      nullable: true
    repository-collaborator-permission:
      title: Repository Collaborator Permission
      description: Repository Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        role_name:
          type: string
          example: admin
        user:
          "$ref": "#/components/schemas/nullable-collaborator"
      required:
      - permission
      - role_name
      - user
    commit-comment:
      title: Commit Comment
      description: Commit Comment
      type: object
      properties:
        html_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        body:
          type: string
        path:
          type: string
          nullable: true
        position:
          type: integer
          nullable: true
        line:
          type: integer
          nullable: true
        commit_id:
          type: string
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          "$ref": "#/components/schemas/author-association"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - url
      - html_url
      - id
      - node_id
      - user
      - position
      - line
      - path
      - commit_id
      - body
      - author_association
      - created_at
      - updated_at
    branch-short:
      title: Branch Short
      description: Branch Short
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
          required:
          - sha
          - url
        protected:
          type: boolean
      required:
      - name
      - commit
      - protected
    link:
      title: Link
      description: Hypermedia Link
      type: object
      properties:
        href:
          type: string
      required:
      - href
    auto-merge:
      title: Auto merge
      description: The status of auto merging a pull request.
      type: object
      properties:
        enabled_by:
          "$ref": "#/components/schemas/simple-user"
        merge_method:
          type: string
          description: The merge method to use.
          enum:
          - merge
          - squash
          - rebase
        commit_title:
          type: string
          description: Title for the merge commit message.
        commit_message:
          type: string
          description: Commit message for the merge commit.
      required:
      - enabled_by
      - merge_method
      - commit_title
      - commit_message
      nullable: true
    pull-request-simple:
      title: Pull Request Simple
      description: Pull Request Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        locked:
          type: boolean
          example: true
        title:
          type: string
          example: new-feature
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
                nullable: true
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_reviewers:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_teams:
          type: array
          items:
            "$ref": "#/components/schemas/team"
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              "$ref": "#/components/schemas/repository"
            sha:
              type: string
            user:
              "$ref": "#/components/schemas/nullable-simple-user"
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              "$ref": "#/components/schemas/repository"
            sha:
              type: string
            user:
              "$ref": "#/components/schemas/nullable-simple-user"
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              "$ref": "#/components/schemas/link"
            commits:
              "$ref": "#/components/schemas/link"
            statuses:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            issue:
              "$ref": "#/components/schemas/link"
            review_comments:
              "$ref": "#/components/schemas/link"
            review_comment:
              "$ref": "#/components/schemas/link"
            self:
              "$ref": "#/components/schemas/link"
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          "$ref": "#/components/schemas/author-association"
        auto_merge:
          "$ref": "#/components/schemas/auto-merge"
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
    simple-commit-status:
      title: Simple Commit Status
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        context:
          type: string
        target_url:
          type: string
          format: uri
          nullable: true
        required:
          type: boolean
          nullable: true
        avatar_url:
          type: string
          nullable: true
          format: uri
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - description
      - id
      - node_id
      - state
      - context
      - target_url
      - avatar_url
      - url
      - created_at
      - updated_at
    combined-commit-status:
      title: Combined Commit Status
      description: Combined Commit Status
      type: object
      properties:
        state:
          type: string
        statuses:
          type: array
          items:
            "$ref": "#/components/schemas/simple-commit-status"
        sha:
          type: string
        total_count:
          type: integer
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        commit_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
      required:
      - state
      - sha
      - total_count
      - statuses
      - repository
      - commit_url
      - url
    status:
      title: Status
      description: The status of a commit.
      type: object
      properties:
        url:
          type: string
        avatar_url:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        description:
          type: string
          nullable: true
        target_url:
          type: string
          nullable: true
        context:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - url
      - avatar_url
      - id
      - node_id
      - state
      - description
      - target_url
      - context
      - created_at
      - updated_at
      - creator
    nullable-code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
      - url
      - key
      - name
      - html_url
      nullable: true
    nullable-community-health-file:
      title: Community Health File
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
      required:
      - url
      - html_url
      nullable: true
    community-profile:
      title: Community Profile
      description: Community Profile
      type: object
      properties:
        health_percentage:
          type: integer
          example: 100
        description:
          type: string
          example: My first repository on GitHub!
          nullable: true
        documentation:
          type: string
          example: example.com
          nullable: true
        files:
          type: object
          properties:
            code_of_conduct:
              "$ref": "#/components/schemas/nullable-code-of-conduct-simple"
            code_of_conduct_file:
              "$ref": "#/components/schemas/nullable-community-health-file"
            license:
              "$ref": "#/components/schemas/nullable-license-simple"
            contributing:
              "$ref": "#/components/schemas/nullable-community-health-file"
            readme:
              "$ref": "#/components/schemas/nullable-community-health-file"
            issue_template:
              "$ref": "#/components/schemas/nullable-community-health-file"
            pull_request_template:
              "$ref": "#/components/schemas/nullable-community-health-file"
          required:
          - code_of_conduct
          - code_of_conduct_file
          - license
          - contributing
          - readme
          - issue_template
          - pull_request_template
        updated_at:
          type: string
          format: date-time
          example: '2017-02-28T19:09:29Z'
          nullable: true
        content_reports_enabled:
          type: boolean
          example: true
      required:
      - health_percentage
      - description
      - documentation
      - files
      - updated_at
    commit-comparison:
      title: Commit Comparison
      description: Commit Comparison
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          "$ref": "#/components/schemas/commit"
        merge_base_commit:
          "$ref": "#/components/schemas/commit"
        status:
          type: string
          enum:
          - diverged
          - ahead
          - behind
          - identical
          example: ahead
        ahead_by:
          type: integer
          example: 4
        behind_by:
          type: integer
          example: 5
        total_commits:
          type: integer
          example: 6
        commits:
          type: array
          items:
            "$ref": "#/components/schemas/commit"
        files:
          type: array
          items:
            "$ref": "#/components/schemas/diff-entry"
      required:
      - url
      - html_url
      - permalink_url
      - diff_url
      - patch_url
      - base_commit
      - merge_base_commit
      - status
      - ahead_by
      - behind_by
      - total_commits
      - commits
    content-tree:
      title: Content Tree
      description: Content Tree
      type: object
      properties:
        type:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        entries:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              size:
                type: integer
              name:
                type: string
              path:
                type: string
              content:
                type: string
              sha:
                type: string
              url:
                type: string
                format: uri
              git_url:
                type: string
                format: uri
                nullable: true
              html_url:
                type: string
                format: uri
                nullable: true
              download_url:
                type: string
                format: uri
                nullable: true
              _links:
                type: object
                properties:
                  git:
                    type: string
                    format: uri
                    nullable: true
                  html:
                    type: string
                    format: uri
                    nullable: true
                  self:
                    type: string
                    format: uri
                required:
                - git
                - html
                - self
            required:
            - _links
            - git_url
            - html_url
            - download_url
            - name
            - path
            - sha
            - size
            - type
            - url
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-directory:
      title: Content Directory
      description: A list of directory items
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - dir
            - file
            - submodule
            - symlink
          size:
            type: integer
          name:
            type: string
          path:
            type: string
          content:
            type: string
          sha:
            type: string
          url:
            type: string
            format: uri
          git_url:
            type: string
            format: uri
            nullable: true
          html_url:
            type: string
            format: uri
            nullable: true
          download_url:
            type: string
            format: uri
            nullable: true
          _links:
            type: object
            properties:
              git:
                type: string
                format: uri
                nullable: true
              html:
                type: string
                format: uri
                nullable: true
              self:
                type: string
                format: uri
            required:
            - git
            - html
            - self
        required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
    content-file:
      title: Content File
      description: Content File
      type: object
      properties:
        type:
          type: string
          enum:
          - file
        encoding:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        content:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        target:
          type: string
          example: '"actual/actual.md"'
        submodule_git_url:
          type: string
          example: '"git://example.com/defunkt/dotjs.git"'
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-symlink:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
          enum:
          - symlink
        target:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - target
    content-submodule:
      title: Submodule Content
      description: An object describing a submodule
      type: object
      properties:
        type:
          type: string
          enum:
          - submodule
        submodule_git_url:
          type: string
          format: uri
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - submodule_git_url
    file-commit:
      title: File Commit
      description: File Commit
      type: object
      required:
      - content
      - commit
      properties:
        content:
          type: object
          properties:
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            size:
              type: integer
            url:
              type: string
            html_url:
              type: string
            git_url:
              type: string
            download_url:
              type: string
            type:
              type: string
            _links:
              type: object
              properties:
                self:
                  type: string
                git:
                  type: string
                html:
                  type: string
          nullable: true
        commit:
          type: object
          properties:
            sha:
              type: string
            node_id:
              type: string
            url:
              type: string
            html_url:
              type: string
            author:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            committer:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
            tree:
              type: object
              properties:
                url:
                  type: string
                sha:
                  type: string
            parents:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                  html_url:
                    type: string
                  sha:
                    type: string
            verification:
              type: object
              properties:
                verified:
                  type: boolean
                reason:
                  type: string
                signature:
                  type: string
                  nullable: true
                payload:
                  type: string
                  nullable: true
    contributor:
      title: Contributor
      description: Contributor
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        contributions:
          type: integer
        email:
          type: string
        name:
          type: string
      required:
      - contributions
      - type
    dependabot-alert:
      type: object
      description: A Dependabot alert.
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        state:
          type: string
          description: The state of the Dependabot alert.
          readOnly: true
          enum:
          - auto_dismissed
          - dismissed
          - fixed
          - open
        dependency:
          type: object
          description: Details for the vulnerable dependency.
          readOnly: true
          properties:
            package:
              "$ref": "#/components/schemas/dependabot-alert-package"
            manifest_path:
              type: string
              description: The full path to the dependency manifest file, relative
                to the root of the repository.
              readOnly: true
            scope:
              type: string
              description: The execution scope of the vulnerable dependency.
              readOnly: true
              nullable: true
              enum:
              - development
              - runtime
        security_advisory:
          "$ref": "#/components/schemas/dependabot-alert-security-advisory"
        security_vulnerability:
          "$ref": "#/components/schemas/dependabot-alert-security-vulnerability"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/alert-updated-at"
        dismissed_at:
          "$ref": "#/components/schemas/alert-dismissed-at"
        dismissed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        dismissed_reason:
          type: string
          description: The reason that the alert was dismissed.
          nullable: true
          enum:
          - fix_started
          - inaccurate
          - no_bandwidth
          - not_used
          - tolerable_risk
        dismissed_comment:
          type: string
          description: An optional comment associated with the alert's dismissal.
          nullable: true
          maxLength: 280
        fixed_at:
          "$ref": "#/components/schemas/alert-fixed-at"
        auto_dismissed_at:
          "$ref": "#/components/schemas/alert-auto-dismissed-at"
      required:
      - number
      - state
      - dependency
      - security_advisory
      - security_vulnerability
      - url
      - html_url
      - created_at
      - updated_at
      - dismissed_at
      - dismissed_by
      - dismissed_reason
      - dismissed_comment
      - fixed_at
      additionalProperties: false
    dependabot-secret:
      title: Dependabot Secret
      description: Set secrets for Dependabot.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: MY_ARTIFACTORY_PASSWORD
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - name
      - created_at
      - updated_at
    dependabot-secret-response:
      title: Dependabot Secret
      description: Set secrets for Dependabot.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/dependabot-secret"
    dependency-graph-diff:
      title: Dependency Graph Diff
      description: A diff of the dependencies between two commits.
      type: array
      items:
        type: object
        properties:
          change_type:
            type: string
            enum:
            - added
            - removed
          manifest:
            type: string
            example: path/to/package-lock.json
          ecosystem:
            type: string
            example: npm
          name:
            type: string
            example: "@actions/core"
          version:
            type: string
            example: 1.0.0
          package_url:
            type: string
            nullable: true
            example: pkg:/npm/%40actions/core@1.1.0
          license:
            type: string
            nullable: true
            example: MIT
          source_repository_url:
            type: string
            nullable: true
            example: https://github.com/github/actions
          vulnerabilities:
            type: array
            items:
              type: object
              properties:
                severity:
                  type: string
                  example: critical
                advisory_ghsa_id:
                  type: string
                  example: GHSA-rf4j-j272-fj86
                advisory_summary:
                  type: string
                  example: A summary of the advisory.
                advisory_url:
                  type: string
                  example: https://github.com/advisories/GHSA-rf4j-j272-fj86
              required:
              - severity
              - advisory_ghsa_id
              - advisory_summary
              - advisory_url
          scope:
            description: Where the dependency is utilized. `development` means that
              the dependency is only utilized in the development environment. `runtime`
              means that the dependency is utilized at runtime and in the development
              environment.
            type: string
            enum:
            - unknown
            - runtime
            - development
        required:
        - change_type
        - manifest
        - ecosystem
        - name
        - version
        - package_url
        - license
        - source_repository_url
        - vulnerabilities
        - scope
    dependency-graph-spdx-sbom:
      title: Dependency Graph SPDX SBOM
      description: A schema for the SPDX JSON format returned by the Dependency Graph.
      type: object
      properties:
        sbom:
          type: object
          properties:
            SPDXID:
              type: string
              example: SPDXRef-DOCUMENT
              description: The SPDX identifier for the SPDX document.
            spdxVersion:
              type: string
              example: SPDX-2.3
              description: The version of the SPDX specification that this document
                conforms to.
            creationInfo:
              type: object
              properties:
                created:
                  type: string
                  example: '2021-11-03T00:00:00Z'
                  description: The date and time the SPDX document was created.
                creators:
                  type: array
                  items:
                    type: string
                    example: GitHub
                  description: The tools that were used to generate the SPDX document.
              required:
              - created
              - creators
            name:
              type: string
              example: github/github
              description: The name of the SPDX document.
            dataLicense:
              type: string
              example: CC0-1.0
              description: The license under which the SPDX document is licensed.
            documentDescribes:
              type: array
              items:
                type: string
                example: github/github
              description: The name of the repository that the SPDX document describes.
            documentNamespace:
              type: string
              example: https://github.com/example/dependency_graph/sbom-123
              description: The namespace for the SPDX document.
            packages:
              type: array
              items:
                type: object
                properties:
                  SPDXID:
                    type: string
                    example: SPDXRef-Package
                    description: A unique SPDX identifier for the package.
                  name:
                    type: string
                    example: rubygems:github/github
                    description: The name of the package.
                  versionInfo:
                    type: string
                    example: 1.0.0
                    description: |-
                      The version of the package. If the package does not have an exact version specified,
                      a version range is given.
                  downloadLocation:
                    type: string
                    example: NOASSERTION
                    description: |-
                      The location where the package can be downloaded,
                      or NOASSERTION if this has not been determined.
                  filesAnalyzed:
                    type: boolean
                    example: false
                    description: |-
                      Whether the package's file content has been subjected to
                      analysis during the creation of the SPDX document.
                  licenseConcluded:
                    type: string
                    example: MIT
                    description: The license of the package as determined while creating
                      the SPDX document.
                  licenseDeclared:
                    type: string
                    example: NOASSERTION
                    description: |-
                      The license of the package as declared by its author, or NOASSERTION if this information
                      was not available when the SPDX document was created.
                  supplier:
                    type: string
                    example: NOASSERTION
                    description: The distribution source of this package, or NOASSERTION
                      if this was not determined.
                  externalRefs:
                    type: array
                    items:
                      type: object
                      properties:
                        referenceCategory:
                          type: string
                          example: PACKAGE-MANAGER
                          description: The category of reference to an external resource
                            this reference refers to.
                        referenceLocator:
                          type: string
                          example: pkg:gem/rails@6.0.1
                          description: A locator for the particular external resource
                            this reference refers to.
                        referenceType:
                          type: string
                          example: purl
                          description: The category of reference to an external resource
                            this reference refers to.
                      required:
                      - referenceCategory
                      - referenceLocator
                      - referenceType
              required:
              - SPDXID
              - name
              - versionInfo
              - downloadLocation
              - filesAnalyzed
              - supplier
          required:
          - SPDXID
          - spdxVersion
          - creationInfo
          - name
          - dataLicense
          - documentDescribes
          - documentNamespace
          - packages
      required:
      - sbom
    metadata:
      title: metadata
      description: User-defined metadata to store domain-specific information limited
        to 8 keys with scalar values.
      type: object
      maxProperties: 8
      additionalProperties:
        nullable: true
        anyOf:
        - type: string
        - type: number
        - type: boolean
    dependency:
      type: object
      properties:
        package_url:
          type: string
          description: Package-url (PURL) of dependency. See https://github.com/package-url/purl-spec
            for more details.
          example: pkg:/npm/%40actions/http-client@1.0.11
          pattern: "^pkg"
        metadata:
          "$ref": "#/components/schemas/metadata"
        relationship:
          type: string
          description: A notation of whether a dependency is requested directly by
            this manifest or is a dependency of another dependency.
          example: direct
          enum:
          - direct
          - indirect
        scope:
          type: string
          description: A notation of whether the dependency is required for the primary
            build artifact (runtime) or is only used for development. Future versions
            of this specification may allow for more granular scopes.
          example: runtime
          enum:
          - runtime
          - development
        dependencies:
          type: array
          description: Array of package-url (PURLs) of direct child dependencies.
          example: "@actions/http-client"
          items:
            type: string
      additionalProperties: false
    manifest:
      type: object
      properties:
        name:
          type: string
          description: The name of the manifest.
          example: package-lock.json
        file:
          type: object
          properties:
            source_location:
              type: string
              description: The path of the manifest file relative to the root of the
                Git repository.
              example: "/src/build/package-lock.json"
          additionalProperties: false
        metadata:
          "$ref": "#/components/schemas/metadata"
        resolved:
          type: object
          description: A collection of resolved package dependencies.
          additionalProperties:
            "$ref": "#/components/schemas/dependency"
      required:
      - name
      additionalProperties: false
    snapshot:
      title: snapshot
      description: Create a new snapshot of a repository's dependencies.
      type: object
      properties:
        version:
          description: The version of the repository snapshot submission.
          type: integer
        job:
          type: object
          properties:
            id:
              type: string
              description: The external ID of the job.
              example: 5622a2b0-63f6-4732-8c34-a1ab27e102a11
            correlator:
              type: string
              description: Correlator provides a key that is used to group snapshots
                submitted over time. Only the "latest" submitted snapshot for a given
                combination of `job.correlator` and `detector.name` will be considered
                when calculating a repository's current dependencies. Correlator should
                be as unique as it takes to distinguish all detection runs for a given
                "wave" of CI workflow you run. If you're using GitHub Actions, a good
                default value for this could be the environment variables GITHUB_WORKFLOW
                and GITHUB_JOB concatenated together. If you're using a build matrix,
                then you'll also need to add additional key(s) to distinguish between
                each submission inside a matrix variation.
              example: yourworkflowname_yourjobname
            html_url:
              type: string
              description: The url for the job.
              example: http://example.com/build
          required:
          - id
          - correlator
          additionalProperties: false
        sha:
          description: 'The commit SHA associated with this dependency snapshot. Maximum
            length: 40 characters.'
          type: string
          example: ddc951f4b1293222421f2c8df679786153acf689
          minLength: 40
          maxLength: 40
        ref:
          description: The repository branch that triggered this snapshot.
          type: string
          pattern: "^refs/"
          example: refs/heads/main
        detector:
          type: object
          description: A description of the detector used.
          properties:
            name:
              type: string
              description: The name of the detector used.
              example: docker buildtime detector
            version:
              type: string
              description: The version of the detector used.
              example: 1.0.0
            url:
              type: string
              description: The url of the detector used.
              example: http://example.com/docker-buildtimer-detector
          required:
          - name
          - version
          - url
          additionalProperties: false
        metadata:
          "$ref": "#/components/schemas/metadata"
        manifests:
          type: object
          description: A collection of package manifests, which are a collection of
            related dependencies declared in a file or representing a logical group
            of dependencies.
          additionalProperties:
            "$ref": "#/components/schemas/manifest"
        scanned:
          type: string
          format: date-time
          description: The time at which the snapshot was scanned.
          example: '2020-06-13T14:52:50-05:00'
      required:
      - detector
      - version
      - ref
      - sha
      - job
      - scanned
      additionalProperties: false
    snapshot-response:
      title: snapshot
      description: Snapshot of a newly created repository's dependencies.
      type: object
      required:
      - id
      - created_at
      - result
      - message
      properties:
        id:
          type: integer
          description: ID of the created snapshot.
        created_at:
          type: string
          description: The time at which the snapshot was created.
        result:
          type: string
          description: Either "SUCCESS", "ACCEPTED", or "INVALID". "SUCCESS" indicates
            that the snapshot was successfully created and the repository's dependencies
            were updated. "ACCEPTED" indicates that the snapshot was successfully
            created, but the repository's dependencies were not updated. "INVALID"
            indicates that the snapshot was malformed.
        message:
          type: string
          description: A message providing further details about the result, such
            as why the dependencies were not updated.
    deployment-status:
      title: Deployment Status
      description: The status of a deployment.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state:
          description: The state of the status.
          enum:
          - error
          - failure
          - inactive
          - pending
          - success
          - queued
          - in_progress
          example: success
          type: string
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        description:
          description: A short description of the status.
          default: ''
          type: string
          maxLength: 140
          example: Deployment finished successfully.
        environment:
          description: The environment of the deployment that the status is for.
          default: ''
          type: string
          example: production
        target_url:
          description: 'Deprecated: the URL to associate with this status.'
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        deployment_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        environment_url:
          description: The URL for accessing your environment.
          default: ''
          type: string
          format: uri
          example: https://staging.example.com/
        log_url:
          description: The URL to associate with this status.
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - state
      - creator
      - description
      - deployment_url
      - target_url
      - repository_url
      - url
      - created_at
      - updated_at
    wait-timer:
      type: integer
      example: 30
      description: The amount of time to delay a job after the job is initially triggered.
        The time (in minutes) must be an integer between 0 and 43,200 (30 days).
    deployment-branch-policy-settings:
      type: object
      description: The type of deployment branch policy for this environment. To allow
        all branches to deploy, set to `null`.
      properties:
        protected_branches:
          type: boolean
          description: Whether only branches with branch protection rules can deploy
            to this environment. If `protected_branches` is `true`, `custom_branch_policies`
            must be `false`; if `protected_branches` is `false`, `custom_branch_policies`
            must be `true`.
        custom_branch_policies:
          type: boolean
          description: Whether only branches that match the specified name patterns
            can deploy to this environment.  If `custom_branch_policies` is `true`,
            `protected_branches` must be `false`; if `custom_branch_policies` is `false`,
            `protected_branches` must be `true`.
      nullable: true
      required:
      - protected_branches
      - custom_branch_policies
    environment:
      title: Environment
      description: Details of a deployment environment
      type: object
      properties:
        id:
          description: The id of the environment.
          example: 56780428
          type: integer
        node_id:
          type: string
          example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
        name:
          description: The name of the environment.
          example: staging
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/environments/staging
        html_url:
          type: string
          example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at:
          description: The time that the environment was created, in ISO 8601 format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        updated_at:
          description: The time that the environment was last updated, in ISO 8601
            format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        protection_rules:
          type: array
          description: Built-in deployment protection rules for the environment.
          items:
            anyOf:
            - type: object
              properties:
                id:
                  type: integer
                  example: 3515
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM1MTU=
                type:
                  type: string
                  example: wait_timer
                wait_timer:
                  "$ref": "#/components/schemas/wait-timer"
              required:
              - id
              - node_id
              - type
            - type: object
              properties:
                id:
                  type: integer
                  example: 3755
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM3NTU=
                prevent_self_review:
                  type: boolean
                  example: false
                  description: Whether deployments to this environment can be approved
                    by the user who created the deployment.
                type:
                  type: string
                  example: required_reviewers
                reviewers:
                  type: array
                  description: The people or teams that may approve jobs that reference
                    the environment. You can list up to six users or teams as reviewers.
                    The reviewers must have at least read access to the repository.
                    Only one of the required reviewers needs to approve the job for
                    it to proceed.
                  items:
                    type: object
                    properties:
                      type:
                        "$ref": "#/components/schemas/deployment-reviewer-type"
                      reviewer:
                        anyOf:
                        - "$ref": "#/components/schemas/simple-user"
                        - "$ref": "#/components/schemas/team"
              required:
              - id
              - node_id
              - type
            - type: object
              properties:
                id:
                  type: integer
                  example: 3515
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM1MTU=
                type:
                  type: string
                  example: branch_policy
              required:
              - id
              - node_id
              - type
        deployment_branch_policy:
          "$ref": "#/components/schemas/deployment-branch-policy-settings"
      required:
      - id
      - node_id
      - name
      - url
      - html_url
      - created_at
      - updated_at
    environment-response:
      title: Environment
      description: Details of a deployment environment
      type: object
      properties:
        total_count:
          description: The number of environments in this repository
          example: 5
          type: integer
        environments:
          type: array
          items:
            "$ref": "#/components/schemas/environment"
    prevent-self-review:
      type: boolean
      example: false
      description: Whether or not a user who created the job is prevented from approving
        their own job.
    deployment-branch-policy:
      title: Deployment branch policy
      description: Details of a deployment branch or tag policy.
      type: object
      properties:
        id:
          description: The unique identifier of the branch or tag policy.
          type: integer
          example: 361471
        node_id:
          type: string
          example: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=
        name:
          description: The name pattern that branches or tags must match in order
            to deploy to the environment.
          type: string
          example: release/*
        type:
          description: Whether this rule targets a branch or tag.
          type: string
          example: branch
          enum:
          - branch
          - tag
    deployment-branch-policy-response:
      title: Deployment branch policy
      description: Details of a deployment branch or tag policy.
      type: object
      properties:
        total_count:
          description: The number of deployment branch policies for the environment.
          type: integer
          example: 2
        branch_policies:
          type: array
          items:
            "$ref": "#/components/schemas/deployment-branch-policy"
      required:
      - total_count
      - branch_policies
    deployment-branch-policy-name-pattern-with-type:
      title: Deployment branch and tag policy name pattern
      type: object
      properties:
        name:
          description: |-
            The name pattern that branches or tags must match in order to deploy to the environment.

            Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.
            For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
          type: string
          example: release/*
        type:
          description: Whether this rule targets a branch or tag
          type: string
          example: branch
          enum:
          - branch
          - tag
      required:
      - name
    deployment-branch-policy-name-pattern:
      title: Deployment branch policy name pattern
      type: object
      properties:
        name:
          description: |-
            The name pattern that branches must match in order to deploy to the environment.

            Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.
            For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
          type: string
          example: release/*
      required:
      - name
    custom-deployment-rule-app:
      title: Custom deployment protection rule app
      description: A GitHub App that is providing a custom deployment protection rule.
      type: object
      properties:
        id:
          type: integer
          example: 3515
          description: The unique identifier of the deployment protection rule integration.
        slug:
          type: string
          example: my-custom-app
          description: The slugified name of the deployment protection rule integration.
        integration_url:
          type: string
          example: https://api.github.com/apps/custom-app-slug
          description: The URL for the endpoint to get details about the app.
        node_id:
          type: string
          example: MDQ6R2F0ZTM1MTU=
          description: The node ID for the deployment protection rule integration.
      required:
      - id
      - slug
      - integration_url
      - node_id
    custom-deployment-rule-app-response:
      title: Custom deployment protection rule app
      description: A GitHub App that is providing a custom deployment protection rule.
      type: object
      properties:
        total_count:
          description: The total number of custom deployment protection rule integrations
            available for this environment.
          type: integer
          example: 35
        available_custom_deployment_protection_rule_integrations:
          type: array
          items:
            "$ref": "#/components/schemas/custom-deployment-rule-app"
    deployment-protection-rule:
      title: Deployment protection rule
      description: Deployment protection rule
      type: object
      properties:
        id:
          type: integer
          example: 3515
          description: The unique identifier for the deployment protection rule.
        node_id:
          type: string
          example: MDQ6R2F0ZTM1MTU=
          description: The node ID for the deployment protection rule.
        enabled:
          type: boolean
          example: true
          description: Whether the deployment protection rule is enabled for the environment.
        app:
          "$ref": "#/components/schemas/custom-deployment-rule-app"
      required:
      - id
      - node_id
      - enabled
      - app
    deployment-protection-rule-response:
      title: Deployment protection rule
      description: Deployment protection rule
      type: object
      properties:
        total_count:
          description: The number of enabled custom deployment protection rules for
            this environment
          type: integer
          example: 10
        custom_deployment_protection_rules:
          type: array
          items:
            "$ref": "#/components/schemas/deployment-protection-rule"
      example:
        "$ref": "#/components/examples/deployment-protection-rules"
    short-blob:
      title: Short Blob
      description: Short Blob
      type: object
      properties:
        url:
          type: string
        sha:
          type: string
      required:
      - url
      - sha
    blob:
      title: Blob
      description: Blob
      type: object
      properties:
        content:
          type: string
        encoding:
          type: string
        url:
          type: string
          format: uri
        sha:
          type: string
        size:
          type: integer
          nullable: true
        node_id:
          type: string
        highlighted_content:
          type: string
      required:
      - sha
      - url
      - node_id
      - size
      - content
      - encoding
    git-commit:
      title: Git Commit
      description: Low-level Git commit operations within a repository
      type: object
      properties:
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        author:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        committer:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        tree:
          type: object
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                type: string
                format: uri
              html_url:
                type: string
                format: uri
            required:
            - sha
            - url
            - html_url
        verification:
          type: object
          properties:
            verified:
              type: boolean
            reason:
              type: string
            signature:
              type: string
              nullable: true
            payload:
              type: string
              nullable: true
          required:
          - verified
          - reason
          - signature
          - payload
        html_url:
          type: string
          format: uri
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - tree
      - message
      - parents
      - verification
    git-ref:
      title: Git Reference
      description: Git references within a repository
      type: object
      properties:
        ref:
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        object:
          type: object
          properties:
            type:
              type: string
            sha:
              description: SHA for the reference
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
              minLength: 40
              maxLength: 40
            url:
              type: string
              format: uri
          required:
          - type
          - sha
          - url
      required:
      - ref
      - node_id
      - url
      - object
    git-tag:
      title: Git Tag
      description: Metadata for a Git tag
      type: object
      properties:
        node_id:
          type: string
          example: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
        tag:
          description: Name of the tag
          example: v0.0.1
          type: string
        sha:
          type: string
          example: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
        url:
          description: URL for the tag
          example: https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
          type: string
          format: uri
        message:
          description: Message describing the purpose of the tag
          example: Initial public release
          type: string
        tagger:
          type: object
          properties:
            date:
              type: string
            email:
              type: string
            name:
              type: string
          required:
          - date
          - email
          - name
        object:
          type: object
          properties:
            sha:
              type: string
            type:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - type
          - url
        verification:
          "$ref": "#/components/schemas/verification"
      required:
      - sha
      - url
      - node_id
      - tagger
      - object
      - tag
      - message
    git-tree:
      title: Git Tree
      description: The hierarchy between files in a Git repository.
      type: object
      properties:
        sha:
          type: string
        url:
          type: string
          format: uri
        truncated:
          type: boolean
        tree:
          description: Objects specifying a tree structure
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                example: test/file.rb
              mode:
                type: string
                example: '040000'
              type:
                type: string
                example: tree
              sha:
                type: string
                example: 23f6827669e43831def8a7ad935069c8bd418261
              size:
                type: integer
                example: 12
              url:
                type: string
                example: https://api.github.com/repos/owner-482f3203ecf01f67e9deb18e/BBB_Private_Repo/git/blobs/23f6827669e43831def8a7ad935069c8bd418261
          example:
          - path: file.rb
            mode: '100644'
            type: blob
            size: 30
            sha: 44b4fc6d56897b048c772eb4087f854f46256132
            url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
            properties:
              path:
                type: string
              mode:
                type: string
              type:
                type: string
              size:
                type: integer
              sha:
                type: string
              url:
                type: string
            required:
            - path
            - mode
            - type
            - sha
            - url
            - size
      required:
      - sha
      - url
      - tree
      - truncated
    hook-response:
      title: Hook Response
      type: object
      properties:
        code:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
      - code
      - status
      - message
    hook:
      title: Webhook
      description: Webhooks for repositories.
      type: object
      properties:
        type:
          type: string
        id:
          description: Unique identifier of the webhook.
          example: 42
          type: integer
        name:
          description: The name of a valid service, use 'web' for a webhook.
          example: web
          type: string
        active:
          description: Determines whether the hook is actually triggered on pushes.
          type: boolean
          example: true
        events:
          description: 'Determines what events the hook is triggered for. Default:
            [''push''].'
          type: array
          items:
            type: string
          example:
          - push
          - pull_request
        config:
          type: object
          properties:
            email:
              type: string
              example: '"foo@bar.com"'
            password:
              type: string
              example: '"foo"'
            room:
              type: string
              example: '"roomer"'
            subdomain:
              type: string
              example: '"foo"'
            url:
              "$ref": "#/components/schemas/webhook-config-url"
            insecure_ssl:
              "$ref": "#/components/schemas/webhook-config-insecure-ssl"
            content_type:
              "$ref": "#/components/schemas/webhook-config-content-type"
            digest:
              type: string
              example: '"sha256"'
            secret:
              "$ref": "#/components/schemas/webhook-config-secret"
            token:
              type: string
              example: '"abc"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1
        test_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries
        last_response:
          "$ref": "#/components/schemas/hook-response"
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
      - last_response
      - test_url
    import:
      title: Import
      description: A repository import from an external source.
      type: object
      properties:
        vcs:
          type: string
          nullable: true
        use_lfs:
          type: boolean
        vcs_url:
          description: The URL of the originating repository.
          type: string
        svc_root:
          type: string
        tfvc_project:
          type: string
        status:
          type: string
          enum:
          - auth
          - error
          - none
          - detecting
          - choose
          - auth_failed
          - importing
          - mapping
          - waiting_to_push
          - pushing
          - complete
          - setup
          - unknown
          - detection_found_multiple
          - detection_found_nothing
          - detection_needs_auth
        status_text:
          type: string
          nullable: true
        failed_step:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        import_percent:
          type: integer
          nullable: true
        commit_count:
          type: integer
          nullable: true
        push_percent:
          type: integer
          nullable: true
        has_large_files:
          type: boolean
        large_files_size:
          type: integer
        large_files_count:
          type: integer
        project_choices:
          type: array
          items:
            type: object
            properties:
              vcs:
                type: string
              tfvc_project:
                type: string
              human_name:
                type: string
        message:
          type: string
        authors_count:
          type: integer
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        authors_url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        svn_root:
          type: string
      required:
      - vcs
      - vcs_url
      - status
      - url
      - repository_url
      - html_url
      - authors_url
    porter-author:
      title: Porter Author
      description: Porter Author
      type: object
      properties:
        id:
          type: integer
        remote_id:
          type: string
        remote_name:
          type: string
        email:
          type: string
        name:
          type: string
        url:
          type: string
          format: uri
        import_url:
          type: string
          format: uri
      required:
      - id
      - remote_id
      - remote_name
      - email
      - name
      - url
      - import_url
    porter-large-file:
      title: Porter Large File
      description: Porter Large File
      type: object
      properties:
        ref_name:
          type: string
        path:
          type: string
        oid:
          type: string
        size:
          type: integer
      required:
      - oid
      - path
      - ref_name
      - size
    nullable-issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      type: object
      properties:
        id:
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        state_reason:
          description: The reason for the current state
          example: not_planned
          type: string
          nullable: true
          enum:
          - completed
          - reopened
          - not_planned
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try
            and create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        labels:
          description: Labels to associate with this issue; pass one or more label
            names to replace the set of labels on this issue; send an empty array
            to clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
          - bug
          - registration
          type: array
          items:
            oneOf:
            - type: string
            - type: object
              properties:
                id:
                  type: integer
                  format: int64
                node_id:
                  type: string
                url:
                  type: string
                  format: uri
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                color:
                  type: string
                  nullable: true
                default:
                  type: boolean
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/repository"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        author_association:
          "$ref": "#/components/schemas/author-association"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
      nullable: true
    issue-event-label:
      title: Issue Event Label
      description: Issue Event Label
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      required:
      - name
      - color
    issue-event-dismissed-review:
      title: Issue Event Dismissed Review
      type: object
      properties:
        state:
          type: string
        review_id:
          type: integer
        dismissal_message:
          type: string
          nullable: true
        dismissal_commit_id:
          type: string
          nullable: true
      required:
      - state
      - review_id
      - dismissal_message
    issue-event-milestone:
      title: Issue Event Milestone
      description: Issue Event Milestone
      type: object
      properties:
        title:
          type: string
      required:
      - title
    issue-event-project-card:
      title: Issue Event Project Card
      description: Issue Event Project Card
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        project_url:
          type: string
          format: uri
        project_id:
          type: integer
        column_name:
          type: string
        previous_column_name:
          type: string
      required:
      - url
      - id
      - project_url
      - project_id
      - column_name
    issue-event-rename:
      title: Issue Event Rename
      description: Issue Event Rename
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
    issue-event:
      title: Issue Event
      description: Issue Event
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDEwOklzc3VlRXZlbnQx
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          "$ref": "#/components/schemas/nullable-simple-user"
        event:
          type: string
          example: closed
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        commit_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue:
          "$ref": "#/components/schemas/nullable-issue"
        label:
          "$ref": "#/components/schemas/issue-event-label"
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assigner:
          "$ref": "#/components/schemas/nullable-simple-user"
        review_requester:
          "$ref": "#/components/schemas/nullable-simple-user"
        requested_reviewer:
          "$ref": "#/components/schemas/nullable-simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        dismissed_review:
          "$ref": "#/components/schemas/issue-event-dismissed-review"
        milestone:
          "$ref": "#/components/schemas/issue-event-milestone"
        project_card:
          "$ref": "#/components/schemas/issue-event-project-card"
        rename:
          "$ref": "#/components/schemas/issue-event-rename"
        author_association:
          "$ref": "#/components/schemas/author-association"
        lock_reason:
          type: string
          nullable: true
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
    labeled-issue-event:
      title: Labeled Issue Event
      description: Labeled Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
          required:
          - name
          - color
      required:
      - label
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    unlabeled-issue-event:
      title: Unlabeled Issue Event
      description: Unlabeled Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
          required:
          - name
          - color
      required:
      - label
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    assigned-issue-event:
      title: Assigned Issue Event
      description: Assigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
        assigner:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
      - assigner
    unassigned-issue-event:
      title: Unassigned Issue Event
      description: Unassigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
        assigner:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
      - assigner
    milestoned-issue-event:
      title: Milestoned Issue Event
      description: Milestoned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        milestone:
          type: object
          properties:
            title:
              type: string
          required:
          - title
      required:
      - milestone
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    demilestoned-issue-event:
      title: Demilestoned Issue Event
      description: Demilestoned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        milestone:
          type: object
          properties:
            title:
              type: string
          required:
          - title
      required:
      - milestone
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    renamed-issue-event:
      title: Renamed Issue Event
      description: Renamed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        rename:
          type: object
          properties:
            from:
              type: string
            to:
              type: string
          required:
          - from
          - to
      required:
      - rename
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    review-requested-issue-event:
      title: Review Requested Issue Event
      description: Review Requested Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        review_requester:
          "$ref": "#/components/schemas/simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        requested_reviewer:
          "$ref": "#/components/schemas/simple-user"
      required:
      - review_requester
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    review-request-removed-issue-event:
      title: Review Request Removed Issue Event
      description: Review Request Removed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        review_requester:
          "$ref": "#/components/schemas/simple-user"
        requested_team:
          "$ref": "#/components/schemas/team"
        requested_reviewer:
          "$ref": "#/components/schemas/simple-user"
      required:
      - review_requester
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    review-dismissed-issue-event:
      title: Review Dismissed Issue Event
      description: Review Dismissed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        dismissed_review:
          type: object
          properties:
            state:
              type: string
            review_id:
              type: integer
            dismissal_message:
              nullable: true
              type: string
            dismissal_commit_id:
              type: string
          required:
          - state
          - review_id
          - dismissal_message
      required:
      - dismissed_review
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    locked-issue-event:
      title: Locked Issue Event
      description: Locked Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        lock_reason:
          type: string
          example: '"off-topic"'
          nullable: true
      required:
      - lock_reason
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    added-to-project-issue-event:
      title: Added to Project Issue Event
      description: Added to Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    moved-column-in-project-issue-event:
      title: Moved Column in Project Issue Event
      description: Moved Column in Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    removed-from-project-issue-event:
      title: Removed from Project Issue Event
      description: Removed from Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    converted-note-to-issue-issue-event:
      title: Converted Note to Issue Issue Event
      description: Converted Note to Issue Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/integration"
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
          - id
          - url
          - project_id
          - project_url
          - column_name
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    issue-event-for-issue:
      title: Issue Event for Issue
      description: Issue Event for Issue
      anyOf:
      - "$ref": "#/components/schemas/labeled-issue-event"
      - "$ref": "#/components/schemas/unlabeled-issue-event"
      - "$ref": "#/components/schemas/assigned-issue-event"
      - "$ref": "#/components/schemas/unassigned-issue-event"
      - "$ref": "#/components/schemas/milestoned-issue-event"
      - "$ref": "#/components/schemas/demilestoned-issue-event"
      - "$ref": "#/components/schemas/renamed-issue-event"
      - "$ref": "#/components/schemas/review-requested-issue-event"
      - "$ref": "#/components/schemas/review-request-removed-issue-event"
      - "$ref": "#/components/schemas/review-dismissed-issue-event"
      - "$ref": "#/components/schemas/locked-issue-event"
      - "$ref": "#/components/schemas/added-to-project-issue-event"
      - "$ref": "#/components/schemas/moved-column-in-project-issue-event"
      - "$ref": "#/components/schemas/removed-from-project-issue-event"
      - "$ref": "#/components/schemas/converted-note-to-issue-issue-event"
    label:
      title: Label
      description: Color-coded labels help you categorize and filter your issues (just
        like labels in Gmail).
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 208045946
        node_id:
          type: string
          example: MDU6TGFiZWwyMDgwNDU5NDY=
        url:
          description: URL for the label
          example: https://api.github.com/repositories/42/labels/bug
          type: string
          format: uri
        name:
          description: The name of the label.
          example: bug
          type: string
        description:
          type: string
          example: Something isn't working
          nullable: true
        color:
          description: '6-character hex code, without the leading #, identifying the
            color'
          example: FFFFFF
          type: string
        default:
          type: boolean
          example: true
      required:
      - id
      - node_id
      - url
      - name
      - description
      - color
      - default
    timeline-comment-event:
      title: Timeline Comment Event
      description: Timeline Comment Event
      type: object
      properties:
        event:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          "$ref": "#/components/schemas/author-association"
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - event
      - actor
      - id
      - node_id
      - html_url
      - issue_url
      - author_association
      - user
      - url
      - created_at
      - updated_at
    timeline-cross-referenced-event:
      title: Timeline Cross Referenced Event
      description: Timeline Cross Referenced Event
      type: object
      properties:
        event:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        source:
          type: object
          properties:
            type:
              type: string
            issue:
              "$ref": "#/components/schemas/issue"
      required:
      - event
      - created_at
      - updated_at
      - source
    timeline-committed-event:
      title: Timeline Committed Event
      description: Timeline Committed Event
      type: object
      properties:
        event:
          type: string
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        author:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        committer:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
          - email
          - name
          - date
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        tree:
          type: object
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                type: string
                format: uri
              html_url:
                type: string
                format: uri
            required:
            - sha
            - url
            - html_url
        verification:
          type: object
          properties:
            verified:
              type: boolean
            reason:
              type: string
            signature:
              type: string
              nullable: true
            payload:
              type: string
              nullable: true
          required:
          - verified
          - reason
          - signature
          - payload
        html_url:
          type: string
          format: uri
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - tree
      - message
      - parents
      - verification
    timeline-reviewed-event:
      title: Timeline Reviewed Event
      description: Timeline Reviewed Event
      type: object
      properties:
        event:
          type: string
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          nullable: true
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
          required:
          - html
          - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          "$ref": "#/components/schemas/author-association"
      required:
      - event
      - id
      - node_id
      - user
      - body
      - state
      - commit_id
      - html_url
      - pull_request_url
      - _links
      - author_association
    pull-request-review-comment:
      title: Pull Request Review Comment
      description: Pull Request Review Comments are comments on a portion of the Pull
        Request's diff.
      type: object
      properties:
        url:
          description: URL for the pull request review comment
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          type: string
        pull_request_review_id:
          description: The ID of the pull request review to which the comment belongs.
          example: 42
          type: integer
          nullable: true
        id:
          description: The ID of the pull request review comment.
          example: 1
          type: integer
        node_id:
          description: The node ID of the pull request review comment.
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          description: The diff of the line that the comment refers to.
          type: string
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path:
          description: The relative path of the file to which the comment applies.
          example: config/database.yaml
          type: string
        position:
          description: The line index in the diff to which the comment applies. This
            field is deprecated; use `line` instead.
          example: 1
          type: integer
        original_position:
          description: The index of the original line in the diff to which the comment
            applies. This field is deprecated; use `original_line` instead.
          example: 4
          type: integer
        commit_id:
          description: The SHA of the commit to which the comment applies.
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        original_commit_id:
          description: The SHA of the original commit to which the comment applies.
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        in_reply_to_id:
          description: The comment ID to reply to.
          example: 8
          type: integer
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          description: The text of the comment.
          example: We should probably include a check for null values here.
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          description: HTML URL for the pull request review comment.
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          description: URL for the pull request that the review comment belongs to.
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          "$ref": "#/components/schemas/author-association"
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              required:
              - href
            html:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1
              required:
              - href
          required:
          - self
          - html
          - pull_request
        start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        original_start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        side:
          description: The side of the diff to which the comment applies. The side
            of the last line of the range for a multi-line comment
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        subject_type:
          description: The level at which the comment is targeted, can be a diff line
            or a file.
          type: string
          enum:
          - line
          - file
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
        body_html:
          type: string
          example: '"<p>comment body</p>"'
        body_text:
          type: string
          example: '"comment body"'
      required:
      - url
      - id
      - node_id
      - pull_request_review_id
      - diff_hunk
      - path
      - commit_id
      - original_commit_id
      - user
      - body
      - created_at
      - updated_at
      - html_url
      - pull_request_url
      - author_association
      - _links
    timeline-line-commented-event:
      title: Timeline Line Commented Event
      description: Timeline Line Commented Event
      type: object
      properties:
        event:
          type: string
        node_id:
          type: string
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/pull-request-review-comment"
    timeline-commit-commented-event:
      title: Timeline Commit Commented Event
      description: Timeline Commit Commented Event
      type: object
      properties:
        event:
          type: string
        node_id:
          type: string
        commit_id:
          type: string
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/commit-comment"
    timeline-assigned-issue-event:
      title: Timeline Assigned Issue Event
      description: Timeline Assigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
    timeline-unassigned-issue-event:
      title: Timeline Unassigned Issue Event
      description: Timeline Unassigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        assignee:
          "$ref": "#/components/schemas/simple-user"
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
      - assignee
    state-change-issue-event:
      title: State Change Issue Event
      description: State Change Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          "$ref": "#/components/schemas/simple-user"
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        state_reason:
          type: string
          nullable: true
      required:
      - id
      - node_id
      - url
      - actor
      - event
      - commit_id
      - commit_url
      - created_at
      - performed_via_github_app
    timeline-issue-events:
      title: Timeline Event
      description: Timeline Event
      type: object
      anyOf:
      - "$ref": "#/components/schemas/labeled-issue-event"
      - "$ref": "#/components/schemas/unlabeled-issue-event"
      - "$ref": "#/components/schemas/milestoned-issue-event"
      - "$ref": "#/components/schemas/demilestoned-issue-event"
      - "$ref": "#/components/schemas/renamed-issue-event"
      - "$ref": "#/components/schemas/review-requested-issue-event"
      - "$ref": "#/components/schemas/review-request-removed-issue-event"
      - "$ref": "#/components/schemas/review-dismissed-issue-event"
      - "$ref": "#/components/schemas/locked-issue-event"
      - "$ref": "#/components/schemas/added-to-project-issue-event"
      - "$ref": "#/components/schemas/moved-column-in-project-issue-event"
      - "$ref": "#/components/schemas/removed-from-project-issue-event"
      - "$ref": "#/components/schemas/converted-note-to-issue-issue-event"
      - "$ref": "#/components/schemas/timeline-comment-event"
      - "$ref": "#/components/schemas/timeline-cross-referenced-event"
      - "$ref": "#/components/schemas/timeline-committed-event"
      - "$ref": "#/components/schemas/timeline-reviewed-event"
      - "$ref": "#/components/schemas/timeline-line-commented-event"
      - "$ref": "#/components/schemas/timeline-commit-commented-event"
      - "$ref": "#/components/schemas/timeline-assigned-issue-event"
      - "$ref": "#/components/schemas/timeline-unassigned-issue-event"
      - "$ref": "#/components/schemas/state-change-issue-event"
    deploy-key:
      title: Deploy Key
      description: An SSH key granting access to a single repository.
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        url:
          type: string
        title:
          type: string
        verified:
          type: boolean
        created_at:
          type: string
        read_only:
          type: boolean
        added_by:
          type: string
          nullable: true
        last_used:
          type: string
          nullable: true
      required:
      - id
      - key
      - url
      - title
      - verified
      - created_at
      - read_only
    language:
      title: Language
      description: Language
      type: object
      additionalProperties:
        type: integer
    license-content:
      title: License Content
      description: License Content
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          nullable: true
        git_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        type:
          type: string
        content:
          type: string
        encoding:
          type: string
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
      - license
    merged-upstream:
      title: Merged upstream
      description: Results of a successful merge upstream request
      type: object
      properties:
        message:
          type: string
        merge_type:
          type: string
          enum:
          - merge
          - fast-forward
          - none
        base_branch:
          type: string
    merged-branch-response:
      title: Merged branch response
      description: Merged branch response message
      type: object
      properties:
        message:
          type: string
    milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          "$ref": "#/components/schemas/nullable-simple-user"
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
    pages-source-hash:
      title: Pages Source Hash
      type: object
      properties:
        branch:
          type: string
        path:
          type: string
      required:
      - branch
      - path
    pages-https-certificate:
      title: Pages Https Certificate
      type: object
      properties:
        state:
          type: string
          enum:
          - new
          - authorization_created
          - authorization_pending
          - authorized
          - authorization_revoked
          - issued
          - uploaded
          - approved
          - errored
          - bad_authz
          - destroy_pending
          - dns_changed
          example: approved
        description:
          type: string
          example: Certificate is approved
        domains:
          type: array
          items:
            type: string
          description: Array of the domain set and its alternate name (if it is configured)
          example:
          - example.com
          - www.example.com
        expires_at:
          type: string
          format: date
      required:
      - state
      - description
      - domains
    page:
      title: GitHub Pages
      description: The configuration for GitHub Pages for a repository.
      type: object
      properties:
        url:
          type: string
          description: The API address for accessing this Page resource.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages
        status:
          type: string
          description: The status of the most recent build of the Page.
          example: built
          enum:
          - built
          - building
          - errored
          nullable: true
        cname:
          description: The Pages site's custom domain
          example: example.com
          type: string
          nullable: true
        protected_domain_state:
          type: string
          description: The state if the domain is verified
          example: pending
          nullable: true
          enum:
          - pending
          - verified
          - unverified
        pending_domain_unverified_at:
          type: string
          description: The timestamp when a pending domain becomes unverified.
          nullable: true
          format: date-time
        custom_404:
          type: boolean
          description: Whether the Page has a custom 404 page.
          example: false
          default: false
        html_url:
          type: string
          description: The web address the Page can be accessed from.
          format: uri
          example: https://example.com
        build_type:
          type: string
          description: The process in which the Page will be built.
          example: legacy
          nullable: true
          enum:
          - legacy
          - workflow
        source:
          "$ref": "#/components/schemas/pages-source-hash"
        public:
          type: boolean
          description: Whether the GitHub Pages site is publicly visible. If set to
            `true`, the site is accessible to anyone on the internet. If set to `false`,
            the site will only be accessible to users who have at least `read` access
            to the repository that published the site.
          example: true
        https_certificate:
          "$ref": "#/components/schemas/pages-https-certificate"
        https_enforced:
          type: boolean
          description: Whether https is enabled on the domain
          example: true
      required:
      - url
      - status
      - cname
      - custom_404
      - public
    page-build:
      title: Page Build
      description: Page Build
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
        error:
          type: object
          properties:
            message:
              type: string
              nullable: true
          required:
          - message
        pusher:
          "$ref": "#/components/schemas/nullable-simple-user"
        commit:
          type: string
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - url
      - status
      - error
      - pusher
      - commit
      - duration
      - created_at
      - updated_at
    page-build-status:
      title: Page Build Status
      description: Page Build Status
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/builds/latest
        status:
          type: string
          example: queued
      required:
      - url
      - status
    page-deployment:
      title: GitHub Pages
      description: The GitHub Pages deployment status.
      type: object
      properties:
        status_url:
          type: string
          description: The URI to monitor GitHub Pages deployment status.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/deployments/4fd754f7e594640989b406850d0bc8f06a121251/status
        page_url:
          type: string
          description: The URI to the deployed GitHub Pages.
          format: uri
          example: hello-world.github.io
        preview_url:
          type: string
          description: The URI to the deployed GitHub Pages preview.
          format: uri
          example: monalisa-1231a2312sa32-23sda74.drafts.github.io
      required:
      - status_url
      - page_url
    pages-health-check:
      title: Pages Health Check Status
      description: Pages Health Check Status
      type: object
      properties:
        domain:
          type: object
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
        alt_domain:
          type: object
          nullable: true
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
    pull-request:
      type: object
      title: Pull Request
      description: Pull requests let you tell others about changes you've pushed to
        a repository on GitHub. Once a pull request is sent, interested parties can
        review the set of changes, discuss potential modifications, and even push
        follow-up commits if necessary.
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          description: Number uniquely identifying the pull request within its repository.
          example: 42
          type: integer
        state:
          description: State of this Pull Request. Either `open` or `closed`.
          enum:
          - open
          - closed
          example: open
          type: string
        locked:
          type: boolean
          example: true
        title:
          description: The title of the pull request.
          example: Amazing new feature
          type: string
        user:
          "$ref": "#/components/schemas/simple-user"
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
                nullable: true
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_reviewers:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        requested_teams:
          type: array
          items:
            "$ref": "#/components/schemas/team-simple"
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              type: object
              nullable: true
              properties:
                archive_url:
                  type: string
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  type: string
                  format: uri
                deployments_url:
                  type: string
                  format: uri
                description:
                  type: string
                  nullable: true
                downloads_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                  format: uri
                fork:
                  type: boolean
                forks_url:
                  type: string
                  format: uri
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                hooks_url:
                  type: string
                  format: uri
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                languages_url:
                  type: string
                  format: uri
                merges_url:
                  type: string
                  format: uri
                milestones_url:
                  type: string
                name:
                  type: string
                notifications_url:
                  type: string
                owner:
                  type: object
                  properties:
                    avatar_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      type: string
                      nullable: true
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    node_id:
                      type: string
                    login:
                      type: string
                    organizations_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    url:
                      type: string
                      format: uri
                  required:
                  - avatar_url
                  - events_url
                  - followers_url
                  - following_url
                  - gists_url
                  - gravatar_id
                  - html_url
                  - id
                  - node_id
                  - login
                  - organizations_url
                  - received_events_url
                  - repos_url
                  - site_admin
                  - starred_url
                  - subscriptions_url
                  - type
                  - url
                private:
                  type: boolean
                pulls_url:
                  type: string
                releases_url:
                  type: string
                stargazers_url:
                  type: string
                  format: uri
                statuses_url:
                  type: string
                subscribers_url:
                  type: string
                  format: uri
                subscription_url:
                  type: string
                  format: uri
                tags_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                trees_url:
                  type: string
                url:
                  type: string
                  format: uri
                clone_url:
                  type: string
                default_branch:
                  type: string
                forks:
                  type: integer
                forks_count:
                  type: integer
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                has_pages:
                  type: boolean
                has_discussions:
                  type: boolean
                homepage:
                  type: string
                  format: uri
                  nullable: true
                language:
                  type: string
                  nullable: true
                master_branch:
                  type: string
                archived:
                  type: boolean
                disabled:
                  type: boolean
                visibility:
                  description: 'The repository visibility: public, private, or internal.'
                  type: string
                mirror_url:
                  type: string
                  format: uri
                  nullable: true
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                permissions:
                  type: object
                  properties:
                    admin:
                      type: boolean
                    maintain:
                      type: boolean
                    push:
                      type: boolean
                    triage:
                      type: boolean
                    pull:
                      type: boolean
                  required:
                  - admin
                  - pull
                  - push
                temp_clone_token:
                  type: string
                allow_merge_commit:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                license:
                  type: object
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                      format: uri
                      nullable: true
                    spdx_id:
                      type: string
                      nullable: true
                    node_id:
                      type: string
                  required:
                  - key
                  - name
                  - url
                  - spdx_id
                  - node_id
                  nullable: true
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                svn_url:
                  type: string
                  format: uri
                topics:
                  type: array
                  items:
                    type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                allow_forking:
                  type: boolean
                is_template:
                  type: boolean
                web_commit_signoff_required:
                  type: boolean
              required:
              - archive_url
              - assignees_url
              - blobs_url
              - branches_url
              - collaborators_url
              - comments_url
              - commits_url
              - compare_url
              - contents_url
              - contributors_url
              - deployments_url
              - description
              - downloads_url
              - events_url
              - fork
              - forks_url
              - full_name
              - git_commits_url
              - git_refs_url
              - git_tags_url
              - hooks_url
              - html_url
              - id
              - node_id
              - issue_comment_url
              - issue_events_url
              - issues_url
              - keys_url
              - labels_url
              - languages_url
              - merges_url
              - milestones_url
              - name
              - notifications_url
              - owner
              - private
              - pulls_url
              - releases_url
              - stargazers_url
              - statuses_url
              - subscribers_url
              - subscription_url
              - tags_url
              - teams_url
              - trees_url
              - url
              - clone_url
              - default_branch
              - forks
              - forks_count
              - git_url
              - has_downloads
              - has_issues
              - has_projects
              - has_wiki
              - has_pages
              - has_discussions
              - homepage
              - language
              - archived
              - disabled
              - mirror_url
              - open_issues
              - open_issues_count
              - license
              - pushed_at
              - size
              - ssh_url
              - stargazers_count
              - svn_url
              - watchers
              - watchers_count
              - created_at
              - updated_at
            sha:
              type: string
            user:
              type: object
              properties:
                avatar_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                followers_url:
                  type: string
                  format: uri
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                  nullable: true
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                login:
                  type: string
                organizations_url:
                  type: string
                  format: uri
                received_events_url:
                  type: string
                  format: uri
                repos_url:
                  type: string
                  format: uri
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                  format: uri
                type:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - avatar_url
              - events_url
              - followers_url
              - following_url
              - gists_url
              - gravatar_id
              - html_url
              - id
              - node_id
              - login
              - organizations_url
              - received_events_url
              - repos_url
              - site_admin
              - starred_url
              - subscriptions_url
              - type
              - url
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              type: object
              properties:
                archive_url:
                  type: string
                assignees_url:
                  type: string
                blobs_url:
                  type: string
                branches_url:
                  type: string
                collaborators_url:
                  type: string
                comments_url:
                  type: string
                commits_url:
                  type: string
                compare_url:
                  type: string
                contents_url:
                  type: string
                contributors_url:
                  type: string
                  format: uri
                deployments_url:
                  type: string
                  format: uri
                description:
                  type: string
                  nullable: true
                downloads_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                  format: uri
                fork:
                  type: boolean
                forks_url:
                  type: string
                  format: uri
                full_name:
                  type: string
                git_commits_url:
                  type: string
                git_refs_url:
                  type: string
                git_tags_url:
                  type: string
                hooks_url:
                  type: string
                  format: uri
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                is_template:
                  type: boolean
                node_id:
                  type: string
                issue_comment_url:
                  type: string
                issue_events_url:
                  type: string
                issues_url:
                  type: string
                keys_url:
                  type: string
                labels_url:
                  type: string
                languages_url:
                  type: string
                  format: uri
                merges_url:
                  type: string
                  format: uri
                milestones_url:
                  type: string
                name:
                  type: string
                notifications_url:
                  type: string
                owner:
                  type: object
                  properties:
                    avatar_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                    gists_url:
                      type: string
                    gravatar_id:
                      type: string
                      nullable: true
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    node_id:
                      type: string
                    login:
                      type: string
                    organizations_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    site_admin:
                      type: boolean
                    starred_url:
                      type: string
                    subscriptions_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    url:
                      type: string
                      format: uri
                  required:
                  - avatar_url
                  - events_url
                  - followers_url
                  - following_url
                  - gists_url
                  - gravatar_id
                  - html_url
                  - id
                  - node_id
                  - login
                  - organizations_url
                  - received_events_url
                  - repos_url
                  - site_admin
                  - starred_url
                  - subscriptions_url
                  - type
                  - url
                private:
                  type: boolean
                pulls_url:
                  type: string
                releases_url:
                  type: string
                stargazers_url:
                  type: string
                  format: uri
                statuses_url:
                  type: string
                subscribers_url:
                  type: string
                  format: uri
                subscription_url:
                  type: string
                  format: uri
                tags_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                trees_url:
                  type: string
                url:
                  type: string
                  format: uri
                clone_url:
                  type: string
                default_branch:
                  type: string
                forks:
                  type: integer
                forks_count:
                  type: integer
                git_url:
                  type: string
                has_downloads:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
                has_pages:
                  type: boolean
                has_discussions:
                  type: boolean
                homepage:
                  type: string
                  format: uri
                  nullable: true
                language:
                  type: string
                  nullable: true
                master_branch:
                  type: string
                archived:
                  type: boolean
                disabled:
                  type: boolean
                visibility:
                  description: 'The repository visibility: public, private, or internal.'
                  type: string
                mirror_url:
                  type: string
                  format: uri
                  nullable: true
                open_issues:
                  type: integer
                open_issues_count:
                  type: integer
                permissions:
                  type: object
                  properties:
                    admin:
                      type: boolean
                    maintain:
                      type: boolean
                    push:
                      type: boolean
                    triage:
                      type: boolean
                    pull:
                      type: boolean
                  required:
                  - admin
                  - pull
                  - push
                temp_clone_token:
                  type: string
                allow_merge_commit:
                  type: boolean
                allow_squash_merge:
                  type: boolean
                allow_rebase_merge:
                  type: boolean
                license:
                  "$ref": "#/components/schemas/nullable-license-simple"
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                ssh_url:
                  type: string
                stargazers_count:
                  type: integer
                svn_url:
                  type: string
                  format: uri
                topics:
                  type: array
                  items:
                    type: string
                watchers:
                  type: integer
                watchers_count:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                allow_forking:
                  type: boolean
                web_commit_signoff_required:
                  type: boolean
              required:
              - archive_url
              - assignees_url
              - blobs_url
              - branches_url
              - collaborators_url
              - comments_url
              - commits_url
              - compare_url
              - contents_url
              - contributors_url
              - deployments_url
              - description
              - downloads_url
              - events_url
              - fork
              - forks_url
              - full_name
              - git_commits_url
              - git_refs_url
              - git_tags_url
              - hooks_url
              - html_url
              - id
              - node_id
              - issue_comment_url
              - issue_events_url
              - issues_url
              - keys_url
              - labels_url
              - languages_url
              - merges_url
              - milestones_url
              - name
              - notifications_url
              - owner
              - private
              - pulls_url
              - releases_url
              - stargazers_url
              - statuses_url
              - subscribers_url
              - subscription_url
              - tags_url
              - teams_url
              - trees_url
              - url
              - clone_url
              - default_branch
              - forks
              - forks_count
              - git_url
              - has_downloads
              - has_issues
              - has_projects
              - has_wiki
              - has_pages
              - has_discussions
              - homepage
              - language
              - archived
              - disabled
              - mirror_url
              - open_issues
              - open_issues_count
              - license
              - pushed_at
              - size
              - ssh_url
              - stargazers_count
              - svn_url
              - watchers
              - watchers_count
              - created_at
              - updated_at
            sha:
              type: string
            user:
              type: object
              properties:
                avatar_url:
                  type: string
                  format: uri
                events_url:
                  type: string
                followers_url:
                  type: string
                  format: uri
                following_url:
                  type: string
                gists_url:
                  type: string
                gravatar_id:
                  type: string
                  nullable: true
                html_url:
                  type: string
                  format: uri
                id:
                  type: integer
                node_id:
                  type: string
                login:
                  type: string
                organizations_url:
                  type: string
                  format: uri
                received_events_url:
                  type: string
                  format: uri
                repos_url:
                  type: string
                  format: uri
                site_admin:
                  type: boolean
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                  format: uri
                type:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - avatar_url
              - events_url
              - followers_url
              - following_url
              - gists_url
              - gravatar_id
              - html_url
              - id
              - node_id
              - login
              - organizations_url
              - received_events_url
              - repos_url
              - site_admin
              - starred_url
              - subscriptions_url
              - type
              - url
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              "$ref": "#/components/schemas/link"
            commits:
              "$ref": "#/components/schemas/link"
            statuses:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            issue:
              "$ref": "#/components/schemas/link"
            review_comments:
              "$ref": "#/components/schemas/link"
            review_comment:
              "$ref": "#/components/schemas/link"
            self:
              "$ref": "#/components/schemas/link"
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          "$ref": "#/components/schemas/author-association"
        auto_merge:
          "$ref": "#/components/schemas/auto-merge"
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
        merged:
          type: boolean
        mergeable:
          type: boolean
          example: true
          nullable: true
        rebaseable:
          type: boolean
          example: true
          nullable: true
        mergeable_state:
          type: string
          example: clean
        merged_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        comments:
          type: integer
          example: 10
        review_comments:
          type: integer
          example: 0
        maintainer_can_modify:
          description: Indicates whether maintainers can modify the pull request.
          example: true
          type: boolean
        commits:
          type: integer
          example: 3
        additions:
          type: integer
          example: 100
        deletions:
          type: integer
          example: 3
        changed_files:
          type: integer
          example: 5
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
      - additions
      - changed_files
      - comments
      - commits
      - deletions
      - mergeable
      - mergeable_state
      - merged
      - maintainer_can_modify
      - merged_by
      - review_comments
    pull-request-merge-result:
      title: Pull Request Merge Result
      description: Pull Request Merge Result
      type: object
      properties:
        sha:
          type: string
        merged:
          type: boolean
        message:
          type: string
      required:
      - merged
      - message
      - sha
    pull-request-review-request:
      title: Pull Request Review Request
      description: Pull Request Review Request
      type: object
      properties:
        users:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
        teams:
          type: array
          items:
            "$ref": "#/components/schemas/team"
      required:
      - users
      - teams
    pull-request-review:
      title: Pull Request Review
      description: Pull Request Reviews are reviews on pull requests.
      type: object
      properties:
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
          required:
          - html
          - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review. If the commit object was garbage
            collected or forcibly deleted, then it no longer exists in Git and this
            value will be `null`.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
          nullable: true
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          "$ref": "#/components/schemas/author-association"
      required:
      - id
      - node_id
      - user
      - body
      - state
      - commit_id
      - html_url
      - pull_request_url
      - _links
      - author_association
    review-comment:
      title: Legacy Review Comment
      description: Legacy Review Comment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id:
          type: integer
          example: 42
          nullable: true
        id:
          type: integer
          example: 10
        node_id:
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          type: string
          example: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path:
          type: string
          example: file1.txt
        position:
          type: integer
          example: 1
          nullable: true
        original_position:
          type: integer
          example: 4
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id:
          type: string
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id:
          type: integer
          example: 8
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        body:
          type: string
          example: Great stuff
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          "$ref": "#/components/schemas/author-association"
        _links:
          type: object
          properties:
            self:
              "$ref": "#/components/schemas/link"
            html:
              "$ref": "#/components/schemas/link"
            pull_request:
              "$ref": "#/components/schemas/link"
          required:
          - self
          - html
          - pull_request
        body_text:
          type: string
        body_html:
          type: string
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
        side:
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last
            line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The original line of the blob to which the comment applies.
            The last line of the range for a multi-line comment
          example: 2
          type: integer
        start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
        original_start_line:
          description: The original first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
      required:
      - id
      - node_id
      - url
      - body
      - diff_hunk
      - path
      - position
      - original_position
      - commit_id
      - original_commit_id
      - user
      - pull_request_review_id
      - html_url
      - pull_request_url
      - _links
      - author_association
      - created_at
      - updated_at
    release-asset:
      title: Release Asset
      description: Data related to a release.
      type: object
      properties:
        url:
          type: string
          format: uri
        browser_download_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          description: The file name of the asset.
          type: string
          example: Team Environment
        label:
          type: string
          nullable: true
        state:
          description: State of the release asset.
          type: string
          enum:
          - uploaded
          - open
        content_type:
          type: string
        size:
          type: integer
        download_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        uploader:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - id
      - name
      - content_type
      - size
      - state
      - url
      - node_id
      - download_count
      - label
      - uploader
      - browser_download_url
      - created_at
      - updated_at
    release:
      title: Release
      description: A release.
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        assets_url:
          type: string
          format: uri
        upload_url:
          type: string
        tarball_url:
          type: string
          format: uri
          nullable: true
        zipball_url:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        tag_name:
          description: The name of the tag.
          example: v1.0.0
          type: string
        target_commitish:
          description: Specifies the commitish value that determines where the Git
            tag is created from.
          example: master
          type: string
        name:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        draft:
          description: true to create a draft (unpublished) release, false to create
            a published one.
          example: false
          type: boolean
        prerelease:
          description: Whether to identify the release as a prerelease or a full release.
          example: false
          type: boolean
        created_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
          nullable: true
        author:
          "$ref": "#/components/schemas/simple-user"
        assets:
          type: array
          items:
            "$ref": "#/components/schemas/release-asset"
        body_html:
          type: string
        body_text:
          type: string
        mentions_count:
          type: integer
        discussion_url:
          description: The URL of the release discussion.
          type: string
          format: uri
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assets_url
      - upload_url
      - tarball_url
      - zipball_url
      - created_at
      - published_at
      - draft
      - id
      - node_id
      - author
      - html_url
      - name
      - prerelease
      - tag_name
      - target_commitish
      - assets
      - url
    release-notes-content:
      title: Generated Release Notes Content
      description: Generated name and body describing a release
      type: object
      properties:
        name:
          description: The generated name of the release
          type: string
          example: Release v1.0.0 is now available!
        body:
          description: The generated body describing the contents of the release supporting
            markdown formatting
          type: string
      required:
      - name
      - body
    repository-rule-ruleset-info:
      title: repository ruleset data for rule
      description: User-defined metadata to store domain-specific information limited
        to 8 keys with scalar values.
      properties:
        ruleset_source_type:
          type: string
          description: The type of source for the ruleset that includes this rule.
          enum:
          - Repository
          - Organization
        ruleset_source:
          type: string
          description: The name of the source of the ruleset that includes this rule.
        ruleset_id:
          type: integer
          description: The ID of the ruleset that includes this rule.
    repository-rule-detailed:
      title: Repository Rule
      type: object
      description: A repository rule with ruleset details.
      oneOf:
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-creation"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-update"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-deletion"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-required-linear-history"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-required-deployments"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-required-signatures"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-pull-request"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-required-status-checks"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-non-fast-forward"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-commit-message-pattern"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-commit-author-email-pattern"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-committer-email-pattern"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-branch-name-pattern"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
      - allOf:
        - "$ref": "#/components/schemas/repository-rule-tag-name-pattern"
        - "$ref": "#/components/schemas/repository-rule-ruleset-info"
    secret-scanning-alert:
      type: object
      properties:
        number:
          "$ref": "#/components/schemas/alert-number"
        created_at:
          "$ref": "#/components/schemas/alert-created-at"
        updated_at:
          "$ref": "#/components/schemas/nullable-alert-updated-at"
        url:
          "$ref": "#/components/schemas/alert-url"
        html_url:
          "$ref": "#/components/schemas/alert-html-url"
        locations_url:
          type: string
          format: uri
          description: The REST API URL of the code locations for this alert.
        state:
          "$ref": "#/components/schemas/secret-scanning-alert-state"
        resolution:
          "$ref": "#/components/schemas/secret-scanning-alert-resolution"
        resolved_at:
          type: string
          format: date-time
          description: 'The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolved_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        resolution_comment:
          type: string
          description: An optional comment to resolve an alert.
          nullable: true
        secret_type:
          type: string
          description: The type of secret that secret scanning detected.
        secret_type_display_name:
          type: string
          description: |-
            User-friendly name for the detected secret, matching the `secret_type`.
            For a list of built-in patterns, see "[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)."
        secret:
          type: string
          description: The secret that was detected.
        push_protection_bypassed:
          type: boolean
          description: Whether push protection was bypassed for the detected secret.
          nullable: true
        push_protection_bypassed_by:
          "$ref": "#/components/schemas/nullable-simple-user"
        push_protection_bypassed_at:
          type: string
          format: date-time
          description: 'The time that push protection was bypassed in ISO 8601 format:
            `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
    secret-scanning-alert-resolution-comment:
      description: An optional comment when closing an alert. Cannot be updated or
        deleted. Must be `null` when changing `state` to `open`.
      type: string
      nullable: true
    secret-scanning-location-commit:
      description: Represents a 'commit' secret scanning location type. This location
        type shows that a secret was detected inside a commit to a repository.
      type: object
      properties:
        path:
          type: string
          description: The file path in the repository
          example: "/example/secrets.txt"
        start_line:
          type: number
          description: Line number at which the secret starts in the file
        end_line:
          type: number
          description: Line number at which the secret ends in the file
        start_column:
          type: number
          description: The column at which the secret starts within the start line
            when the file is interpreted as 8BIT ASCII
        end_column:
          type: number
          description: The column at which the secret ends within the end line when
            the file is interpreted as 8BIT ASCII
        blob_sha:
          type: string
          description: SHA-1 hash ID of the associated blob
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        blob_url:
          type: string
          description: The API URL to get the associated blob resource
        commit_sha:
          type: string
          description: SHA-1 hash ID of the associated commit
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        commit_url:
          type: string
          description: The API URL to get the associated commit resource
      required:
      - path
      - start_line
      - end_line
      - start_column
      - end_column
      - blob_sha
      - blob_url
      - commit_sha
      - commit_url
    secret-scanning-location-issue-title:
      description: Represents an 'issue_title' secret scanning location type. This
        location type shows that a secret was detected in the title of an issue.
      type: object
      properties:
        issue_title_url:
          type: string
          format: uri
          description: The API URL to get the issue where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
      required:
      - issue_title_url
    secret-scanning-location-issue-body:
      description: Represents an 'issue_body' secret scanning location type. This
        location type shows that a secret was detected in the body of an issue.
      type: object
      properties:
        issue_body_url:
          type: string
          format: uri
          description: The API URL to get the issue where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
      required:
      - issue_body_url
    secret-scanning-location-issue-comment:
      description: Represents an 'issue_comment' secret scanning location type. This
        location type shows that a secret was detected in a comment on an issue.
      type: object
      properties:
        issue_comment_url:
          type: string
          format: uri
          description: The API URL to get the issue comment where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451
      required:
      - issue_comment_url
    secret-scanning-location:
      type: object
      properties:
        type:
          type: string
          enum:
          - commit
          - issue_title
          - issue_body
          - issue_comment
          description: The location type. Because secrets may be found in different
            types of resources (ie. code, comments, issues), this field identifies
            the type of resource where the secret was found.
          example: commit
        details:
          oneOf:
          - "$ref": "#/components/schemas/secret-scanning-location-commit"
          - "$ref": "#/components/schemas/secret-scanning-location-issue-title"
          - "$ref": "#/components/schemas/secret-scanning-location-issue-body"
          - "$ref": "#/components/schemas/secret-scanning-location-issue-comment"
      required:
      - type
      - details
    repository-advisory-create:
      type: object
      properties:
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory impacts.
          maxLength: 65535
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
        vulnerabilities:
          type: array
          description: A product affected by the vulnerability detailed in a repository
            security advisory.
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              patched_versions:
                type: string
                description: The package version(s) that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected.
                nullable: true
                items:
                  type: string
            required:
            - package
            additionalProperties: false
        cwe_ids:
          type: array
          description: A list of Common Weakness Enumeration (CWE) IDs.
          nullable: true
          items:
            type: string
        credits:
          type: array
          description: A list of users receiving credit for their participation in
            the security advisory.
          nullable: true
          items:
            type: object
            properties:
              login:
                type: string
                description: The username of the user credited.
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
            required:
            - login
            - type
            additionalProperties: false
        severity:
          type: string
          description: The severity of the advisory. You must choose between setting
            this field or `cvss_vector_string`.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        cvss_vector_string:
          type: string
          description: The CVSS vector that calculates the severity of the advisory.
            You must choose between setting this field or `severity`.
          nullable: true
      required:
      - summary
      - description
      - vulnerabilities
      additionalProperties: false
    private-vulnerability-report-create:
      type: object
      properties:
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory impacts.
          maxLength: 65535
        vulnerabilities:
          type: array
          description: An array of products affected by the vulnerability detailed
            in a repository security advisory.
          nullable: true
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              patched_versions:
                type: string
                description: The package version(s) that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected.
                nullable: true
                items:
                  type: string
            required:
            - package
            additionalProperties: false
        cwe_ids:
          type: array
          description: A list of Common Weakness Enumeration (CWE) IDs.
          nullable: true
          items:
            type: string
        severity:
          type: string
          description: The severity of the advisory. You must choose between setting
            this field or `cvss_vector_string`.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        cvss_vector_string:
          type: string
          description: The CVSS vector that calculates the severity of the advisory.
            You must choose between setting this field or `severity`.
          nullable: true
      required:
      - summary
      - description
      additionalProperties: false
    repository-advisory-update:
      type: object
      properties:
        summary:
          type: string
          description: A short summary of the advisory.
          maxLength: 1024
        description:
          type: string
          description: A detailed description of what the advisory impacts.
          maxLength: 65535
        cve_id:
          type: string
          description: The Common Vulnerabilities and Exposures (CVE) ID.
          nullable: true
        vulnerabilities:
          type: array
          description: A product affected by the vulnerability detailed in a repository
            security advisory.
          items:
            type: object
            properties:
              package:
                description: The name of the package affected by the vulnerability.
                type: object
                properties:
                  ecosystem:
                    "$ref": "#/components/schemas/security-advisory-ecosystems"
                  name:
                    type: string
                    description: The unique package name within its ecosystem.
                    nullable: true
                required:
                - ecosystem
              vulnerable_version_range:
                type: string
                description: The range of the package versions affected by the vulnerability.
                nullable: true
              patched_versions:
                type: string
                description: The package version(s) that resolve the vulnerability.
                nullable: true
              vulnerable_functions:
                type: array
                description: The functions in the package that are affected.
                nullable: true
                items:
                  type: string
            required:
            - package
            additionalProperties: false
        cwe_ids:
          type: array
          description: A list of Common Weakness Enumeration (CWE) IDs.
          nullable: true
          items:
            type: string
        credits:
          type: array
          description: A list of users receiving credit for their participation in
            the security advisory.
          nullable: true
          items:
            type: object
            properties:
              login:
                type: string
                description: The username of the user credited.
              type:
                "$ref": "#/components/schemas/security-advisory-credit-types"
            required:
            - login
            - type
            additionalProperties: false
        severity:
          type: string
          description: The severity of the advisory. You must choose between setting
            this field or `cvss_vector_string`.
          nullable: true
          enum:
          - critical
          - high
          - medium
          - low
        cvss_vector_string:
          type: string
          description: The CVSS vector that calculates the severity of the advisory.
            You must choose between setting this field or `severity`.
          nullable: true
        state:
          type: string
          description: The state of the advisory.
          enum:
          - published
          - closed
          - draft
        collaborating_users:
          type: array
          description: A list of usernames who have been granted write access to the
            advisory.
          nullable: true
          items:
            type: string
        collaborating_teams:
          type: array
          description: A list of team slugs which have been granted write access to
            the advisory.
          nullable: true
          items:
            type: string
      additionalProperties: false
    stargazer:
      title: Stargazer
      description: Stargazer
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - starred_at
      - user
    stargazer-response:
      title: Stargazer
      description: Stargazer
      anyOf:
      - type: array
        items:
          "$ref": "#/components/schemas/simple-user"
      - type: array
        items:
          "$ref": "#/components/schemas/stargazer"
    code-frequency-stat:
      title: Code Frequency Stat
      description: Code Frequency Stat
      type: array
      items:
        type: integer
    commit-activity:
      title: Commit Activity
      description: Commit Activity
      type: object
      properties:
        days:
          type: array
          example:
          - 0
          - 3
          - 26
          - 20
          - 39
          - 1
          - 0
          items:
            type: integer
        total:
          type: integer
          example: 89
        week:
          type: integer
          example: 1336280400
      required:
      - days
      - total
      - week
    contributor-activity:
      title: Contributor Activity
      description: Contributor Activity
      type: object
      properties:
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        total:
          type: integer
          example: 135
        weeks:
          type: array
          example:
          - w: '1367712000'
            a: 6898
            d: 77
            c: 10
          items:
            type: object
            properties:
              w:
                type: integer
              a:
                type: integer
              d:
                type: integer
              c:
                type: integer
      required:
      - author
      - total
      - weeks
    participation-stats:
      title: Participation Stats
      type: object
      properties:
        all:
          type: array
          items:
            type: integer
        owner:
          type: array
          items:
            type: integer
      required:
      - all
      - owner
    repository-subscription:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        subscribed:
          description: Determines if notifications should be received from this repository.
          type: boolean
          example: true
        ignored:
          description: Determines if all notifications should be blocked from this
            repository.
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-10-06T21:34:12Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/subscription
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
      required:
      - created_at
      - ignored
      - reason
      - subscribed
      - url
      - repository_url
    tag:
      title: Tag
      description: Tag
      type: object
      properties:
        name:
          type: string
          example: v0.1
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        zipball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id:
          type: string
      required:
      - name
      - node_id
      - commit
      - zipball_url
      - tarball_url
    tag-protection:
      title: Tag protection
      description: Tag protection
      type: object
      properties:
        id:
          type: integer
          example: 2
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          example: '2011-01-26T19:01:12Z'
        enabled:
          type: boolean
          example: true
        pattern:
          type: string
          example: v1.*
      required:
      - pattern
    topic:
      title: Topic
      description: A topic aggregates entities that are related to a subject.
      type: object
      properties:
        names:
          type: array
          items:
            type: string
      required:
      - names
    traffic:
      title: Traffic
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        uniques:
          type: integer
        count:
          type: integer
      required:
      - timestamp
      - uniques
      - count
    clone-traffic:
      title: Clone Traffic
      description: Clone Traffic
      type: object
      properties:
        count:
          type: integer
          example: 173
        uniques:
          type: integer
          example: 128
        clones:
          type: array
          items:
            "$ref": "#/components/schemas/traffic"
      required:
      - uniques
      - count
      - clones
    content-traffic:
      title: Content Traffic
      description: Content Traffic
      type: object
      properties:
        path:
          type: string
          example: "/github/hubot"
        title:
          type: string
          example: 'github/hubot: A customizable life embetterment robot.'
        count:
          type: integer
          example: 3542
        uniques:
          type: integer
          example: 2225
      required:
      - path
      - title
      - uniques
      - count
    referrer-traffic:
      title: Referrer Traffic
      description: Referrer Traffic
      type: object
      properties:
        referrer:
          type: string
          example: Google
        count:
          type: integer
          example: 4
        uniques:
          type: integer
          example: 3
      required:
      - referrer
      - uniques
      - count
    view-traffic:
      title: View Traffic
      description: View Traffic
      type: object
      properties:
        count:
          type: integer
          example: 14850
        uniques:
          type: integer
          example: 3782
        views:
          type: array
          items:
            "$ref": "#/components/schemas/traffic"
      required:
      - uniques
      - count
      - views
    search-result-text-matches:
      title: Search Result Text Matches
      type: array
      items:
        type: object
        properties:
          object_url:
            type: string
          object_type:
            nullable: true
            type: string
          property:
            type: string
          fragment:
            type: string
          matches:
            type: array
            items:
              type: object
              properties:
                text:
                  type: string
                indices:
                  type: array
                  items:
                    type: integer
    code-search-result-item:
      title: Code Search Result Item
      description: Code Search Result Item
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        score:
          type: number
        file_size:
          type: integer
        language:
          type: string
          nullable: true
        last_modified_at:
          type: string
          format: date-time
        line_numbers:
          type: array
          items:
            type: string
          example:
          - 73..77
          - 77..78
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - score
      - name
      - path
      - sha
      - git_url
      - html_url
      - url
      - repository
    code-search-result-item-response:
      title: Code Search Result Item
      description: Code Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/code-search-result-item"
    commit-search-result-item:
      title: Commit Search Result Item
      description: Commit Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        sha:
          type: string
        html_url:
          type: string
          format: uri
        comments_url:
          type: string
          format: uri
        commit:
          type: object
          properties:
            author:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                date:
                  type: string
                  format: date-time
              required:
              - name
              - email
              - date
            committer:
              "$ref": "#/components/schemas/nullable-git-user"
            comment_count:
              type: integer
            message:
              type: string
            tree:
              type: object
              properties:
                sha:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - sha
              - url
            url:
              type: string
              format: uri
            verification:
              "$ref": "#/components/schemas/verification"
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          "$ref": "#/components/schemas/nullable-simple-user"
        committer:
          "$ref": "#/components/schemas/nullable-git-user"
        parents:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              html_url:
                type: string
              sha:
                type: string
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        score:
          type: number
        node_id:
          type: string
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - parents
      - comments_url
      - commit
      - repository
      - score
    commit-search-result-item-response:
      title: Commit Search Result Item
      description: Commit Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/commit-search-result-item"
    issue-search-result-item:
      title: Issue Search Result Item
      description: Issue Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        id:
          type: integer
          format: int64
        node_id:
          type: string
        number:
          type: integer
        title:
          type: string
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        assignees:
          type: array
          items:
            "$ref": "#/components/schemas/simple-user"
          nullable: true
        user:
          "$ref": "#/components/schemas/nullable-simple-user"
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              color:
                type: string
              default:
                type: boolean
              description:
                type: string
                nullable: true
        state:
          type: string
        state_reason:
          type: string
          nullable: true
        assignee:
          "$ref": "#/components/schemas/nullable-simple-user"
        milestone:
          "$ref": "#/components/schemas/nullable-milestone"
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        body:
          type: string
        score:
          type: number
        author_association:
          "$ref": "#/components/schemas/author-association"
        draft:
          type: boolean
        repository:
          "$ref": "#/components/schemas/repository"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        performed_via_github_app:
          "$ref": "#/components/schemas/nullable-integration"
        reactions:
          "$ref": "#/components/schemas/reaction-rollup"
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
      - score
    issue-search-result-item-response:
      title: Issue Search Result Item
      description: Issue Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/issue-search-result-item"
    label-search-result-item:
      title: Label Search Result Item
      description: Label Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
          format: uri
        name:
          type: string
        color:
          type: string
        default:
          type: boolean
        description:
          type: string
          nullable: true
        score:
          type: number
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
      required:
      - id
      - node_id
      - url
      - name
      - color
      - default
      - description
      - score
    label-search-result-item-response:
      title: Label Search Result Item
      description: Label Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/label-search-result-item"
    repo-search-result-item:
      title: Repo Search Result Item
      description: Repo Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        owner:
          "$ref": "#/components/schemas/nullable-simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        homepage:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        open_issues_count:
          type: integer
        master_branch:
          type: string
        default_branch:
          type: string
        score:
          type: number
        forks_url:
          type: string
          format: uri
        keys_url:
          type: string
        collaborators_url:
          type: string
        teams_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issue_events_url:
          type: string
        events_url:
          type: string
          format: uri
        assignees_url:
          type: string
        branches_url:
          type: string
        tags_url:
          type: string
          format: uri
        blobs_url:
          type: string
        git_tags_url:
          type: string
        git_refs_url:
          type: string
        trees_url:
          type: string
        statuses_url:
          type: string
        languages_url:
          type: string
          format: uri
        stargazers_url:
          type: string
          format: uri
        contributors_url:
          type: string
          format: uri
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        commits_url:
          type: string
        git_commits_url:
          type: string
        comments_url:
          type: string
        issue_comment_url:
          type: string
        contents_url:
          type: string
        compare_url:
          type: string
        merges_url:
          type: string
          format: uri
        archive_url:
          type: string
        downloads_url:
          type: string
          format: uri
        issues_url:
          type: string
        pulls_url:
          type: string
        milestones_url:
          type: string
        notifications_url:
          type: string
        labels_url:
          type: string
        releases_url:
          type: string
        deployments_url:
          type: string
          format: uri
        git_url:
          type: string
        ssh_url:
          type: string
        clone_url:
          type: string
        svn_url:
          type: string
          format: uri
        forks:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        topics:
          type: array
          items:
            type: string
        mirror_url:
          type: string
          format: uri
          nullable: true
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_pages:
          type: boolean
        has_wiki:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - pull
          - push
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        temp_clone_token:
          type: string
        allow_merge_commit:
          type: boolean
        allow_squash_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_auto_merge:
          type: boolean
        delete_branch_on_merge:
          type: boolean
        allow_forking:
          type: boolean
        is_template:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - score
    repo-search-result-item-response:
      title: Repo Search Result Item
      description: Repo Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/repo-search-result-item"
    topic-search-result-item:
      title: Topic Search Result Item
      description: Topic Search Result Item
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
          nullable: true
        short_description:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        created_by:
          type: string
          nullable: true
        released:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        featured:
          type: boolean
        curated:
          type: boolean
        score:
          type: number
        repository_count:
          type: integer
          nullable: true
        logo_url:
          type: string
          format: uri
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        related:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
        aliases:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
      required:
      - name
      - display_name
      - short_description
      - description
      - created_by
      - released
      - created_at
      - updated_at
      - featured
      - curated
      - score
    topic-search-result-item-response:
      title: Topic Search Result Item
      description: Topic Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/topic-search-result-item"
    user-search-result-item:
      title: User Search Result Item
      description: User Search Result Item
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        score:
          type: number
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        events_url:
          type: string
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        location:
          type: string
          nullable: true
        site_admin:
          type: boolean
        hireable:
          type: boolean
          nullable: true
        text_matches:
          "$ref": "#/components/schemas/search-result-text-matches"
        blog:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        suspended_at:
          type: string
          format: date-time
          nullable: true
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - score
    user-search-result-item-response:
      title: User Search Result Item
      description: User Search Result Item
      type: object
      required:
      - total_count
      - incomplete_results
      - items
      properties:
        total_count:
          type: integer
        incomplete_results:
          type: boolean
        items:
          type: array
          items:
            "$ref": "#/components/schemas/user-search-result-item"
    private-user:
      title: Private User
      description: Private User
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        name:
          type: string
          example: monalisa octocat
          nullable: true
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          example: https://github.com/blog
          nullable: true
        location:
          type: string
          example: San Francisco
          nullable: true
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          example: There once was...
          nullable: true
        twitter_username:
          type: string
          example: monalisa
          nullable: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        private_gists:
          type: integer
          example: 81
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        disk_usage:
          type: integer
          example: 10000
        collaborators:
          type: integer
          example: 8
        two_factor_authentication:
          type: boolean
          example: true
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
          - collaborators
          - name
          - space
          - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        business_plus:
          type: boolean
        ldap_dn:
          type: string
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - bio
      - blog
      - company
      - email
      - followers
      - following
      - hireable
      - location
      - name
      - public_gists
      - public_repos
      - created_at
      - updated_at
      - collaborators
      - disk_usage
      - owned_private_repos
      - private_gists
      - total_private_repos
      - two_factor_authentication
    user-response:
      oneOf:
      - "$ref": "#/components/schemas/private-user"
      - "$ref": "#/components/schemas/public-user"
    codespaces-secret:
      title: Codespaces Secret
      description: Secrets for a GitHub Codespace.
      type: object
      properties:
        name:
          description: The name of the secret
          example: SECRET_NAME
          type: string
        created_at:
          description: The date and time at which the secret was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the secret was last updated, in
            ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
        visibility:
          description: The type of repositories in the organization that the secret
            is visible to
          enum:
          - all
          - private
          - selected
          type: string
        selected_repositories_url:
          description: The API URL at which the list of repositories this secret is
            visible to can be retrieved
          type: string
          format: uri
          example: https://api.github.com/user/secrets/SECRET_NAME/repositories
      required:
      - name
      - created_at
      - updated_at
      - visibility
      - selected_repositories_url
    codespaces-secret-response:
      title: Codespaces Secret
      description: Secrets for a GitHub Codespace.
      type: object
      required:
      - total_count
      - secrets
      properties:
        total_count:
          type: integer
        secrets:
          type: array
          items:
            "$ref": "#/components/schemas/codespaces-secret"
    codespaces-user-public-key:
      title: CodespacesUserPublicKey
      description: The public key used for setting user Codespaces' Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
      required:
      - key_id
      - key
    codespace-export-details:
      type: object
      title: Fetches information about an export of a codespace.
      description: An export of a codespace. Also, latest export details for a codespace
        can be fetched with id = latest
      properties:
        state:
          type: string
          description: State of the latest export
          nullable: true
          example: succeeded | failed | in_progress
        completed_at:
          description: Completion time of the last export operation
          type: string
          format: date-time
          nullable: true
          example: '2021-01-01T19:01:12Z'
        branch:
          type: string
          description: Name of the exported branch
          nullable: true
          example: codespace-monalisa-octocat-hello-world-g4wpq6h95q
        sha:
          type: string
          description: Git commit SHA of the exported branch
          nullable: true
          example: fd95a81ca01e48ede9f39c799ecbcef817b8a3b2
        id:
          type: string
          description: Id for the export details
          example: latest
        export_url:
          type: string
          description: Url for fetching export details
          example: https://api.github.com/user/codespaces/:name/exports/latest
        html_url:
          type: string
          nullable: true
          description: Web url for the exported branch
          example: https://github.com/octocat/hello-world/tree/:branch
    codespace-with-full-repository:
      type: object
      title: Codespace
      description: A codespace.
      properties:
        id:
          type: integer
          example: 1
        name:
          description: Automatically generated name of this codespace.
          type: string
          example: monalisa-octocat-hello-world-g4wpq6h95q
        display_name:
          description: Display name for this codespace.
          type: string
          example: bookish space pancake
          nullable: true
        environment_id:
          description: UUID identifying this codespace's environment.
          type: string
          example: 26a7c758-7299-4a73-b978-5a92a7ae98a0
          nullable: true
        owner:
          "$ref": "#/components/schemas/simple-user"
        billable_owner:
          "$ref": "#/components/schemas/simple-user"
        repository:
          "$ref": "#/components/schemas/full-repository"
        machine:
          "$ref": "#/components/schemas/nullable-codespace-machine"
        devcontainer_path:
          description: Path to devcontainer.json from repo root used to create Codespace.
          type: string
          example: ".devcontainer/example/devcontainer.json"
          nullable: true
        prebuild:
          description: Whether the codespace was created from a prebuild.
          type: boolean
          example: false
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        last_used_at:
          description: Last known time this codespace was started.
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        state:
          description: State of this codespace.
          enum:
          - Unknown
          - Created
          - Queued
          - Provisioning
          - Available
          - Awaiting
          - Unavailable
          - Deleted
          - Moved
          - Shutdown
          - Archived
          - Starting
          - ShuttingDown
          - Failed
          - Exporting
          - Updating
          - Rebuilding
          example: Available
          type: string
        url:
          description: API URL for this codespace.
          type: string
          format: uri
        git_status:
          description: Details about the codespace's git repository.
          type: object
          properties:
            ahead:
              description: The number of commits the local repository is ahead of
                the remote.
              type: integer
              example: 0
            behind:
              description: The number of commits the local repository is behind the
                remote.
              type: integer
              example: 0
            has_unpushed_changes:
              description: Whether the local repository has unpushed changes.
              type: boolean
            has_uncommitted_changes:
              description: Whether the local repository has uncommitted changes.
              type: boolean
            ref:
              description: The current branch (or SHA if in detached HEAD state) of
                the local repository.
              type: string
              example: main
        location:
          description: The initally assigned location of a new codespace.
          enum:
          - EastUs
          - SouthEastAsia
          - WestEurope
          - WestUs2
          example: WestUs2
          type: string
        idle_timeout_minutes:
          description: The number of minutes of inactivity after which this codespace
            will be automatically stopped.
          type: integer
          example: 60
          nullable: true
        web_url:
          description: URL to access this codespace on the web.
          type: string
          format: uri
        machines_url:
          description: API URL to access available alternate machine types for this
            codespace.
          type: string
          format: uri
        start_url:
          description: API URL to start this codespace.
          type: string
          format: uri
        stop_url:
          description: API URL to stop this codespace.
          type: string
          format: uri
        publish_url:
          description: API URL to publish this codespace to a new repository.
          type: string
          format: uri
          nullable: true
        pulls_url:
          description: API URL for the Pull Request associated with this codespace,
            if any.
          type: string
          format: uri
          nullable: true
        recent_folders:
          type: array
          items:
            type: string
        runtime_constraints:
          type: object
          properties:
            allowed_port_privacy_settings:
              description: The privacy settings a user can select from when forwarding
                a port.
              type: array
              items:
                type: string
              nullable: true
        pending_operation:
          description: Whether or not a codespace has a pending async operation. This
            would mean that the codespace is temporarily unavailable. The only thing
            that you can do with a codespace in this state is delete it.
          type: boolean
          nullable: true
        pending_operation_disabled_reason:
          description: Text to show user when codespace is disabled by a pending operation
          type: string
          nullable: true
        idle_timeout_notice:
          description: Text to show user when codespace idle timeout minutes has been
            overriden by an organization policy
          type: string
          nullable: true
        retention_period_minutes:
          description: Duration in minutes after codespace has gone idle in which
            it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
          type: integer
          example: 60
          nullable: true
        retention_expires_at:
          description: When a codespace will be auto-deleted based on the "retention_period_minutes"
            and "last_used_at"
          type: string
          format: date-time
          example: '2011-01-26T20:01:12Z'
          nullable: true
      required:
      - id
      - name
      - environment_id
      - owner
      - billable_owner
      - repository
      - machine
      - prebuild
      - created_at
      - updated_at
      - last_used_at
      - state
      - url
      - git_status
      - location
      - idle_timeout_minutes
      - web_url
      - machines_url
      - start_url
      - stop_url
      - pulls_url
      - recent_folders
    email:
      title: Email
      description: Email
      type: object
      properties:
        email:
          type: string
          format: email
          example: octocat@github.com
        primary:
          type: boolean
          example: true
        verified:
          type: boolean
          example: true
        visibility:
          type: string
          example: public
          nullable: true
      required:
      - email
      - primary
      - verified
      - visibility
    gpg-key:
      title: GPG Key
      description: A unique encryption key
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: Octocat's GPG Key
          nullable: true
        primary_key_id:
          type: integer
          nullable: true
        key_id:
          type: string
          example: 3262EFF25BA0D270
        public_key:
          type: string
          example: xsBNBFayYZ...
        emails:
          type: array
          example:
          - email: octocat@users.noreply.github.com
            verified: true
          items:
            type: object
            properties:
              email:
                type: string
              verified:
                type: boolean
        subkeys:
          type: array
          example:
          - id: 4
            primary_key_id: 3
            key_id: 4A595D4C72EE49C7
            public_key: zsBNBFayYZ...
            emails: []
            can_sign: false
            can_encrypt_comms: true
            can_encrypt_storage: true
            can_certify: false
            created_at: '2016-03-24T11:31:04-06:00'
            revoked: false
          items:
            type: object
            properties:
              id:
                type: integer
              primary_key_id:
                type: integer
              key_id:
                type: string
              public_key:
                type: string
              emails:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                    verified:
                      type: boolean
              subkeys:
                type: array
                items: {}
              can_sign:
                type: boolean
              can_encrypt_comms:
                type: boolean
              can_encrypt_storage:
                type: boolean
              can_certify:
                type: boolean
              created_at:
                type: string
              expires_at:
                type: string
                nullable: true
              raw_key:
                type: string
                nullable: true
              revoked:
                type: boolean
        can_sign:
          type: boolean
          example: true
        can_encrypt_comms:
          type: boolean
        can_encrypt_storage:
          type: boolean
        can_certify:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2016-03-24T11:31:04-06:00'
        expires_at:
          type: string
          format: date-time
          nullable: true
        revoked:
          type: boolean
          example: true
        raw_key:
          type: string
          nullable: true
      required:
      - id
      - primary_key_id
      - key_id
      - raw_key
      - public_key
      - created_at
      - expires_at
      - can_sign
      - can_encrypt_comms
      - can_encrypt_storage
      - can_certify
      - emails
      - subkeys
      - revoked
    key:
      title: Key
      description: Key
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        url:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        verified:
          type: boolean
        read_only:
          type: boolean
      required:
      - key
      - id
      - url
      - title
      - created_at
      - verified
      - read_only
    marketplace-account:
      title: Marketplace Account
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        type:
          type: string
        node_id:
          type: string
        login:
          type: string
        email:
          type: string
          nullable: true
          format: email
        organization_billing_email:
          type: string
          nullable: true
          format: email
      required:
      - url
      - id
      - type
      - login
    user-marketplace-purchase:
      title: User Marketplace Purchase
      description: User Marketplace Purchase
      type: object
      properties:
        billing_cycle:
          type: string
          example: monthly
        next_billing_date:
          type: string
          format: date-time
          example: '2017-11-11T00:00:00Z'
          nullable: true
        unit_count:
          type: integer
          nullable: true
        on_free_trial:
          type: boolean
          example: true
        free_trial_ends_on:
          type: string
          format: date-time
          example: '2017-11-11T00:00:00Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2017-11-02T01:12:12Z'
          nullable: true
        account:
          "$ref": "#/components/schemas/marketplace-account"
        plan:
          "$ref": "#/components/schemas/marketplace-listing-plan"
      required:
      - billing_cycle
      - next_billing_date
      - unit_count
      - updated_at
      - on_free_trial
      - free_trial_ends_on
      - account
      - plan
    social-account:
      title: Social account
      description: Social media account
      type: object
      properties:
        provider:
          type: string
          example: linkedin
        url:
          type: string
          example: https://www.linkedin.com/company/github/
      required:
      - provider
      - url
    ssh-signing-key:
      title: SSH Signing Key
      description: A public SSH key used to sign Git commits
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        title:
          type: string
        created_at:
          type: string
          format: date-time
      required:
      - key
      - id
      - title
      - created_at
    starred-repository:
      title: Starred Repository
      description: Starred Repository
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        repo:
          "$ref": "#/components/schemas/repository"
      required:
      - starred_at
      - repo
    starred-repository-response:
      title: Starred Repository
      description: Starred Repository
      anyOf:
      - type: array
        items:
          "$ref": "#/components/schemas/starred-repository"
      - type: array
        items:
          "$ref": "#/components/schemas/repository"
    hovercard:
      title: Hovercard
      description: Hovercard
      type: object
      properties:
        contexts:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              octicon:
                type: string
            required:
            - message
            - octicon
      required:
      - contexts
    key-simple:
      title: Key Simple
      description: Key Simple
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
      required:
      - key
      - id
    repository-webhooks:
      title: Repository
      description: |-
        The repository on GitHub where the event occurred. Webhook payloads contain the `repository` property
        when the event occurs from activity in a repository.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          "$ref": "#/components/schemas/nullable-license-simple"
        organization:
          "$ref": "#/components/schemas/nullable-simple-user"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used
            to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            use_squash_pr_title_as_default:
              type: boolean
            squash_merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - COMMIT_OR_PR_TITLE
              description: |-
                The default value for a squash merge commit title:

                - `PR_TITLE` - default to the pull request's title.
                - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
            squash_merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - COMMIT_MESSAGES
              - BLANK
              description: |-
                The default value for a squash merge commit message:

                - `PR_BODY` - default to the pull request's body.
                - `COMMIT_MESSAGES` - default to the branch's commit messages.
                - `BLANK` - default to a blank commit message.
            merge_commit_title:
              type: string
              enum:
              - PR_TITLE
              - MERGE_MESSAGE
              description: |-
                The default value for a merge commit title.

                - `PR_TITLE` - default to the pull request's title.
                - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
            merge_commit_message:
              type: string
              enum:
              - PR_BODY
              - PR_TITLE
              - BLANK
              description: |-
                The default value for a merge commit message.

                - `PR_TITLE` - default to the pull request's title.
                - `PR_BODY` - default to the pull request's body.
                - `BLANK` - default to a blank commit message.
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its
            base branch can always be updated even if it is not required to be up
            to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title
            as default. **This property has been deprecated. Please use `squash_merge_commit_title`
            instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: |-
            The default value for a squash merge commit title:

            - `PR_TITLE` - default to the pull request's title.
            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: |-
            The default value for a merge commit title.

            - `PR_TITLE` - default to the pull request's title.
            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    discussion:
      title: Discussion
      description: A Discussion in a repository.
      type: object
      properties:
        active_lock_reason:
          type: string
          nullable: true
        answer_chosen_at:
          type: string
          nullable: true
        answer_chosen_by:
          title: User
          type: object
          nullable: true
          properties:
            avatar_url:
              type: string
              format: uri
            deleted:
              type: boolean
            email:
              type: string
              nullable: true
            events_url:
              type: string
              format: uri-template
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            gravatar_id:
              type: string
            html_url:
              type: string
              format: uri
            id:
              type: integer
            login:
              type: string
            name:
              type: string
            node_id:
              type: string
            organizations_url:
              type: string
              format: uri
            received_events_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            site_admin:
              type: boolean
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            type:
              type: string
              enum:
              - Bot
              - User
              - Organization
            url:
              type: string
              format: uri
          required:
          - login
          - id
        answer_html_url:
          type: string
          nullable: true
        author_association:
          title: AuthorAssociation
          description: How the author is associated with the repository.
          type: string
          enum:
          - COLLABORATOR
          - CONTRIBUTOR
          - FIRST_TIMER
          - FIRST_TIME_CONTRIBUTOR
          - MANNEQUIN
          - MEMBER
          - NONE
          - OWNER
        body:
          type: string
        category:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
            description:
              type: string
            emoji:
              type: string
            id:
              type: integer
            is_answerable:
              type: boolean
            name:
              type: string
            node_id:
              type: string
            repository_id:
              type: integer
            slug:
              type: string
            updated_at:
              type: string
          required:
          - id
          - repository_id
          - emoji
          - name
          - description
          - created_at
          - updated_at
          - slug
          - is_answerable
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        html_url:
          type: string
        id:
          type: integer
        locked:
          type: boolean
        node_id:
          type: string
        number:
          type: integer
        reactions:
          title: Reactions
          type: object
          properties:
            "+1":
              type: integer
            "-1":
              type: integer
            confused:
              type: integer
            eyes:
              type: integer
            heart:
              type: integer
            hooray:
              type: integer
            laugh:
              type: integer
            rocket:
              type: integer
            total_count:
              type: integer
            url:
              type: string
              format: uri
          required:
          - url
          - total_count
          - "+1"
          - "-1"
          - laugh
          - confused
          - heart
          - hooray
          - eyes
          - rocket
        repository_url:
          type: string
        state:
          type: string
          description: |-
            The current state of the discussion.
            `converting` means that the discussion is being converted from an issue.
            `transferring` means that the discussion is being transferred from another repository.
          enum:
          - open
          - closed
          - locked
          - converting
          - transferring
        state_reason:
          description: The reason for the current state
          example: resolved
          type: string
          nullable: true
          enum:
          - resolved
          - outdated
          - duplicate
          - reopened
        timeline_url:
          type: string
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        user:
          title: User
          type: object
          nullable: true
          properties:
            avatar_url:
              type: string
              format: uri
            deleted:
              type: boolean
            email:
              type: string
              nullable: true
            events_url:
              type: string
              format: uri-template
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            gravatar_id:
              type: string
            html_url:
              type: string
              format: uri
            id:
              type: integer
            login:
              type: string
            name:
              type: string
            node_id:
              type: string
            organizations_url:
              type: string
              format: uri
            received_events_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            site_admin:
              type: boolean
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            type:
              type: string
              enum:
              - Bot
              - User
              - Organization
            url:
              type: string
              format: uri
          required:
          - login
          - id
      required:
      - repository_url
      - category
      - answer_html_url
      - answer_chosen_at
      - answer_chosen_by
      - html_url
      - id
      - node_id
      - number
      - title
      - user
      - state
      - state_reason
      - locked
      - comments
      - created_at
      - updated_at
      - author_association
      - active_lock_reason
      - body
    personal-access-token-request:
      title: Personal Access Token Request
      description: Details of a Personal Access Token Request.
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the request for access via fine-grained
            personal access token. Used as the `pat_request_id` parameter in the list
            and review API calls.
        owner:
          "$ref": "#/components/schemas/simple-user"
        permissions_added:
          type: object
          description: New requested permissions, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        permissions_upgraded:
          type: object
          description: Requested permissions that elevate access for a previously
            approved request for access, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        permissions_result:
          type: object
          description: Permissions requested, categorized by type of permission. This
            field incorporates `permissions_added` and `permissions_upgraded`.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        repository_selection:
          type: string
          description: Type of repository selection requested.
          enum:
          - none
          - all
          - subset
        repository_count:
          description: The number of repositories the token is requesting access to.
            This field is only populated when `repository_selection` is `subset`.
          type: integer
          nullable: true
        repositories:
          type: array
          description: An array of repository objects the token is requesting access
            to. This field is only populated when `repository_selection` is `subset`.
          items:
            type: object
            properties:
              full_name:
                type: string
              id:
                description: Unique identifier of the repository
                type: integer
              name:
                description: The name of the repository.
                type: string
              node_id:
                type: string
              private:
                description: Whether the repository is private or public.
                type: boolean
            required:
            - id
            - node_id
            - name
            - full_name
            - private
          nullable: true
        created_at:
          type: string
          description: Date and time when the request for access was created.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has
            expired.
        token_expires_at:
          type: string
          description: Date and time when the associated fine-grained personal access
            token expires.
          nullable: true
        token_last_used_at:
          type: string
          description: Date and time when the associated fine-grained personal access
            token was last used for authentication.
          nullable: true
      required:
      - id
      - owner
      - permissions_added
      - permissions_upgraded
      - permissions_result
      - repository_selection
      - repository_count
      - repositories
      - created_at
      - token_expired
      - token_expires_at
      - token_last_used_at
    projects-v2:
      title: Projects v2 Project
      description: A projects v2 project
      type: object
      properties:
        id:
          type: number
        node_id:
          type: string
        owner:
          "$ref": "#/components/schemas/simple-user"
        creator:
          "$ref": "#/components/schemas/simple-user"
        title:
          type: string
        description:
          type: string
          nullable: true
        public:
          type: boolean
        closed_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
        number:
          type: integer
        short_description:
          type: string
          nullable: true
        deleted_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
          nullable: true
        deleted_by:
          "$ref": "#/components/schemas/nullable-simple-user"
      required:
      - id
      - node_id
      - owner
      - creator
      - title
      - description
      - public
      - closed_at
      - created_at
      - updated_at
      - number
      - short_description
      - deleted_at
      - deleted_by
    projects-v2-item-content-type:
      title: Projects v2 Item Content Type
      description: The type of content tracked in a project item
      type: string
      enum:
      - Issue
      - PullRequest
      - DraftIssue
    projects-v2-item:
      title: Projects v2 Item
      description: An item belonging to a project
      type: object
      properties:
        id:
          type: number
        node_id:
          type: string
        project_node_id:
          type: string
        content_node_id:
          type: string
        content_type:
          "$ref": "#/components/schemas/projects-v2-item-content-type"
        creator:
          "$ref": "#/components/schemas/simple-user"
        created_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
        archived_at:
          type: string
          format: date-time
          example: '2022-04-28T12:00:00Z'
          nullable: true
      required:
      - id
      - content_node_id
      - content_type
      - created_at
      - updated_at
      - archived_at
  examples:
    root:
      value:
        current_user_url: https://api.github.com/user
        current_user_authorizations_html_url: https://github.com/settings/connections/applications{/client_id}
        authorizations_url: https://api.github.com/authorizations
        code_search_url: https://api.github.com/search/code?q={query}{&page,per_page,sort,order}
        commit_search_url: https://api.github.com/search/commits?q={query}{&page,per_page,sort,order}
        emails_url: https://api.github.com/user/emails
        emojis_url: https://api.github.com/emojis
        events_url: https://api.github.com/events
        feeds_url: https://api.github.com/feeds
        followers_url: https://api.github.com/user/followers
        following_url: https://api.github.com/user/following{/target}
        gists_url: https://api.github.com/gists{/gist_id}
        hub_url: https://api.github.com/hub
        issue_search_url: https://api.github.com/search/issues?q={query}{&page,per_page,sort,order}
        issues_url: https://api.github.com/issues
        keys_url: https://api.github.com/user/keys
        label_search_url: https://api.github.com/search/labels?q={query}&repository_id={repository_id}{&page,per_page}
        notifications_url: https://api.github.com/notifications
        organization_url: https://api.github.com/orgs/{org}
        organization_repositories_url: https://api.github.com/orgs/{org}/repos{?type,page,per_page,sort}
        organization_teams_url: https://api.github.com/orgs/{org}/teams
        public_gists_url: https://api.github.com/gists/public
        rate_limit_url: https://api.github.com/rate_limit
        repository_url: https://api.github.com/repos/{owner}/{repo}
        repository_search_url: https://api.github.com/search/repositories?q={query}{&page,per_page,sort,order}
        current_user_repositories_url: https://api.github.com/user/repos{?type,page,per_page,sort}
        starred_url: https://api.github.com/user/starred{/owner}{/repo}
        starred_gists_url: https://api.github.com/gists/starred
        topic_search_url: https://api.github.com/search/topics?q={query}{&page,per_page}
        user_url: https://api.github.com/users/{user}
        user_organizations_url: https://api.github.com/user/orgs
        user_repositories_url: https://api.github.com/users/{user}/repos{?type,page,per_page,sort}
        user_search_url: https://api.github.com/search/users?q={query}{&page,per_page,sort,order}
    global-advisory-items:
      value:
      - id: 1
        ghsa_id: GHSA-abcd-1234-efgh
        cve_id: CVE-2050-00000
        url: https://api.github.com/advisories/GHSA-abcd-1234-efgh
        html_url: https://github.com/advisories/GHSA-abcd-1234-efgh
        repository_advisory_url: https://api.github.com/repos/project/a-package/security-advisories/GHSA-abcd-1234-efgh
        summary: Heartbleed security advisory
        description: This bug allows an attacker to read portions of the affected
          server’s memory, potentially disclosing sensitive information.
        type: reviewed
        severity: high
        source_code_location: https://github.com/project/a-package
        identifiers:
        - type: GHSA
          value: GHSA-abcd-1234-efgh
        - type: CVE
          value: CVE-2050-00000
        references:
        - https://nvd.nist.gov/vuln/detail/CVE-2050-00000
        published_at: '2023-03-23T02:30:56Z'
        updated_at: '2023-03-24T02:30:56Z'
        github_reviewed_at: '2023-03-23T02:30:56Z'
        nvd_published_at: '2023-03-25T02:30:56Z'
        vulnerabilities:
        - package:
            ecosystem: npm
            name: a-package
          first_patched_version: 1.0.3
          vulnerable_version_range: "<=1.0.2"
          vulnerable_functions:
          - a_function
        cvss:
          vector_string: CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H
          score: 7.6
        cwes:
        - cwe_id: CWE-400
          name: Uncontrolled Resource Consumption
        credits:
        - user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          type: analyst
    global-advisory:
      value:
        ghsa_id: GHSA-abcd-1234-efgh
        cve_id: CVE-2050-00000
        url: https://api.github.com/advisories/GHSA-abcd-1234-efgh
        html_url: https://github.com/advisories/GHSA-abcd-1234-efgh
        repository_advisory_url: https://api.github.com/repos/project/a-package/security-advisories/GHSA-abcd-1234-efgh
        summary: A short summary of the advisory.
        description: A detailed description of what the advisory entails.
        type: reviewed
        severity: high
        source_code_location: https://github.com/project/a-package
        identifiers:
        - type: GHSA
          value: GHSA-abcd-1234-efgh
        - type: CVE
          value: CVE-2050-00000
        references:
        - https://nvd.nist.gov/vuln/detail/CVE-2050-00000
        published_at: '2023-03-23T02:30:56Z'
        updated_at: '2023-03-24T02:30:56Z'
        github_reviewed_at: '2023-03-23T02:30:56Z'
        nvd_published_at: '2023-03-25T02:30:56Z'
        vulnerabilities:
        - package:
            ecosystem: npm
            name: a-package
          first_patched_version: 1.0.3
          vulnerable_version_range: "<=1.0.2"
          vulnerable_functions:
          - a_function
        cvss:
          vector_string: CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H
          score: 7.6
        cwes:
        - cwe_id: CWE-400
          name: Uncontrolled Resource Consumption
        credits:
        - user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          type: analyst
    integration:
      value:
        id: 1
        slug: octoapp
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
    integration-from-manifest:
      value:
        id: 1
        slug: octoapp
        node_id: MDxOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
        client_id: Iv1.8a61f9b3a7aba766
        client_secret: 1726be1638095a19edd134c77bde3aa2ece1e5d8
        webhook_secret: e340154128314309424b7c8e90325147d99fdafa
        pem: PEM ENCODED RSA PRIVATE KEY
    webhook-config:
      value:
        content_type: json
        insecure_ssl: '0'
        secret: "********"
        url: https://example.com/webhook
    hook-delivery-items:
      value:
      - id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
      - id: 123456789
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-04T00:57:16Z'
        redelivery: true
        duration: 0.28
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
    hook-delivery:
      value:
        id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        url: https://www.example.com
        request:
          headers:
            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516
            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
            Accept: "*/*"
            X-GitHub-Hook-ID: '42'
            User-Agent: GitHub-Hookshot/b8c71d8
            X-GitHub-Event: issues
            X-GitHub-Hook-Installation-Target-ID: '123'
            X-GitHub-Hook-Installation-Target-Type: repository
            content-type: application/json
            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          payload:
            action: opened
            issue:
              body: foo
            repository:
              id: 123
        response:
          headers:
            Content-Type: text/html;charset=utf-8
          payload: ok
    integration-installation-request-paginated:
      value:
      - id: 25381
        node_id: MDEyOkludGVncmF0aW9uMTIzNDU2Nzg5MA==
        account:
          login: octo-org
          id: 6811672
          node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
          avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octo-org
          html_url: https://github.com/octo-org
          followers_url: https://api.github.com/users/octo-org/followers
          following_url: https://api.github.com/users/octo-org/following{/other_user}
          gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
          starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octo-org/subscriptions
          organizations_url: https://api.github.com/users/octo-org/orgs
          repos_url: https://api.github.com/users/octo-org/repos
          events_url: https://api.github.com/users/octo-org/events{/privacy}
          received_events_url: https://api.github.com/users/octo-org/received_events
          type: Organization
          site_admin: false
        requester:
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2022-07-08T16:18:44-04:00'
    base-installation-items:
      value:
      - id: 1
        account:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        access_tokens_url: https://api.github.com/app/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
        - push
        - pull_request
        single_file_name: config.yaml
        has_multiple_single_files: true
        single_file_paths:
        - config.yml
        - ".github/issue_TEMPLATE.md"
        repository_selection: selected
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app_slug: github-actions
    base-installation:
      value:
        id: 1
        account:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        access_tokens_url: https://api.github.com/app/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
        - push
        - pull_request
        single_file_name: config.yaml
        has_multiple_single_files: true
        single_file_paths:
        - config.yml
        - ".github/issue_TEMPLATE.md"
        repository_selection: selected
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app_slug: github-actions
    installation-token:
      value:
        token: github_app_token
        expires_at: '2016-07-11T22:14:10Z'
        permissions:
          issues: write
          contents: read
        repository_selection: selected
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    authorization-with-user:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
        - public_repo
        - user
        token: github_app_token
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: Iv1.8a61f9b3a7aba766
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
        expires_at: '2011-09-08T17:26:27Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    scope-token:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes: []
        token: github_app_token
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: Iv1.8a61f9b3a7aba766
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
        expires_at: '2011-09-08T17:26:27Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        installation:
          permissions:
            metadata: read
            issues: write
            contents: read
          repository_selection: selected
          single_file_name: ".github/workflow.yml"
          repositories_url: https://api.github.com/user/repos
          account:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          has_multiple_single_files: false
          single_file_paths: []
    classroom-assignment:
      value:
        id: 12,
        public_repo: false,
        title: Intro to Binaries
        type: individual
        invite_link: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled: true,
        slug: intro-to-binaries
        students_are_repo_admins: false
        feedback_pull_requests_enabled: true
        max_teams: 0
        max_members: 0
        editor: codespaces
        accepted: 100
        submitted: 40
        passing: 10
        language: ruby
        deadline: '2011-01-26T19:06:43Z'
        stater_code_repository:
          id: 1296269
          full_name: octocat/Hello-World
          html_url: https://github.com/octocat/Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          private: false
          default_branch: main
        classroom:
          id: 1296269
          name: Programming Elixir
          archived: false,
          url: https://classroom.github.com/classrooms/1-programming-elixir
    classroom-accepted-assignment:
      value:
        id: 12,
        submitted: false,
        passing: false,
        commit_count: 5
        grade: 5/10
        students:
        - id: 1
          login: octocat
          avatar_url: https://github.com/images/error/octocat_happy.gif
          html_url: https://github.com/octocat
        repository:
          id: 1296269
          full_name: octocat/Hello-World
          html_url: https://github.com/octocat/Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          private: false
          default_branch: main
        assignment:
          id: 12,
          public_repo: false,
          title: Intro to Binaries
          type: individual
          invite_link: https://classroom.github.com/a/Lx7jiUgx
          invitations_enabled: true,
          slug: intro-to-binaries
          students_are_repo_admins: false
          feedback_pull_requests_enabled: true
          max_teams: 0
          max_members: 0
          editor: codespaces
          accepted: 100
          submitted: 40
          passing: 10
          language: ruby
          classroom:
            id: 1296269
            name: Programming Elixir
            archived: false,
            url: https://classroom.github.com/classrooms/1-programming-elixir
    classroom-assignment-grades:
      value:
      - assignment_name: Introduction to Strings
        assignment_url: https://classroom.github.com/classrooms/1337/assignments/1337
        starter_code_url: ''
        github_username: octocat
        roster_identifier: octocat@github.com
        student_repository_name: intro-to-strings-1337-octocat
        student_repository_url: https://github.com/timeforschool/intro-to-strings-1337-octocat
        submission_timestamp: 2018-11-12 01:02
        points_awarded: 10
        points_available: 15
        group_name: octocat-and-friends
      - assignment_name: Introduction to Strings
        assignment_url: https://classroom.github.com/classrooms/1337/assignments/1337
        starter_code_url: ''
        github_username: monalisa
        roster_identifier: monalisa@github.com
        student_repository_name: intro-to-strings-1337-monalisa
        student_repository_url: https://github.com/timeforschool/intro-to-strings-1337-monalisa
        submission_timestamp: 2018-11-12 01:11
        points_awarded: 15
        points_available: 15
        group_name: monalisa-and-friends
    simple-classroom:
      value:
        id: 1296269
        name: Programming Elixir
        archived: false,
        url: https://classroom.github.com/classrooms/1-programming-elixir
    classroom:
      value:
        id: 1296269
        name: Programming Elixir
        archived: false,
        organization:
          id: 1
          login: programming-elixir
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          html_url: https://github.com/programming-elixir
          name: Learn how to build fault tolerant applications
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
        url: https://classroom.github.com/classrooms/1-programming-elixir
    simple-classroom-assignment:
      value:
        id: 12,
        public_repo: false,
        title: Intro to Binaries
        type: individual
        invite_link: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled: true,
        slug: intro-to-binaries
        students_are_repo_admins: false
        feedback_pull_requests_enabled: true
        max_teams: 0
        max_members: 0
        editor: codespaces
        accepted: 100
        submitted: 40
        passing: 10
        language: ruby
        deadline: '2020-01-11T11:59:22Z'
        classroom:
          id: 1296269
          name: Programming Elixir
          archived: false,
          url: https://classroom.github.com/classrooms/1-programming-elixir
    code-of-conduct-simple-items:
      value:
      - key: citizen_code_of_conduct
        name: Citizen Code of Conduct
        url: https://api.github.com/codes_of_conduct/citizen_code_of_conduct
        html_url: http://citizencodeofconduct.org/
      - key: contributor_covenant
        name: Contributor Covenant
        url: https://api.github.com/codes_of_conduct/contributor_covenant
        html_url: https://www.contributor-covenant.org/version/2/0/code_of_conduct/
    code-of-conduct:
      value:
        key: contributor_covenant
        name: Contributor Covenant
        url: https://api.github.com/codes_of_conduct/contributor_covenant
        body: |
          # Contributor Covenant Code of Conduct

          ## Our Pledge

          In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

          ## Our Standards

          Examples of behavior that contributes to creating a positive environment include:

          * Using welcoming and inclusive language
          * Being respectful of differing viewpoints and experiences
          * Gracefully accepting constructive criticism
          * Focusing on what is best for the community
          * Showing empathy towards other community members

          Examples of unacceptable behavior by participants include:

          * The use of sexualized language or imagery and unwelcome sexual attention or advances
          * Trolling, insulting/derogatory comments, and personal or political attacks
          * Public or private harassment
          * Publishing others' private information, such as a physical or electronic address, without explicit permission
          * Other conduct which could reasonably be considered inappropriate in a professional setting

          ## Our Responsibilities

          Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                            to any instances of unacceptable behavior.

          Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

          ## Scope

          This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                            posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

          ## Enforcement

          Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

          Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

          ## Attribution

          This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

          [homepage]: http://contributor-covenant.org
          [version]: http://contributor-covenant.org/version/1/4/
        html_url: http://contributor-covenant.org/version/1/4/
    emojis-get:
      value:
        '100': https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8
        '1234': https://github.githubassets.com/images/icons/emoji/unicode/1f522.png?v8
        "+1": https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8
        "-1": https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png?v8
        1st_place_medal: https://github.githubassets.com/images/icons/emoji/unicode/1f947.png?v8
        2nd_place_medal: https://github.githubassets.com/images/icons/emoji/unicode/1f948.png?v8
        3rd_place_medal: https://github.githubassets.com/images/icons/emoji/unicode/1f949.png?v8
        8ball: https://github.githubassets.com/images/icons/emoji/unicode/1f3b1.png?v8
        a: https://github.githubassets.com/images/icons/emoji/unicode/1f170.png?v8
        ab: https://github.githubassets.com/images/icons/emoji/unicode/1f18e.png?v8
        abacus: https://github.githubassets.com/images/icons/emoji/unicode/1f9ee.png?v8
        abc: https://github.githubassets.com/images/icons/emoji/unicode/1f524.png?v8
        abcd: https://github.githubassets.com/images/icons/emoji/unicode/1f521.png?v8
        accept: https://github.githubassets.com/images/icons/emoji/unicode/1f251.png?v8
        accessibility: https://github.githubassets.com/images/icons/emoji/accessibility.png?v8
        accordion: https://github.githubassets.com/images/icons/emoji/unicode/1fa97.png?v8
        adhesive_bandage: https://github.githubassets.com/images/icons/emoji/unicode/1fa79.png?v8
        adult: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1.png?v8
        aerial_tramway: https://github.githubassets.com/images/icons/emoji/unicode/1f6a1.png?v8
        afghanistan: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1eb.png?v8
        airplane: https://github.githubassets.com/images/icons/emoji/unicode/2708.png?v8
        aland_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1fd.png?v8
        alarm_clock: https://github.githubassets.com/images/icons/emoji/unicode/23f0.png?v8
        albania: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f1.png?v8
        alembic: https://github.githubassets.com/images/icons/emoji/unicode/2697.png?v8
        algeria: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ff.png?v8
        alien: https://github.githubassets.com/images/icons/emoji/unicode/1f47d.png?v8
        ambulance: https://github.githubassets.com/images/icons/emoji/unicode/1f691.png?v8
        american_samoa: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f8.png?v8
        amphora: https://github.githubassets.com/images/icons/emoji/unicode/1f3fa.png?v8
        anatomical_heart: https://github.githubassets.com/images/icons/emoji/unicode/1fac0.png?v8
        anchor: https://github.githubassets.com/images/icons/emoji/unicode/2693.png?v8
        andorra: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1e9.png?v8
        angel: https://github.githubassets.com/images/icons/emoji/unicode/1f47c.png?v8
        anger: https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8
        angola: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f4.png?v8
        angry: https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8
        anguilla: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ee.png?v8
        anguished: https://github.githubassets.com/images/icons/emoji/unicode/1f627.png?v8
        ant: https://github.githubassets.com/images/icons/emoji/unicode/1f41c.png?v8
        antarctica: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f6.png?v8
        antigua_barbuda: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ec.png?v8
        apple: https://github.githubassets.com/images/icons/emoji/unicode/1f34e.png?v8
        aquarius: https://github.githubassets.com/images/icons/emoji/unicode/2652.png?v8
        argentina: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f7.png?v8
        aries: https://github.githubassets.com/images/icons/emoji/unicode/2648.png?v8
        armenia: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f2.png?v8
        arrow_backward: https://github.githubassets.com/images/icons/emoji/unicode/25c0.png?v8
        arrow_double_down: https://github.githubassets.com/images/icons/emoji/unicode/23ec.png?v8
        arrow_double_up: https://github.githubassets.com/images/icons/emoji/unicode/23eb.png?v8
        arrow_down: https://github.githubassets.com/images/icons/emoji/unicode/2b07.png?v8
        arrow_down_small: https://github.githubassets.com/images/icons/emoji/unicode/1f53d.png?v8
        arrow_forward: https://github.githubassets.com/images/icons/emoji/unicode/25b6.png?v8
        arrow_heading_down: https://github.githubassets.com/images/icons/emoji/unicode/2935.png?v8
        arrow_heading_up: https://github.githubassets.com/images/icons/emoji/unicode/2934.png?v8
        arrow_left: https://github.githubassets.com/images/icons/emoji/unicode/2b05.png?v8
        arrow_lower_left: https://github.githubassets.com/images/icons/emoji/unicode/2199.png?v8
        arrow_lower_right: https://github.githubassets.com/images/icons/emoji/unicode/2198.png?v8
        arrow_right: https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8
        arrow_right_hook: https://github.githubassets.com/images/icons/emoji/unicode/21aa.png?v8
        arrow_up: https://github.githubassets.com/images/icons/emoji/unicode/2b06.png?v8
        arrow_up_down: https://github.githubassets.com/images/icons/emoji/unicode/2195.png?v8
        arrow_up_small: https://github.githubassets.com/images/icons/emoji/unicode/1f53c.png?v8
        arrow_upper_left: https://github.githubassets.com/images/icons/emoji/unicode/2196.png?v8
        arrow_upper_right: https://github.githubassets.com/images/icons/emoji/unicode/2197.png?v8
        arrows_clockwise: https://github.githubassets.com/images/icons/emoji/unicode/1f503.png?v8
        arrows_counterclockwise: https://github.githubassets.com/images/icons/emoji/unicode/1f504.png?v8
        art: https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png?v8
        articulated_lorry: https://github.githubassets.com/images/icons/emoji/unicode/1f69b.png?v8
        artificial_satellite: https://github.githubassets.com/images/icons/emoji/unicode/1f6f0.png?v8
        artist: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3a8.png?v8
        aruba: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1fc.png?v8
        ascension_island: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1e8.png?v8
        asterisk: https://github.githubassets.com/images/icons/emoji/unicode/002a-20e3.png?v8
        astonished: https://github.githubassets.com/images/icons/emoji/unicode/1f632.png?v8
        astronaut: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f680.png?v8
        athletic_shoe: https://github.githubassets.com/images/icons/emoji/unicode/1f45f.png?v8
        atm: https://github.githubassets.com/images/icons/emoji/unicode/1f3e7.png?v8
        atom: https://github.githubassets.com/images/icons/emoji/atom.png?v8
        atom_symbol: https://github.githubassets.com/images/icons/emoji/unicode/269b.png?v8
        australia: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1fa.png?v8
        austria: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1f9.png?v8
        auto_rickshaw: https://github.githubassets.com/images/icons/emoji/unicode/1f6fa.png?v8
        avocado: https://github.githubassets.com/images/icons/emoji/unicode/1f951.png?v8
        axe: https://github.githubassets.com/images/icons/emoji/unicode/1fa93.png?v8
        azerbaijan: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ff.png?v8
        b: https://github.githubassets.com/images/icons/emoji/unicode/1f171.png?v8
        baby: https://github.githubassets.com/images/icons/emoji/unicode/1f476.png?v8
        baby_bottle: https://github.githubassets.com/images/icons/emoji/unicode/1f37c.png?v8
        baby_chick: https://github.githubassets.com/images/icons/emoji/unicode/1f424.png?v8
        baby_symbol: https://github.githubassets.com/images/icons/emoji/unicode/1f6bc.png?v8
        back: https://github.githubassets.com/images/icons/emoji/unicode/1f519.png?v8
        bacon: https://github.githubassets.com/images/icons/emoji/unicode/1f953.png?v8
        badger: https://github.githubassets.com/images/icons/emoji/unicode/1f9a1.png?v8
        badminton: https://github.githubassets.com/images/icons/emoji/unicode/1f3f8.png?v8
        bagel: https://github.githubassets.com/images/icons/emoji/unicode/1f96f.png?v8
        baggage_claim: https://github.githubassets.com/images/icons/emoji/unicode/1f6c4.png?v8
        baguette_bread: https://github.githubassets.com/images/icons/emoji/unicode/1f956.png?v8
        bahamas: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f8.png?v8
        bahrain: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ed.png?v8
        balance_scale: https://github.githubassets.com/images/icons/emoji/unicode/2696.png?v8
        bald_man: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b2.png?v8
        bald_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b2.png?v8
        ballet_shoes: https://github.githubassets.com/images/icons/emoji/unicode/1fa70.png?v8
        balloon: https://github.githubassets.com/images/icons/emoji/unicode/1f388.png?v8
        ballot_box: https://github.githubassets.com/images/icons/emoji/unicode/1f5f3.png?v8
        ballot_box_with_check: https://github.githubassets.com/images/icons/emoji/unicode/2611.png?v8
        bamboo: https://github.githubassets.com/images/icons/emoji/unicode/1f38d.png?v8
        banana: https://github.githubassets.com/images/icons/emoji/unicode/1f34c.png?v8
        bangbang: https://github.githubassets.com/images/icons/emoji/unicode/203c.png?v8
        bangladesh: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1e9.png?v8
        banjo: https://github.githubassets.com/images/icons/emoji/unicode/1fa95.png?v8
        bank: https://github.githubassets.com/images/icons/emoji/unicode/1f3e6.png?v8
        bar_chart: https://github.githubassets.com/images/icons/emoji/unicode/1f4ca.png?v8
        barbados: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1e7.png?v8
        barber: https://github.githubassets.com/images/icons/emoji/unicode/1f488.png?v8
        baseball: https://github.githubassets.com/images/icons/emoji/unicode/26be.png?v8
        basecamp: https://github.githubassets.com/images/icons/emoji/basecamp.png?v8
        basecampy: https://github.githubassets.com/images/icons/emoji/basecampy.png?v8
        basket: https://github.githubassets.com/images/icons/emoji/unicode/1f9fa.png?v8
        basketball: https://github.githubassets.com/images/icons/emoji/unicode/1f3c0.png?v8
        basketball_man: https://github.githubassets.com/images/icons/emoji/unicode/26f9-2642.png?v8
        basketball_woman: https://github.githubassets.com/images/icons/emoji/unicode/26f9-2640.png?v8
        bat: https://github.githubassets.com/images/icons/emoji/unicode/1f987.png?v8
        bath: https://github.githubassets.com/images/icons/emoji/unicode/1f6c0.png?v8
        bathtub: https://github.githubassets.com/images/icons/emoji/unicode/1f6c1.png?v8
        battery: https://github.githubassets.com/images/icons/emoji/unicode/1f50b.png?v8
        beach_umbrella: https://github.githubassets.com/images/icons/emoji/unicode/1f3d6.png?v8
        bear: https://github.githubassets.com/images/icons/emoji/unicode/1f43b.png?v8
        bearded_person: https://github.githubassets.com/images/icons/emoji/unicode/1f9d4.png?v8
        beaver: https://github.githubassets.com/images/icons/emoji/unicode/1f9ab.png?v8
        bed: https://github.githubassets.com/images/icons/emoji/unicode/1f6cf.png?v8
        bee: https://github.githubassets.com/images/icons/emoji/unicode/1f41d.png?v8
        beer: https://github.githubassets.com/images/icons/emoji/unicode/1f37a.png?v8
        beers: https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png?v8
        beetle: https://github.githubassets.com/images/icons/emoji/unicode/1fab2.png?v8
        beginner: https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8
        belarus: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1fe.png?v8
        belgium: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ea.png?v8
        belize: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ff.png?v8
        bell: https://github.githubassets.com/images/icons/emoji/unicode/1f514.png?v8
        bell_pepper: https://github.githubassets.com/images/icons/emoji/unicode/1fad1.png?v8
        bellhop_bell: https://github.githubassets.com/images/icons/emoji/unicode/1f6ce.png?v8
        benin: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ef.png?v8
        bento: https://github.githubassets.com/images/icons/emoji/unicode/1f371.png?v8
        bermuda: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f2.png?v8
        beverage_box: https://github.githubassets.com/images/icons/emoji/unicode/1f9c3.png?v8
        bhutan: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f9.png?v8
        bicyclist: https://github.githubassets.com/images/icons/emoji/unicode/1f6b4.png?v8
        bike: https://github.githubassets.com/images/icons/emoji/unicode/1f6b2.png?v8
        biking_man: https://github.githubassets.com/images/icons/emoji/unicode/1f6b4-2642.png?v8
        biking_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f6b4-2640.png?v8
        bikini: https://github.githubassets.com/images/icons/emoji/unicode/1f459.png?v8
        billed_cap: https://github.githubassets.com/images/icons/emoji/unicode/1f9e2.png?v8
        biohazard: https://github.githubassets.com/images/icons/emoji/unicode/2623.png?v8
        bird: https://github.githubassets.com/images/icons/emoji/unicode/1f426.png?v8
        birthday: https://github.githubassets.com/images/icons/emoji/unicode/1f382.png?v8
        bison: https://github.githubassets.com/images/icons/emoji/unicode/1f9ac.png?v8
        black_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f408-2b1b.png?v8
        black_circle: https://github.githubassets.com/images/icons/emoji/unicode/26ab.png?v8
        black_flag: https://github.githubassets.com/images/icons/emoji/unicode/1f3f4.png?v8
        black_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f5a4.png?v8
        black_joker: https://github.githubassets.com/images/icons/emoji/unicode/1f0cf.png?v8
        black_large_square: https://github.githubassets.com/images/icons/emoji/unicode/2b1b.png?v8
        black_medium_small_square: https://github.githubassets.com/images/icons/emoji/unicode/25fe.png?v8
        black_medium_square: https://github.githubassets.com/images/icons/emoji/unicode/25fc.png?v8
        black_nib: https://github.githubassets.com/images/icons/emoji/unicode/2712.png?v8
        black_small_square: https://github.githubassets.com/images/icons/emoji/unicode/25aa.png?v8
        black_square_button: https://github.githubassets.com/images/icons/emoji/unicode/1f532.png?v8
        blond_haired_man: https://github.githubassets.com/images/icons/emoji/unicode/1f471-2642.png?v8
        blond_haired_person: https://github.githubassets.com/images/icons/emoji/unicode/1f471.png?v8
        blond_haired_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f471-2640.png?v8
        blonde_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f471-2640.png?v8
        blossom: https://github.githubassets.com/images/icons/emoji/unicode/1f33c.png?v8
        blowfish: https://github.githubassets.com/images/icons/emoji/unicode/1f421.png?v8
        blue_book: https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png?v8
        blue_car: https://github.githubassets.com/images/icons/emoji/unicode/1f699.png?v8
        blue_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f499.png?v8
        blue_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7e6.png?v8
        blueberries: https://github.githubassets.com/images/icons/emoji/unicode/1fad0.png?v8
        blush: https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8
        boar: https://github.githubassets.com/images/icons/emoji/unicode/1f417.png?v8
        boat: https://github.githubassets.com/images/icons/emoji/unicode/26f5.png?v8
        bolivia: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f4.png?v8
        bomb: https://github.githubassets.com/images/icons/emoji/unicode/1f4a3.png?v8
        bone: https://github.githubassets.com/images/icons/emoji/unicode/1f9b4.png?v8
        book: https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png?v8
        bookmark: https://github.githubassets.com/images/icons/emoji/unicode/1f516.png?v8
        bookmark_tabs: https://github.githubassets.com/images/icons/emoji/unicode/1f4d1.png?v8
        books: https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8
        boom: https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8
        boomerang: https://github.githubassets.com/images/icons/emoji/unicode/1fa83.png?v8
        boot: https://github.githubassets.com/images/icons/emoji/unicode/1f462.png?v8
        bosnia_herzegovina: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1e6.png?v8
        botswana: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1fc.png?v8
        bouncing_ball_man: https://github.githubassets.com/images/icons/emoji/unicode/26f9-2642.png?v8
        bouncing_ball_person: https://github.githubassets.com/images/icons/emoji/unicode/26f9.png?v8
        bouncing_ball_woman: https://github.githubassets.com/images/icons/emoji/unicode/26f9-2640.png?v8
        bouquet: https://github.githubassets.com/images/icons/emoji/unicode/1f490.png?v8
        bouvet_island: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1fb.png?v8
        bow: https://github.githubassets.com/images/icons/emoji/unicode/1f647.png?v8
        bow_and_arrow: https://github.githubassets.com/images/icons/emoji/unicode/1f3f9.png?v8
        bowing_man: https://github.githubassets.com/images/icons/emoji/unicode/1f647-2642.png?v8
        bowing_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f647-2640.png?v8
        bowl_with_spoon: https://github.githubassets.com/images/icons/emoji/unicode/1f963.png?v8
        bowling: https://github.githubassets.com/images/icons/emoji/unicode/1f3b3.png?v8
        bowtie: https://github.githubassets.com/images/icons/emoji/bowtie.png?v8
        boxing_glove: https://github.githubassets.com/images/icons/emoji/unicode/1f94a.png?v8
        boy: https://github.githubassets.com/images/icons/emoji/unicode/1f466.png?v8
        brain: https://github.githubassets.com/images/icons/emoji/unicode/1f9e0.png?v8
        brazil: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png?v8
        bread: https://github.githubassets.com/images/icons/emoji/unicode/1f35e.png?v8
        breast_feeding: https://github.githubassets.com/images/icons/emoji/unicode/1f931.png?v8
        bricks: https://github.githubassets.com/images/icons/emoji/unicode/1f9f1.png?v8
        bride_with_veil: https://github.githubassets.com/images/icons/emoji/unicode/1f470-2640.png?v8
        bridge_at_night: https://github.githubassets.com/images/icons/emoji/unicode/1f309.png?v8
        briefcase: https://github.githubassets.com/images/icons/emoji/unicode/1f4bc.png?v8
        british_indian_ocean_territory: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f4.png?v8
        british_virgin_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1ec.png?v8
        broccoli: https://github.githubassets.com/images/icons/emoji/unicode/1f966.png?v8
        broken_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8
        broom: https://github.githubassets.com/images/icons/emoji/unicode/1f9f9.png?v8
        brown_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f7e4.png?v8
        brown_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f90e.png?v8
        brown_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7eb.png?v8
        brunei: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f3.png?v8
        bubble_tea: https://github.githubassets.com/images/icons/emoji/unicode/1f9cb.png?v8
        bucket: https://github.githubassets.com/images/icons/emoji/unicode/1faa3.png?v8
        bug: https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8
        building_construction: https://github.githubassets.com/images/icons/emoji/unicode/1f3d7.png?v8
        bulb: https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8
        bulgaria: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ec.png?v8
        bullettrain_front: https://github.githubassets.com/images/icons/emoji/unicode/1f685.png?v8
        bullettrain_side: https://github.githubassets.com/images/icons/emoji/unicode/1f684.png?v8
        burkina_faso: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1eb.png?v8
        burrito: https://github.githubassets.com/images/icons/emoji/unicode/1f32f.png?v8
        burundi: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1ee.png?v8
        bus: https://github.githubassets.com/images/icons/emoji/unicode/1f68c.png?v8
        business_suit_levitating: https://github.githubassets.com/images/icons/emoji/unicode/1f574.png?v8
        busstop: https://github.githubassets.com/images/icons/emoji/unicode/1f68f.png?v8
        bust_in_silhouette: https://github.githubassets.com/images/icons/emoji/unicode/1f464.png?v8
        busts_in_silhouette: https://github.githubassets.com/images/icons/emoji/unicode/1f465.png?v8
        butter: https://github.githubassets.com/images/icons/emoji/unicode/1f9c8.png?v8
        butterfly: https://github.githubassets.com/images/icons/emoji/unicode/1f98b.png?v8
        cactus: https://github.githubassets.com/images/icons/emoji/unicode/1f335.png?v8
        cake: https://github.githubassets.com/images/icons/emoji/unicode/1f370.png?v8
        calendar: https://github.githubassets.com/images/icons/emoji/unicode/1f4c6.png?v8
        call_me_hand: https://github.githubassets.com/images/icons/emoji/unicode/1f919.png?v8
        calling: https://github.githubassets.com/images/icons/emoji/unicode/1f4f2.png?v8
        cambodia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ed.png?v8
        camel: https://github.githubassets.com/images/icons/emoji/unicode/1f42b.png?v8
        camera: https://github.githubassets.com/images/icons/emoji/unicode/1f4f7.png?v8
        camera_flash: https://github.githubassets.com/images/icons/emoji/unicode/1f4f8.png?v8
        cameroon: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f2.png?v8
        camping: https://github.githubassets.com/images/icons/emoji/unicode/1f3d5.png?v8
        canada: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1e6.png?v8
        canary_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e8.png?v8
        cancer: https://github.githubassets.com/images/icons/emoji/unicode/264b.png?v8
        candle: https://github.githubassets.com/images/icons/emoji/unicode/1f56f.png?v8
        candy: https://github.githubassets.com/images/icons/emoji/unicode/1f36c.png?v8
        canned_food: https://github.githubassets.com/images/icons/emoji/unicode/1f96b.png?v8
        canoe: https://github.githubassets.com/images/icons/emoji/unicode/1f6f6.png?v8
        cape_verde: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fb.png?v8
        capital_abcd: https://github.githubassets.com/images/icons/emoji/unicode/1f520.png?v8
        capricorn: https://github.githubassets.com/images/icons/emoji/unicode/2651.png?v8
        car: https://github.githubassets.com/images/icons/emoji/unicode/1f697.png?v8
        card_file_box: https://github.githubassets.com/images/icons/emoji/unicode/1f5c3.png?v8
        card_index: https://github.githubassets.com/images/icons/emoji/unicode/1f4c7.png?v8
        card_index_dividers: https://github.githubassets.com/images/icons/emoji/unicode/1f5c2.png?v8
        caribbean_netherlands: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f6.png?v8
        carousel_horse: https://github.githubassets.com/images/icons/emoji/unicode/1f3a0.png?v8
        carpentry_saw: https://github.githubassets.com/images/icons/emoji/unicode/1fa9a.png?v8
        carrot: https://github.githubassets.com/images/icons/emoji/unicode/1f955.png?v8
        cartwheeling: https://github.githubassets.com/images/icons/emoji/unicode/1f938.png?v8
        cat: https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8
        cat2: https://github.githubassets.com/images/icons/emoji/unicode/1f408.png?v8
        cayman_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1fe.png?v8
        cd: https://github.githubassets.com/images/icons/emoji/unicode/1f4bf.png?v8
        central_african_republic: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1eb.png?v8
        ceuta_melilla: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1e6.png?v8
        chad: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1e9.png?v8
        chains: https://github.githubassets.com/images/icons/emoji/unicode/26d3.png?v8
        chair: https://github.githubassets.com/images/icons/emoji/unicode/1fa91.png?v8
        champagne: https://github.githubassets.com/images/icons/emoji/unicode/1f37e.png?v8
        chart: https://github.githubassets.com/images/icons/emoji/unicode/1f4b9.png?v8
        chart_with_downwards_trend: https://github.githubassets.com/images/icons/emoji/unicode/1f4c9.png?v8
        chart_with_upwards_trend: https://github.githubassets.com/images/icons/emoji/unicode/1f4c8.png?v8
        checkered_flag: https://github.githubassets.com/images/icons/emoji/unicode/1f3c1.png?v8
        cheese: https://github.githubassets.com/images/icons/emoji/unicode/1f9c0.png?v8
        cherries: https://github.githubassets.com/images/icons/emoji/unicode/1f352.png?v8
        cherry_blossom: https://github.githubassets.com/images/icons/emoji/unicode/1f338.png?v8
        chess_pawn: https://github.githubassets.com/images/icons/emoji/unicode/265f.png?v8
        chestnut: https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8
        chicken: https://github.githubassets.com/images/icons/emoji/unicode/1f414.png?v8
        child: https://github.githubassets.com/images/icons/emoji/unicode/1f9d2.png?v8
        children_crossing: https://github.githubassets.com/images/icons/emoji/unicode/1f6b8.png?v8
        chile: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f1.png?v8
        chipmunk: https://github.githubassets.com/images/icons/emoji/unicode/1f43f.png?v8
        chocolate_bar: https://github.githubassets.com/images/icons/emoji/unicode/1f36b.png?v8
        chopsticks: https://github.githubassets.com/images/icons/emoji/unicode/1f962.png?v8
        christmas_island: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fd.png?v8
        christmas_tree: https://github.githubassets.com/images/icons/emoji/unicode/1f384.png?v8
        church: https://github.githubassets.com/images/icons/emoji/unicode/26ea.png?v8
        cinema: https://github.githubassets.com/images/icons/emoji/unicode/1f3a6.png?v8
        circus_tent: https://github.githubassets.com/images/icons/emoji/unicode/1f3aa.png?v8
        city_sunrise: https://github.githubassets.com/images/icons/emoji/unicode/1f307.png?v8
        city_sunset: https://github.githubassets.com/images/icons/emoji/unicode/1f306.png?v8
        cityscape: https://github.githubassets.com/images/icons/emoji/unicode/1f3d9.png?v8
        cl: https://github.githubassets.com/images/icons/emoji/unicode/1f191.png?v8
        clamp: https://github.githubassets.com/images/icons/emoji/unicode/1f5dc.png?v8
        clap: https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8
        clapper: https://github.githubassets.com/images/icons/emoji/unicode/1f3ac.png?v8
        classical_building: https://github.githubassets.com/images/icons/emoji/unicode/1f3db.png?v8
        climbing: https://github.githubassets.com/images/icons/emoji/unicode/1f9d7.png?v8
        climbing_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9d7-2642.png?v8
        climbing_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9d7-2640.png?v8
        clinking_glasses: https://github.githubassets.com/images/icons/emoji/unicode/1f942.png?v8
        clipboard: https://github.githubassets.com/images/icons/emoji/unicode/1f4cb.png?v8
        clipperton_island: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f5.png?v8
        clock1: https://github.githubassets.com/images/icons/emoji/unicode/1f550.png?v8
        clock10: https://github.githubassets.com/images/icons/emoji/unicode/1f559.png?v8
        clock1030: https://github.githubassets.com/images/icons/emoji/unicode/1f565.png?v8
        clock11: https://github.githubassets.com/images/icons/emoji/unicode/1f55a.png?v8
        clock1130: https://github.githubassets.com/images/icons/emoji/unicode/1f566.png?v8
        clock12: https://github.githubassets.com/images/icons/emoji/unicode/1f55b.png?v8
        clock1230: https://github.githubassets.com/images/icons/emoji/unicode/1f567.png?v8
        clock130: https://github.githubassets.com/images/icons/emoji/unicode/1f55c.png?v8
        clock2: https://github.githubassets.com/images/icons/emoji/unicode/1f551.png?v8
        clock230: https://github.githubassets.com/images/icons/emoji/unicode/1f55d.png?v8
        clock3: https://github.githubassets.com/images/icons/emoji/unicode/1f552.png?v8
        clock330: https://github.githubassets.com/images/icons/emoji/unicode/1f55e.png?v8
        clock4: https://github.githubassets.com/images/icons/emoji/unicode/1f553.png?v8
        clock430: https://github.githubassets.com/images/icons/emoji/unicode/1f55f.png?v8
        clock5: https://github.githubassets.com/images/icons/emoji/unicode/1f554.png?v8
        clock530: https://github.githubassets.com/images/icons/emoji/unicode/1f560.png?v8
        clock6: https://github.githubassets.com/images/icons/emoji/unicode/1f555.png?v8
        clock630: https://github.githubassets.com/images/icons/emoji/unicode/1f561.png?v8
        clock7: https://github.githubassets.com/images/icons/emoji/unicode/1f556.png?v8
        clock730: https://github.githubassets.com/images/icons/emoji/unicode/1f562.png?v8
        clock8: https://github.githubassets.com/images/icons/emoji/unicode/1f557.png?v8
        clock830: https://github.githubassets.com/images/icons/emoji/unicode/1f563.png?v8
        clock9: https://github.githubassets.com/images/icons/emoji/unicode/1f558.png?v8
        clock930: https://github.githubassets.com/images/icons/emoji/unicode/1f564.png?v8
        closed_book: https://github.githubassets.com/images/icons/emoji/unicode/1f4d5.png?v8
        closed_lock_with_key: https://github.githubassets.com/images/icons/emoji/unicode/1f510.png?v8
        closed_umbrella: https://github.githubassets.com/images/icons/emoji/unicode/1f302.png?v8
        cloud: https://github.githubassets.com/images/icons/emoji/unicode/2601.png?v8
        cloud_with_lightning: https://github.githubassets.com/images/icons/emoji/unicode/1f329.png?v8
        cloud_with_lightning_and_rain: https://github.githubassets.com/images/icons/emoji/unicode/26c8.png?v8
        cloud_with_rain: https://github.githubassets.com/images/icons/emoji/unicode/1f327.png?v8
        cloud_with_snow: https://github.githubassets.com/images/icons/emoji/unicode/1f328.png?v8
        clown_face: https://github.githubassets.com/images/icons/emoji/unicode/1f921.png?v8
        clubs: https://github.githubassets.com/images/icons/emoji/unicode/2663.png?v8
        cn: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png?v8
        coat: https://github.githubassets.com/images/icons/emoji/unicode/1f9e5.png?v8
        cockroach: https://github.githubassets.com/images/icons/emoji/unicode/1fab3.png?v8
        cocktail: https://github.githubassets.com/images/icons/emoji/unicode/1f378.png?v8
        coconut: https://github.githubassets.com/images/icons/emoji/unicode/1f965.png?v8
        cocos_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1e8.png?v8
        coffee: https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8
        coffin: https://github.githubassets.com/images/icons/emoji/unicode/26b0.png?v8
        coin: https://github.githubassets.com/images/icons/emoji/unicode/1fa99.png?v8
        cold_face: https://github.githubassets.com/images/icons/emoji/unicode/1f976.png?v8
        cold_sweat: https://github.githubassets.com/images/icons/emoji/unicode/1f630.png?v8
        collision: https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8
        colombia: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f4.png?v8
        comet: https://github.githubassets.com/images/icons/emoji/unicode/2604.png?v8
        comoros: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f2.png?v8
        compass: https://github.githubassets.com/images/icons/emoji/unicode/1f9ed.png?v8
        computer: https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8
        computer_mouse: https://github.githubassets.com/images/icons/emoji/unicode/1f5b1.png?v8
        confetti_ball: https://github.githubassets.com/images/icons/emoji/unicode/1f38a.png?v8
        confounded: https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8
        confused: https://github.githubassets.com/images/icons/emoji/unicode/1f615.png?v8
        congo_brazzaville: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ec.png?v8
        congo_kinshasa: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1e9.png?v8
        congratulations: https://github.githubassets.com/images/icons/emoji/unicode/3297.png?v8
        construction: https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png?v8
        construction_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f477.png?v8
        construction_worker_man: https://github.githubassets.com/images/icons/emoji/unicode/1f477-2642.png?v8
        construction_worker_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f477-2640.png?v8
        control_knobs: https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png?v8
        convenience_store: https://github.githubassets.com/images/icons/emoji/unicode/1f3ea.png?v8
        cook: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f373.png?v8
        cook_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f0.png?v8
        cookie: https://github.githubassets.com/images/icons/emoji/unicode/1f36a.png?v8
        cool: https://github.githubassets.com/images/icons/emoji/unicode/1f192.png?v8
        cop: https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png?v8
        copyright: https://github.githubassets.com/images/icons/emoji/unicode/00a9.png?v8
        corn: https://github.githubassets.com/images/icons/emoji/unicode/1f33d.png?v8
        costa_rica: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f7.png?v8
        cote_divoire: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ee.png?v8
        couch_and_lamp: https://github.githubassets.com/images/icons/emoji/unicode/1f6cb.png?v8
        couple: https://github.githubassets.com/images/icons/emoji/unicode/1f46b.png?v8
        couple_with_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f491.png?v8
        couple_with_heart_man_man: https://github.githubassets.com/images/icons/emoji/unicode/1f468-2764-1f468.png?v8
        couple_with_heart_woman_man: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f468.png?v8
        couple_with_heart_woman_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f469.png?v8
        couplekiss: https://github.githubassets.com/images/icons/emoji/unicode/1f48f.png?v8
        couplekiss_man_man: https://github.githubassets.com/images/icons/emoji/unicode/1f468-2764-1f48b-1f468.png?v8
        couplekiss_man_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f468.png?v8
        couplekiss_woman_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2764-1f48b-1f469.png?v8
        cow: https://github.githubassets.com/images/icons/emoji/unicode/1f42e.png?v8
        cow2: https://github.githubassets.com/images/icons/emoji/unicode/1f404.png?v8
        cowboy_hat_face: https://github.githubassets.com/images/icons/emoji/unicode/1f920.png?v8
        crab: https://github.githubassets.com/images/icons/emoji/unicode/1f980.png?v8
        crayon: https://github.githubassets.com/images/icons/emoji/unicode/1f58d.png?v8
        credit_card: https://github.githubassets.com/images/icons/emoji/unicode/1f4b3.png?v8
        crescent_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f319.png?v8
        cricket: https://github.githubassets.com/images/icons/emoji/unicode/1f997.png?v8
        cricket_game: https://github.githubassets.com/images/icons/emoji/unicode/1f3cf.png?v8
        croatia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f7.png?v8
        crocodile: https://github.githubassets.com/images/icons/emoji/unicode/1f40a.png?v8
        croissant: https://github.githubassets.com/images/icons/emoji/unicode/1f950.png?v8
        crossed_fingers: https://github.githubassets.com/images/icons/emoji/unicode/1f91e.png?v8
        crossed_flags: https://github.githubassets.com/images/icons/emoji/unicode/1f38c.png?v8
        crossed_swords: https://github.githubassets.com/images/icons/emoji/unicode/2694.png?v8
        crown: https://github.githubassets.com/images/icons/emoji/unicode/1f451.png?v8
        cry: https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8
        crying_cat_face: https://github.githubassets.com/images/icons/emoji/unicode/1f63f.png?v8
        crystal_ball: https://github.githubassets.com/images/icons/emoji/unicode/1f52e.png?v8
        cuba: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fa.png?v8
        cucumber: https://github.githubassets.com/images/icons/emoji/unicode/1f952.png?v8
        cup_with_straw: https://github.githubassets.com/images/icons/emoji/unicode/1f964.png?v8
        cupcake: https://github.githubassets.com/images/icons/emoji/unicode/1f9c1.png?v8
        cupid: https://github.githubassets.com/images/icons/emoji/unicode/1f498.png?v8
        curacao: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fc.png?v8
        curling_stone: https://github.githubassets.com/images/icons/emoji/unicode/1f94c.png?v8
        curly_haired_man: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b1.png?v8
        curly_haired_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b1.png?v8
        curly_loop: https://github.githubassets.com/images/icons/emoji/unicode/27b0.png?v8
        currency_exchange: https://github.githubassets.com/images/icons/emoji/unicode/1f4b1.png?v8
        curry: https://github.githubassets.com/images/icons/emoji/unicode/1f35b.png?v8
        cursing_face: https://github.githubassets.com/images/icons/emoji/unicode/1f92c.png?v8
        custard: https://github.githubassets.com/images/icons/emoji/unicode/1f36e.png?v8
        customs: https://github.githubassets.com/images/icons/emoji/unicode/1f6c3.png?v8
        cut_of_meat: https://github.githubassets.com/images/icons/emoji/unicode/1f969.png?v8
        cyclone: https://github.githubassets.com/images/icons/emoji/unicode/1f300.png?v8
        cyprus: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1fe.png?v8
        czech_republic: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ff.png?v8
        dagger: https://github.githubassets.com/images/icons/emoji/unicode/1f5e1.png?v8
        dancer: https://github.githubassets.com/images/icons/emoji/unicode/1f483.png?v8
        dancers: https://github.githubassets.com/images/icons/emoji/unicode/1f46f.png?v8
        dancing_men: https://github.githubassets.com/images/icons/emoji/unicode/1f46f-2642.png?v8
        dancing_women: https://github.githubassets.com/images/icons/emoji/unicode/1f46f-2640.png?v8
        dango: https://github.githubassets.com/images/icons/emoji/unicode/1f361.png?v8
        dark_sunglasses: https://github.githubassets.com/images/icons/emoji/unicode/1f576.png?v8
        dart: https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png?v8
        dash: https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8
        date: https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png?v8
        de: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ea.png?v8
        deaf_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9cf-2642.png?v8
        deaf_person: https://github.githubassets.com/images/icons/emoji/unicode/1f9cf.png?v8
        deaf_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9cf-2640.png?v8
        deciduous_tree: https://github.githubassets.com/images/icons/emoji/unicode/1f333.png?v8
        deer: https://github.githubassets.com/images/icons/emoji/unicode/1f98c.png?v8
        denmark: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1f0.png?v8
        department_store: https://github.githubassets.com/images/icons/emoji/unicode/1f3ec.png?v8
        dependabot: https://github.githubassets.com/images/icons/emoji/dependabot.png?v8
        derelict_house: https://github.githubassets.com/images/icons/emoji/unicode/1f3da.png?v8
        desert: https://github.githubassets.com/images/icons/emoji/unicode/1f3dc.png?v8
        desert_island: https://github.githubassets.com/images/icons/emoji/unicode/1f3dd.png?v8
        desktop_computer: https://github.githubassets.com/images/icons/emoji/unicode/1f5a5.png?v8
        detective: https://github.githubassets.com/images/icons/emoji/unicode/1f575.png?v8
        diamond_shape_with_a_dot_inside: https://github.githubassets.com/images/icons/emoji/unicode/1f4a0.png?v8
        diamonds: https://github.githubassets.com/images/icons/emoji/unicode/2666.png?v8
        diego_garcia: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ec.png?v8
        disappointed: https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png?v8
        disappointed_relieved: https://github.githubassets.com/images/icons/emoji/unicode/1f625.png?v8
        disguised_face: https://github.githubassets.com/images/icons/emoji/unicode/1f978.png?v8
        diving_mask: https://github.githubassets.com/images/icons/emoji/unicode/1f93f.png?v8
        diya_lamp: https://github.githubassets.com/images/icons/emoji/unicode/1fa94.png?v8
        dizzy: https://github.githubassets.com/images/icons/emoji/unicode/1f4ab.png?v8
        dizzy_face: https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8
        djibouti: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1ef.png?v8
        dna: https://github.githubassets.com/images/icons/emoji/unicode/1f9ec.png?v8
        do_not_litter: https://github.githubassets.com/images/icons/emoji/unicode/1f6af.png?v8
        dodo: https://github.githubassets.com/images/icons/emoji/unicode/1f9a4.png?v8
        dog: https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8
        dog2: https://github.githubassets.com/images/icons/emoji/unicode/1f415.png?v8
        dollar: https://github.githubassets.com/images/icons/emoji/unicode/1f4b5.png?v8
        dolls: https://github.githubassets.com/images/icons/emoji/unicode/1f38e.png?v8
        dolphin: https://github.githubassets.com/images/icons/emoji/unicode/1f42c.png?v8
        dominica: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1f2.png?v8
        dominican_republic: https://github.githubassets.com/images/icons/emoji/unicode/1f1e9-1f1f4.png?v8
        door: https://github.githubassets.com/images/icons/emoji/unicode/1f6aa.png?v8
        doughnut: https://github.githubassets.com/images/icons/emoji/unicode/1f369.png?v8
        dove: https://github.githubassets.com/images/icons/emoji/unicode/1f54a.png?v8
        dragon: https://github.githubassets.com/images/icons/emoji/unicode/1f409.png?v8
        dragon_face: https://github.githubassets.com/images/icons/emoji/unicode/1f432.png?v8
        dress: https://github.githubassets.com/images/icons/emoji/unicode/1f457.png?v8
        dromedary_camel: https://github.githubassets.com/images/icons/emoji/unicode/1f42a.png?v8
        drooling_face: https://github.githubassets.com/images/icons/emoji/unicode/1f924.png?v8
        drop_of_blood: https://github.githubassets.com/images/icons/emoji/unicode/1fa78.png?v8
        droplet: https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png?v8
        drum: https://github.githubassets.com/images/icons/emoji/unicode/1f941.png?v8
        duck: https://github.githubassets.com/images/icons/emoji/unicode/1f986.png?v8
        dumpling: https://github.githubassets.com/images/icons/emoji/unicode/1f95f.png?v8
        dvd: https://github.githubassets.com/images/icons/emoji/unicode/1f4c0.png?v8
        e-mail: https://github.githubassets.com/images/icons/emoji/unicode/1f4e7.png?v8
        eagle: https://github.githubassets.com/images/icons/emoji/unicode/1f985.png?v8
        ear: https://github.githubassets.com/images/icons/emoji/unicode/1f442.png?v8
        ear_of_rice: https://github.githubassets.com/images/icons/emoji/unicode/1f33e.png?v8
        ear_with_hearing_aid: https://github.githubassets.com/images/icons/emoji/unicode/1f9bb.png?v8
        earth_africa: https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png?v8
        earth_americas: https://github.githubassets.com/images/icons/emoji/unicode/1f30e.png?v8
        earth_asia: https://github.githubassets.com/images/icons/emoji/unicode/1f30f.png?v8
        ecuador: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1e8.png?v8
        egg: https://github.githubassets.com/images/icons/emoji/unicode/1f95a.png?v8
        eggplant: https://github.githubassets.com/images/icons/emoji/unicode/1f346.png?v8
        egypt: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1ec.png?v8
        eight: https://github.githubassets.com/images/icons/emoji/unicode/0038-20e3.png?v8
        eight_pointed_black_star: https://github.githubassets.com/images/icons/emoji/unicode/2734.png?v8
        eight_spoked_asterisk: https://github.githubassets.com/images/icons/emoji/unicode/2733.png?v8
        eject_button: https://github.githubassets.com/images/icons/emoji/unicode/23cf.png?v8
        el_salvador: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1fb.png?v8
        electric_plug: https://github.githubassets.com/images/icons/emoji/unicode/1f50c.png?v8
        electron: https://github.githubassets.com/images/icons/emoji/electron.png?v8
        elephant: https://github.githubassets.com/images/icons/emoji/unicode/1f418.png?v8
        elevator: https://github.githubassets.com/images/icons/emoji/unicode/1f6d7.png?v8
        elf: https://github.githubassets.com/images/icons/emoji/unicode/1f9dd.png?v8
        elf_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9dd-2642.png?v8
        elf_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9dd-2640.png?v8
        email: https://github.githubassets.com/images/icons/emoji/unicode/1f4e7.png?v8
        end: https://github.githubassets.com/images/icons/emoji/unicode/1f51a.png?v8
        england: https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-e0067-e0062-e0065-e006e-e0067-e007f.png?v8
        envelope: https://github.githubassets.com/images/icons/emoji/unicode/2709.png?v8
        envelope_with_arrow: https://github.githubassets.com/images/icons/emoji/unicode/1f4e9.png?v8
        equatorial_guinea: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f6.png?v8
        eritrea: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f7.png?v8
        es: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f8.png?v8
        estonia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1ea.png?v8
        ethiopia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f9.png?v8
        eu: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1fa.png?v8
        euro: https://github.githubassets.com/images/icons/emoji/unicode/1f4b6.png?v8
        european_castle: https://github.githubassets.com/images/icons/emoji/unicode/1f3f0.png?v8
        european_post_office: https://github.githubassets.com/images/icons/emoji/unicode/1f3e4.png?v8
        european_union: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1fa.png?v8
        evergreen_tree: https://github.githubassets.com/images/icons/emoji/unicode/1f332.png?v8
        exclamation: https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8
        exploding_head: https://github.githubassets.com/images/icons/emoji/unicode/1f92f.png?v8
        expressionless: https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8
        eye: https://github.githubassets.com/images/icons/emoji/unicode/1f441.png?v8
        eye_speech_bubble: https://github.githubassets.com/images/icons/emoji/unicode/1f441-1f5e8.png?v8
        eyeglasses: https://github.githubassets.com/images/icons/emoji/unicode/1f453.png?v8
        eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f440.png?v8
        face_exhaling: https://github.githubassets.com/images/icons/emoji/unicode/1f62e-1f4a8.png?v8
        face_in_clouds: https://github.githubassets.com/images/icons/emoji/unicode/1f636-1f32b.png?v8
        face_with_head_bandage: https://github.githubassets.com/images/icons/emoji/unicode/1f915.png?v8
        face_with_spiral_eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f635-1f4ab.png?v8
        face_with_thermometer: https://github.githubassets.com/images/icons/emoji/unicode/1f912.png?v8
        facepalm: https://github.githubassets.com/images/icons/emoji/unicode/1f926.png?v8
        facepunch: https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8
        factory: https://github.githubassets.com/images/icons/emoji/unicode/1f3ed.png?v8
        factory_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3ed.png?v8
        fairy: https://github.githubassets.com/images/icons/emoji/unicode/1f9da.png?v8
        fairy_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9da-2642.png?v8
        fairy_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9da-2640.png?v8
        falafel: https://github.githubassets.com/images/icons/emoji/unicode/1f9c6.png?v8
        falkland_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f0.png?v8
        fallen_leaf: https://github.githubassets.com/images/icons/emoji/unicode/1f342.png?v8
        family: https://github.githubassets.com/images/icons/emoji/unicode/1f46a.png?v8
        family_man_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f466.png?v8
        family_man_boy_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f466-1f466.png?v8
        family_man_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467.png?v8
        family_man_girl_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467-1f466.png?v8
        family_man_girl_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467-1f467.png?v8
        family_man_man_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f466.png?v8
        family_man_man_boy_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f466-1f466.png?v8
        family_man_man_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f467.png?v8
        family_man_man_girl_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f467-1f466.png?v8
        family_man_man_girl_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f468-1f467-1f467.png?v8
        family_man_woman_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f466.png?v8
        family_man_woman_boy_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f466-1f466.png?v8
        family_man_woman_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f467.png?v8
        family_man_woman_girl_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f467-1f466.png?v8
        family_man_woman_girl_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f469-1f467-1f467.png?v8
        family_woman_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f466.png?v8
        family_woman_boy_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f466-1f466.png?v8
        family_woman_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f467.png?v8
        family_woman_girl_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f467-1f466.png?v8
        family_woman_girl_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f467-1f467.png?v8
        family_woman_woman_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f466.png?v8
        family_woman_woman_boy_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f466-1f466.png?v8
        family_woman_woman_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f467.png?v8
        family_woman_woman_girl_boy: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f467-1f466.png?v8
        family_woman_woman_girl_girl: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f469-1f467-1f467.png?v8
        farmer: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f33e.png?v8
        faroe_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f4.png?v8
        fast_forward: https://github.githubassets.com/images/icons/emoji/unicode/23e9.png?v8
        fax: https://github.githubassets.com/images/icons/emoji/unicode/1f4e0.png?v8
        fearful: https://github.githubassets.com/images/icons/emoji/unicode/1f628.png?v8
        feather: https://github.githubassets.com/images/icons/emoji/unicode/1fab6.png?v8
        feelsgood: https://github.githubassets.com/images/icons/emoji/feelsgood.png?v8
        feet: https://github.githubassets.com/images/icons/emoji/unicode/1f43e.png?v8
        female_detective: https://github.githubassets.com/images/icons/emoji/unicode/1f575-2640.png?v8
        female_sign: https://github.githubassets.com/images/icons/emoji/unicode/2640.png?v8
        ferris_wheel: https://github.githubassets.com/images/icons/emoji/unicode/1f3a1.png?v8
        ferry: https://github.githubassets.com/images/icons/emoji/unicode/26f4.png?v8
        field_hockey: https://github.githubassets.com/images/icons/emoji/unicode/1f3d1.png?v8
        fiji: https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1ef.png?v8
        file_cabinet: https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png?v8
        file_folder: https://github.githubassets.com/images/icons/emoji/unicode/1f4c1.png?v8
        film_projector: https://github.githubassets.com/images/icons/emoji/unicode/1f4fd.png?v8
        film_strip: https://github.githubassets.com/images/icons/emoji/unicode/1f39e.png?v8
        finland: https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1ee.png?v8
        finnadie: https://github.githubassets.com/images/icons/emoji/finnadie.png?v8
        fire: https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8
        fire_engine: https://github.githubassets.com/images/icons/emoji/unicode/1f692.png?v8
        fire_extinguisher: https://github.githubassets.com/images/icons/emoji/unicode/1f9ef.png?v8
        firecracker: https://github.githubassets.com/images/icons/emoji/unicode/1f9e8.png?v8
        firefighter: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f692.png?v8
        fireworks: https://github.githubassets.com/images/icons/emoji/unicode/1f386.png?v8
        first_quarter_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f313.png?v8
        first_quarter_moon_with_face: https://github.githubassets.com/images/icons/emoji/unicode/1f31b.png?v8
        fish: https://github.githubassets.com/images/icons/emoji/unicode/1f41f.png?v8
        fish_cake: https://github.githubassets.com/images/icons/emoji/unicode/1f365.png?v8
        fishsticks: https://github.githubassets.com/images/icons/emoji/fishsticks.png?v8
        fishing_pole_and_fish: https://github.githubassets.com/images/icons/emoji/unicode/1f3a3.png?v8
        fist: https://github.githubassets.com/images/icons/emoji/unicode/270a.png?v8
        fist_left: https://github.githubassets.com/images/icons/emoji/unicode/1f91b.png?v8
        fist_oncoming: https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8
        fist_raised: https://github.githubassets.com/images/icons/emoji/unicode/270a.png?v8
        fist_right: https://github.githubassets.com/images/icons/emoji/unicode/1f91c.png?v8
        five: https://github.githubassets.com/images/icons/emoji/unicode/0035-20e3.png?v8
        flags: https://github.githubassets.com/images/icons/emoji/unicode/1f38f.png?v8
        flamingo: https://github.githubassets.com/images/icons/emoji/unicode/1f9a9.png?v8
        flashlight: https://github.githubassets.com/images/icons/emoji/unicode/1f526.png?v8
        flat_shoe: https://github.githubassets.com/images/icons/emoji/unicode/1f97f.png?v8
        flatbread: https://github.githubassets.com/images/icons/emoji/unicode/1fad3.png?v8
        fleur_de_lis: https://github.githubassets.com/images/icons/emoji/unicode/269c.png?v8
        flight_arrival: https://github.githubassets.com/images/icons/emoji/unicode/1f6ec.png?v8
        flight_departure: https://github.githubassets.com/images/icons/emoji/unicode/1f6eb.png?v8
        flipper: https://github.githubassets.com/images/icons/emoji/unicode/1f42c.png?v8
        floppy_disk: https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png?v8
        flower_playing_cards: https://github.githubassets.com/images/icons/emoji/unicode/1f3b4.png?v8
        flushed: https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8
        fly: https://github.githubassets.com/images/icons/emoji/unicode/1fab0.png?v8
        flying_disc: https://github.githubassets.com/images/icons/emoji/unicode/1f94f.png?v8
        flying_saucer: https://github.githubassets.com/images/icons/emoji/unicode/1f6f8.png?v8
        fog: https://github.githubassets.com/images/icons/emoji/unicode/1f32b.png?v8
        foggy: https://github.githubassets.com/images/icons/emoji/unicode/1f301.png?v8
        fondue: https://github.githubassets.com/images/icons/emoji/unicode/1fad5.png?v8
        foot: https://github.githubassets.com/images/icons/emoji/unicode/1f9b6.png?v8
        football: https://github.githubassets.com/images/icons/emoji/unicode/1f3c8.png?v8
        footprints: https://github.githubassets.com/images/icons/emoji/unicode/1f463.png?v8
        fork_and_knife: https://github.githubassets.com/images/icons/emoji/unicode/1f374.png?v8
        fortune_cookie: https://github.githubassets.com/images/icons/emoji/unicode/1f960.png?v8
        fountain: https://github.githubassets.com/images/icons/emoji/unicode/26f2.png?v8
        fountain_pen: https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png?v8
        four: https://github.githubassets.com/images/icons/emoji/unicode/0034-20e3.png?v8
        four_leaf_clover: https://github.githubassets.com/images/icons/emoji/unicode/1f340.png?v8
        fox_face: https://github.githubassets.com/images/icons/emoji/unicode/1f98a.png?v8
        fr: https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f7.png?v8
        framed_picture: https://github.githubassets.com/images/icons/emoji/unicode/1f5bc.png?v8
        free: https://github.githubassets.com/images/icons/emoji/unicode/1f193.png?v8
        french_guiana: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1eb.png?v8
        french_polynesia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1eb.png?v8
        french_southern_territories: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1eb.png?v8
        fried_egg: https://github.githubassets.com/images/icons/emoji/unicode/1f373.png?v8
        fried_shrimp: https://github.githubassets.com/images/icons/emoji/unicode/1f364.png?v8
        fries: https://github.githubassets.com/images/icons/emoji/unicode/1f35f.png?v8
        frog: https://github.githubassets.com/images/icons/emoji/unicode/1f438.png?v8
        frowning: https://github.githubassets.com/images/icons/emoji/unicode/1f626.png?v8
        frowning_face: https://github.githubassets.com/images/icons/emoji/unicode/2639.png?v8
        frowning_man: https://github.githubassets.com/images/icons/emoji/unicode/1f64d-2642.png?v8
        frowning_person: https://github.githubassets.com/images/icons/emoji/unicode/1f64d.png?v8
        frowning_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f64d-2640.png?v8
        fu: https://github.githubassets.com/images/icons/emoji/unicode/1f595.png?v8
        fuelpump: https://github.githubassets.com/images/icons/emoji/unicode/26fd.png?v8
        full_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f315.png?v8
        full_moon_with_face: https://github.githubassets.com/images/icons/emoji/unicode/1f31d.png?v8
        funeral_urn: https://github.githubassets.com/images/icons/emoji/unicode/26b1.png?v8
        gabon: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e6.png?v8
        gambia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f2.png?v8
        game_die: https://github.githubassets.com/images/icons/emoji/unicode/1f3b2.png?v8
        garlic: https://github.githubassets.com/images/icons/emoji/unicode/1f9c4.png?v8
        gb: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e7.png?v8
        gear: https://github.githubassets.com/images/icons/emoji/unicode/2699.png?v8
        gem: https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png?v8
        gemini: https://github.githubassets.com/images/icons/emoji/unicode/264a.png?v8
        genie: https://github.githubassets.com/images/icons/emoji/unicode/1f9de.png?v8
        genie_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9de-2642.png?v8
        genie_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9de-2640.png?v8
        georgia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ea.png?v8
        ghana: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ed.png?v8
        ghost: https://github.githubassets.com/images/icons/emoji/unicode/1f47b.png?v8
        gibraltar: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ee.png?v8
        gift: https://github.githubassets.com/images/icons/emoji/unicode/1f381.png?v8
        gift_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f49d.png?v8
        giraffe: https://github.githubassets.com/images/icons/emoji/unicode/1f992.png?v8
        girl: https://github.githubassets.com/images/icons/emoji/unicode/1f467.png?v8
        globe_with_meridians: https://github.githubassets.com/images/icons/emoji/unicode/1f310.png?v8
        gloves: https://github.githubassets.com/images/icons/emoji/unicode/1f9e4.png?v8
        goal_net: https://github.githubassets.com/images/icons/emoji/unicode/1f945.png?v8
        goat: https://github.githubassets.com/images/icons/emoji/unicode/1f410.png?v8
        goberserk: https://github.githubassets.com/images/icons/emoji/goberserk.png?v8
        godmode: https://github.githubassets.com/images/icons/emoji/godmode.png?v8
        goggles: https://github.githubassets.com/images/icons/emoji/unicode/1f97d.png?v8
        golf: https://github.githubassets.com/images/icons/emoji/unicode/26f3.png?v8
        golfing: https://github.githubassets.com/images/icons/emoji/unicode/1f3cc.png?v8
        golfing_man: https://github.githubassets.com/images/icons/emoji/unicode/1f3cc-2642.png?v8
        golfing_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f3cc-2640.png?v8
        gorilla: https://github.githubassets.com/images/icons/emoji/unicode/1f98d.png?v8
        grapes: https://github.githubassets.com/images/icons/emoji/unicode/1f347.png?v8
        greece: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f7.png?v8
        green_apple: https://github.githubassets.com/images/icons/emoji/unicode/1f34f.png?v8
        green_book: https://github.githubassets.com/images/icons/emoji/unicode/1f4d7.png?v8
        green_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f7e2.png?v8
        green_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png?v8
        green_salad: https://github.githubassets.com/images/icons/emoji/unicode/1f957.png?v8
        green_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7e9.png?v8
        greenland: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f1.png?v8
        grenada: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e9.png?v8
        grey_exclamation: https://github.githubassets.com/images/icons/emoji/unicode/2755.png?v8
        grey_question: https://github.githubassets.com/images/icons/emoji/unicode/2754.png?v8
        grimacing: https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8
        grin: https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8
        grinning: https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8
        guadeloupe: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f5.png?v8
        guam: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1fa.png?v8
        guard: https://github.githubassets.com/images/icons/emoji/unicode/1f482.png?v8
        guardsman: https://github.githubassets.com/images/icons/emoji/unicode/1f482-2642.png?v8
        guardswoman: https://github.githubassets.com/images/icons/emoji/unicode/1f482-2640.png?v8
        guatemala: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f9.png?v8
        guernsey: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1ec.png?v8
        guide_dog: https://github.githubassets.com/images/icons/emoji/unicode/1f9ae.png?v8
        guinea: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f3.png?v8
        guinea_bissau: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1fc.png?v8
        guitar: https://github.githubassets.com/images/icons/emoji/unicode/1f3b8.png?v8
        gun: https://github.githubassets.com/images/icons/emoji/unicode/1f52b.png?v8
        guyana: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1fe.png?v8
        haircut: https://github.githubassets.com/images/icons/emoji/unicode/1f487.png?v8
        haircut_man: https://github.githubassets.com/images/icons/emoji/unicode/1f487-2642.png?v8
        haircut_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f487-2640.png?v8
        haiti: https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f9.png?v8
        hamburger: https://github.githubassets.com/images/icons/emoji/unicode/1f354.png?v8
        hammer: https://github.githubassets.com/images/icons/emoji/unicode/1f528.png?v8
        hammer_and_pick: https://github.githubassets.com/images/icons/emoji/unicode/2692.png?v8
        hammer_and_wrench: https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png?v8
        hamster: https://github.githubassets.com/images/icons/emoji/unicode/1f439.png?v8
        hand: https://github.githubassets.com/images/icons/emoji/unicode/270b.png?v8
        hand_over_mouth: https://github.githubassets.com/images/icons/emoji/unicode/1f92d.png?v8
        handbag: https://github.githubassets.com/images/icons/emoji/unicode/1f45c.png?v8
        handball_person: https://github.githubassets.com/images/icons/emoji/unicode/1f93e.png?v8
        handshake: https://github.githubassets.com/images/icons/emoji/unicode/1f91d.png?v8
        hankey: https://github.githubassets.com/images/icons/emoji/unicode/1f4a9.png?v8
        hash: https://github.githubassets.com/images/icons/emoji/unicode/0023-20e3.png?v8
        hatched_chick: https://github.githubassets.com/images/icons/emoji/unicode/1f425.png?v8
        hatching_chick: https://github.githubassets.com/images/icons/emoji/unicode/1f423.png?v8
        headphones: https://github.githubassets.com/images/icons/emoji/unicode/1f3a7.png?v8
        headstone: https://github.githubassets.com/images/icons/emoji/unicode/1faa6.png?v8
        health_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-2695.png?v8
        hear_no_evil: https://github.githubassets.com/images/icons/emoji/unicode/1f649.png?v8
        heard_mcdonald_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f2.png?v8
        heart: https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8
        heart_decoration: https://github.githubassets.com/images/icons/emoji/unicode/1f49f.png?v8
        heart_eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8
        heart_eyes_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f63b.png?v8
        heart_on_fire: https://github.githubassets.com/images/icons/emoji/unicode/2764-1f525.png?v8
        heartbeat: https://github.githubassets.com/images/icons/emoji/unicode/1f493.png?v8
        heartpulse: https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8
        hearts: https://github.githubassets.com/images/icons/emoji/unicode/2665.png?v8
        heavy_check_mark: https://github.githubassets.com/images/icons/emoji/unicode/2714.png?v8
        heavy_division_sign: https://github.githubassets.com/images/icons/emoji/unicode/2797.png?v8
        heavy_dollar_sign: https://github.githubassets.com/images/icons/emoji/unicode/1f4b2.png?v8
        heavy_exclamation_mark: https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8
        heavy_heart_exclamation: https://github.githubassets.com/images/icons/emoji/unicode/2763.png?v8
        heavy_minus_sign: https://github.githubassets.com/images/icons/emoji/unicode/2796.png?v8
        heavy_multiplication_x: https://github.githubassets.com/images/icons/emoji/unicode/2716.png?v8
        heavy_plus_sign: https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8
        hedgehog: https://github.githubassets.com/images/icons/emoji/unicode/1f994.png?v8
        helicopter: https://github.githubassets.com/images/icons/emoji/unicode/1f681.png?v8
        herb: https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png?v8
        hibiscus: https://github.githubassets.com/images/icons/emoji/unicode/1f33a.png?v8
        high_brightness: https://github.githubassets.com/images/icons/emoji/unicode/1f506.png?v8
        high_heel: https://github.githubassets.com/images/icons/emoji/unicode/1f460.png?v8
        hiking_boot: https://github.githubassets.com/images/icons/emoji/unicode/1f97e.png?v8
        hindu_temple: https://github.githubassets.com/images/icons/emoji/unicode/1f6d5.png?v8
        hippopotamus: https://github.githubassets.com/images/icons/emoji/unicode/1f99b.png?v8
        hocho: https://github.githubassets.com/images/icons/emoji/unicode/1f52a.png?v8
        hole: https://github.githubassets.com/images/icons/emoji/unicode/1f573.png?v8
        honduras: https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f3.png?v8
        honey_pot: https://github.githubassets.com/images/icons/emoji/unicode/1f36f.png?v8
        honeybee: https://github.githubassets.com/images/icons/emoji/unicode/1f41d.png?v8
        hong_kong: https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1f0.png?v8
        hook: https://github.githubassets.com/images/icons/emoji/unicode/1fa9d.png?v8
        horse: https://github.githubassets.com/images/icons/emoji/unicode/1f434.png?v8
        horse_racing: https://github.githubassets.com/images/icons/emoji/unicode/1f3c7.png?v8
        hospital: https://github.githubassets.com/images/icons/emoji/unicode/1f3e5.png?v8
        hot_face: https://github.githubassets.com/images/icons/emoji/unicode/1f975.png?v8
        hot_pepper: https://github.githubassets.com/images/icons/emoji/unicode/1f336.png?v8
        hotdog: https://github.githubassets.com/images/icons/emoji/unicode/1f32d.png?v8
        hotel: https://github.githubassets.com/images/icons/emoji/unicode/1f3e8.png?v8
        hotsprings: https://github.githubassets.com/images/icons/emoji/unicode/2668.png?v8
        hourglass: https://github.githubassets.com/images/icons/emoji/unicode/231b.png?v8
        hourglass_flowing_sand: https://github.githubassets.com/images/icons/emoji/unicode/23f3.png?v8
        house: https://github.githubassets.com/images/icons/emoji/unicode/1f3e0.png?v8
        house_with_garden: https://github.githubassets.com/images/icons/emoji/unicode/1f3e1.png?v8
        houses: https://github.githubassets.com/images/icons/emoji/unicode/1f3d8.png?v8
        hugs: https://github.githubassets.com/images/icons/emoji/unicode/1f917.png?v8
        hungary: https://github.githubassets.com/images/icons/emoji/unicode/1f1ed-1f1fa.png?v8
        hurtrealbad: https://github.githubassets.com/images/icons/emoji/hurtrealbad.png?v8
        hushed: https://github.githubassets.com/images/icons/emoji/unicode/1f62f.png?v8
        hut: https://github.githubassets.com/images/icons/emoji/unicode/1f6d6.png?v8
        ice_cream: https://github.githubassets.com/images/icons/emoji/unicode/1f368.png?v8
        ice_cube: https://github.githubassets.com/images/icons/emoji/unicode/1f9ca.png?v8
        ice_hockey: https://github.githubassets.com/images/icons/emoji/unicode/1f3d2.png?v8
        ice_skate: https://github.githubassets.com/images/icons/emoji/unicode/26f8.png?v8
        icecream: https://github.githubassets.com/images/icons/emoji/unicode/1f366.png?v8
        iceland: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f8.png?v8
        id: https://github.githubassets.com/images/icons/emoji/unicode/1f194.png?v8
        ideograph_advantage: https://github.githubassets.com/images/icons/emoji/unicode/1f250.png?v8
        imp: https://github.githubassets.com/images/icons/emoji/unicode/1f47f.png?v8
        inbox_tray: https://github.githubassets.com/images/icons/emoji/unicode/1f4e5.png?v8
        incoming_envelope: https://github.githubassets.com/images/icons/emoji/unicode/1f4e8.png?v8
        india: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f3.png?v8
        indonesia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e9.png?v8
        infinity: https://github.githubassets.com/images/icons/emoji/unicode/267e.png?v8
        information_desk_person: https://github.githubassets.com/images/icons/emoji/unicode/1f481.png?v8
        information_source: https://github.githubassets.com/images/icons/emoji/unicode/2139.png?v8
        innocent: https://github.githubassets.com/images/icons/emoji/unicode/1f607.png?v8
        interrobang: https://github.githubassets.com/images/icons/emoji/unicode/2049.png?v8
        iphone: https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png?v8
        iran: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f7.png?v8
        iraq: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f6.png?v8
        ireland: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1ea.png?v8
        isle_of_man: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f2.png?v8
        israel: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f1.png?v8
        it: https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f9.png?v8
        izakaya_lantern: https://github.githubassets.com/images/icons/emoji/unicode/1f3ee.png?v8
        jack_o_lantern: https://github.githubassets.com/images/icons/emoji/unicode/1f383.png?v8
        jamaica: https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f2.png?v8
        japan: https://github.githubassets.com/images/icons/emoji/unicode/1f5fe.png?v8
        japanese_castle: https://github.githubassets.com/images/icons/emoji/unicode/1f3ef.png?v8
        japanese_goblin: https://github.githubassets.com/images/icons/emoji/unicode/1f47a.png?v8
        japanese_ogre: https://github.githubassets.com/images/icons/emoji/unicode/1f479.png?v8
        jeans: https://github.githubassets.com/images/icons/emoji/unicode/1f456.png?v8
        jersey: https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1ea.png?v8
        jigsaw: https://github.githubassets.com/images/icons/emoji/unicode/1f9e9.png?v8
        jordan: https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f4.png?v8
        joy: https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8
        joy_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f639.png?v8
        joystick: https://github.githubassets.com/images/icons/emoji/unicode/1f579.png?v8
        jp: https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png?v8
        judge: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-2696.png?v8
        juggling_person: https://github.githubassets.com/images/icons/emoji/unicode/1f939.png?v8
        kangaroo: https://github.githubassets.com/images/icons/emoji/unicode/1f998.png?v8
        kazakhstan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ff.png?v8
        kenya: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ea.png?v8
        key: https://github.githubassets.com/images/icons/emoji/unicode/1f511.png?v8
        keyboard: https://github.githubassets.com/images/icons/emoji/unicode/2328.png?v8
        keycap_ten: https://github.githubassets.com/images/icons/emoji/unicode/1f51f.png?v8
        kick_scooter: https://github.githubassets.com/images/icons/emoji/unicode/1f6f4.png?v8
        kimono: https://github.githubassets.com/images/icons/emoji/unicode/1f458.png?v8
        kiribati: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ee.png?v8
        kiss: https://github.githubassets.com/images/icons/emoji/unicode/1f48b.png?v8
        kissing: https://github.githubassets.com/images/icons/emoji/unicode/1f617.png?v8
        kissing_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f63d.png?v8
        kissing_closed_eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f61a.png?v8
        kissing_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8
        kissing_smiling_eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f619.png?v8
        kite: https://github.githubassets.com/images/icons/emoji/unicode/1fa81.png?v8
        kiwi_fruit: https://github.githubassets.com/images/icons/emoji/unicode/1f95d.png?v8
        kneeling_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9ce-2642.png?v8
        kneeling_person: https://github.githubassets.com/images/icons/emoji/unicode/1f9ce.png?v8
        kneeling_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9ce-2640.png?v8
        knife: https://github.githubassets.com/images/icons/emoji/unicode/1f52a.png?v8
        knot: https://github.githubassets.com/images/icons/emoji/unicode/1faa2.png?v8
        koala: https://github.githubassets.com/images/icons/emoji/unicode/1f428.png?v8
        koko: https://github.githubassets.com/images/icons/emoji/unicode/1f201.png?v8
        kosovo: https://github.githubassets.com/images/icons/emoji/unicode/1f1fd-1f1f0.png?v8
        kr: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png?v8
        kuwait: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1fc.png?v8
        kyrgyzstan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1ec.png?v8
        lab_coat: https://github.githubassets.com/images/icons/emoji/unicode/1f97c.png?v8
        label: https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png?v8
        lacrosse: https://github.githubassets.com/images/icons/emoji/unicode/1f94d.png?v8
        ladder: https://github.githubassets.com/images/icons/emoji/unicode/1fa9c.png?v8
        lady_beetle: https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png?v8
        lantern: https://github.githubassets.com/images/icons/emoji/unicode/1f3ee.png?v8
        laos: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1e6.png?v8
        large_blue_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f535.png?v8
        large_blue_diamond: https://github.githubassets.com/images/icons/emoji/unicode/1f537.png?v8
        large_orange_diamond: https://github.githubassets.com/images/icons/emoji/unicode/1f536.png?v8
        last_quarter_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f317.png?v8
        last_quarter_moon_with_face: https://github.githubassets.com/images/icons/emoji/unicode/1f31c.png?v8
        latin_cross: https://github.githubassets.com/images/icons/emoji/unicode/271d.png?v8
        latvia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1fb.png?v8
        laughing: https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8
        leafy_green: https://github.githubassets.com/images/icons/emoji/unicode/1f96c.png?v8
        leaves: https://github.githubassets.com/images/icons/emoji/unicode/1f343.png?v8
        lebanon: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1e7.png?v8
        ledger: https://github.githubassets.com/images/icons/emoji/unicode/1f4d2.png?v8
        left_luggage: https://github.githubassets.com/images/icons/emoji/unicode/1f6c5.png?v8
        left_right_arrow: https://github.githubassets.com/images/icons/emoji/unicode/2194.png?v8
        left_speech_bubble: https://github.githubassets.com/images/icons/emoji/unicode/1f5e8.png?v8
        leftwards_arrow_with_hook: https://github.githubassets.com/images/icons/emoji/unicode/21a9.png?v8
        leg: https://github.githubassets.com/images/icons/emoji/unicode/1f9b5.png?v8
        lemon: https://github.githubassets.com/images/icons/emoji/unicode/1f34b.png?v8
        leo: https://github.githubassets.com/images/icons/emoji/unicode/264c.png?v8
        leopard: https://github.githubassets.com/images/icons/emoji/unicode/1f406.png?v8
        lesotho: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f8.png?v8
        level_slider: https://github.githubassets.com/images/icons/emoji/unicode/1f39a.png?v8
        liberia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f7.png?v8
        libra: https://github.githubassets.com/images/icons/emoji/unicode/264e.png?v8
        libya: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1fe.png?v8
        liechtenstein: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1ee.png?v8
        light_rail: https://github.githubassets.com/images/icons/emoji/unicode/1f688.png?v8
        link: https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8
        lion: https://github.githubassets.com/images/icons/emoji/unicode/1f981.png?v8
        lips: https://github.githubassets.com/images/icons/emoji/unicode/1f444.png?v8
        lipstick: https://github.githubassets.com/images/icons/emoji/unicode/1f484.png?v8
        lithuania: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f9.png?v8
        lizard: https://github.githubassets.com/images/icons/emoji/unicode/1f98e.png?v8
        llama: https://github.githubassets.com/images/icons/emoji/unicode/1f999.png?v8
        lobster: https://github.githubassets.com/images/icons/emoji/unicode/1f99e.png?v8
        lock: https://github.githubassets.com/images/icons/emoji/unicode/1f512.png?v8
        lock_with_ink_pen: https://github.githubassets.com/images/icons/emoji/unicode/1f50f.png?v8
        lollipop: https://github.githubassets.com/images/icons/emoji/unicode/1f36d.png?v8
        long_drum: https://github.githubassets.com/images/icons/emoji/unicode/1fa98.png?v8
        loop: https://github.githubassets.com/images/icons/emoji/unicode/27bf.png?v8
        lotion_bottle: https://github.githubassets.com/images/icons/emoji/unicode/1f9f4.png?v8
        lotus_position: https://github.githubassets.com/images/icons/emoji/unicode/1f9d8.png?v8
        lotus_position_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9d8-2642.png?v8
        lotus_position_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9d8-2640.png?v8
        loud_sound: https://github.githubassets.com/images/icons/emoji/unicode/1f50a.png?v8
        loudspeaker: https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png?v8
        love_hotel: https://github.githubassets.com/images/icons/emoji/unicode/1f3e9.png?v8
        love_letter: https://github.githubassets.com/images/icons/emoji/unicode/1f48c.png?v8
        love_you_gesture: https://github.githubassets.com/images/icons/emoji/unicode/1f91f.png?v8
        low_brightness: https://github.githubassets.com/images/icons/emoji/unicode/1f505.png?v8
        luggage: https://github.githubassets.com/images/icons/emoji/unicode/1f9f3.png?v8
        lungs: https://github.githubassets.com/images/icons/emoji/unicode/1fac1.png?v8
        luxembourg: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1fa.png?v8
        lying_face: https://github.githubassets.com/images/icons/emoji/unicode/1f925.png?v8
        m: https://github.githubassets.com/images/icons/emoji/unicode/24c2.png?v8
        macau: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f4.png?v8
        macedonia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f0.png?v8
        madagascar: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ec.png?v8
        mag: https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png?v8
        mag_right: https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png?v8
        mage: https://github.githubassets.com/images/icons/emoji/unicode/1f9d9.png?v8
        mage_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9d9-2642.png?v8
        mage_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9d9-2640.png?v8
        magic_wand: https://github.githubassets.com/images/icons/emoji/unicode/1fa84.png?v8
        magnet: https://github.githubassets.com/images/icons/emoji/unicode/1f9f2.png?v8
        mahjong: https://github.githubassets.com/images/icons/emoji/unicode/1f004.png?v8
        mailbox: https://github.githubassets.com/images/icons/emoji/unicode/1f4eb.png?v8
        mailbox_closed: https://github.githubassets.com/images/icons/emoji/unicode/1f4ea.png?v8
        mailbox_with_mail: https://github.githubassets.com/images/icons/emoji/unicode/1f4ec.png?v8
        mailbox_with_no_mail: https://github.githubassets.com/images/icons/emoji/unicode/1f4ed.png?v8
        malawi: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fc.png?v8
        malaysia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fe.png?v8
        maldives: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fb.png?v8
        male_detective: https://github.githubassets.com/images/icons/emoji/unicode/1f575-2642.png?v8
        male_sign: https://github.githubassets.com/images/icons/emoji/unicode/2642.png?v8
        mali: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f1.png?v8
        malta: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f9.png?v8
        mammoth: https://github.githubassets.com/images/icons/emoji/unicode/1f9a3.png?v8
        man: https://github.githubassets.com/images/icons/emoji/unicode/1f468.png?v8
        man_artist: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3a8.png?v8
        man_astronaut: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f680.png?v8
        man_beard: https://github.githubassets.com/images/icons/emoji/unicode/1f9d4-2642.png?v8
        man_cartwheeling: https://github.githubassets.com/images/icons/emoji/unicode/1f938-2642.png?v8
        man_cook: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f373.png?v8
        man_dancing: https://github.githubassets.com/images/icons/emoji/unicode/1f57a.png?v8
        man_facepalming: https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8
        man_factory_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3ed.png?v8
        man_farmer: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f33e.png?v8
        man_feeding_baby: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f37c.png?v8
        man_firefighter: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f692.png?v8
        man_health_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f468-2695.png?v8
        man_in_manual_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9bd.png?v8
        man_in_motorized_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9bc.png?v8
        man_in_tuxedo: https://github.githubassets.com/images/icons/emoji/unicode/1f935-2642.png?v8
        man_judge: https://github.githubassets.com/images/icons/emoji/unicode/1f468-2696.png?v8
        man_juggling: https://github.githubassets.com/images/icons/emoji/unicode/1f939-2642.png?v8
        man_mechanic: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f527.png?v8
        man_office_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bc.png?v8
        man_pilot: https://github.githubassets.com/images/icons/emoji/unicode/1f468-2708.png?v8
        man_playing_handball: https://github.githubassets.com/images/icons/emoji/unicode/1f93e-2642.png?v8
        man_playing_water_polo: https://github.githubassets.com/images/icons/emoji/unicode/1f93d-2642.png?v8
        man_scientist: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f52c.png?v8
        man_shrugging: https://github.githubassets.com/images/icons/emoji/unicode/1f937-2642.png?v8
        man_singer: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3a4.png?v8
        man_student: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f393.png?v8
        man_teacher: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3eb.png?v8
        man_technologist: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bb.png?v8
        man_with_gua_pi_mao: https://github.githubassets.com/images/icons/emoji/unicode/1f472.png?v8
        man_with_probing_cane: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9af.png?v8
        man_with_turban: https://github.githubassets.com/images/icons/emoji/unicode/1f473-2642.png?v8
        man_with_veil: https://github.githubassets.com/images/icons/emoji/unicode/1f470-2642.png?v8
        mandarin: https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png?v8
        mango: https://github.githubassets.com/images/icons/emoji/unicode/1f96d.png?v8
        mans_shoe: https://github.githubassets.com/images/icons/emoji/unicode/1f45e.png?v8
        mantelpiece_clock: https://github.githubassets.com/images/icons/emoji/unicode/1f570.png?v8
        manual_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f9bd.png?v8
        maple_leaf: https://github.githubassets.com/images/icons/emoji/unicode/1f341.png?v8
        marshall_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ed.png?v8
        martial_arts_uniform: https://github.githubassets.com/images/icons/emoji/unicode/1f94b.png?v8
        martinique: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f6.png?v8
        mask: https://github.githubassets.com/images/icons/emoji/unicode/1f637.png?v8
        massage: https://github.githubassets.com/images/icons/emoji/unicode/1f486.png?v8
        massage_man: https://github.githubassets.com/images/icons/emoji/unicode/1f486-2642.png?v8
        massage_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f486-2640.png?v8
        mate: https://github.githubassets.com/images/icons/emoji/unicode/1f9c9.png?v8
        mauritania: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f7.png?v8
        mauritius: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fa.png?v8
        mayotte: https://github.githubassets.com/images/icons/emoji/unicode/1f1fe-1f1f9.png?v8
        meat_on_bone: https://github.githubassets.com/images/icons/emoji/unicode/1f356.png?v8
        mechanic: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f527.png?v8
        mechanical_arm: https://github.githubassets.com/images/icons/emoji/unicode/1f9be.png?v8
        mechanical_leg: https://github.githubassets.com/images/icons/emoji/unicode/1f9bf.png?v8
        medal_military: https://github.githubassets.com/images/icons/emoji/unicode/1f396.png?v8
        medal_sports: https://github.githubassets.com/images/icons/emoji/unicode/1f3c5.png?v8
        medical_symbol: https://github.githubassets.com/images/icons/emoji/unicode/2695.png?v8
        mega: https://github.githubassets.com/images/icons/emoji/unicode/1f4e3.png?v8
        melon: https://github.githubassets.com/images/icons/emoji/unicode/1f348.png?v8
        memo: https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8
        men_wrestling: https://github.githubassets.com/images/icons/emoji/unicode/1f93c-2642.png?v8
        mending_heart: https://github.githubassets.com/images/icons/emoji/unicode/2764-1fa79.png?v8
        menorah: https://github.githubassets.com/images/icons/emoji/unicode/1f54e.png?v8
        mens: https://github.githubassets.com/images/icons/emoji/unicode/1f6b9.png?v8
        mermaid: https://github.githubassets.com/images/icons/emoji/unicode/1f9dc-2640.png?v8
        merman: https://github.githubassets.com/images/icons/emoji/unicode/1f9dc-2642.png?v8
        merperson: https://github.githubassets.com/images/icons/emoji/unicode/1f9dc.png?v8
        metal: https://github.githubassets.com/images/icons/emoji/unicode/1f918.png?v8
        metro: https://github.githubassets.com/images/icons/emoji/unicode/1f687.png?v8
        mexico: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1fd.png?v8
        microbe: https://github.githubassets.com/images/icons/emoji/unicode/1f9a0.png?v8
        micronesia: https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f2.png?v8
        microphone: https://github.githubassets.com/images/icons/emoji/unicode/1f3a4.png?v8
        microscope: https://github.githubassets.com/images/icons/emoji/unicode/1f52c.png?v8
        middle_finger: https://github.githubassets.com/images/icons/emoji/unicode/1f595.png?v8
        military_helmet: https://github.githubassets.com/images/icons/emoji/unicode/1fa96.png?v8
        milk_glass: https://github.githubassets.com/images/icons/emoji/unicode/1f95b.png?v8
        milky_way: https://github.githubassets.com/images/icons/emoji/unicode/1f30c.png?v8
        minibus: https://github.githubassets.com/images/icons/emoji/unicode/1f690.png?v8
        minidisc: https://github.githubassets.com/images/icons/emoji/unicode/1f4bd.png?v8
        mirror: https://github.githubassets.com/images/icons/emoji/unicode/1fa9e.png?v8
        mobile_phone_off: https://github.githubassets.com/images/icons/emoji/unicode/1f4f4.png?v8
        moldova: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1e9.png?v8
        monaco: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1e8.png?v8
        money_mouth_face: https://github.githubassets.com/images/icons/emoji/unicode/1f911.png?v8
        money_with_wings: https://github.githubassets.com/images/icons/emoji/unicode/1f4b8.png?v8
        moneybag: https://github.githubassets.com/images/icons/emoji/unicode/1f4b0.png?v8
        mongolia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f3.png?v8
        monkey: https://github.githubassets.com/images/icons/emoji/unicode/1f412.png?v8
        monkey_face: https://github.githubassets.com/images/icons/emoji/unicode/1f435.png?v8
        monocle_face: https://github.githubassets.com/images/icons/emoji/unicode/1f9d0.png?v8
        monorail: https://github.githubassets.com/images/icons/emoji/unicode/1f69d.png?v8
        montenegro: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ea.png?v8
        montserrat: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f8.png?v8
        moon: https://github.githubassets.com/images/icons/emoji/unicode/1f314.png?v8
        moon_cake: https://github.githubassets.com/images/icons/emoji/unicode/1f96e.png?v8
        morocco: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1e6.png?v8
        mortar_board: https://github.githubassets.com/images/icons/emoji/unicode/1f393.png?v8
        mosque: https://github.githubassets.com/images/icons/emoji/unicode/1f54c.png?v8
        mosquito: https://github.githubassets.com/images/icons/emoji/unicode/1f99f.png?v8
        motor_boat: https://github.githubassets.com/images/icons/emoji/unicode/1f6e5.png?v8
        motor_scooter: https://github.githubassets.com/images/icons/emoji/unicode/1f6f5.png?v8
        motorcycle: https://github.githubassets.com/images/icons/emoji/unicode/1f3cd.png?v8
        motorized_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f9bc.png?v8
        motorway: https://github.githubassets.com/images/icons/emoji/unicode/1f6e3.png?v8
        mount_fuji: https://github.githubassets.com/images/icons/emoji/unicode/1f5fb.png?v8
        mountain: https://github.githubassets.com/images/icons/emoji/unicode/26f0.png?v8
        mountain_bicyclist: https://github.githubassets.com/images/icons/emoji/unicode/1f6b5.png?v8
        mountain_biking_man: https://github.githubassets.com/images/icons/emoji/unicode/1f6b5-2642.png?v8
        mountain_biking_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f6b5-2640.png?v8
        mountain_cableway: https://github.githubassets.com/images/icons/emoji/unicode/1f6a0.png?v8
        mountain_railway: https://github.githubassets.com/images/icons/emoji/unicode/1f69e.png?v8
        mountain_snow: https://github.githubassets.com/images/icons/emoji/unicode/1f3d4.png?v8
        mouse: https://github.githubassets.com/images/icons/emoji/unicode/1f42d.png?v8
        mouse2: https://github.githubassets.com/images/icons/emoji/unicode/1f401.png?v8
        mouse_trap: https://github.githubassets.com/images/icons/emoji/unicode/1faa4.png?v8
        movie_camera: https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png?v8
        moyai: https://github.githubassets.com/images/icons/emoji/unicode/1f5ff.png?v8
        mozambique: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1ff.png?v8
        mrs_claus: https://github.githubassets.com/images/icons/emoji/unicode/1f936.png?v8
        muscle: https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png?v8
        mushroom: https://github.githubassets.com/images/icons/emoji/unicode/1f344.png?v8
        musical_keyboard: https://github.githubassets.com/images/icons/emoji/unicode/1f3b9.png?v8
        musical_note: https://github.githubassets.com/images/icons/emoji/unicode/1f3b5.png?v8
        musical_score: https://github.githubassets.com/images/icons/emoji/unicode/1f3bc.png?v8
        mute: https://github.githubassets.com/images/icons/emoji/unicode/1f507.png?v8
        mx_claus: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f384.png?v8
        myanmar: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f2.png?v8
        nail_care: https://github.githubassets.com/images/icons/emoji/unicode/1f485.png?v8
        name_badge: https://github.githubassets.com/images/icons/emoji/unicode/1f4db.png?v8
        namibia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1e6.png?v8
        national_park: https://github.githubassets.com/images/icons/emoji/unicode/1f3de.png?v8
        nauru: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f7.png?v8
        nauseated_face: https://github.githubassets.com/images/icons/emoji/unicode/1f922.png?v8
        nazar_amulet: https://github.githubassets.com/images/icons/emoji/unicode/1f9ff.png?v8
        neckbeard: https://github.githubassets.com/images/icons/emoji/neckbeard.png?v8
        necktie: https://github.githubassets.com/images/icons/emoji/unicode/1f454.png?v8
        negative_squared_cross_mark: https://github.githubassets.com/images/icons/emoji/unicode/274e.png?v8
        nepal: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f5.png?v8
        nerd_face: https://github.githubassets.com/images/icons/emoji/unicode/1f913.png?v8
        nesting_dolls: https://github.githubassets.com/images/icons/emoji/unicode/1fa86.png?v8
        netherlands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f1.png?v8
        neutral_face: https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8
        new: https://github.githubassets.com/images/icons/emoji/unicode/1f195.png?v8
        new_caledonia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1e8.png?v8
        new_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f311.png?v8
        new_moon_with_face: https://github.githubassets.com/images/icons/emoji/unicode/1f31a.png?v8
        new_zealand: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ff.png?v8
        newspaper: https://github.githubassets.com/images/icons/emoji/unicode/1f4f0.png?v8
        newspaper_roll: https://github.githubassets.com/images/icons/emoji/unicode/1f5de.png?v8
        next_track_button: https://github.githubassets.com/images/icons/emoji/unicode/23ed.png?v8
        ng: https://github.githubassets.com/images/icons/emoji/unicode/1f196.png?v8
        ng_man: https://github.githubassets.com/images/icons/emoji/unicode/1f645-2642.png?v8
        ng_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f645-2640.png?v8
        nicaragua: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ee.png?v8
        niger: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ea.png?v8
        nigeria: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1ec.png?v8
        night_with_stars: https://github.githubassets.com/images/icons/emoji/unicode/1f303.png?v8
        nine: https://github.githubassets.com/images/icons/emoji/unicode/0039-20e3.png?v8
        ninja: https://github.githubassets.com/images/icons/emoji/unicode/1f977.png?v8
        niue: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1fa.png?v8
        no_bell: https://github.githubassets.com/images/icons/emoji/unicode/1f515.png?v8
        no_bicycles: https://github.githubassets.com/images/icons/emoji/unicode/1f6b3.png?v8
        no_entry: https://github.githubassets.com/images/icons/emoji/unicode/26d4.png?v8
        no_entry_sign: https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png?v8
        no_good: https://github.githubassets.com/images/icons/emoji/unicode/1f645.png?v8
        no_good_man: https://github.githubassets.com/images/icons/emoji/unicode/1f645-2642.png?v8
        no_good_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f645-2640.png?v8
        no_mobile_phones: https://github.githubassets.com/images/icons/emoji/unicode/1f4f5.png?v8
        no_mouth: https://github.githubassets.com/images/icons/emoji/unicode/1f636.png?v8
        no_pedestrians: https://github.githubassets.com/images/icons/emoji/unicode/1f6b7.png?v8
        no_smoking: https://github.githubassets.com/images/icons/emoji/unicode/1f6ad.png?v8
        non-potable_water: https://github.githubassets.com/images/icons/emoji/unicode/1f6b1.png?v8
        norfolk_island: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1eb.png?v8
        north_korea: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f5.png?v8
        northern_mariana_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1f5.png?v8
        norway: https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f4.png?v8
        nose: https://github.githubassets.com/images/icons/emoji/unicode/1f443.png?v8
        notebook: https://github.githubassets.com/images/icons/emoji/unicode/1f4d3.png?v8
        notebook_with_decorative_cover: https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png?v8
        notes: https://github.githubassets.com/images/icons/emoji/unicode/1f3b6.png?v8
        nut_and_bolt: https://github.githubassets.com/images/icons/emoji/unicode/1f529.png?v8
        o: https://github.githubassets.com/images/icons/emoji/unicode/2b55.png?v8
        o2: https://github.githubassets.com/images/icons/emoji/unicode/1f17e.png?v8
        ocean: https://github.githubassets.com/images/icons/emoji/unicode/1f30a.png?v8
        octocat: https://github.githubassets.com/images/icons/emoji/octocat.png?v8
        octopus: https://github.githubassets.com/images/icons/emoji/unicode/1f419.png?v8
        oden: https://github.githubassets.com/images/icons/emoji/unicode/1f362.png?v8
        office: https://github.githubassets.com/images/icons/emoji/unicode/1f3e2.png?v8
        office_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f4bc.png?v8
        oil_drum: https://github.githubassets.com/images/icons/emoji/unicode/1f6e2.png?v8
        ok: https://github.githubassets.com/images/icons/emoji/unicode/1f197.png?v8
        ok_hand: https://github.githubassets.com/images/icons/emoji/unicode/1f44c.png?v8
        ok_man: https://github.githubassets.com/images/icons/emoji/unicode/1f646-2642.png?v8
        ok_person: https://github.githubassets.com/images/icons/emoji/unicode/1f646.png?v8
        ok_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f646-2640.png?v8
        old_key: https://github.githubassets.com/images/icons/emoji/unicode/1f5dd.png?v8
        older_adult: https://github.githubassets.com/images/icons/emoji/unicode/1f9d3.png?v8
        older_man: https://github.githubassets.com/images/icons/emoji/unicode/1f474.png?v8
        older_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f475.png?v8
        olive: https://github.githubassets.com/images/icons/emoji/unicode/1fad2.png?v8
        om: https://github.githubassets.com/images/icons/emoji/unicode/1f549.png?v8
        oman: https://github.githubassets.com/images/icons/emoji/unicode/1f1f4-1f1f2.png?v8
        'on': https://github.githubassets.com/images/icons/emoji/unicode/1f51b.png?v8
        oncoming_automobile: https://github.githubassets.com/images/icons/emoji/unicode/1f698.png?v8
        oncoming_bus: https://github.githubassets.com/images/icons/emoji/unicode/1f68d.png?v8
        oncoming_police_car: https://github.githubassets.com/images/icons/emoji/unicode/1f694.png?v8
        oncoming_taxi: https://github.githubassets.com/images/icons/emoji/unicode/1f696.png?v8
        one: https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8
        one_piece_swimsuit: https://github.githubassets.com/images/icons/emoji/unicode/1fa71.png?v8
        onion: https://github.githubassets.com/images/icons/emoji/unicode/1f9c5.png?v8
        open_book: https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png?v8
        open_file_folder: https://github.githubassets.com/images/icons/emoji/unicode/1f4c2.png?v8
        open_hands: https://github.githubassets.com/images/icons/emoji/unicode/1f450.png?v8
        open_mouth: https://github.githubassets.com/images/icons/emoji/unicode/1f62e.png?v8
        open_umbrella: https://github.githubassets.com/images/icons/emoji/unicode/2602.png?v8
        ophiuchus: https://github.githubassets.com/images/icons/emoji/unicode/26ce.png?v8
        orange: https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png?v8
        orange_book: https://github.githubassets.com/images/icons/emoji/unicode/1f4d9.png?v8
        orange_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f7e0.png?v8
        orange_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f9e1.png?v8
        orange_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7e7.png?v8
        orangutan: https://github.githubassets.com/images/icons/emoji/unicode/1f9a7.png?v8
        orthodox_cross: https://github.githubassets.com/images/icons/emoji/unicode/2626.png?v8
        otter: https://github.githubassets.com/images/icons/emoji/unicode/1f9a6.png?v8
        outbox_tray: https://github.githubassets.com/images/icons/emoji/unicode/1f4e4.png?v8
        owl: https://github.githubassets.com/images/icons/emoji/unicode/1f989.png?v8
        ox: https://github.githubassets.com/images/icons/emoji/unicode/1f402.png?v8
        oyster: https://github.githubassets.com/images/icons/emoji/unicode/1f9aa.png?v8
        package: https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png?v8
        page_facing_up: https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8
        page_with_curl: https://github.githubassets.com/images/icons/emoji/unicode/1f4c3.png?v8
        pager: https://github.githubassets.com/images/icons/emoji/unicode/1f4df.png?v8
        paintbrush: https://github.githubassets.com/images/icons/emoji/unicode/1f58c.png?v8
        pakistan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f0.png?v8
        palau: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1fc.png?v8
        palestinian_territories: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f8.png?v8
        palm_tree: https://github.githubassets.com/images/icons/emoji/unicode/1f334.png?v8
        palms_up_together: https://github.githubassets.com/images/icons/emoji/unicode/1f932.png?v8
        panama: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1e6.png?v8
        pancakes: https://github.githubassets.com/images/icons/emoji/unicode/1f95e.png?v8
        panda_face: https://github.githubassets.com/images/icons/emoji/unicode/1f43c.png?v8
        paperclip: https://github.githubassets.com/images/icons/emoji/unicode/1f4ce.png?v8
        paperclips: https://github.githubassets.com/images/icons/emoji/unicode/1f587.png?v8
        papua_new_guinea: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1ec.png?v8
        parachute: https://github.githubassets.com/images/icons/emoji/unicode/1fa82.png?v8
        paraguay: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1fe.png?v8
        parasol_on_ground: https://github.githubassets.com/images/icons/emoji/unicode/26f1.png?v8
        parking: https://github.githubassets.com/images/icons/emoji/unicode/1f17f.png?v8
        parrot: https://github.githubassets.com/images/icons/emoji/unicode/1f99c.png?v8
        part_alternation_mark: https://github.githubassets.com/images/icons/emoji/unicode/303d.png?v8
        partly_sunny: https://github.githubassets.com/images/icons/emoji/unicode/26c5.png?v8
        partying_face: https://github.githubassets.com/images/icons/emoji/unicode/1f973.png?v8
        passenger_ship: https://github.githubassets.com/images/icons/emoji/unicode/1f6f3.png?v8
        passport_control: https://github.githubassets.com/images/icons/emoji/unicode/1f6c2.png?v8
        pause_button: https://github.githubassets.com/images/icons/emoji/unicode/23f8.png?v8
        paw_prints: https://github.githubassets.com/images/icons/emoji/unicode/1f43e.png?v8
        peace_symbol: https://github.githubassets.com/images/icons/emoji/unicode/262e.png?v8
        peach: https://github.githubassets.com/images/icons/emoji/unicode/1f351.png?v8
        peacock: https://github.githubassets.com/images/icons/emoji/unicode/1f99a.png?v8
        peanuts: https://github.githubassets.com/images/icons/emoji/unicode/1f95c.png?v8
        pear: https://github.githubassets.com/images/icons/emoji/unicode/1f350.png?v8
        pen: https://github.githubassets.com/images/icons/emoji/unicode/1f58a.png?v8
        pencil: https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8
        pencil2: https://github.githubassets.com/images/icons/emoji/unicode/270f.png?v8
        penguin: https://github.githubassets.com/images/icons/emoji/unicode/1f427.png?v8
        pensive: https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8
        people_holding_hands: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f91d-1f9d1.png?v8
        people_hugging: https://github.githubassets.com/images/icons/emoji/unicode/1fac2.png?v8
        performing_arts: https://github.githubassets.com/images/icons/emoji/unicode/1f3ad.png?v8
        persevere: https://github.githubassets.com/images/icons/emoji/unicode/1f623.png?v8
        person_bald: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b2.png?v8
        person_curly_hair: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b1.png?v8
        person_feeding_baby: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f37c.png?v8
        person_fencing: https://github.githubassets.com/images/icons/emoji/unicode/1f93a.png?v8
        person_in_manual_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9bd.png?v8
        person_in_motorized_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9bc.png?v8
        person_in_tuxedo: https://github.githubassets.com/images/icons/emoji/unicode/1f935.png?v8
        person_red_hair: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b0.png?v8
        person_white_hair: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9b3.png?v8
        person_with_probing_cane: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f9af.png?v8
        person_with_turban: https://github.githubassets.com/images/icons/emoji/unicode/1f473.png?v8
        person_with_veil: https://github.githubassets.com/images/icons/emoji/unicode/1f470.png?v8
        peru: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1ea.png?v8
        petri_dish: https://github.githubassets.com/images/icons/emoji/unicode/1f9eb.png?v8
        philippines: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1ed.png?v8
        phone: https://github.githubassets.com/images/icons/emoji/unicode/260e.png?v8
        pick: https://github.githubassets.com/images/icons/emoji/unicode/26cf.png?v8
        pickup_truck: https://github.githubassets.com/images/icons/emoji/unicode/1f6fb.png?v8
        pie: https://github.githubassets.com/images/icons/emoji/unicode/1f967.png?v8
        pig: https://github.githubassets.com/images/icons/emoji/unicode/1f437.png?v8
        pig2: https://github.githubassets.com/images/icons/emoji/unicode/1f416.png?v8
        pig_nose: https://github.githubassets.com/images/icons/emoji/unicode/1f43d.png?v8
        pill: https://github.githubassets.com/images/icons/emoji/unicode/1f48a.png?v8
        pilot: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-2708.png?v8
        pinata: https://github.githubassets.com/images/icons/emoji/unicode/1fa85.png?v8
        pinched_fingers: https://github.githubassets.com/images/icons/emoji/unicode/1f90c.png?v8
        pinching_hand: https://github.githubassets.com/images/icons/emoji/unicode/1f90f.png?v8
        pineapple: https://github.githubassets.com/images/icons/emoji/unicode/1f34d.png?v8
        ping_pong: https://github.githubassets.com/images/icons/emoji/unicode/1f3d3.png?v8
        pirate_flag: https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-2620.png?v8
        pisces: https://github.githubassets.com/images/icons/emoji/unicode/2653.png?v8
        pitcairn_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f3.png?v8
        pizza: https://github.githubassets.com/images/icons/emoji/unicode/1f355.png?v8
        placard: https://github.githubassets.com/images/icons/emoji/unicode/1faa7.png?v8
        place_of_worship: https://github.githubassets.com/images/icons/emoji/unicode/1f6d0.png?v8
        plate_with_cutlery: https://github.githubassets.com/images/icons/emoji/unicode/1f37d.png?v8
        play_or_pause_button: https://github.githubassets.com/images/icons/emoji/unicode/23ef.png?v8
        pleading_face: https://github.githubassets.com/images/icons/emoji/unicode/1f97a.png?v8
        plunger: https://github.githubassets.com/images/icons/emoji/unicode/1faa0.png?v8
        point_down: https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8
        point_left: https://github.githubassets.com/images/icons/emoji/unicode/1f448.png?v8
        point_right: https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8
        point_up: https://github.githubassets.com/images/icons/emoji/unicode/261d.png?v8
        point_up_2: https://github.githubassets.com/images/icons/emoji/unicode/1f446.png?v8
        poland: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f1.png?v8
        polar_bear: https://github.githubassets.com/images/icons/emoji/unicode/1f43b-2744.png?v8
        police_car: https://github.githubassets.com/images/icons/emoji/unicode/1f693.png?v8
        police_officer: https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png?v8
        policeman: https://github.githubassets.com/images/icons/emoji/unicode/1f46e-2642.png?v8
        policewoman: https://github.githubassets.com/images/icons/emoji/unicode/1f46e-2640.png?v8
        poodle: https://github.githubassets.com/images/icons/emoji/unicode/1f429.png?v8
        poop: https://github.githubassets.com/images/icons/emoji/unicode/1f4a9.png?v8
        popcorn: https://github.githubassets.com/images/icons/emoji/unicode/1f37f.png?v8
        portugal: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f9.png?v8
        post_office: https://github.githubassets.com/images/icons/emoji/unicode/1f3e3.png?v8
        postal_horn: https://github.githubassets.com/images/icons/emoji/unicode/1f4ef.png?v8
        postbox: https://github.githubassets.com/images/icons/emoji/unicode/1f4ee.png?v8
        potable_water: https://github.githubassets.com/images/icons/emoji/unicode/1f6b0.png?v8
        potato: https://github.githubassets.com/images/icons/emoji/unicode/1f954.png?v8
        potted_plant: https://github.githubassets.com/images/icons/emoji/unicode/1fab4.png?v8
        pouch: https://github.githubassets.com/images/icons/emoji/unicode/1f45d.png?v8
        poultry_leg: https://github.githubassets.com/images/icons/emoji/unicode/1f357.png?v8
        pound: https://github.githubassets.com/images/icons/emoji/unicode/1f4b7.png?v8
        pout: https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8
        pouting_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f63e.png?v8
        pouting_face: https://github.githubassets.com/images/icons/emoji/unicode/1f64e.png?v8
        pouting_man: https://github.githubassets.com/images/icons/emoji/unicode/1f64e-2642.png?v8
        pouting_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f64e-2640.png?v8
        pray: https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png?v8
        prayer_beads: https://github.githubassets.com/images/icons/emoji/unicode/1f4ff.png?v8
        pregnant_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f930.png?v8
        pretzel: https://github.githubassets.com/images/icons/emoji/unicode/1f968.png?v8
        previous_track_button: https://github.githubassets.com/images/icons/emoji/unicode/23ee.png?v8
        prince: https://github.githubassets.com/images/icons/emoji/unicode/1f934.png?v8
        princess: https://github.githubassets.com/images/icons/emoji/unicode/1f478.png?v8
        printer: https://github.githubassets.com/images/icons/emoji/unicode/1f5a8.png?v8
        probing_cane: https://github.githubassets.com/images/icons/emoji/unicode/1f9af.png?v8
        puerto_rico: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f7.png?v8
        punch: https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8
        purple_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f7e3.png?v8
        purple_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png?v8
        purple_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7ea.png?v8
        purse: https://github.githubassets.com/images/icons/emoji/unicode/1f45b.png?v8
        pushpin: https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8
        put_litter_in_its_place: https://github.githubassets.com/images/icons/emoji/unicode/1f6ae.png?v8
        qatar: https://github.githubassets.com/images/icons/emoji/unicode/1f1f6-1f1e6.png?v8
        question: https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8
        rabbit: https://github.githubassets.com/images/icons/emoji/unicode/1f430.png?v8
        rabbit2: https://github.githubassets.com/images/icons/emoji/unicode/1f407.png?v8
        raccoon: https://github.githubassets.com/images/icons/emoji/unicode/1f99d.png?v8
        racehorse: https://github.githubassets.com/images/icons/emoji/unicode/1f40e.png?v8
        racing_car: https://github.githubassets.com/images/icons/emoji/unicode/1f3ce.png?v8
        radio: https://github.githubassets.com/images/icons/emoji/unicode/1f4fb.png?v8
        radio_button: https://github.githubassets.com/images/icons/emoji/unicode/1f518.png?v8
        radioactive: https://github.githubassets.com/images/icons/emoji/unicode/2622.png?v8
        rage: https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8
        rage1: https://github.githubassets.com/images/icons/emoji/rage1.png?v8
        rage2: https://github.githubassets.com/images/icons/emoji/rage2.png?v8
        rage3: https://github.githubassets.com/images/icons/emoji/rage3.png?v8
        rage4: https://github.githubassets.com/images/icons/emoji/rage4.png?v8
        railway_car: https://github.githubassets.com/images/icons/emoji/unicode/1f683.png?v8
        railway_track: https://github.githubassets.com/images/icons/emoji/unicode/1f6e4.png?v8
        rainbow: https://github.githubassets.com/images/icons/emoji/unicode/1f308.png?v8
        rainbow_flag: https://github.githubassets.com/images/icons/emoji/unicode/1f3f3-1f308.png?v8
        raised_back_of_hand: https://github.githubassets.com/images/icons/emoji/unicode/1f91a.png?v8
        raised_eyebrow: https://github.githubassets.com/images/icons/emoji/unicode/1f928.png?v8
        raised_hand: https://github.githubassets.com/images/icons/emoji/unicode/270b.png?v8
        raised_hand_with_fingers_splayed: https://github.githubassets.com/images/icons/emoji/unicode/1f590.png?v8
        raised_hands: https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png?v8
        raising_hand: https://github.githubassets.com/images/icons/emoji/unicode/1f64b.png?v8
        raising_hand_man: https://github.githubassets.com/images/icons/emoji/unicode/1f64b-2642.png?v8
        raising_hand_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f64b-2640.png?v8
        ram: https://github.githubassets.com/images/icons/emoji/unicode/1f40f.png?v8
        ramen: https://github.githubassets.com/images/icons/emoji/unicode/1f35c.png?v8
        rat: https://github.githubassets.com/images/icons/emoji/unicode/1f400.png?v8
        razor: https://github.githubassets.com/images/icons/emoji/unicode/1fa92.png?v8
        receipt: https://github.githubassets.com/images/icons/emoji/unicode/1f9fe.png?v8
        record_button: https://github.githubassets.com/images/icons/emoji/unicode/23fa.png?v8
        recycle: https://github.githubassets.com/images/icons/emoji/unicode/267b.png?v8
        red_car: https://github.githubassets.com/images/icons/emoji/unicode/1f697.png?v8
        red_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f534.png?v8
        red_envelope: https://github.githubassets.com/images/icons/emoji/unicode/1f9e7.png?v8
        red_haired_man: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b0.png?v8
        red_haired_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b0.png?v8
        red_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7e5.png?v8
        registered: https://github.githubassets.com/images/icons/emoji/unicode/00ae.png?v8
        relaxed: https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8
        relieved: https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8
        reminder_ribbon: https://github.githubassets.com/images/icons/emoji/unicode/1f397.png?v8
        repeat: https://github.githubassets.com/images/icons/emoji/unicode/1f501.png?v8
        repeat_one: https://github.githubassets.com/images/icons/emoji/unicode/1f502.png?v8
        rescue_worker_helmet: https://github.githubassets.com/images/icons/emoji/unicode/26d1.png?v8
        restroom: https://github.githubassets.com/images/icons/emoji/unicode/1f6bb.png?v8
        reunion: https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1ea.png?v8
        revolving_hearts: https://github.githubassets.com/images/icons/emoji/unicode/1f49e.png?v8
        rewind: https://github.githubassets.com/images/icons/emoji/unicode/23ea.png?v8
        rhinoceros: https://github.githubassets.com/images/icons/emoji/unicode/1f98f.png?v8
        ribbon: https://github.githubassets.com/images/icons/emoji/unicode/1f380.png?v8
        rice: https://github.githubassets.com/images/icons/emoji/unicode/1f35a.png?v8
        rice_ball: https://github.githubassets.com/images/icons/emoji/unicode/1f359.png?v8
        rice_cracker: https://github.githubassets.com/images/icons/emoji/unicode/1f358.png?v8
        rice_scene: https://github.githubassets.com/images/icons/emoji/unicode/1f391.png?v8
        right_anger_bubble: https://github.githubassets.com/images/icons/emoji/unicode/1f5ef.png?v8
        ring: https://github.githubassets.com/images/icons/emoji/unicode/1f48d.png?v8
        ringed_planet: https://github.githubassets.com/images/icons/emoji/unicode/1fa90.png?v8
        robot: https://github.githubassets.com/images/icons/emoji/unicode/1f916.png?v8
        rock: https://github.githubassets.com/images/icons/emoji/unicode/1faa8.png?v8
        rocket: https://github.githubassets.com/images/icons/emoji/unicode/1f680.png?v8
        rofl: https://github.githubassets.com/images/icons/emoji/unicode/1f923.png?v8
        roll_eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f644.png?v8
        roll_of_paper: https://github.githubassets.com/images/icons/emoji/unicode/1f9fb.png?v8
        roller_coaster: https://github.githubassets.com/images/icons/emoji/unicode/1f3a2.png?v8
        roller_skate: https://github.githubassets.com/images/icons/emoji/unicode/1f6fc.png?v8
        romania: https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1f4.png?v8
        rooster: https://github.githubassets.com/images/icons/emoji/unicode/1f413.png?v8
        rose: https://github.githubassets.com/images/icons/emoji/unicode/1f339.png?v8
        rosette: https://github.githubassets.com/images/icons/emoji/unicode/1f3f5.png?v8
        rotating_light: https://github.githubassets.com/images/icons/emoji/unicode/1f6a8.png?v8
        round_pushpin: https://github.githubassets.com/images/icons/emoji/unicode/1f4cd.png?v8
        rowboat: https://github.githubassets.com/images/icons/emoji/unicode/1f6a3.png?v8
        rowing_man: https://github.githubassets.com/images/icons/emoji/unicode/1f6a3-2642.png?v8
        rowing_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f6a3-2640.png?v8
        ru: https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png?v8
        rugby_football: https://github.githubassets.com/images/icons/emoji/unicode/1f3c9.png?v8
        runner: https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png?v8
        running: https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png?v8
        running_man: https://github.githubassets.com/images/icons/emoji/unicode/1f3c3-2642.png?v8
        running_shirt_with_sash: https://github.githubassets.com/images/icons/emoji/unicode/1f3bd.png?v8
        running_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f3c3-2640.png?v8
        rwanda: https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fc.png?v8
        sa: https://github.githubassets.com/images/icons/emoji/unicode/1f202.png?v8
        safety_pin: https://github.githubassets.com/images/icons/emoji/unicode/1f9f7.png?v8
        safety_vest: https://github.githubassets.com/images/icons/emoji/unicode/1f9ba.png?v8
        sagittarius: https://github.githubassets.com/images/icons/emoji/unicode/2650.png?v8
        sailboat: https://github.githubassets.com/images/icons/emoji/unicode/26f5.png?v8
        sake: https://github.githubassets.com/images/icons/emoji/unicode/1f376.png?v8
        salt: https://github.githubassets.com/images/icons/emoji/unicode/1f9c2.png?v8
        samoa: https://github.githubassets.com/images/icons/emoji/unicode/1f1fc-1f1f8.png?v8
        san_marino: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f2.png?v8
        sandal: https://github.githubassets.com/images/icons/emoji/unicode/1f461.png?v8
        sandwich: https://github.githubassets.com/images/icons/emoji/unicode/1f96a.png?v8
        santa: https://github.githubassets.com/images/icons/emoji/unicode/1f385.png?v8
        sao_tome_principe: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f9.png?v8
        sari: https://github.githubassets.com/images/icons/emoji/unicode/1f97b.png?v8
        sassy_man: https://github.githubassets.com/images/icons/emoji/unicode/1f481-2642.png?v8
        sassy_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f481-2640.png?v8
        satellite: https://github.githubassets.com/images/icons/emoji/unicode/1f4e1.png?v8
        satisfied: https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8
        saudi_arabia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e6.png?v8
        sauna_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9d6-2642.png?v8
        sauna_person: https://github.githubassets.com/images/icons/emoji/unicode/1f9d6.png?v8
        sauna_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9d6-2640.png?v8
        sauropod: https://github.githubassets.com/images/icons/emoji/unicode/1f995.png?v8
        saxophone: https://github.githubassets.com/images/icons/emoji/unicode/1f3b7.png?v8
        scarf: https://github.githubassets.com/images/icons/emoji/unicode/1f9e3.png?v8
        school: https://github.githubassets.com/images/icons/emoji/unicode/1f3eb.png?v8
        school_satchel: https://github.githubassets.com/images/icons/emoji/unicode/1f392.png?v8
        scientist: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f52c.png?v8
        scissors: https://github.githubassets.com/images/icons/emoji/unicode/2702.png?v8
        scorpion: https://github.githubassets.com/images/icons/emoji/unicode/1f982.png?v8
        scorpius: https://github.githubassets.com/images/icons/emoji/unicode/264f.png?v8
        scotland: https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-e0067-e0062-e0073-e0063-e0074-e007f.png?v8
        scream: https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8
        scream_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f640.png?v8
        screwdriver: https://github.githubassets.com/images/icons/emoji/unicode/1fa9b.png?v8
        scroll: https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png?v8
        seal: https://github.githubassets.com/images/icons/emoji/unicode/1f9ad.png?v8
        seat: https://github.githubassets.com/images/icons/emoji/unicode/1f4ba.png?v8
        secret: https://github.githubassets.com/images/icons/emoji/unicode/3299.png?v8
        see_no_evil: https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8
        seedling: https://github.githubassets.com/images/icons/emoji/unicode/1f331.png?v8
        selfie: https://github.githubassets.com/images/icons/emoji/unicode/1f933.png?v8
        senegal: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f3.png?v8
        serbia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1f8.png?v8
        service_dog: https://github.githubassets.com/images/icons/emoji/unicode/1f415-1f9ba.png?v8
        seven: https://github.githubassets.com/images/icons/emoji/unicode/0037-20e3.png?v8
        sewing_needle: https://github.githubassets.com/images/icons/emoji/unicode/1faa1.png?v8
        seychelles: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e8.png?v8
        shallow_pan_of_food: https://github.githubassets.com/images/icons/emoji/unicode/1f958.png?v8
        shamrock: https://github.githubassets.com/images/icons/emoji/unicode/2618.png?v8
        shark: https://github.githubassets.com/images/icons/emoji/unicode/1f988.png?v8
        shaved_ice: https://github.githubassets.com/images/icons/emoji/unicode/1f367.png?v8
        sheep: https://github.githubassets.com/images/icons/emoji/unicode/1f411.png?v8
        shell: https://github.githubassets.com/images/icons/emoji/unicode/1f41a.png?v8
        shield: https://github.githubassets.com/images/icons/emoji/unicode/1f6e1.png?v8
        shinto_shrine: https://github.githubassets.com/images/icons/emoji/unicode/26e9.png?v8
        ship: https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png?v8
        shipit: https://github.githubassets.com/images/icons/emoji/shipit.png?v8
        shirt: https://github.githubassets.com/images/icons/emoji/unicode/1f455.png?v8
        shoe: https://github.githubassets.com/images/icons/emoji/unicode/1f45e.png?v8
        shopping: https://github.githubassets.com/images/icons/emoji/unicode/1f6cd.png?v8
        shopping_cart: https://github.githubassets.com/images/icons/emoji/unicode/1f6d2.png?v8
        shorts: https://github.githubassets.com/images/icons/emoji/unicode/1fa73.png?v8
        shower: https://github.githubassets.com/images/icons/emoji/unicode/1f6bf.png?v8
        shrimp: https://github.githubassets.com/images/icons/emoji/unicode/1f990.png?v8
        shrug: https://github.githubassets.com/images/icons/emoji/unicode/1f937.png?v8
        shushing_face: https://github.githubassets.com/images/icons/emoji/unicode/1f92b.png?v8
        sierra_leone: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f1.png?v8
        signal_strength: https://github.githubassets.com/images/icons/emoji/unicode/1f4f6.png?v8
        singapore: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ec.png?v8
        singer: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3a4.png?v8
        sint_maarten: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1fd.png?v8
        six: https://github.githubassets.com/images/icons/emoji/unicode/0036-20e3.png?v8
        six_pointed_star: https://github.githubassets.com/images/icons/emoji/unicode/1f52f.png?v8
        skateboard: https://github.githubassets.com/images/icons/emoji/unicode/1f6f9.png?v8
        ski: https://github.githubassets.com/images/icons/emoji/unicode/1f3bf.png?v8
        skier: https://github.githubassets.com/images/icons/emoji/unicode/26f7.png?v8
        skull: https://github.githubassets.com/images/icons/emoji/unicode/1f480.png?v8
        skull_and_crossbones: https://github.githubassets.com/images/icons/emoji/unicode/2620.png?v8
        skunk: https://github.githubassets.com/images/icons/emoji/unicode/1f9a8.png?v8
        sled: https://github.githubassets.com/images/icons/emoji/unicode/1f6f7.png?v8
        sleeping: https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8
        sleeping_bed: https://github.githubassets.com/images/icons/emoji/unicode/1f6cc.png?v8
        sleepy: https://github.githubassets.com/images/icons/emoji/unicode/1f62a.png?v8
        slightly_frowning_face: https://github.githubassets.com/images/icons/emoji/unicode/1f641.png?v8
        slightly_smiling_face: https://github.githubassets.com/images/icons/emoji/unicode/1f642.png?v8
        slot_machine: https://github.githubassets.com/images/icons/emoji/unicode/1f3b0.png?v8
        sloth: https://github.githubassets.com/images/icons/emoji/unicode/1f9a5.png?v8
        slovakia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f0.png?v8
        slovenia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ee.png?v8
        small_airplane: https://github.githubassets.com/images/icons/emoji/unicode/1f6e9.png?v8
        small_blue_diamond: https://github.githubassets.com/images/icons/emoji/unicode/1f539.png?v8
        small_orange_diamond: https://github.githubassets.com/images/icons/emoji/unicode/1f538.png?v8
        small_red_triangle: https://github.githubassets.com/images/icons/emoji/unicode/1f53a.png?v8
        small_red_triangle_down: https://github.githubassets.com/images/icons/emoji/unicode/1f53b.png?v8
        smile: https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8
        smile_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f638.png?v8
        smiley: https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8
        smiley_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f63a.png?v8
        smiling_face_with_tear: https://github.githubassets.com/images/icons/emoji/unicode/1f972.png?v8
        smiling_face_with_three_hearts: https://github.githubassets.com/images/icons/emoji/unicode/1f970.png?v8
        smiling_imp: https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8
        smirk: https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8
        smirk_cat: https://github.githubassets.com/images/icons/emoji/unicode/1f63c.png?v8
        smoking: https://github.githubassets.com/images/icons/emoji/unicode/1f6ac.png?v8
        snail: https://github.githubassets.com/images/icons/emoji/unicode/1f40c.png?v8
        snake: https://github.githubassets.com/images/icons/emoji/unicode/1f40d.png?v8
        sneezing_face: https://github.githubassets.com/images/icons/emoji/unicode/1f927.png?v8
        snowboarder: https://github.githubassets.com/images/icons/emoji/unicode/1f3c2.png?v8
        snowflake: https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8
        snowman: https://github.githubassets.com/images/icons/emoji/unicode/26c4.png?v8
        snowman_with_snow: https://github.githubassets.com/images/icons/emoji/unicode/2603.png?v8
        soap: https://github.githubassets.com/images/icons/emoji/unicode/1f9fc.png?v8
        sob: https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8
        soccer: https://github.githubassets.com/images/icons/emoji/unicode/26bd.png?v8
        socks: https://github.githubassets.com/images/icons/emoji/unicode/1f9e6.png?v8
        softball: https://github.githubassets.com/images/icons/emoji/unicode/1f94e.png?v8
        solomon_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e7.png?v8
        somalia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f4.png?v8
        soon: https://github.githubassets.com/images/icons/emoji/unicode/1f51c.png?v8
        sos: https://github.githubassets.com/images/icons/emoji/unicode/1f198.png?v8
        sound: https://github.githubassets.com/images/icons/emoji/unicode/1f509.png?v8
        south_africa: https://github.githubassets.com/images/icons/emoji/unicode/1f1ff-1f1e6.png?v8
        south_georgia_south_sandwich_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1f8.png?v8
        south_sudan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f8.png?v8
        space_invader: https://github.githubassets.com/images/icons/emoji/unicode/1f47e.png?v8
        spades: https://github.githubassets.com/images/icons/emoji/unicode/2660.png?v8
        spaghetti: https://github.githubassets.com/images/icons/emoji/unicode/1f35d.png?v8
        sparkle: https://github.githubassets.com/images/icons/emoji/unicode/2747.png?v8
        sparkler: https://github.githubassets.com/images/icons/emoji/unicode/1f387.png?v8
        sparkles: https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8
        sparkling_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f496.png?v8
        speak_no_evil: https://github.githubassets.com/images/icons/emoji/unicode/1f64a.png?v8
        speaker: https://github.githubassets.com/images/icons/emoji/unicode/1f508.png?v8
        speaking_head: https://github.githubassets.com/images/icons/emoji/unicode/1f5e3.png?v8
        speech_balloon: https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png?v8
        speedboat: https://github.githubassets.com/images/icons/emoji/unicode/1f6a4.png?v8
        spider: https://github.githubassets.com/images/icons/emoji/unicode/1f577.png?v8
        spider_web: https://github.githubassets.com/images/icons/emoji/unicode/1f578.png?v8
        spiral_calendar: https://github.githubassets.com/images/icons/emoji/unicode/1f5d3.png?v8
        spiral_notepad: https://github.githubassets.com/images/icons/emoji/unicode/1f5d2.png?v8
        sponge: https://github.githubassets.com/images/icons/emoji/unicode/1f9fd.png?v8
        spoon: https://github.githubassets.com/images/icons/emoji/unicode/1f944.png?v8
        squid: https://github.githubassets.com/images/icons/emoji/unicode/1f991.png?v8
        sri_lanka: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1f0.png?v8
        st_barthelemy: https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f1.png?v8
        st_helena: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ed.png?v8
        st_kitts_nevis: https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f3.png?v8
        st_lucia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f1-1f1e8.png?v8
        st_martin: https://github.githubassets.com/images/icons/emoji/unicode/1f1f2-1f1eb.png?v8
        st_pierre_miquelon: https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f2.png?v8
        st_vincent_grenadines: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1e8.png?v8
        stadium: https://github.githubassets.com/images/icons/emoji/unicode/1f3df.png?v8
        standing_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9cd-2642.png?v8
        standing_person: https://github.githubassets.com/images/icons/emoji/unicode/1f9cd.png?v8
        standing_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9cd-2640.png?v8
        star: https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8
        star2: https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png?v8
        star_and_crescent: https://github.githubassets.com/images/icons/emoji/unicode/262a.png?v8
        star_of_david: https://github.githubassets.com/images/icons/emoji/unicode/2721.png?v8
        star_struck: https://github.githubassets.com/images/icons/emoji/unicode/1f929.png?v8
        stars: https://github.githubassets.com/images/icons/emoji/unicode/1f320.png?v8
        station: https://github.githubassets.com/images/icons/emoji/unicode/1f689.png?v8
        statue_of_liberty: https://github.githubassets.com/images/icons/emoji/unicode/1f5fd.png?v8
        steam_locomotive: https://github.githubassets.com/images/icons/emoji/unicode/1f682.png?v8
        stethoscope: https://github.githubassets.com/images/icons/emoji/unicode/1fa7a.png?v8
        stew: https://github.githubassets.com/images/icons/emoji/unicode/1f372.png?v8
        stop_button: https://github.githubassets.com/images/icons/emoji/unicode/23f9.png?v8
        stop_sign: https://github.githubassets.com/images/icons/emoji/unicode/1f6d1.png?v8
        stopwatch: https://github.githubassets.com/images/icons/emoji/unicode/23f1.png?v8
        straight_ruler: https://github.githubassets.com/images/icons/emoji/unicode/1f4cf.png?v8
        strawberry: https://github.githubassets.com/images/icons/emoji/unicode/1f353.png?v8
        stuck_out_tongue: https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png?v8
        stuck_out_tongue_closed_eyes: https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8
        stuck_out_tongue_winking_eye: https://github.githubassets.com/images/icons/emoji/unicode/1f61c.png?v8
        student: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f393.png?v8
        studio_microphone: https://github.githubassets.com/images/icons/emoji/unicode/1f399.png?v8
        stuffed_flatbread: https://github.githubassets.com/images/icons/emoji/unicode/1f959.png?v8
        sudan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1e9.png?v8
        sun_behind_large_cloud: https://github.githubassets.com/images/icons/emoji/unicode/1f325.png?v8
        sun_behind_rain_cloud: https://github.githubassets.com/images/icons/emoji/unicode/1f326.png?v8
        sun_behind_small_cloud: https://github.githubassets.com/images/icons/emoji/unicode/1f324.png?v8
        sun_with_face: https://github.githubassets.com/images/icons/emoji/unicode/1f31e.png?v8
        sunflower: https://github.githubassets.com/images/icons/emoji/unicode/1f33b.png?v8
        sunglasses: https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8
        sunny: https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8
        sunrise: https://github.githubassets.com/images/icons/emoji/unicode/1f305.png?v8
        sunrise_over_mountains: https://github.githubassets.com/images/icons/emoji/unicode/1f304.png?v8
        superhero: https://github.githubassets.com/images/icons/emoji/unicode/1f9b8.png?v8
        superhero_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9b8-2642.png?v8
        superhero_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9b8-2640.png?v8
        supervillain: https://github.githubassets.com/images/icons/emoji/unicode/1f9b9.png?v8
        supervillain_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9b9-2642.png?v8
        supervillain_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9b9-2640.png?v8
        surfer: https://github.githubassets.com/images/icons/emoji/unicode/1f3c4.png?v8
        surfing_man: https://github.githubassets.com/images/icons/emoji/unicode/1f3c4-2642.png?v8
        surfing_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f3c4-2640.png?v8
        suriname: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1f7.png?v8
        sushi: https://github.githubassets.com/images/icons/emoji/unicode/1f363.png?v8
        suspect: https://github.githubassets.com/images/icons/emoji/suspect.png?v8
        suspension_railway: https://github.githubassets.com/images/icons/emoji/unicode/1f69f.png?v8
        svalbard_jan_mayen: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ef.png?v8
        swan: https://github.githubassets.com/images/icons/emoji/unicode/1f9a2.png?v8
        swaziland: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ff.png?v8
        sweat: https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8
        sweat_drops: https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8
        sweat_smile: https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8
        sweden: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1ea.png?v8
        sweet_potato: https://github.githubassets.com/images/icons/emoji/unicode/1f360.png?v8
        swim_brief: https://github.githubassets.com/images/icons/emoji/unicode/1fa72.png?v8
        swimmer: https://github.githubassets.com/images/icons/emoji/unicode/1f3ca.png?v8
        swimming_man: https://github.githubassets.com/images/icons/emoji/unicode/1f3ca-2642.png?v8
        swimming_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f3ca-2640.png?v8
        switzerland: https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ed.png?v8
        symbols: https://github.githubassets.com/images/icons/emoji/unicode/1f523.png?v8
        synagogue: https://github.githubassets.com/images/icons/emoji/unicode/1f54d.png?v8
        syria: https://github.githubassets.com/images/icons/emoji/unicode/1f1f8-1f1fe.png?v8
        syringe: https://github.githubassets.com/images/icons/emoji/unicode/1f489.png?v8
        t-rex: https://github.githubassets.com/images/icons/emoji/unicode/1f996.png?v8
        taco: https://github.githubassets.com/images/icons/emoji/unicode/1f32e.png?v8
        tada: https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8
        taiwan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fc.png?v8
        tajikistan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ef.png?v8
        takeout_box: https://github.githubassets.com/images/icons/emoji/unicode/1f961.png?v8
        tamale: https://github.githubassets.com/images/icons/emoji/unicode/1fad4.png?v8
        tanabata_tree: https://github.githubassets.com/images/icons/emoji/unicode/1f38b.png?v8
        tangerine: https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png?v8
        tanzania: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ff.png?v8
        taurus: https://github.githubassets.com/images/icons/emoji/unicode/2649.png?v8
        taxi: https://github.githubassets.com/images/icons/emoji/unicode/1f695.png?v8
        tea: https://github.githubassets.com/images/icons/emoji/unicode/1f375.png?v8
        teacher: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f3eb.png?v8
        teapot: https://github.githubassets.com/images/icons/emoji/unicode/1fad6.png?v8
        technologist: https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f4bb.png?v8
        teddy_bear: https://github.githubassets.com/images/icons/emoji/unicode/1f9f8.png?v8
        telephone: https://github.githubassets.com/images/icons/emoji/unicode/260e.png?v8
        telephone_receiver: https://github.githubassets.com/images/icons/emoji/unicode/1f4de.png?v8
        telescope: https://github.githubassets.com/images/icons/emoji/unicode/1f52d.png?v8
        tennis: https://github.githubassets.com/images/icons/emoji/unicode/1f3be.png?v8
        tent: https://github.githubassets.com/images/icons/emoji/unicode/26fa.png?v8
        test_tube: https://github.githubassets.com/images/icons/emoji/unicode/1f9ea.png?v8
        thailand: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ed.png?v8
        thermometer: https://github.githubassets.com/images/icons/emoji/unicode/1f321.png?v8
        thinking: https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8
        thong_sandal: https://github.githubassets.com/images/icons/emoji/unicode/1fa74.png?v8
        thought_balloon: https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png?v8
        thread: https://github.githubassets.com/images/icons/emoji/unicode/1f9f5.png?v8
        three: https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png?v8
        thumbsdown: https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png?v8
        thumbsup: https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8
        ticket: https://github.githubassets.com/images/icons/emoji/unicode/1f3ab.png?v8
        tickets: https://github.githubassets.com/images/icons/emoji/unicode/1f39f.png?v8
        tiger: https://github.githubassets.com/images/icons/emoji/unicode/1f42f.png?v8
        tiger2: https://github.githubassets.com/images/icons/emoji/unicode/1f405.png?v8
        timer_clock: https://github.githubassets.com/images/icons/emoji/unicode/23f2.png?v8
        timor_leste: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f1.png?v8
        tipping_hand_man: https://github.githubassets.com/images/icons/emoji/unicode/1f481-2642.png?v8
        tipping_hand_person: https://github.githubassets.com/images/icons/emoji/unicode/1f481.png?v8
        tipping_hand_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f481-2640.png?v8
        tired_face: https://github.githubassets.com/images/icons/emoji/unicode/1f62b.png?v8
        tm: https://github.githubassets.com/images/icons/emoji/unicode/2122.png?v8
        togo: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ec.png?v8
        toilet: https://github.githubassets.com/images/icons/emoji/unicode/1f6bd.png?v8
        tokelau: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f0.png?v8
        tokyo_tower: https://github.githubassets.com/images/icons/emoji/unicode/1f5fc.png?v8
        tomato: https://github.githubassets.com/images/icons/emoji/unicode/1f345.png?v8
        tonga: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f4.png?v8
        tongue: https://github.githubassets.com/images/icons/emoji/unicode/1f445.png?v8
        toolbox: https://github.githubassets.com/images/icons/emoji/unicode/1f9f0.png?v8
        tooth: https://github.githubassets.com/images/icons/emoji/unicode/1f9b7.png?v8
        toothbrush: https://github.githubassets.com/images/icons/emoji/unicode/1faa5.png?v8
        top: https://github.githubassets.com/images/icons/emoji/unicode/1f51d.png?v8
        tophat: https://github.githubassets.com/images/icons/emoji/unicode/1f3a9.png?v8
        tornado: https://github.githubassets.com/images/icons/emoji/unicode/1f32a.png?v8
        tr: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f7.png?v8
        trackball: https://github.githubassets.com/images/icons/emoji/unicode/1f5b2.png?v8
        tractor: https://github.githubassets.com/images/icons/emoji/unicode/1f69c.png?v8
        traffic_light: https://github.githubassets.com/images/icons/emoji/unicode/1f6a5.png?v8
        train: https://github.githubassets.com/images/icons/emoji/unicode/1f68b.png?v8
        train2: https://github.githubassets.com/images/icons/emoji/unicode/1f686.png?v8
        tram: https://github.githubassets.com/images/icons/emoji/unicode/1f68a.png?v8
        transgender_flag: https://github.githubassets.com/images/icons/emoji/unicode/1f3f3-26a7.png?v8
        transgender_symbol: https://github.githubassets.com/images/icons/emoji/unicode/26a7.png?v8
        triangular_flag_on_post: https://github.githubassets.com/images/icons/emoji/unicode/1f6a9.png?v8
        triangular_ruler: https://github.githubassets.com/images/icons/emoji/unicode/1f4d0.png?v8
        trident: https://github.githubassets.com/images/icons/emoji/unicode/1f531.png?v8
        trinidad_tobago: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f9.png?v8
        tristan_da_cunha: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1e6.png?v8
        triumph: https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8
        trolleybus: https://github.githubassets.com/images/icons/emoji/unicode/1f68e.png?v8
        trollface: https://github.githubassets.com/images/icons/emoji/trollface.png?v8
        trophy: https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png?v8
        tropical_drink: https://github.githubassets.com/images/icons/emoji/unicode/1f379.png?v8
        tropical_fish: https://github.githubassets.com/images/icons/emoji/unicode/1f420.png?v8
        truck: https://github.githubassets.com/images/icons/emoji/unicode/1f69a.png?v8
        trumpet: https://github.githubassets.com/images/icons/emoji/unicode/1f3ba.png?v8
        tshirt: https://github.githubassets.com/images/icons/emoji/unicode/1f455.png?v8
        tulip: https://github.githubassets.com/images/icons/emoji/unicode/1f337.png?v8
        tumbler_glass: https://github.githubassets.com/images/icons/emoji/unicode/1f943.png?v8
        tunisia: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f3.png?v8
        turkey: https://github.githubassets.com/images/icons/emoji/unicode/1f983.png?v8
        turkmenistan: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f2.png?v8
        turks_caicos_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1e8.png?v8
        turtle: https://github.githubassets.com/images/icons/emoji/unicode/1f422.png?v8
        tuvalu: https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fb.png?v8
        tv: https://github.githubassets.com/images/icons/emoji/unicode/1f4fa.png?v8
        twisted_rightwards_arrows: https://github.githubassets.com/images/icons/emoji/unicode/1f500.png?v8
        two: https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8
        two_hearts: https://github.githubassets.com/images/icons/emoji/unicode/1f495.png?v8
        two_men_holding_hands: https://github.githubassets.com/images/icons/emoji/unicode/1f46c.png?v8
        two_women_holding_hands: https://github.githubassets.com/images/icons/emoji/unicode/1f46d.png?v8
        u5272: https://github.githubassets.com/images/icons/emoji/unicode/1f239.png?v8
        u5408: https://github.githubassets.com/images/icons/emoji/unicode/1f234.png?v8
        u55b6: https://github.githubassets.com/images/icons/emoji/unicode/1f23a.png?v8
        u6307: https://github.githubassets.com/images/icons/emoji/unicode/1f22f.png?v8
        u6708: https://github.githubassets.com/images/icons/emoji/unicode/1f237.png?v8
        u6709: https://github.githubassets.com/images/icons/emoji/unicode/1f236.png?v8
        u6e80: https://github.githubassets.com/images/icons/emoji/unicode/1f235.png?v8
        u7121: https://github.githubassets.com/images/icons/emoji/unicode/1f21a.png?v8
        u7533: https://github.githubassets.com/images/icons/emoji/unicode/1f238.png?v8
        u7981: https://github.githubassets.com/images/icons/emoji/unicode/1f232.png?v8
        u7a7a: https://github.githubassets.com/images/icons/emoji/unicode/1f233.png?v8
        uganda: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1ec.png?v8
        uk: https://github.githubassets.com/images/icons/emoji/unicode/1f1ec-1f1e7.png?v8
        ukraine: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1e6.png?v8
        umbrella: https://github.githubassets.com/images/icons/emoji/unicode/2614.png?v8
        unamused: https://github.githubassets.com/images/icons/emoji/unicode/1f612.png?v8
        underage: https://github.githubassets.com/images/icons/emoji/unicode/1f51e.png?v8
        unicorn: https://github.githubassets.com/images/icons/emoji/unicode/1f984.png?v8
        united_arab_emirates: https://github.githubassets.com/images/icons/emoji/unicode/1f1e6-1f1ea.png?v8
        united_nations: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f3.png?v8
        unlock: https://github.githubassets.com/images/icons/emoji/unicode/1f513.png?v8
        up: https://github.githubassets.com/images/icons/emoji/unicode/1f199.png?v8
        upside_down_face: https://github.githubassets.com/images/icons/emoji/unicode/1f643.png?v8
        uruguay: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1fe.png?v8
        us: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png?v8
        us_outlying_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f2.png?v8
        us_virgin_islands: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1ee.png?v8
        uzbekistan: https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1ff.png?v8
        v: https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8
        vampire: https://github.githubassets.com/images/icons/emoji/unicode/1f9db.png?v8
        vampire_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9db-2642.png?v8
        vampire_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9db-2640.png?v8
        vanuatu: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1fa.png?v8
        vatican_city: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1e6.png?v8
        venezuela: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1ea.png?v8
        vertical_traffic_light: https://github.githubassets.com/images/icons/emoji/unicode/1f6a6.png?v8
        vhs: https://github.githubassets.com/images/icons/emoji/unicode/1f4fc.png?v8
        vibration_mode: https://github.githubassets.com/images/icons/emoji/unicode/1f4f3.png?v8
        video_camera: https://github.githubassets.com/images/icons/emoji/unicode/1f4f9.png?v8
        video_game: https://github.githubassets.com/images/icons/emoji/unicode/1f3ae.png?v8
        vietnam: https://github.githubassets.com/images/icons/emoji/unicode/1f1fb-1f1f3.png?v8
        violin: https://github.githubassets.com/images/icons/emoji/unicode/1f3bb.png?v8
        virgo: https://github.githubassets.com/images/icons/emoji/unicode/264d.png?v8
        volcano: https://github.githubassets.com/images/icons/emoji/unicode/1f30b.png?v8
        volleyball: https://github.githubassets.com/images/icons/emoji/unicode/1f3d0.png?v8
        vomiting_face: https://github.githubassets.com/images/icons/emoji/unicode/1f92e.png?v8
        vs: https://github.githubassets.com/images/icons/emoji/unicode/1f19a.png?v8
        vulcan_salute: https://github.githubassets.com/images/icons/emoji/unicode/1f596.png?v8
        waffle: https://github.githubassets.com/images/icons/emoji/unicode/1f9c7.png?v8
        wales: https://github.githubassets.com/images/icons/emoji/unicode/1f3f4-e0067-e0062-e0077-e006c-e0073-e007f.png?v8
        walking: https://github.githubassets.com/images/icons/emoji/unicode/1f6b6.png?v8
        walking_man: https://github.githubassets.com/images/icons/emoji/unicode/1f6b6-2642.png?v8
        walking_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f6b6-2640.png?v8
        wallis_futuna: https://github.githubassets.com/images/icons/emoji/unicode/1f1fc-1f1eb.png?v8
        waning_crescent_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f318.png?v8
        waning_gibbous_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f316.png?v8
        warning: https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8
        wastebasket: https://github.githubassets.com/images/icons/emoji/unicode/1f5d1.png?v8
        watch: https://github.githubassets.com/images/icons/emoji/unicode/231a.png?v8
        water_buffalo: https://github.githubassets.com/images/icons/emoji/unicode/1f403.png?v8
        water_polo: https://github.githubassets.com/images/icons/emoji/unicode/1f93d.png?v8
        watermelon: https://github.githubassets.com/images/icons/emoji/unicode/1f349.png?v8
        wave: https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8
        wavy_dash: https://github.githubassets.com/images/icons/emoji/unicode/3030.png?v8
        waxing_crescent_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f312.png?v8
        waxing_gibbous_moon: https://github.githubassets.com/images/icons/emoji/unicode/1f314.png?v8
        wc: https://github.githubassets.com/images/icons/emoji/unicode/1f6be.png?v8
        weary: https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8
        wedding: https://github.githubassets.com/images/icons/emoji/unicode/1f492.png?v8
        weight_lifting: https://github.githubassets.com/images/icons/emoji/unicode/1f3cb.png?v8
        weight_lifting_man: https://github.githubassets.com/images/icons/emoji/unicode/1f3cb-2642.png?v8
        weight_lifting_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f3cb-2640.png?v8
        western_sahara: https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1ed.png?v8
        whale: https://github.githubassets.com/images/icons/emoji/unicode/1f433.png?v8
        whale2: https://github.githubassets.com/images/icons/emoji/unicode/1f40b.png?v8
        wheel_of_dharma: https://github.githubassets.com/images/icons/emoji/unicode/2638.png?v8
        wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/267f.png?v8
        white_check_mark: https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8
        white_circle: https://github.githubassets.com/images/icons/emoji/unicode/26aa.png?v8
        white_flag: https://github.githubassets.com/images/icons/emoji/unicode/1f3f3.png?v8
        white_flower: https://github.githubassets.com/images/icons/emoji/unicode/1f4ae.png?v8
        white_haired_man: https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f9b3.png?v8
        white_haired_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9b3.png?v8
        white_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f90d.png?v8
        white_large_square: https://github.githubassets.com/images/icons/emoji/unicode/2b1c.png?v8
        white_medium_small_square: https://github.githubassets.com/images/icons/emoji/unicode/25fd.png?v8
        white_medium_square: https://github.githubassets.com/images/icons/emoji/unicode/25fb.png?v8
        white_small_square: https://github.githubassets.com/images/icons/emoji/unicode/25ab.png?v8
        white_square_button: https://github.githubassets.com/images/icons/emoji/unicode/1f533.png?v8
        wilted_flower: https://github.githubassets.com/images/icons/emoji/unicode/1f940.png?v8
        wind_chime: https://github.githubassets.com/images/icons/emoji/unicode/1f390.png?v8
        wind_face: https://github.githubassets.com/images/icons/emoji/unicode/1f32c.png?v8
        window: https://github.githubassets.com/images/icons/emoji/unicode/1fa9f.png?v8
        wine_glass: https://github.githubassets.com/images/icons/emoji/unicode/1f377.png?v8
        wink: https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8
        wolf: https://github.githubassets.com/images/icons/emoji/unicode/1f43a.png?v8
        woman: https://github.githubassets.com/images/icons/emoji/unicode/1f469.png?v8
        woman_artist: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3a8.png?v8
        woman_astronaut: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f680.png?v8
        woman_beard: https://github.githubassets.com/images/icons/emoji/unicode/1f9d4-2640.png?v8
        woman_cartwheeling: https://github.githubassets.com/images/icons/emoji/unicode/1f938-2640.png?v8
        woman_cook: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f373.png?v8
        woman_dancing: https://github.githubassets.com/images/icons/emoji/unicode/1f483.png?v8
        woman_facepalming: https://github.githubassets.com/images/icons/emoji/unicode/1f926-2640.png?v8
        woman_factory_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3ed.png?v8
        woman_farmer: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f33e.png?v8
        woman_feeding_baby: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f37c.png?v8
        woman_firefighter: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f692.png?v8
        woman_health_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2695.png?v8
        woman_in_manual_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9bd.png?v8
        woman_in_motorized_wheelchair: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9bc.png?v8
        woman_in_tuxedo: https://github.githubassets.com/images/icons/emoji/unicode/1f935-2640.png?v8
        woman_judge: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2696.png?v8
        woman_juggling: https://github.githubassets.com/images/icons/emoji/unicode/1f939-2640.png?v8
        woman_mechanic: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f527.png?v8
        woman_office_worker: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bc.png?v8
        woman_pilot: https://github.githubassets.com/images/icons/emoji/unicode/1f469-2708.png?v8
        woman_playing_handball: https://github.githubassets.com/images/icons/emoji/unicode/1f93e-2640.png?v8
        woman_playing_water_polo: https://github.githubassets.com/images/icons/emoji/unicode/1f93d-2640.png?v8
        woman_scientist: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f52c.png?v8
        woman_shrugging: https://github.githubassets.com/images/icons/emoji/unicode/1f937-2640.png?v8
        woman_singer: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3a4.png?v8
        woman_student: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f393.png?v8
        woman_teacher: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3eb.png?v8
        woman_technologist: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f4bb.png?v8
        woman_with_headscarf: https://github.githubassets.com/images/icons/emoji/unicode/1f9d5.png?v8
        woman_with_probing_cane: https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f9af.png?v8
        woman_with_turban: https://github.githubassets.com/images/icons/emoji/unicode/1f473-2640.png?v8
        woman_with_veil: https://github.githubassets.com/images/icons/emoji/unicode/1f470-2640.png?v8
        womans_clothes: https://github.githubassets.com/images/icons/emoji/unicode/1f45a.png?v8
        womans_hat: https://github.githubassets.com/images/icons/emoji/unicode/1f452.png?v8
        women_wrestling: https://github.githubassets.com/images/icons/emoji/unicode/1f93c-2640.png?v8
        womens: https://github.githubassets.com/images/icons/emoji/unicode/1f6ba.png?v8
        wood: https://github.githubassets.com/images/icons/emoji/unicode/1fab5.png?v8
        woozy_face: https://github.githubassets.com/images/icons/emoji/unicode/1f974.png?v8
        world_map: https://github.githubassets.com/images/icons/emoji/unicode/1f5fa.png?v8
        worm: https://github.githubassets.com/images/icons/emoji/unicode/1fab1.png?v8
        worried: https://github.githubassets.com/images/icons/emoji/unicode/1f61f.png?v8
        wrench: https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8
        wrestling: https://github.githubassets.com/images/icons/emoji/unicode/1f93c.png?v8
        writing_hand: https://github.githubassets.com/images/icons/emoji/unicode/270d.png?v8
        x: https://github.githubassets.com/images/icons/emoji/unicode/274c.png?v8
        yarn: https://github.githubassets.com/images/icons/emoji/unicode/1f9f6.png?v8
        yawning_face: https://github.githubassets.com/images/icons/emoji/unicode/1f971.png?v8
        yellow_circle: https://github.githubassets.com/images/icons/emoji/unicode/1f7e1.png?v8
        yellow_heart: https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png?v8
        yellow_square: https://github.githubassets.com/images/icons/emoji/unicode/1f7e8.png?v8
        yemen: https://github.githubassets.com/images/icons/emoji/unicode/1f1fe-1f1ea.png?v8
        yen: https://github.githubassets.com/images/icons/emoji/unicode/1f4b4.png?v8
        yin_yang: https://github.githubassets.com/images/icons/emoji/unicode/262f.png?v8
        yo_yo: https://github.githubassets.com/images/icons/emoji/unicode/1fa80.png?v8
        yum: https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8
        zambia: https://github.githubassets.com/images/icons/emoji/unicode/1f1ff-1f1f2.png?v8
        zany_face: https://github.githubassets.com/images/icons/emoji/unicode/1f92a.png?v8
        zap: https://github.githubassets.com/images/icons/emoji/unicode/26a1.png?v8
        zebra: https://github.githubassets.com/images/icons/emoji/unicode/1f993.png?v8
        zero: https://github.githubassets.com/images/icons/emoji/unicode/0030-20e3.png?v8
        zimbabwe: https://github.githubassets.com/images/icons/emoji/unicode/1f1ff-1f1fc.png?v8
        zipper_mouth_face: https://github.githubassets.com/images/icons/emoji/unicode/1f910.png?v8
        zombie: https://github.githubassets.com/images/icons/emoji/unicode/1f9df.png?v8
        zombie_man: https://github.githubassets.com/images/icons/emoji/unicode/1f9df-2642.png?v8
        zombie_woman: https://github.githubassets.com/images/icons/emoji/unicode/1f9df-2640.png?v8
        zzz: https://github.githubassets.com/images/icons/emoji/unicode/1f4a4.png?v8
    dependabot-alerts-for-organization:
      value:
      - number: 2
        state: dismissed
        dependency:
          package:
            ecosystem: pip
            name: django
          manifest_path: path/to/requirements.txt
          scope: runtime
        security_advisory:
          ghsa_id: GHSA-rf4j-j272-fj86
          cve_id: CVE-2018-6188
          summary: Django allows remote attackers to obtain potentially sensitive
            information by leveraging data exposure from the confirm_login_allowed()
            method, as demonstrated by discovering whether a user account is inactive
          description: django.contrib.auth.forms.AuthenticationForm in Django 2.0
            before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain
            potentially sensitive information by leveraging data exposure from the
            confirm_login_allowed() method, as demonstrated by discovering whether
            a user account is inactive.
          vulnerabilities:
          - package:
              ecosystem: pip
              name: django
            severity: high
            vulnerable_version_range: ">= 2.0.0, < 2.0.2"
            first_patched_version:
              identifier: 2.0.2
          - package:
              ecosystem: pip
              name: django
            severity: high
            vulnerable_version_range: ">= 1.11.8, < 1.11.10"
            first_patched_version:
              identifier: 1.11.10
          severity: high
          cvss:
            vector_string: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
            score: 7.5
          cwes:
          - cwe_id: CWE-200
            name: Exposure of Sensitive Information to an Unauthorized Actor
          identifiers:
          - type: GHSA
            value: GHSA-rf4j-j272-fj86
          - type: CVE
            value: CVE-2018-6188
          references:
          - url: https://nvd.nist.gov/vuln/detail/CVE-2018-6188
          - url: https://github.com/advisories/GHSA-rf4j-j272-fj86
          - url: https://usn.ubuntu.com/3559-1/
          - url: https://www.djangoproject.com/weblog/2018/feb/01/security-releases/
          - url: http://www.securitytracker.com/id/1040422
          published_at: '2018-10-03T21:13:54Z'
          updated_at: '2022-04-26T18:35:37Z'
        security_vulnerability:
          package:
            ecosystem: pip
            name: django
          severity: high
          vulnerable_version_range: ">= 2.0.0, < 2.0.2"
          first_patched_version:
            identifier: 2.0.2
        url: https://api.github.com/repos/octo-org/octo-repo/dependabot/alerts/2
        html_url: https://github.com/octo-org/octo-repo/security/dependabot/2
        created_at: '2022-06-15T07:43:03Z'
        updated_at: '2022-08-23T14:29:47Z'
        dismissed_at: '2022-08-23T14:29:47Z'
        dismissed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_reason: tolerable_risk
        dismissed_comment: This alert is accurate but we use a sanitizer.
        repository:
          id: 217723378
          node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
          name: octo-repo
          full_name: octo-org/octo-repo
          owner:
            login: octo-org
            id: 6811672
            node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
            avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octo-org
            html_url: https://github.com/octo-org
            followers_url: https://api.github.com/users/octo-org/followers
            following_url: https://api.github.com/users/octo-org/following{/other_user}
            gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
            starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octo-org/subscriptions
            organizations_url: https://api.github.com/users/octo-org/orgs
            repos_url: https://api.github.com/users/octo-org/repos
            events_url: https://api.github.com/users/octo-org/events{/privacy}
            received_events_url: https://api.github.com/users/octo-org/received_events
            type: Organization
            site_admin: false
          private: true
          html_url: https://github.com/octo-org/octo-repo
          fork: false
          url: https://api.github.com/repos/octo-org/octo-repo
          archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
          blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
          collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
          commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
          compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
          contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
          deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
          downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
          events_url: https://api.github.com/repos/octo-org/octo-repo/events
          forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
          git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
          hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
          issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
          issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
          keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
          labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
          languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
          merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
          milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
          notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
          releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
          stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
          statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
          subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
          tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
          teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
          trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
      - number: 1
        state: open
        dependency:
          package:
            ecosystem: pip
            name: ansible
          manifest_path: path/to/requirements.txt
          scope: runtime
        security_advisory:
          ghsa_id: GHSA-8f4m-hccc-8qph
          cve_id: CVE-2021-20191
          summary: Insertion of Sensitive Information into Log File in ansible
          description: A flaw was found in ansible. Credentials, such as secrets,
            are being disclosed in console log by default and not protected by no_log
            feature when using those modules. An attacker can take advantage of this
            information to steal those credentials. The highest threat from this vulnerability
            is to data confidentiality.
          vulnerabilities:
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: ">= 2.9.0, < 2.9.18"
            first_patched_version:
              identifier: 2.9.18
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: "< 2.8.19"
            first_patched_version:
              identifier: 2.8.19
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: ">= 2.10.0, < 2.10.7"
            first_patched_version:
              identifier: 2.10.7
          severity: medium
          cvss:
            vector_string: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
            score: 5.5
          cwes:
          - cwe_id: CWE-532
            name: Insertion of Sensitive Information into Log File
          identifiers:
          - type: GHSA
            value: GHSA-8f4m-hccc-8qph
          - type: CVE
            value: CVE-2021-20191
          references:
          - url: https://nvd.nist.gov/vuln/detail/CVE-2021-20191
          - url: https://access.redhat.com/security/cve/cve-2021-20191
          - url: https://bugzilla.redhat.com/show_bug.cgi?id=1916813
          published_at: '2021-06-01T17:38:00Z'
          updated_at: '2021-08-12T23:06:00Z'
        security_vulnerability:
          package:
            ecosystem: pip
            name: ansible
          severity: medium
          vulnerable_version_range: "< 2.8.19"
          first_patched_version:
            identifier: 2.8.19
        url: https://api.github.com/repos/octo-org/hello-world/dependabot/alerts/1
        html_url: https://github.com/octo-org/hello-world/security/dependabot/1
        created_at: '2022-06-14T15:21:52Z'
        updated_at: '2022-06-14T15:21:52Z'
        repository:
          id: 664700648
          node_id: MDEwOlJlcG9zaXRvcnk2NjQ3MDA2NDg=
          name: hello-world
          full_name: octo-org/hello-world
          owner:
            login: octo-org
            id: 6811672
            node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
            avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octo-org
            html_url: https://github.com/octo-org
            followers_url: https://api.github.com/users/octo-org/followers
            following_url: https://api.github.com/users/octo-org/following{/other_user}
            gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
            starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octo-org/subscriptions
            organizations_url: https://api.github.com/users/octo-org/orgs
            repos_url: https://api.github.com/users/octo-org/repos
            events_url: https://api.github.com/users/octo-org/events{/privacy}
            received_events_url: https://api.github.com/users/octo-org/received_events
            type: Organization
            site_admin: false
          private: true
          html_url: https://github.com/octo-org/hello-world
          fork: false
          url: https://api.github.com/repos/octo-org/hello-world
          archive_url: https://api.github.com/repos/octo-org/hello-world/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octo-org/hello-world/assignees{/user}
          blobs_url: https://api.github.com/repos/octo-org/hello-world/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octo-org/hello-world/branches{/branch}
          collaborators_url: https://api.github.com/repos/octo-org/hello-world/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octo-org/hello-world/comments{/number}
          commits_url: https://api.github.com/repos/octo-org/hello-world/commits{/sha}
          compare_url: https://api.github.com/repos/octo-org/hello-world/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octo-org/hello-world/contents/{+path}
          contributors_url: https://api.github.com/repos/octo-org/hello-world/contributors
          deployments_url: https://api.github.com/repos/octo-org/hello-world/deployments
          downloads_url: https://api.github.com/repos/octo-org/hello-world/downloads
          events_url: https://api.github.com/repos/octo-org/hello-world/events
          forks_url: https://api.github.com/repos/octo-org/hello-world/forks
          git_commits_url: https://api.github.com/repos/octo-org/hello-world/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octo-org/hello-world/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octo-org/hello-world/git/tags{/sha}
          hooks_url: https://api.github.com/repos/octo-org/hello-world/hooks
          issue_comment_url: https://api.github.com/repos/octo-org/hello-world/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octo-org/hello-world/issues/events{/number}
          issues_url: https://api.github.com/repos/octo-org/hello-world/issues{/number}
          keys_url: https://api.github.com/repos/octo-org/hello-world/keys{/key_id}
          labels_url: https://api.github.com/repos/octo-org/hello-world/labels{/name}
          languages_url: https://api.github.com/repos/octo-org/hello-world/languages
          merges_url: https://api.github.com/repos/octo-org/hello-world/merges
          milestones_url: https://api.github.com/repos/octo-org/hello-world/milestones{/number}
          notifications_url: https://api.github.com/repos/octo-org/hello-world/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octo-org/hello-world/pulls{/number}
          releases_url: https://api.github.com/repos/octo-org/hello-world/releases{/id}
          stargazers_url: https://api.github.com/repos/octo-org/hello-world/stargazers
          statuses_url: https://api.github.com/repos/octo-org/hello-world/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octo-org/hello-world/subscribers
          subscription_url: https://api.github.com/repos/octo-org/hello-world/subscription
          tags_url: https://api.github.com/repos/octo-org/hello-world/tags
          teams_url: https://api.github.com/repos/octo-org/hello-world/teams
          trees_url: https://api.github.com/repos/octo-org/hello-world/git/trees{/sha}
    organization-secret-scanning-alert-list:
      value:
      - number: 2
        created_at: '2020-11-06T18:48:51Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2
        html_url: https://github.com/owner/private-repo/security/secret-scanning/2
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2/locations
        state: resolved
        resolution: false_positive
        resolved_at: '2020-11-07T02:47:13Z'
        resolved_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        secret_type: adafruit_io_key
        secret_type_display_name: Adafruit IO Key
        secret: aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        push_protection_bypassed_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        push_protection_bypassed: true
        push_protection_bypassed_at: '2020-11-06T21:48:51Z'
        resolution_comment: Example comment
      - number: 1
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/repo/secret-scanning/alerts/1
        html_url: https://github.com/owner/repo/security/secret-scanning/1
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/1/locations
        state: open
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        push_protection_bypassed: false
    public-events-items:
      value:
      - id: '22249084947'
        type: WatchEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          action: started
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-07T07:50:26Z'
    feed:
      value:
        timeline_url: https://github.com/timeline
        user_url: https://github.com/{user}
        current_user_public_url: https://github.com/octocat
        current_user_url: https://github.com/octocat.private?token=abc123
        current_user_actor_url: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url: ''
        current_user_organization_urls:
        - https://github.com/organizations/github/octocat.private.atom?token=abc123
        security_advisories_url: https://github.com/security-advisories
        _links:
          timeline:
            href: https://github.com/timeline
            type: application/atom+xml
          user:
            href: https://github.com/{user}
            type: application/atom+xml
          current_user_public:
            href: https://github.com/octocat
            type: application/atom+xml
          current_user:
            href: https://github.com/octocat.private?token=abc123
            type: application/atom+xml
          current_user_actor:
            href: https://github.com/octocat.private.actor?token=abc123
            type: application/atom+xml
          current_user_organization:
            href: ''
            type: ''
          current_user_organizations:
          - href: https://github.com/organizations/github/octocat.private.atom?token=abc123
            type: application/atom+xml
          security_advisories:
            href: https://github.com/security-advisories
            type: application/atom+xml
    base-gist-items:
      value:
      - url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        files:
          hello_world.rb:
            filename: hello_world.rb
            type: application/x-ruby
            language: Ruby
            raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
            size: 167
        public: true
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        truncated: false
    gist:
      value:
        url: https://api.github.com/gists/2decf6c462d9b4418f2
        forks_url: https://api.github.com/gists/2decf6c462d9b4418f2/forks
        commits_url: https://api.github.com/gists/2decf6c462d9b4418f2/commits
        id: 2decf6c462d9b4418f2
        node_id: G_kwDOBhHyLdZDliNDQxOGYy
        git_pull_url: https://gist.github.com/2decf6c462d9b4418f2.git
        git_push_url: https://gist.github.com/2decf6c462d9b4418f2.git
        html_url: https://gist.github.com/2decf6c462d9b4418f2
        files:
          README.md:
            filename: README.md
            type: text/markdown
            language: Markdown
            raw_url: https://gist.githubusercontent.com/monalisa/2decf6c462d9b4418f2/raw/ac3e6daf176fafe73609fd000cd188e4472010fb/README.md
            size: 23
            truncated: false
            content: Hello world from GitHub
        public: true
        created_at: '2022-09-20T12:11:58Z'
        updated_at: '2022-09-21T10:28:06Z'
        description: An updated gist description.
        comments: 0
        comments_url: https://api.github.com/gists/2decf6c462d9b4418f2/comments
        owner:
          login: monalisa
          id: 104456405
          node_id: U_kgDOBhHyLQ
          avatar_url: https://avatars.githubusercontent.com/u/104456405?v=4
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        forks: []
        history:
        - user:
            login: monalisa
            id: 104456405
            node_id: U_kgyLQ
            avatar_url: https://avatars.githubusercontent.com/u/104456405?v=4
            gravatar_id: ''
            url: https://api.github.com/users/monalisa
            html_url: https://github.com/monalisa
            followers_url: https://api.github.com/users/monalisa/followers
            following_url: https://api.github.com/users/monalisa/following{/other_user}
            gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
            starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/monalisa/subscriptions
            organizations_url: https://api.github.com/users/monalisa/orgs
            repos_url: https://api.github.com/users/monalisa/repos
            events_url: https://api.github.com/users/monalisa/events{/privacy}
            received_events_url: https://api.github.com/users/monalisa/received_events
            type: User
            site_admin: true
          version: 468aac8caed5f0c3b859b8286968
          committed_at: '2022-09-21T10:28:06Z'
          change_status:
            total: 2
            additions: 1
            deletions: 1
          url: https://api.github.com/gists/8481a81af6b7a2d418f2/468aac8caed5f0c3b859b8286968
        truncated: false
    delete-gist-file:
      value:
        url: https://api.github.com/gists/2decf6c462d9b4418f2
        forks_url: https://api.github.com/gists/2decf6c462d9b4418f2/forks
        commits_url: https://api.github.com/gists/2decf6c462d9b4418f2/commits
        id: 2decf6c462d9b4418f2
        node_id: G_kwDOBhHyLdoAIDg0ODFZDliNDQxOGYy
        git_pull_url: https://gist.github.com/2decf6c462d9b4418f2.git
        git_push_url: https://gist.github.com/2decf6c462d9b4418f2.git
        html_url: https://gist.github.com/2decf6c462d9b4418f2
        public: true
        created_at: '2022-09-20T12:11:58Z'
        updated_at: '2022-09-21T10:28:06Z'
        description: A gist description.
        comments: 0
        comments_url: https://api.github.com/gists/2decf6c462d9b4418f2/comments
        owner:
          login: monalisa
          id: 104456405
          node_id: U_kgDOBhHyLQ
          avatar_url: https://avatars.githubusercontent.com/u/104456405?v=4
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        forks: []
        history:
        - user:
            login: monalisa
            id: 104456405
            node_id: U_kgyLQ
            avatar_url: https://avatars.githubusercontent.com/u/104456405?v=4
            gravatar_id: ''
            url: https://api.github.com/users/monalisa
            html_url: https://github.com/monalisa
            followers_url: https://api.github.com/users/monalisa/followers
            following_url: https://api.github.com/users/monalisa/following{/other_user}
            gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
            starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/monalisa/subscriptions
            organizations_url: https://api.github.com/users/monalisa/orgs
            repos_url: https://api.github.com/users/monalisa/repos
            events_url: https://api.github.com/users/monalisa/events{/privacy}
            received_events_url: https://api.github.com/users/monalisa/received_events
            type: User
            site_admin: true
          version: 9cc352a89178a6d4
          committed_at: '2022-09-21T10:28:06Z'
          change_status:
            total: 1
            additions: 0
            deletions: 1
          url: https://api.github.com/gists/8481a81af6b7a2d418f2/468aac8caed5f0c3b859b8286968
        truncated: false
    rename-gist-file:
      value:
        url: https://api.github.com/gists/2decf6c462d9b4418f2
        forks_url: https://api.github.com/gists/2decf6c462d9b4418f2/forks
        commits_url: https://api.github.com/gists/2decf6c462d9b4418f2/commits
        id: 2decf6c462d9b4418f2
        node_id: G_kwDOBhHyLdoAIDg0ODFZDliNDQxOGYy
        git_pull_url: https://gist.github.com/2decf6c462d9b4418f2.git
        git_push_url: https://gist.github.com/2decf6c462d9b4418f2.git
        html_url: https://gist.github.com/2decf6c462d9b4418f2
        files:
          goodbye.py:
            filename: goodbye.py
            type: application/x-python
            language: Python
            raw_url: https://gist.githubusercontent.com/monalisa/8481a81af6b7a2decf6c462d9b4418f2/raw/ac3e6daf176fafe73609fd000cd188e4472010fb/goodbye.py
            size: 4
            truncated: false
            content: "# Hello world"
        public: true
        created_at: '2022-09-20T12:11:58Z'
        updated_at: '2022-09-21T10:28:06Z'
        description: A gist description.
        comments: 0
        comments_url: https://api.github.com/gists/2decf6c462d9b4418f2/comments
        owner:
          login: monalisa
          id: 104456405
          node_id: U_kgDOBhHyLQ
          avatar_url: https://avatars.githubusercontent.com/u/104456405?v=4
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        forks: []
        history:
        - user:
            login: monalisa
            id: 104456405
            node_id: U_kgyLQ
            avatar_url: https://avatars.githubusercontent.com/u/104456405?v=4
            gravatar_id: ''
            url: https://api.github.com/users/monalisa
            html_url: https://github.com/monalisa
            followers_url: https://api.github.com/users/monalisa/followers
            following_url: https://api.github.com/users/monalisa/following{/other_user}
            gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
            starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/monalisa/subscriptions
            organizations_url: https://api.github.com/users/monalisa/orgs
            repos_url: https://api.github.com/users/monalisa/repos
            events_url: https://api.github.com/users/monalisa/events{/privacy}
            received_events_url: https://api.github.com/users/monalisa/received_events
            type: User
            site_admin: true
          version: 468aac8caed5f0c3b859b8286968
          committed_at: '2022-09-21T10:28:06Z'
          change_status:
            total: 0
            additions: 0
            deletions: 0
          url: https://api.github.com/gists/8481a81af6b7a2d418f2/468aac8caed5f0c3b859b8286968
        truncated: false
    gist-comment-items:
      value:
      - id: 1
        node_id: MDExOkdpc3RDb21tZW50MQ==
        url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body: Just commenting for the sake of commenting
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-18T23:23:56Z'
        updated_at: '2011-04-18T23:23:56Z'
        author_association: COLLABORATOR
    gist-comment:
      value:
        id: 1
        node_id: MDExOkdpc3RDb21tZW50MQ==
        url: https://api.github.com/gists/a6db0bec360bb87e9418/comments/1
        body: Just commenting for the sake of commenting
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-18T23:23:56Z'
        updated_at: '2011-04-18T23:23:56Z'
        author_association: COLLABORATOR
    gist-commit-items:
      value:
      - url: https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f
        version: 57a7f021a713b1c5a6a199b54cc514735d2d462f
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        change_status:
          deletions: 0
          additions: 180
          total: 180
        committed_at: '2010-04-14T02:15:15Z'
    gist-fork-items:
      value:
      - url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        files:
          hello_world.rb:
            filename: hello_world.rb
            type: application/x-ruby
            language: Ruby
            raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
            size: 167
        public: true
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 1
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    base-gist:
      value:
        url: https://api.github.com/gists/aa5a315d61ae9438b18d
        forks_url: https://api.github.com/gists/aa5a315d61ae9438b18d/forks
        commits_url: https://api.github.com/gists/aa5a315d61ae9438b18d/commits
        id: aa5a315d61ae9438b18d
        node_id: MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk
        git_pull_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        git_push_url: https://gist.github.com/aa5a315d61ae9438b18d.git
        html_url: https://gist.github.com/aa5a315d61ae9438b18d
        files:
          hello_world.rb:
            filename: hello_world.rb
            type: application/x-ruby
            language: Ruby
            raw_url: https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb
            size: 167
        public: true
        created_at: '2010-04-14T02:15:15Z'
        updated_at: '2011-06-20T11:34:15Z'
        description: Hello World Examples
        comments: 0
        comments_url: https://api.github.com/gists/aa5a315d61ae9438b18d/comments/
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        truncated: false
    gitignore-template:
      value:
        name: C
        source: |
          # Object files
          *.o

          # Libraries
          *.lib
          *.a

          # Shared objects (inc. Windows DLLs)
          *.dll
          *.so
          *.so.*
          *.dylib

          # Executables
          *.exe
          *.out
          *.app
    repository-paginated-2:
      value:
        total_count: 1
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    issue-with-repo-items:
      value:
      - id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        author_association: COLLABORATOR
    license-simple-items:
      value:
      - key: mit
        name: MIT License
        spdx_id: MIT
        url: https://api.github.com/licenses/mit
        node_id: MDc6TGljZW5zZW1pdA==
      - key: lgpl-3.0
        name: GNU Lesser General Public License v3.0
        spdx_id: LGPL-3.0
        url: https://api.github.com/licenses/lgpl-3.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: mpl-2.0
        name: Mozilla Public License 2.0
        spdx_id: MPL-2.0
        url: https://api.github.com/licenses/mpl-2.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: agpl-3.0
        name: GNU Affero General Public License v3.0
        spdx_id: AGPL-3.0
        url: https://api.github.com/licenses/agpl-3.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: unlicense
        name: The Unlicense
        spdx_id: Unlicense
        url: https://api.github.com/licenses/unlicense
        node_id: MDc6TGljZW5zZW1pdA==
      - key: apache-2.0
        name: Apache License 2.0
        spdx_id: Apache-2.0
        url: https://api.github.com/licenses/apache-2.0
        node_id: MDc6TGljZW5zZW1pdA==
      - key: gpl-3.0
        name: GNU General Public License v3.0
        spdx_id: GPL-3.0
        url: https://api.github.com/licenses/gpl-3.0
        node_id: MDc6TGljZW5zZW1pdA==
    license:
      value:
        key: mit
        name: MIT License
        spdx_id: MIT
        url: https://api.github.com/licenses/mit
        node_id: MDc6TGljZW5zZW1pdA==
        html_url: http://choosealicense.com/licenses/mit/
        description: A permissive license that is short and to the point. It lets
          people do anything with your code with proper attribution and without warranty.
        implementation: Create a text file (typically named LICENSE or LICENSE.txt)
          in the root of your source code and copy the text of the license into the
          file. Replace [year] with the current year and [fullname] with the name
          (or names) of the copyright holders.
        permissions:
        - commercial-use
        - modifications
        - distribution
        - sublicense
        - private-use
        conditions:
        - include-copyright
        limitations:
        - no-liability
        body: |2


          The MIT License (MIT)

          Copyright (c) [year] [fullname]

          Permission is hereby granted, free of charge, to any person obtaining a copy
          of this software and associated documentation files (the "Software"), to deal
          in the Software without restriction, including without limitation the rights
          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          copies of the Software, and to permit persons to whom the Software is
          furnished to do so, subject to the following conditions:

          The above copyright notice and this permission notice shall be included in all
          copies or substantial portions of the Software.

          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
          SOFTWARE.
        featured: true
    marketplace-purchase:
      value:
        url: https://api.github.com/orgs/github
        type: Organization
        id: 4
        login: github
        organization_billing_email: billing@github.com
        email: billing@github.com
        marketplace_pending_change:
          effective_date: '2017-11-11T00:00:00Z'
          id: 77
          plan:
            url: https://api.github.com/marketplace_listing/plans/1111
            accounts_url: https://api.github.com/marketplace_listing/plans/1111/accounts
            id: 1111
            number: 2
            name: Startup
            description: A professional-grade CI solution
            monthly_price_in_cents: 699
            yearly_price_in_cents: 7870
            price_model: FLAT_RATE
            has_free_trial: true
            state: published
            bullets:
            - Up to 10 private repositories
            - 3 concurrent builds
        marketplace_purchase:
          billing_cycle: monthly
          next_billing_date: '2017-11-11T00:00:00Z'
          on_free_trial: true
          free_trial_ends_on: '2017-11-11T00:00:00Z'
          updated_at: '2017-11-02T01:12:12Z'
          plan:
            url: https://api.github.com/marketplace_listing/plans/1313
            accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
            id: 1313
            number: 3
            name: Pro
            description: A professional-grade CI solution
            monthly_price_in_cents: 1099
            yearly_price_in_cents: 11870
            price_model: FLAT_RATE
            has_free_trial: true
            state: published
            bullets:
            - Up to 25 private repositories
            - 11 concurrent builds
    marketplace-listing-plan-items:
      value:
      - url: https://api.github.com/marketplace_listing/plans/1313
        accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
        id: 1313
        number: 3
        name: Pro
        description: A professional-grade CI solution
        monthly_price_in_cents: 1099
        yearly_price_in_cents: 11870
        price_model: FLAT_RATE
        has_free_trial: true
        state: published
        bullets:
        - Up to 25 private repositories
        - 11 concurrent builds
    marketplace-purchase-items:
      value:
      - url: https://api.github.com/orgs/github
        type: Organization
        id: 4
        login: github
        organization_billing_email: billing@github.com
        marketplace_pending_change:
          effective_date: '2017-11-11T00:00:00Z'
          id: 77
          plan:
            url: https://api.github.com/marketplace_listing/plans/1111
            accounts_url: https://api.github.com/marketplace_listing/plans/1111/accounts
            id: 1111
            number: 2
            name: Startup
            description: A professional-grade CI solution
            monthly_price_in_cents: 699
            yearly_price_in_cents: 7870
            price_model: FLAT_RATE
            has_free_trial: true
            state: published
            bullets:
            - Up to 10 private repositories
            - 3 concurrent builds
        marketplace_purchase:
          billing_cycle: monthly
          next_billing_date: '2017-11-11T00:00:00Z'
          on_free_trial: true
          free_trial_ends_on: '2017-11-11T00:00:00Z'
          updated_at: '2017-11-02T01:12:12Z'
          plan:
            url: https://api.github.com/marketplace_listing/plans/1313
            accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
            id: 1313
            number: 3
            name: Pro
            description: A professional-grade CI solution
            monthly_price_in_cents: 1099
            yearly_price_in_cents: 11870
            price_model: FLAT_RATE
            has_free_trial: true
            state: published
            bullets:
            - Up to 25 private repositories
            - 11 concurrent builds
    api-overview:
      value:
        verifiable_password_authentication: true
        ssh_key_fingerprints:
          SHA256_RSA: 1234567890
          SHA256_DSA: 1234567890
          SHA256_ECDSA: 1234567890
          SHA256_ED25519: 1234567890
        ssh_keys:
        - ssh-ed25519 ABCDEFGHIJKLMNOPQRSTUVWXYZ
        - ecdsa-sha2-nistp256 ABCDEFGHIJKLMNOPQRSTUVWXYZ
        - ssh-rsa ABCDEFGHIJKLMNOPQRSTUVWXYZ
        hooks:
        - 192.0.2.1
        github_enterprise_importer:
        - 192.0.2.1
        web:
        - 192.0.2.1
        api:
        - 192.0.2.1
        git:
        - 192.0.2.1
        packages:
        - 192.0.2.1
        pages:
        - 192.0.2.1
        importer:
        - 192.0.2.1
        actions:
        - 192.0.2.1
        dependabot:
        - 192.0.2.1
        domains:
          website:
          - "*.example.com"
          codespaces:
          - "*.example.com"
          copilot:
          - "*.example.com"
          packages:
          - "*.example.com"
    public-repo-events-items:
      value:
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22237752260'
        type: WatchEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/rrubenich
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          action: started
        public: true
        created_at: '2022-06-08T23:29:25Z'
    thread-items:
      value:
      - id: '1'
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        subject:
          title: Greetings
          url: https://api.github.com/repos/octokit/octokit.rb/issues/123
          latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
          type: Issue
        reason: subscribed
        unread: true
        updated_at: '2014-11-07T22:01:45Z'
        last_read_at: '2014-11-07T22:01:45Z'
        url: https://api.github.com/notifications/threads/1
        subscription_url: https://api.github.com/notifications/threads/1/subscription
    notifications-mark-read:
      value:
        message: Unread notifications couldn't be marked in a single request. Notifications
          are being marked as read in the background.
    thread:
      value:
        id: '1'
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        subject:
          title: Greetings
          url: https://api.github.com/repos/octokit/octokit.rb/issues/123
          latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
          type: Issue
        reason: subscribed
        unread: true
        updated_at: '2014-11-07T22:01:45Z'
        last_read_at: '2014-11-07T22:01:45Z'
        url: https://api.github.com/notifications/threads/1
        subscription_url: https://api.github.com/notifications/threads/1/subscription
    thread-subscription:
      value:
        subscribed: true
        ignored: false
        created_at: '2012-10-06T21:34:12Z'
        url: https://api.github.com/notifications/threads/1/subscription
        thread_url: https://api.github.com/notifications/threads/1
    octocat:
      value: |2
                       MMM.           .MMM
                       MMMMMMMMMMMMMMMMMMM
                       MMMMMMMMMMMMMMMMMMM      ___________________________________
                      MMMMMMMMMMMMMMMMMMMMM    |                                   |
                     MMMMMMMMMMMMMMMMMMMMMMM   | Avoid administrative distraction. |
                    MMMMMMMMMMMMMMMMMMMMMMMM   |_   _______________________________|
                    MMMM::- -:::::::- -::MMMM    |/
                     MM~:~ 00~:::::~ 00~:~MM
                .. MMMMM::.00:::+:::.00::MMMMM ..
                      .MM::::: ._. :::::MM.
                         MMMM;:::::;MMMM
                  -MM        MMMMMMM
                  ^  M+     MMMMMMMMM
                      MMMMMMM MM MM MM
                           MM MM MM MM
                           MM MM MM MM
                        .~~MM~MM~MM~MM~~.
                     ~~~~MM:~MM~~~MM~:MM~~~~
                    ~~~~~~==~==~~~==~==~~~~~~
                     ~~~~~~==~==~==~==~~~~~~
                         :~==~==~==~==~~
    organization-simple-items:
      value:
      - login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
    organization-full:
      value:
        login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
        name: github
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        twitter_username: github
        is_verified: true
        has_organization_projects: true
        has_repository_projects: true
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        html_url: https://github.com/octocat
        created_at: '2008-01-14T04:33:35Z'
        type: Organization
        total_private_repos: 100
        owned_private_repos: 100
        private_gists: 81
        disk_usage: 10000
        collaborators: 8
        billing_email: mona@github.com
        plan:
          name: Medium
          space: 400
          private_repos: 20
          filled_seats: 4
          seats: 5
        default_repository_permission: read
        members_can_create_repositories: true
        two_factor_requirement_enabled: true
        members_allowed_repository_creation_type: all
        members_can_create_public_repositories: false
        members_can_create_private_repositories: false
        members_can_create_internal_repositories: false
        members_can_create_pages: true
        members_can_create_public_pages: true
        members_can_create_private_pages: true
        members_can_fork_private_repositories: false
        web_commit_signoff_required: false
        updated_at: '2014-03-03T18:58:10Z'
        dependency_graph_enabled_for_new_repositories: false
        dependabot_alerts_enabled_for_new_repositories: false
        dependabot_security_updates_enabled_for_new_repositories: false
        advanced_security_enabled_for_new_repositories: false
        secret_scanning_enabled_for_new_repositories: false
        secret_scanning_push_protection_enabled_for_new_repositories: false
        secret_scanning_push_protection_custom_link: https://github.com/octo-org/octo-repo/blob/main/im-blocked.md
        secret_scanning_push_protection_custom_link_enabled: false
    actions-cache-usage-org-enterprise:
      value:
        total_active_caches_size_in_bytes: 3344284
        total_active_caches_count: 5
    org-actions-cache-usage-by-repo:
      value:
        total_count: 2
        repository_cache_usages:
        - full_name: octo-org/Hello-World
          active_caches_size_in_bytes: 2322142
          active_caches_count: 3
        - full_name: octo-org/server
          active_caches_size_in_bytes: 1022142
          active_caches_count: 2
    oidc-custom-sub:
      value:
        include_claim_keys:
        - repo
        - context
    actions-organization-permissions:
      value:
        enabled_repositories: all
        allowed_actions: selected
        selected_actions_url: https://api.github.com/organizations/42/actions/permissions/selected-actions
    repository-paginated:
      value:
        total_count: 1
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    selected-actions:
      value:
        github_owned_allowed: true
        verified_allowed: false
        patterns_allowed:
        - monalisa/octocat@*
        - docker/*
    actions-default-workflow-permissions:
      summary: Give read-only permission, and allow approving PRs.
      value:
        default_workflow_permissions: read
        can_approve_pull_request_reviews: true
    runner-paginated:
      value:
        total_count: 2
        runners:
        - id: 23
          name: linux_runner
          os: linux
          status: online
          busy: true
          labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 11
            name: Linux
            type: read-only
        - id: 24
          name: mac_runner
          os: macos
          status: offline
          busy: false
          labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
          - id: 21
            name: no-gpu
            type: custom
    runner-application-items:
      value:
      - os: osx
        architecture: x64
        download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz
        filename: actions-runner-osx-x64-2.164.0.tar.gz
      - os: linux
        architecture: x64
        download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz
        filename: actions-runner-linux-x64-2.164.0.tar.gz
      - os: linux
        architecture: arm
        download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz
        filename: actions-runner-linux-arm-2.164.0.tar.gz
      - os: win
        architecture: x64
        download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip
        filename: actions-runner-win-x64-2.164.0.zip
      - os: linux
        architecture: arm64
        download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz
        filename: actions-runner-linux-arm64-2.164.0.tar.gz
    runner-jitconfig:
      value:
        runner:
          id: 23
          name: New runner
          os: unknown
          status: offline
          busy: false
          labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
          - id: 21
            name: no-gpu
            type: custom
        encoded_jit_config: abc123
    authentication-token:
      value:
        token: LLBF3JGZDX3P5PMEXLND6TS6FCWO6
        expires_at: '2020-01-22T12:13:35.123-08:00'
    authentication-token-2:
      value:
        token: AABF3JGZDX3P5PMEXLND6TS6FCWO6
        expires_at: '2020-01-29T12:13:35.123-08:00'
    runner:
      value:
        id: 23
        name: MBP
        os: macos
        status: online
        busy: true
        labels:
        - id: 5
          name: self-hosted
          type: read-only
        - id: 7
          name: X64
          type: read-only
        - id: 20
          name: macOS
          type: read-only
        - id: 21
          name: no-gpu
          type: custom
    runner-labels:
      value:
        total_count: 4
        labels:
        - id: 5
          name: self-hosted
          type: read-only
        - id: 7
          name: X64
          type: read-only
        - id: 20
          name: macOS
          type: read-only
        - id: 21
          name: no-gpu
          type: custom
    runner-labels-readonly:
      value:
        total_count: 3
        labels:
        - id: 5
          name: self-hosted
          type: read-only
        - id: 7
          name: X64
          type: read-only
        - id: 20
          name: macOS
          type: read-only
    organization-actions-secret-paginated:
      value:
        total_count: 3
        secrets:
        - name: GIST_ID
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: private
        - name: DEPLOY_TOKEN
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: all
        - name: GH_TOKEN
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: selected
          selected_repositories_url: https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    actions-public-key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    organization-actions-secret:
      value:
        name: GH_TOKEN
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
        visibility: selected
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    public-repository-paginated:
      value:
        total_count: 1
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    organization-actions-variables-paginated:
      value:
        total_count: 3
        variables:
        - name: USERNAME
          value: octocat
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: private
        - name: ACTIONS_RUNNER_DEBUG
          value: true
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: all
        - name: ADMIN_EMAIL
          value: octocat@github.com
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: selected
          selected_repositories_url: https://api.github.com/orgs/octo-org/actions/variables/ADMIN_EMAIL/repositories
    organization-actions-variable:
      value:
        name: USERNAME
        value: octocat
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
        visibility: selected
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/variables/USERNAME/repositories
    simple-user-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    code-scanning-organization-alert-items:
      value:
      - number: 4
        created_at: '2020-02-13T12:29:18Z'
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4
        html_url: https://github.com/octocat/hello-world/code-scanning/4
        state: open
        rule:
          id: js/zipslip
          severity: error
          tags:
          - security
          - external/cwe/cwe-022
          description: Arbitrary file write during zip extraction
          name: js/zipslip
        tool:
          name: CodeQL
          version: 2.4.0
        most_recent_instance:
          ref: refs/heads/main
          analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          environment: "{}"
          state: open
          commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
          message:
            text: This path depends on a user-provided value.
          location:
            path: spec-main/api-session-spec.ts
            start_line: 917
            end_line: 917
            start_column: 7
            end_column: 18
          classifications:
          - test
        instances_url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
      - number: 3
        created_at: '2020-02-13T12:29:18Z'
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3
        html_url: https://github.com/octocat/hello-world/code-scanning/3
        state: dismissed
        dismissed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_at: '2020-02-14T12:29:18Z'
        dismissed_reason: false positive
        dismissed_comment: This alert is not actually correct, because there's a sanitizer
          included in the library.
        rule:
          id: js/zipslip
          severity: error
          tags:
          - security
          - external/cwe/cwe-022
          description: Arbitrary file write during zip extraction
          name: js/zipslip
        tool:
          name: CodeQL
          version: 2.4.0
        most_recent_instance:
          ref: refs/heads/main
          analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          environment: "{}"
          state: open
          commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
          message:
            text: This path depends on a user-provided value.
          location:
            path: lib/ab12-gen.js
            start_line: 917
            end_line: 917
            start_column: 7
            end_column: 18
          classifications: []
        instances_url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
    codespaces-list:
      value:
        total_count: 3
        codespaces:
        - id: 1
          name: monalisa-octocat-hello-world-g4wpq6h95q
          environment_id: 26a7c758-7299-4a73-b978-5a92a7ae98a0
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          billable_owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          machine:
            name: standardLinux
            display_name: 4 cores, 16 GB RAM, 64 GB storage
            operating_system: linux
            storage_in_bytes: 68719476736
            memory_in_bytes: 17179869184
            cpus: 4
          prebuild: false
          devcontainer_path: ".devcontainer/devcontainer.json"
          created_at: '2021-10-14T00:53:30-06:00'
          updated_at: '2021-10-14T00:53:32-06:00'
          last_used_at: '2021-10-14T00:53:30-06:00'
          state: Available
          url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q
          git_status:
            ahead: 0
            behind: 0
            has_unpushed_changes: false
            has_uncommitted_changes: false
            ref: main
          location: WestUs2
          idle_timeout_minutes: 60
          web_url: https://monalisa-octocat-hello-world-g4wpq6h95q.github.dev
          machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/machines
          start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/start
          stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/stop
          recent_folders: []
        - id: 1
          name: monalisa-octocat-hello-world-3f89ada1j3
          environment_id: 526ce4d7-46da-494f-a4f9-cfd25b818719
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          billable_owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          machine:
            name: standardLinux
            display_name: 4 cores, 16 GB RAM, 64 GB storage
            operating_system: linux
            storage_in_bytes: 68719476736
            memory_in_bytes: 17179869184
            cpus: 4
          prebuild: false
          devcontainer_path: ".devcontainer/foobar/devcontainer.json"
          created_at: '2021-10-14T00:53:30-06:00'
          updated_at: '2021-10-14T00:53:32-06:00'
          last_used_at: '2021-10-14T00:53:30-06:00'
          state: Available
          url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3
          git_status:
            ahead: 0
            behind: 0
            has_unpushed_changes: false
            has_uncommitted_changes: false
            ref: main
          location: WestUs2
          idle_timeout_minutes: 60
          web_url: https://monalisa-octocat-hello-world-3f89ada1j3.github.dev
          machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3/machines
          start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3/start
          stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3/stop
          recent_folders: []
        - id: 1
          name: monalisa-octocat-hello-world-f8adfad99a
          environment_id: 6ac8cd6d-a2d0-4ae3-8cea-e135059264df
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          billable_owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          machine:
            name: standardLinux
            display_name: 4 cores, 16 GB RAM, 64 GB storage
            operating_system: linux
            storage_in_bytes: 68719476736
            memory_in_bytes: 17179869184
            cpus: 4
          prebuild: false
          devcontainer_path: ".devcontainer.json"
          created_at: '2021-10-14T00:53:30-06:00'
          updated_at: '2021-10-14T00:53:32-06:00'
          last_used_at: '2021-10-14T00:53:30-06:00'
          state: Available
          url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-f8adfad99a
          git_status:
            ahead: 0
            behind: 0
            has_unpushed_changes: false
            has_uncommitted_changes: false
            ref: main
          location: WestUs2
          idle_timeout_minutes: 60
          web_url: https://monalisa-octocat-hello-world-f8adfad99a.github.dev
          machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-f8adfad99a/machines
          start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-f8adfad99a/start
          stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-f8adfad99a/stop
          recent_folders: []
    repo-codespaces-secret-paginated:
      value:
        total_count: 2
        secrets:
        - name: GH_TOKEN
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
          visibility: all
        - name: GIST_ID
          created_at: '2020-01-10T10:59:22Z'
          updated_at: '2020-01-11T11:59:22Z'
          visibility: all
    codespaces-public-key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    repo-codespaces-secret:
      value:
        name: GH_TOKEN
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
        visibility: all
    copilot-organization-details:
      value:
        seat_breakdown:
          total: 12
          added_this_cycle: 9
          pending_invitation: 0
          pending_cancellation: 0
          active_this_cycle: 12
          inactive_this_cycle: 11
        seat_management_setting: assign_selected
        public_code_suggestions: block
    copilot-seats-list:
      value:
        total_seats: 2
        seats:
        - created_at: '2021-08-03T18:00:00-06:00'
          updated_at: '2021-09-23T15:00:00-06:00'
          last_activity_at: '2021-10-14T00:53:32-06:00'
          last_activity_editor: vscode/1.77.3/copilot/1.86.82
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assigning_team:
            id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            notification_setting: notifications_enabled
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
        - created_at: '2021-09-23T18:00:00-06:00'
          updated_at: '2021-09-23T15:00:00-06:00'
          pending_cancellation_date: '2021-11-01'
          last_activity_at: '2021-10-13T00:53:32-06:00'
          last_activity_editor: vscode/1.77.3/copilot/1.86.82
          assignee:
            login: octokitten
            id: 1
            node_id: MDQ76VNlcjE=
            avatar_url: https://github.com/images/error/octokitten_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octokitten
            html_url: https://github.com/octokitten
            followers_url: https://api.github.com/users/octokitten/followers
            following_url: https://api.github.com/users/octokitten/following{/other_user}
            gists_url: https://api.github.com/users/octokitten/gists{/gist_id}
            starred_url: https://api.github.com/users/octokitten/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octokitten/subscriptions
            organizations_url: https://api.github.com/users/octokitten/orgs
            repos_url: https://api.github.com/users/octokitten/repos
            events_url: https://api.github.com/users/octokitten/events{/privacy}
            received_events_url: https://api.github.com/users/octokitten/received_events
            type: User
            site_admin: false
    organization-dependabot-secret-paginated:
      value:
        total_count: 3
        secrets:
        - name: MY_ARTIFACTORY_PASSWORD
          created_at: '2021-08-10T14:59:22Z'
          updated_at: '2021-12-10T14:59:22Z'
          visibility: private
        - name: NPM_TOKEN
          created_at: '2021-08-10T14:59:22Z'
          updated_at: '2021-12-10T14:59:22Z'
          visibility: all
        - name: GH_TOKEN
          created_at: '2021-08-10T14:59:22Z'
          updated_at: '2021-12-10T14:59:22Z'
          visibility: selected
          selected_repositories_url: https://api.github.com/orgs/octo-org/dependabot/secrets/SUPER_SECRET/repositories
    dependabot-public-key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    organization-dependabot-secret:
      value:
        name: NPM_TOKEN
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
        visibility: selected
        selected_repositories_url: https://api.github.com/orgs/octo-org/dependabot/secrets/NPM_TOKEN/repositories
    packages-for-org:
      value:
      - id: 197
        name: hello_docker
        package_type: container
        owner:
          login: github
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        version_count: 1
        visibility: private
        url: https://api.github.com/orgs/github/packages/container/hello_docker
        created_at: '2020-05-19T22:19:11Z'
        updated_at: '2020-05-19T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/package/hello_docker
      - id: 198
        name: goodbye_docker
        package_type: container
        owner:
          login: github
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        version_count: 2
        visibility: private
        url: https://api.github.com/orgs/github/packages/container/goodbye_docker
        created_at: '2020-05-20T22:19:11Z'
        updated_at: '2020-05-20T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/package/goodbye_docker
    public-org-events-items:
      value:
      - id: '22237752260'
        type: WatchEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octo-org/octo-repo
          url: https://api.github.com/repos/octo-org/octo-repo
        payload:
          action: started
        public: true
        created_at: '2022-06-08T23:29:25Z'
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octo-org/octo-repo
          url: https://api.github.com/repos/octo-org/oct-repo
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octo-org/oct-repo/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-09T12:47:28Z'
    organization-invitation-items:
      value:
      - id: 1
        login: monalisa
        node_id: MDQ6VXNlcjE=
        email: octocat@github.com
        role: direct_member
        created_at: '2016-11-30T06:46:10-08:00'
        failed_at: ''
        failed_reason: ''
        inviter:
          login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        team_count: 2
        invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams
        invitation_source: member
    org-hook-items:
      value:
      - id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name: web
        events:
        - push
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    org-hook:
      value:
        id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name: web
        events:
        - push
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    org-hook-2:
      value:
        id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        name: web
        events:
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    installation:
      value:
        id: 1
        account:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/orgs/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        repository_selection: all
        access_tokens_url: https://api.github.com/app/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
        - push
        - pull_request
        created_at: '2018-02-09T20:51:14Z'
        updated_at: '2018-02-09T20:51:14Z'
        single_file_name: config.yml
        has_multiple_single_files: true
        single_file_paths:
        - config.yml
        - ".github/issue_TEMPLATE.md"
        app_slug: github-actions
    installation-paginated:
      value:
        total_count: 1
        installations:
        - id: 25381
          account:
            login: octo-org
            id: 6811672
            node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
            avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octo-org
            html_url: https://github.com/octo-org
            followers_url: https://api.github.com/users/octo-org/followers
            following_url: https://api.github.com/users/octo-org/following{/other_user}
            gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
            starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octo-org/subscriptions
            organizations_url: https://api.github.com/users/octo-org/orgs
            repos_url: https://api.github.com/users/octo-org/repos
            events_url: https://api.github.com/users/octo-org/events{/privacy}
            received_events_url: https://api.github.com/users/octo-org/received_events
            type: Organization
            site_admin: false
          repository_selection: selected
          access_tokens_url: https://api.github.com/app/installations/25381/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/octo-org/settings/installations/25381
          app_id: 2218
          target_id: 6811672
          target_type: Organization
          permissions:
            deployments: write
            metadata: read
            pull_requests: read
            statuses: read
          events:
          - deployment
          - deployment_status
          created_at: '2017-05-16T08:47:09.000-07:00'
          updated_at: '2017-06-06T11:23:23.000-07:00'
          single_file_name: config.yml
          has_multiple_single_files: true
          single_file_paths:
          - config.yml
          - ".github/issue_TEMPLATE.md"
          app_slug: github-actions
    interaction-limit-response:
      value:
        limit: collaborators_only
        origin: organization
        expires_at: '2018-08-17T04:18:39Z'
    organization-invitation:
      value:
        id: 1
        login: monalisa
        node_id: MDQ6VXNlcjE=
        email: octocat@github.com
        role: direct_member
        created_at: '2016-11-30T06:46:10-08:00'
        inviter:
          login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        team_count: 2
        invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams
        invitation_source: member
    team-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
    codespace:
      value:
        id: 1
        name: monalisa-octocat-hello-world-g4wpq6h95q
        environment_id: 26a7c758-7299-4a73-b978-5a92a7ae98a0
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        billable_owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        machine:
          name: standardLinux
          display_name: 4 cores, 16 GB RAM, 64 GB storage
          operating_system: linux
          storage_in_bytes: 68719476736
          memory_in_bytes: 17179869184
          cpus: 4
        prebuild: false
        devcontainer_path: ".devcontainer/devcontainer.json"
        created_at: '2021-10-14T00:53:30-06:00'
        updated_at: '2021-10-14T00:53:32-06:00'
        last_used_at: '2021-10-14T00:53:30-06:00'
        state: Available
        url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q
        git_status:
          ahead: 0
          behind: 0
          has_unpushed_changes: false
          has_uncommitted_changes: false
          ref: main
        location: WestUs2
        idle_timeout_minutes: 60
        retention_period_minutes: 43200
        web_url: https://monalisa-octocat-hello-world-g4wpq6h95q.github.dev
        machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/machines
        start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/start
        stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/stop
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        recent_folders: []
    copilot-seat-detail-active:
      value:
        created_at: '2021-08-03T18:00:00-06:00'
        updated_at: '2021-09-23T15:00:00-06:00'
        last_activity_at: '2021-10-14T00:53:32-06:00'
        last_activity_editor: vscode/1.77.3/copilot/1.86.82
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assigning_team:
          id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
    org-membership-response-if-user-has-an-active-admin-membership-with-organization:
      summary: Response if user has an active admin membership with organization
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    migration-with-short-org-items:
      value:
      - id: 79
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state: pending
        lock_repositories: true
        exclude_attachments: false
        exclude_releases: false
        exclude_owner_projects: false
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        url: https://api.github.com/orgs/octo-org/migrations/79
        created_at: '2015-07-06T15:33:38-07:00'
        updated_at: '2015-07-06T15:33:38-07:00'
        node_id: MDQ6VXNlcjE=
    migration-with-short-org-2:
      value:
        id: 79
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state: pending
        lock_repositories: true
        exclude_attachments: false
        exclude_releases: false
        exclude_owner_projects: false
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        url: https://api.github.com/orgs/octo-org/migrations/79
        created_at: '2015-07-06T15:33:38-07:00'
        updated_at: '2015-07-06T15:33:38-07:00'
    migration-with-short-org:
      value:
        id: 79
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state: exported
        lock_repositories: true
        exclude_attachments: false
        exclude_releases: false
        exclude_owner_projects: false
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        url: https://api.github.com/orgs/octo-org/migrations/79
        created_at: '2015-07-06T15:33:38-07:00'
        updated_at: '2015-07-06T15:33:38-07:00'
    minimal-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        has_discussions: false
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        security_and_analysis:
          advanced_security:
            status: enabled
          secret_scanning:
            status: enabled
          secret_scanning_push_protection:
            status: disabled
    package-org:
      value:
        id: 197
        name: hello_docker
        package_type: container
        owner:
          login: github
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        version_count: 1
        visibility: private
        url: https://api.github.com/orgs/github/packages/container/hello_docker
        created_at: '2020-05-19T22:19:11Z'
        updated_at: '2020-05-19T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/package/hello_docker
    package-versions-for-org:
      value:
      - id: 245301
        name: 1.0.4
        url: https://api.github.com/orgs/octo-org/packages/npm/hello-world-npm/versions/245301
        package_html_url: https://github.com/octo-org/hello-world-npm/packages/43752
        created_at: '2019-11-05T22:49:04Z'
        updated_at: '2019-11-05T22:49:04Z'
        html_url: https://github.com/octo-org/hello-world-npm/packages/43752?version=1.0.4
        metadata:
          package_type: npm
      - id: 209672
        name: 1.0.3
        url: https://api.github.com/orgs/octo-org/packages/npm/hello-world-npm/versions/209672
        package_html_url: https://github.com/octo-org/hello-world-npm/packages/43752
        created_at: '2019-10-29T15:42:11Z'
        updated_at: '2019-10-29T15:42:12Z'
        html_url: https://github.com/octo-org/hello-world-npm/packages/43752?version=1.0.3
        metadata:
          package_type: npm
    package-version-org:
      value:
        id: 836
        name: sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344
        url: https://api.github.com/orgs/github/packages/container/hello_docker/versions/836
        package_html_url: https://github.com/orgs/github/packages/container/package/hello_docker
        created_at: '2020-05-19T22:19:11Z'
        updated_at: '2020-05-19T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/hello_docker/836
        metadata:
          package_type: container
          container:
            tags:
            - latest
    org-pat-grant-request-paginated:
      value:
      - id: 25381
        reason: I need to access the GitHub API
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        repository_selection: all
        repositories_url: https://api.github.com/organizations/652551/personal-access-token-requests/25381/repositories
        permissions:
          organization:
            members: read
          repository:
            metadata: read
        created_at: '2023-05-16T08:47:09.000-07:00'
        token_expired: false
        token_expires_at: '2023-11-16T08:47:09.000-07:00'
    org-pat-grant-paginated:
      value:
      - id: 25381
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        repository_selection: all
        repositories_url: https://api.github.com/organizations/652551/personal-access-tokens/25381/repositories
        permissions:
          organization:
            members: read
          repository:
            metadata: read
        access_granted_at: '2023-05-16T08:47:09.000-07:00'
        token_expired: false
        token_expires_at: '2023-11-16T08:47:09.000-07:00'
    project-items:
      value:
      - owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: true
    project-2:
      value:
        owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
    repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks: 9
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues: 0
        open_issues_count: 0
        is_template: true
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
    org-ruleset-items:
      value:
      - id: 21
        name: super cool ruleset
        source_type: Organization
        source: my-org
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/orgs/my-org/rulesets/21
          html:
            href: https://github.com/organizations/my-org/settings/rules/21
        created_at: '2023-07-15T08:43:03Z'
        updated_at: '2023-08-23T16:29:47Z'
      - id: 432
        name: Another ruleset
        source_type: Organization
        source: my-org
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQQ
        _links:
          self:
            href: https://api.github.com/orgs/my-org/rulesets/432
          html:
            href: https://github.com/organizations/my-org/settings/rules/432
        created_at: '2023-08-15T08:43:03Z'
        updated_at: '2023-09-23T16:29:47Z'
    org-ruleset:
      value:
        id: 21
        name: super cool ruleset
        target: branch
        source_type: Organization
        source: my-org
        enforcement: active
        bypass_actors:
        - actor_id: 234
          actor_type: Team
          bypass_mode: always
        conditions:
          ref_name:
            include:
            - refs/heads/main
            - refs/heads/master
            exclude:
            - refs/heads/dev*
          repository_name:
            include:
            - important_repository
            - another_important_repository
            exclude:
            - unimportant_repository
            protected: true
        rules:
        - type: commit_author_email_pattern
          parameters:
            operator: contains
            pattern: github
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/orgs/my-org/rulesets/21
          html:
            href: https://github.com/organizations/my-org/settings/rules/21
        created_at: '2023-08-15T08:43:03Z'
        updated_at: '2023-09-23T16:29:47Z'
    rule-suite-items:
      value:
      - id: 21
        actor_id: 12
        username: octocat
        before_sha: 893f768e172fb1bc9c5d6f3dd48557e45f14e01d
        after_sha: dedd88641a362b6b4ea872da4847d6131a164d01
        ref: refs/heads/i-see-everything
        repository_id: 404
        repository_name: octo-repo
        pushed_at: '2023-07-06T08:43:03Z'
        result: bypass
      - id: 25
        actor_id: 11
        username: not-octocat
        before_sha: 48994e4e01ccc943624c6231f172702b82b233cc
        after_sha: ecfd5a1025fa271a33ca5608d089476a2df3c9a1
        ref: refs/heads/i-am-everything
        repository_id: 404
        repository_name: octo-repo
        pushed_at: '2023-07-07T08:43:03Z'
        result: pass
        evaluation_result: fail
    rule-suite:
      value:
        id: 21
        actor_id: 12
        username: octocat
        before_sha: 893f768e172fb1bc9c5d6f3dd48557e45f14e01d
        after_sha: dedd88641a362b6b4ea872da4847d6131a164d01
        ref: refs/heads/i-see-everything
        repository_id: 404
        repository_name: octo-repo
        pushed_at: '2023-07-06T08:43:03Z'
        result: bypass
        evaluation_result: fail
        rule_evaluations:
        - rule_source:
            type: ruleset
            id: 2
            name: Author email must be a GitHub email address
          enforcement: active
          result: pass
          rule_type: commit_author_email_pattern
        - rule_source:
            type: protected_branch
          enforcement: active
          result: fail
          rule_type: pull_request
          details: Changes must be made through a pull request.
        - rule_source:
            type: ruleset
            id: 3
            name: Evaluate commit message pattern
          enforcement: evaluate
          result: fail
          rule_type: commit_message_pattern
    list-repository-advisories:
      value:
      - ghsa_id: GHSA-abcd-1234-efgh
        cve_id: CVE-2050-00000
        url: https://api.github.com/repos/repo/a-package/security-advisories/GHSA-abcd-1234-efgh
        html_url: https://github.com/repo/a-package/security/advisories/GHSA-abcd-1234-efgh
        summary: A short summary of the advisory.
        description: A detailed description of what the advisory entails.
        severity: critical
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        publisher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        identifiers:
        - type: GHSA
          value: GHSA-abcd-1234-efgh
        - type: CVE
          value: CVE-2050-00000
        state: published
        created_at: '2020-01-01T00:00:00Z'
        updated_at: '2020-01-02T00:00:00Z'
        published_at: '2020-01-03T00:00:00Z'
        vulnerabilities:
        - package:
            ecosystem: pip
            name: a-package
          vulnerable_version_range: ">= 1.0.0, < 1.0.1"
          patched_versions: 1.0.1
          vulnerable_functions:
          - function1
        - package:
            ecosystem: pip
            name: another-package
          vulnerable_version_range: ">= 1.0.0, < 1.0.2"
          patched_versions: 1.0.2
          vulnerable_functions:
          - function2
        cvss:
          vector_string: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
          score: 9.8
        cwes:
        - cwe_id: CWE-123
          name: A CWE
        cwe_ids:
        - CWE-123
        credits:
        - login: octocat
          type: analyst
        credits_detailed:
        - user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          type: analyst
          state: accepted
        collaborating_users:
        - login: octokitten
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octokitten_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octokitten
          html_url: https://github.com/octokitten
          followers_url: https://api.github.com/users/octokitten/followers
          following_url: https://api.github.com/users/octokitten/following{/other_user}
          gists_url: https://api.github.com/users/octokitten/gists{/gist_id}
          starred_url: https://api.github.com/users/octokitten/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octokitten/subscriptions
          organizations_url: https://api.github.com/users/octokitten/orgs
          repos_url: https://api.github.com/users/octokitten/repos
          events_url: https://api.github.com/users/octokitten/events{/privacy}
          received_events_url: https://api.github.com/users/octokitten/received_events
          type: User
          site_admin: false
        collaborating_teams:
        - name: Justice League
          id: 1
          node_id: MDQ6VGVhbTE=
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          permission: admin
      - ghsa_id: GHSA-1234-5678-9012
        cve_id: CVE-2051-0000
        url: https://api.github.com/repos/repo/a-package/security-advisories/GHSA-1234-5678-9012
        html_url: https://github.com/repo/a-package/security/advisories/GHSA-1234-5678-9012
        summary: A short summary of the advisory.
        description: A detailed description of what the advisory entails.
        severity: low
        author:
          login: monauser
          id: 2
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/monauser
          html_url: https://github.com/monauser
          followers_url: https://api.github.com/users/monauser/followers
          following_url: https://api.github.com/users/monauser/following{/other_user}
          gists_url: https://api.github.com/users/monauser/gists{/gist_id}
          starred_url: https://api.github.com/users/monauser/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monauser/subscriptions
          organizations_url: https://api.github.com/users/monauser/orgs
          repos_url: https://api.github.com/users/monauser/repos
          events_url: https://api.github.com/users/monauser/events{/privacy}
          received_events_url: https://api.github.com/users/monauser/received_events
          type: User
          site_admin: false
        publisher:
          login: monalisa
          id: 3
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: false
        identifiers:
        - type: GHSA
          value: GHSA-1234-5678-9012
        - type: CVE
          value: CVE-2051-00000
        state: published
        created_at: '2020-01-03T00:00:00Z'
        updated_at: '2020-01-04T00:00:00Z'
        published_at: '2020-01-04T00:00:00Z'
        submission:
        - accepted: true
        vulnerabilities:
        - package:
            ecosystem: pip
            name: a-package
          vulnerable_version_range: ">= 1.0.0, < 1.0.1"
          patched_versions: 1.0.1
          vulnerable_functions:
          - function1
        - package:
            ecosystem: pip
            name: another-package
          vulnerable_version_range: ">= 1.0.0, < 1.0.2"
          patched_versions: 1.0.2
          vulnerable_functions:
          - function2
        cvss:
          vector_string: AV:P/AC:H/PR:H/UI:R/S:U/C:N/I:L/A:N
          score: 1.6
        cwes:
        - cwe_id: CWE-456
          name: A CWE 2.0
        cwe_ids:
        - CWE-456
        credits:
        - login: monauser
          type: reporter
        credits_detailed:
        - user:
            login: monauser
            id: 2
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/monauser
            html_url: https://github.com/monauser
            followers_url: https://api.github.com/users/monauser/followers
            following_url: https://api.github.com/users/monauser/following{/other_user}
            gists_url: https://api.github.com/users/monauser/gists{/gist_id}
            starred_url: https://api.github.com/users/monauser/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/monauser/subscriptions
            organizations_url: https://api.github.com/users/monauser/orgs
            repos_url: https://api.github.com/users/monauser/repos
            events_url: https://api.github.com/users/monauser/events{/privacy}
            received_events_url: https://api.github.com/users/monauser/received_events
            type: User
            site_admin: false
          type: reporter
          state: accepted
        collaborating_users:
        - login: octokitten
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octokitten_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octokitten
          html_url: https://github.com/octokitten
          followers_url: https://api.github.com/users/octokitten/followers
          following_url: https://api.github.com/users/octokitten/following{/other_user}
          gists_url: https://api.github.com/users/octokitten/gists{/gist_id}
          starred_url: https://api.github.com/users/octokitten/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octokitten/subscriptions
          organizations_url: https://api.github.com/users/octokitten/orgs
          repos_url: https://api.github.com/users/octokitten/repos
          events_url: https://api.github.com/users/octokitten/events{/privacy}
          received_events_url: https://api.github.com/users/octokitten/received_events
          type: User
          site_admin: false
        collaborating_teams:
        - name: Justice League
          id: 1
          node_id: MDQ6VGVhbTE=
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          permission: admin
    actions-billing-usage:
      value:
        total_minutes_used: 305
        total_paid_minutes_used: 0
        included_minutes: 3000
        minutes_used_breakdown:
          UBUNTU: 205
          MACOS: 10
          WINDOWS: 90
    packages-billing-usage:
      value:
        total_gigabytes_bandwidth_used: 50
        total_paid_gigabytes_bandwidth_used: 40
        included_gigabytes_bandwidth: 10
    combined-billing-usage:
      value:
        days_left_in_billing_cycle: 20
        estimated_paid_storage_for_month: 15
        estimated_storage_for_month: 40
    team-full:
      value:
        id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        members_count: 3
        repos_count: 10
        created_at: '2017-07-14T16:53:42Z'
        updated_at: '2017-08-17T12:37:15Z'
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          name: github
          company: GitHub
          blog: https://github.com/blog
          location: San Francisco
          email: octocat@github.com
          is_verified: true
          has_organization_projects: true
          has_repository_projects: true
          public_repos: 2
          public_gists: 1
          followers: 20
          following: 0
          html_url: https://github.com/octocat
          created_at: '2008-01-14T04:33:35Z'
          updated_at: '2017-08-17T12:37:15Z'
          type: Organization
    team-discussion-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: '2018-01-25T18:56:31Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: '2018-01-25T18:56:31Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-2:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: "<p>Hi! This is an area for us to collaborate as a team</p>"
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 1
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: '2018-01-26T18:22:20Z'
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Welcome to our first team post
        updated_at: '2018-01-26T18:22:20Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like apples?
        body_html: "<p>Do you like apples?</p>"
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: '2018-01-15T23:53:58Z'
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-15T23:53:58Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like apples?
        body_html: "<p>Do you like apples?</p>"
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: '2018-01-15T23:53:58Z'
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-15T23:53:58Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment-2:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like pineapples?
        body_html: "<p>Do you like pineapples?</p>"
        body_version: e6907b24d9c93cc0c5024a7af5888116
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: '2018-01-26T18:22:20Z'
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-26T18:22:20Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          "+1": 3
          "-1": 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    reaction-items:
      value:
      - id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content: heart
        created_at: '2016-05-20T20:09:31Z'
    reaction:
      value:
        id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content: heart
        created_at: '2016-05-20T20:09:31Z'
    team-membership-response-if-user-is-a-team-maintainer:
      summary: Response if user is a team maintainer
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: maintainer
        state: active
    team-membership-response-if-users-membership-with-team-is-now-pending:
      summary: Response if user's membership with team is now pending
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: member
        state: pending
    team-project-items:
      value:
      - owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: false
        permissions:
          read: true
          write: true
          admin: false
    team-project:
      value:
        owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: false
        permissions:
          read: true
          write: true
          admin: false
    team-repository-alternative-response-with-repository-permissions:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          maintain: false
          push: false
          triage: false
          pull: true
        role_name: read
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            pull: true
            triage: false
            push: false
            maintain: false
            admin: false
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
    team-items-response-if-child-teams-exist:
      value:
      - id: 2
        node_id: MDQ6VGVhbTI=
        url: https://api.github.com/teams/2
        name: Original Roster
        slug: original-roster
        description: Started it all.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/2/members{/member}
        repositories_url: https://api.github.com/teams/2/repos
        parent:
          id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        html_url: https://github.com/orgs/rails/teams/core
    project-card:
      value:
        url: https://api.github.com/projects/columns/cards/1478
        id: 1478
        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
        note: Add payload for delete Project column
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2016-09-05T14:21:06Z'
        updated_at: '2016-09-05T14:20:22Z'
        archived: false
        column_url: https://api.github.com/projects/columns/367
        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url: https://api.github.com/projects/120
    project-column:
      value:
        url: https://api.github.com/projects/columns/367
        project_url: https://api.github.com/projects/120
        cards_url: https://api.github.com/projects/columns/367/cards
        id: 367
        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name: To Do
        created_at: '2016-09-05T14:18:44Z'
        updated_at: '2016-09-05T14:22:28Z'
    project-card-items:
      value:
      - url: https://api.github.com/projects/columns/cards/1478
        id: 1478
        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
        note: Add payload for delete Project column
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2016-09-05T14:21:06Z'
        updated_at: '2016-09-05T14:20:22Z'
        archived: false
        column_url: https://api.github.com/projects/columns/367
        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url: https://api.github.com/projects/120
    project-3:
      value:
        owner_url: https://api.github.com/repos/api-playground/projects-test
        url: https://api.github.com/projects/1002604
        html_url: https://github.com/api-playground/projects-test/projects/1
        columns_url: https://api.github.com/projects/1002604/columns
        id: 1002604
        node_id: MDc6UHJvamVjdDEwMDI2MDQ=
        name: Projects Documentation
        body: Developer documentation project for the developer site.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    project-collaborator-permission:
      value:
        permission: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    project-column-items:
      value:
      - url: https://api.github.com/projects/columns/367
        project_url: https://api.github.com/projects/120
        cards_url: https://api.github.com/projects/columns/367/cards
        id: 367
        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name: To Do
        created_at: '2016-09-05T14:18:44Z'
        updated_at: '2016-09-05T14:22:28Z'
    rate-limit-overview:
      value:
        resources:
          core:
            limit: 5000
            used: 1
            remaining: 4999
            reset: 1691591363
          search:
            limit: 30
            used: 12
            remaining: 18
            reset: 1691591091
          graphql:
            limit: 5000
            used: 7
            remaining: 4993
            reset: 1691593228
          integration_manifest:
            limit: 5000
            used: 1
            remaining: 4999
            reset: 1691594631
          source_import:
            limit: 100
            used: 1
            remaining: 99
            reset: 1691591091
          code_scanning_upload:
            limit: 500
            used: 1
            remaining: 499
            reset: 1691594631
          actions_runner_registration:
            limit: 10000
            used: 0
            remaining: 10000
            reset: 1691594631
          scim:
            limit: 15000
            used: 0
            remaining: 15000
            reset: 1691594631
          dependency_snapshots:
            limit: 100
            used: 0
            remaining: 100
            reset: 1691591091
          code_search:
            limit: 10
            used: 0
            remaining: 10
            reset: 1691591091
        rate:
          limit: 5000
          used: 1
          remaining: 4999
          reset: 1372700873
    full-repository-default-response:
      summary: Default response
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        has_discussions: false
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
          security_and_analysis:
            advanced_security:
              status: enabled
            secret_scanning:
              status: enabled
            secret_scanning_push_protection:
              status: disabled
    full-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        allow_forking: true
        web_commit_signoff_required: false
        subscribers_count: 42
        network_count: 0
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    artifact-paginated:
      value:
        total_count: 2
        artifacts:
        - id: 11
          node_id: MDg6QXJ0aWZhY3QxMQ==
          name: Rails
          size_in_bytes: 556
          url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
          archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
          expired: false
          created_at: '2020-01-10T14:59:22Z'
          expires_at: '2020-03-21T14:59:22Z'
          updated_at: '2020-02-21T14:59:22Z'
          workflow_run:
            id: 2332938
            repository_id: 1296269
            head_repository_id: 1296269
            head_branch: main
            head_sha: 328faa0536e6fef19753d9d91dc96a9931694ce3
        - id: 13
          node_id: MDg6QXJ0aWZhY3QxMw==
          name: Test output
          size_in_bytes: 453
          url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13
          archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip
          expired: false
          created_at: '2020-01-10T14:59:22Z'
          expires_at: '2020-03-21T14:59:22Z'
          updated_at: '2020-02-21T14:59:22Z'
          workflow_run:
            id: 2332942
            repository_id: 1296269
            head_repository_id: 1296269
            head_branch: main
            head_sha: 178f4f6090b3fccad4a65b3e83d076a622d59652
    artifact:
      value:
        id: 11
        node_id: MDg6QXJ0aWZhY3QxMQ==
        name: Rails
        size_in_bytes: 556
        url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
        archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
        expired: false
        created_at: '2020-01-10T14:59:22Z'
        expires_at: '2020-01-21T14:59:22Z'
        updated_at: '2020-01-21T14:59:22Z'
        workflow_run:
          id: 2332938
          repository_id: 1296269
          head_repository_id: 1296269
          head_branch: main
          head_sha: 328faa0536e6fef19753d9d91dc96a9931694ce3
    actions-cache-usage:
      value:
        full_name: octo-org/Hello-World
        active_caches_size_in_bytes: 2322142
        active_caches_count: 3
    actions-cache-list:
      value:
        total_count: 1
        actions_caches:
        - id: 505
          ref: refs/heads/main
          key: Linux-node-958aff96db2d75d67787d1e634ae70b659de937b
          version: 73885106f58cc52a7df9ec4d4a5622a5614813162cb516c759a30af6bf56e6f0
          last_accessed_at: '2019-01-24T22:45:36.000Z'
          created_at: '2019-01-24T22:45:36.000Z'
          size_in_bytes: 1024
    job:
      value:
        id: 399444496
        run_id: 29679449
        run_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
        node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
        head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
        url: https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
        html_url: https://github.com/octo-org/octo-repo/runs/29679449/jobs/399444496
        status: completed
        conclusion: success
        started_at: '2020-01-20T17:42:40Z'
        completed_at: '2020-01-20T17:44:39Z'
        name: build
        steps:
        - name: Set up job
          status: completed
          conclusion: success
          number: 1
          started_at: '2020-01-20T09:42:40.000-08:00'
          completed_at: '2020-01-20T09:42:41.000-08:00'
        - name: Run actions/checkout@v2
          status: completed
          conclusion: success
          number: 2
          started_at: '2020-01-20T09:42:41.000-08:00'
          completed_at: '2020-01-20T09:42:45.000-08:00'
        - name: Set up Ruby
          status: completed
          conclusion: success
          number: 3
          started_at: '2020-01-20T09:42:45.000-08:00'
          completed_at: '2020-01-20T09:42:45.000-08:00'
        - name: Run actions/cache@v3
          status: completed
          conclusion: success
          number: 4
          started_at: '2020-01-20T09:42:45.000-08:00'
          completed_at: '2020-01-20T09:42:48.000-08:00'
        - name: Install Bundler
          status: completed
          conclusion: success
          number: 5
          started_at: '2020-01-20T09:42:48.000-08:00'
          completed_at: '2020-01-20T09:42:52.000-08:00'
        - name: Install Gems
          status: completed
          conclusion: success
          number: 6
          started_at: '2020-01-20T09:42:52.000-08:00'
          completed_at: '2020-01-20T09:42:53.000-08:00'
        - name: Run Tests
          status: completed
          conclusion: success
          number: 7
          started_at: '2020-01-20T09:42:53.000-08:00'
          completed_at: '2020-01-20T09:42:59.000-08:00'
        - name: Deploy to Heroku
          status: completed
          conclusion: success
          number: 8
          started_at: '2020-01-20T09:42:59.000-08:00'
          completed_at: '2020-01-20T09:44:39.000-08:00'
        - name: Post actions/cache@v3
          status: completed
          conclusion: success
          number: 16
          started_at: '2020-01-20T09:44:39.000-08:00'
          completed_at: '2020-01-20T09:44:39.000-08:00'
        - name: Complete job
          status: completed
          conclusion: success
          number: 17
          started_at: '2020-01-20T09:44:39.000-08:00'
          completed_at: '2020-01-20T09:44:39.000-08:00'
        check_run_url: https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
        labels:
        - self-hosted
        - foo
        - bar
        runner_id: 1
        runner_name: my runner
        runner_group_id: 2
        runner_group_name: my runner group
        workflow_name: CI
        head_branch: main
    oidc-custom-sub-repo:
      value:
        use_default: false
        include_claim_keys:
        - repo
        - context
    actions-secret-paginated:
      value:
        total_count: 2
        secrets:
        - name: GH_TOKEN
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
        - name: GIST_ID
          created_at: '2020-01-10T10:59:22Z'
          updated_at: '2020-01-11T11:59:22Z'
    actions-variables-paginated:
      value:
        total_count: 2
        variables:
        - name: USERNAME
          value: octocat
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
        - name: EMAIL
          value: octocat@github.com
          created_at: '2020-01-10T10:59:22Z'
          updated_at: '2020-01-11T11:59:22Z'
    actions-repository-permissions:
      value:
        enabled: true
        allowed_actions: selected
        selected_actions_url: https://api.github.com/repositories/42/actions/permissions/selected-actions
    actions-workflow-access-to-repository:
      value:
        access_level: organization
    workflow-run-paginated:
      value:
        total_count: 1
        workflow_runs:
        - id: 30433642
          name: Build
          node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
          check_suite_id: 42
          check_suite_node_id: MDEwOkNoZWNrU3VpdGU0Mg==
          head_branch: master
          head_sha: acb5820ced9479c074f688cc328bf03f341a511d
          run_number: 562
          event: push
          display_title: Update README.md
          status: queued
          workflow_id: 159038
          url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
          html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
          pull_requests: []
          created_at: '2020-01-22T19:33:08Z'
          updated_at: '2020-01-22T19:33:08Z'
          actor:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          run_attempt: 1
          run_started_at: '2020-01-22T19:33:08Z'
          triggering_actor:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
          logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
          check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
          artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
          cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
          rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
          workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
          head_commit:
            id: acb5820ced9479c074f688cc328bf03f341a511d
            tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
            message: Create linter.yaml
            timestamp: '2020-01-22T19:33:05Z'
            author:
              name: Octo Cat
              email: octocat@github.com
            committer:
              name: GitHub
              email: noreply@github.com
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          head_repository:
            id: 217723378
            node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
            name: octo-repo
            full_name: octo-org/octo-repo
            private: true
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            html_url: https://github.com/octo-org/octo-repo
            fork: false
            url: https://api.github.com/repos/octo-org/octo-repo
            forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
            keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
            collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
            hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
            issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
            events_url: https://api.github.com/repos/octo-org/octo-repo/events
            assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
            branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
            tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
            blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
            trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
            statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
            languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
            stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
            contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
            subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
            subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
            commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
            git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
            comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
            issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
            contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
            compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
            merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
            archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
            issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
            pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
            milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
            notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
            releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
            deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    workflow-run:
      value:
        id: 30433642
        name: Build
        node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
        check_suite_id: 42
        check_suite_node_id: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch: main
        head_sha: acb5820ced9479c074f688cc328bf03f341a511d
        path: ".github/workflows/build.yml@main"
        run_number: 562
        event: push
        display_title: Update README.md
        status: queued
        workflow_id: 159038
        url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
        html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
        pull_requests: []
        created_at: '2020-01-22T19:33:08Z'
        updated_at: '2020-01-22T19:33:08Z'
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        run_attempt: 1
        referenced_workflows:
        - path: octocat/Hello-World/.github/workflows/deploy.yml@main
          sha: 86e8bc9ecf7d38b1ed2d2cfb8eb87ba9b35b01db
          ref: refs/heads/main
        - path: octo-org/octo-repo/.github/workflows/report.yml@v2
          sha: 79e9790903e1c3373b1a3e3a941d57405478a232
          ref: refs/tags/v2
        - path: octo-org/octo-repo/.github/workflows/secure.yml@1595d4b6de6a9e9751fb270a41019ce507d4099e
          sha: 1595d4b6de6a9e9751fb270a41019ce507d4099e
        run_started_at: '2020-01-22T19:33:08Z'
        triggering_actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
        logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
        check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
        artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
        cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
        rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
        previous_attempt_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/attempts/1
        workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
        head_commit:
          id: acb5820ced9479c074f688cc328bf03f341a511d
          tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
          message: Create linter.yaml
          timestamp: '2020-01-22T19:33:05Z'
          author:
            name: Octo Cat
            email: octocat@github.com
          committer:
            name: GitHub
            email: noreply@github.com
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        head_repository:
          id: 217723378
          node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
          name: octo-repo
          full_name: octo-org/octo-repo
          private: true
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/octo-org/octo-repo
          fork: false
          url: https://api.github.com/repos/octo-org/octo-repo
          forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
          keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
          collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
          hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
          issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
          events_url: https://api.github.com/repos/octo-org/octo-repo/events
          assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
          branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
          tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
          blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
          trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
          statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
          languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
          stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
          contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
          subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
          subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
          commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
          git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
          comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
          issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
          contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
          compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
          merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
          archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
          issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
          pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
          milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
          notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
          releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
          deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    environment-approvals-items:
      value:
      - state: approved
        comment: Ship it!
        environments:
        - id: 161088068
          node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
          name: staging
          url: https://api.github.com/repos/github/hello-world/environments/staging
          html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
          created_at: '2020-11-23T22:00:40Z'
          updated_at: '2020-11-23T22:00:40Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    job-paginated:
      value:
        total_count: 1
        jobs:
        - id: 399444496
          run_id: 29679449
          run_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
          node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
          head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
          url: https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
          html_url: https://github.com/octo-org/octo-repo/runs/29679449/jobs/399444496
          status: completed
          conclusion: success
          started_at: '2020-01-20T17:42:40Z'
          completed_at: '2020-01-20T17:44:39Z'
          name: build
          steps:
          - name: Set up job
            status: completed
            conclusion: success
            number: 1
            started_at: '2020-01-20T09:42:40.000-08:00'
            completed_at: '2020-01-20T09:42:41.000-08:00'
          - name: Run actions/checkout@v2
            status: completed
            conclusion: success
            number: 2
            started_at: '2020-01-20T09:42:41.000-08:00'
            completed_at: '2020-01-20T09:42:45.000-08:00'
          - name: Set up Ruby
            status: completed
            conclusion: success
            number: 3
            started_at: '2020-01-20T09:42:45.000-08:00'
            completed_at: '2020-01-20T09:42:45.000-08:00'
          - name: Run actions/cache@v3
            status: completed
            conclusion: success
            number: 4
            started_at: '2020-01-20T09:42:45.000-08:00'
            completed_at: '2020-01-20T09:42:48.000-08:00'
          - name: Install Bundler
            status: completed
            conclusion: success
            number: 5
            started_at: '2020-01-20T09:42:48.000-08:00'
            completed_at: '2020-01-20T09:42:52.000-08:00'
          - name: Install Gems
            status: completed
            conclusion: success
            number: 6
            started_at: '2020-01-20T09:42:52.000-08:00'
            completed_at: '2020-01-20T09:42:53.000-08:00'
          - name: Run Tests
            status: completed
            conclusion: success
            number: 7
            started_at: '2020-01-20T09:42:53.000-08:00'
            completed_at: '2020-01-20T09:42:59.000-08:00'
          - name: Deploy to Heroku
            status: completed
            conclusion: success
            number: 8
            started_at: '2020-01-20T09:42:59.000-08:00'
            completed_at: '2020-01-20T09:44:39.000-08:00'
          - name: Post actions/cache@v3
            status: completed
            conclusion: success
            number: 16
            started_at: '2020-01-20T09:44:39.000-08:00'
            completed_at: '2020-01-20T09:44:39.000-08:00'
          - name: Complete job
            status: completed
            conclusion: success
            number: 17
            started_at: '2020-01-20T09:44:39.000-08:00'
            completed_at: '2020-01-20T09:44:39.000-08:00'
          check_run_url: https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
          labels:
          - self-hosted
          - foo
          - bar
          runner_id: 1
          runner_name: my runner
          runner_group_id: 2
          runner_group_name: my runner group
          workflow_name: CI
          head_branch: main
    pending-deployment-items:
      value:
      - environment:
          id: 161088068
          node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
          name: staging
          url: https://api.github.com/repos/github/hello-world/environments/staging
          html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        wait_timer: 30
        wait_timer_started_at: '2020-11-23T22:00:40Z'
        current_user_can_approve: true
        reviewers:
        - type: User
          reviewer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
        - type: Team
          reviewer:
            id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            notification_setting: notifications_enabled
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
    deployment-items:
      value:
      - url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    workflow-run-usage:
      value:
        billable:
          UBUNTU:
            total_ms: 180000
            jobs: 1
            job_runs:
            - job_id: 1
              duration_ms: 180000
          MACOS:
            total_ms: 240000
            jobs: 4
            job_runs:
            - job_id: 2
              duration_ms: 60000
            - job_id: 3
              duration_ms: 60000
            - job_id: 4
              duration_ms: 60000
            - job_id: 5
              duration_ms: 60000
          WINDOWS:
            total_ms: 300000
            jobs: 2
            job_runs:
            - job_id: 6
              duration_ms: 150000
            - job_id: 7
              duration_ms: 150000
        run_duration_ms: 500000
    actions-secret:
      value:
        name: GH_TOKEN
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
    actions-variable:
      value:
        name: USERNAME
        value: octocat
        created_at: '2021-08-10T14:59:22Z'
        updated_at: '2022-01-10T14:59:22Z'
    workflow-paginated:
      value:
        total_count: 2
        workflows:
        - id: 161335
          node_id: MDg6V29ya2Zsb3cxNjEzMzU=
          name: CI
          path: ".github/workflows/blank.yaml"
          state: active
          created_at: '2020-01-08T23:48:37.000-08:00'
          updated_at: '2020-01-08T23:50:21.000-08:00'
          url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
          html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
          badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
        - id: 269289
          node_id: MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==
          name: Linter
          path: ".github/workflows/linter.yaml"
          state: active
          created_at: '2020-01-08T23:48:37.000-08:00'
          updated_at: '2020-01-08T23:50:21.000-08:00'
          url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289
          html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289
          badge_url: https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg
    workflow:
      value:
        id: 161335
        node_id: MDg6V29ya2Zsb3cxNjEzMzU=
        name: CI
        path: ".github/workflows/blank.yaml"
        state: active
        created_at: '2020-01-08T23:48:37.000-08:00'
        updated_at: '2020-01-08T23:50:21.000-08:00'
        url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
        html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
        badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
    workflow-usage:
      value:
        billable:
          UBUNTU:
            total_ms: 180000
          MACOS:
            total_ms: 240000
          WINDOWS:
            total_ms: 300000
    activity-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        before: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        after: 827efc6d56897b048c772eb4087f854f46256132
        ref: refs/heads/main
        pushed_at: '2011-01-26T19:06:43Z'
        push_type: normal
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    autolink-items:
      value:
      - id: 1
        key_prefix: TICKET-
        url_template: https://example.com/TICKET?query=<num>
        is_alphanumeric: true
    autolink:
      value:
        id: 1
        key_prefix: TICKET-
        url_template: https://example.com/TICKET?query=<num>
        is_alphanumeric: true
    short-branch-with-protection-items:
      value:
      - name: master
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: true
        protection:
          required_status_checks:
            enforcement_level: non_admins
            contexts:
            - ci-test
            - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    branch-get:
      value:
        name: main
        commit:
          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          node_id: MDY6Q29tbWl0MTI5NjI2OTo3ZmQxYTYwYjAxZjkxYjMxNGY1OTk1NWE0ZTRkNGU4MGQ4ZWRmMTFk
          commit:
            author:
              name: The Octocat
              email: octocat@nowhere.com
              date: '2012-03-06T23:06:50Z'
            committer:
              name: The Octocat
              email: octocat@nowhere.com
              date: '2012-03-06T23:06:50Z'
            message: |-
              Merge pull request #6 from Spaceghost/patch-1

              New line at end of file.
            tree:
              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            comment_count: 77
            verification:
              verified: false
              reason: unsigned
          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          html_url: https://github.com/octocat/Hello-World/commit/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d/comments
          author:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            html_url: https://github.com/octocat/Hello-World/commit/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
          - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
            url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
            html_url: https://github.com/octocat/Hello-World/commit/762941318ee16e59dabbacb1b4049eec22f0d303
        _links:
          self: https://api.github.com/repos/octocat/Hello-World/branches/main
          html: https://github.com/octocat/Hello-World/tree/main
        protected: false
        protection:
          enabled: false
          required_status_checks:
            enforcement_level: 'off'
            contexts: []
            checks: []
        protection_url: https://api.github.com/repos/octocat/Hello-World/branches/main/protection
    branch-protection:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection
        required_status_checks:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
          contexts:
          - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
          enforcement_level: non_admins
        enforce_admins:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
          enabled: true
        required_pull_request_reviews:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
          dismissal_restrictions:
            url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
            users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
            teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
            users:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            teams:
            - id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              notification_setting: notifications_enabled
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
            apps:
            - id: 1
              slug: octoapp
              node_id: MDExOkludGVncmF0aW9uMQ==
              owner:
                login: github
                id: 1
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                url: https://api.github.com/orgs/github
                repos_url: https://api.github.com/orgs/github/repos
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                issues_url: https://api.github.com/orgs/github/issues
                members_url: https://api.github.com/orgs/github/members{/member}
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
              name: Octocat App
              description: ''
              external_url: https://example.com
              html_url: https://github.com/apps/octoapp
              created_at: '2017-07-08T16:18:44-04:00'
              updated_at: '2017-07-08T16:18:44-04:00'
              permissions:
                metadata: read
                contents: read
                issues: write
                single_file: write
              events:
              - push
              - pull_request
          dismiss_stale_reviews: true
          require_code_owner_reviews: true
          required_approving_review_count: 2
          require_last_push_approval: true
        restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/apps
          users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            notification_setting: notifications_enabled
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
          apps:
          - id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
        required_linear_history:
          enabled: true
        allow_force_pushes:
          enabled: true
        allow_deletions:
          enabled: true
        required_conversation_resolution:
          enabled: true
        lock_branch:
          enabled: true
        allow_fork_syncing:
          enabled: true
    branch-protection-update:
      value:
        url: https://api.github.com/repos/octocat/hello-world/branches/main/protection
        required_status_checks:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_status_checks
          strict: true
          contexts:
          - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_status_checks/contexts
          checks:
          - context: continuous-integration/travis-ci
        restrictions:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions
          users_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions/users
          teams_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions/teams
          apps_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions/apps
          users: []
          teams: []
          apps: []
        required_pull_request_reviews:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_pull_request_reviews
          dismiss_stale_reviews: true
          require_code_owner_reviews: true
          required_approving_review_count: 2
          require_last_push_approval: true
          dismissal_restrictions:
            url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/dismissal_restrictions
            users_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/dismissal_restrictions/users
            teams_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/dismissal_restrictions/teams
            users: []
            teams: []
            apps: []
        required_signatures:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_signatures
          enabled: false
        enforce_admins:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/enforce_admins
          enabled: true
        required_linear_history:
          enabled: true
        allow_force_pushes:
          enabled: true
        allow_deletions:
          enabled: true
        block_creations:
          enabled: true
        required_conversation_resolution:
          enabled: true
        lock_branch:
          enabled: true
        allow_fork_syncing:
          enabled: true
    protected-branch-admin-enforced-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled: true
    protected-branch-pull-request-review:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
        dismissal_restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
          users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            notification_setting: notifications_enabled
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
          apps:
          - id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
        dismiss_stale_reviews: true
        require_code_owner_reviews: true
        required_approving_review_count: 2
        require_last_push_approval: true
    protected-branch-admin-enforced:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
        enabled: true
    status-check-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict: true
        contexts:
        - continuous-integration/travis-ci
        contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
    branch-restriction-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
        users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
        teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/apps
        users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        apps:
        - id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            hooks_url: https://api.github.com/orgs/github/hooks
            issues_url: https://api.github.com/orgs/github/issues
            members_url: https://api.github.com/orgs/github/members{/member}
            public_members_url: https://api.github.com/orgs/github/public_members{/member}
            avatar_url: https://github.com/images/error/octocat_happy.gif
            description: A great organization
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
    integration-items:
      value:
      - id: 1
        slug: octoapp
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
    branch-with-protection:
      value:
        name: master
        commit:
          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          node_id: MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==
          commit:
            author:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            message: |-
              Merge pull request #6 from Spaceghost/patch-1

              New line at end of file.
            tree:
              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
            committer:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            verification:
              verified: false
              reason: unsigned
            comment_count: 0
          author:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          parents:
          - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
          - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
            url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          committer:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        _links:
          html: https://github.com/octocat/Hello-World/tree/master
          self: https://api.github.com/repos/octocat/Hello-World/branches/master
        protected: true
        protection:
          required_status_checks:
            enforcement_level: non_admins
            contexts:
            - ci-test
            - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    check-run-example-of-completed-conclusion:
      summary: Response for completed conclusion
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: '42'
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: completed
        conclusion: neutral
        started_at: '2018-05-04T01:14:52Z'
        completed_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may
            want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-run-example-of-in-progress-conclusion:
      summary: Response for in_progress conclusion
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: '42'
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: in_progress
        started_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may
            want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-run:
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: ''
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: completed
        conclusion: neutral
        started_at: '2018-05-04T01:14:52Z'
        completed_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may
            want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-annotation-items:
      value:
      - path: README.md
        start_line: 2
        end_line: 2
        start_column: 5
        end_column: 10
        annotation_level: warning
        title: Spell Checker
        message: Check your spelling for 'banaas'.
        raw_details: Do you mean 'bananas' or 'banana'?
        blob_href: https://api.github.com/repos/github/rest-api-description/git/blobs/abc
    check-suite:
      value:
        id: 5
        node_id: MDEwOkNoZWNrU3VpdGU1
        head_branch: master
        head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
        status: completed
        conclusion: neutral
        url: https://api.github.com/repos/github/hello-world/check-suites/5
        before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
        after: d6fde92930d4715a2b49857d24b940956b26d2d3
        pull_requests: []
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          template_repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World-Template
            full_name: octocat/Hello-World-Template
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World-Template
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World-Template
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            homepage: https://github.com
            forks: 9
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            watchers: 80
            size: 108
            default_branch: master
            open_issues: 0
            open_issues_count: 0
            is_template: true
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: false
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          delete_branch_on_merge: true
          subscribers_count: 42
          network_count: 0
        head_commit:
          id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          message: |-
            Merge pull request #6 from Spaceghost/patch-1

            New line at end of file.
          timestamp: '2016-10-10T00:00:00Z'
          author:
            name: The Octocat
            email: octocat@nowhere.com
          committer:
            name: The Octocat
            email: octocat@nowhere.com
        latest_check_runs_count: 1
        check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
    check-suite-preference:
      value:
        preferences:
          auto_trigger_checks:
          - app_id: 2
            setting: true
          - app_id: 4
            setting: false
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: false
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          template_repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World-Template
            full_name: octocat/Hello-World-Template
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World-Template
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World-Template
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            homepage: https://github.com
            forks: 9
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            watchers: 80
            size: 108
            default_branch: master
            open_issues: 0
            open_issues_count: 0
            is_template: true
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
    check-run-paginated:
      value:
        total_count: 1
        check_runs:
        - id: 4
          head_sha: ce587453ced02b1526dfb4cb910479d431683101
          node_id: MDg6Q2hlY2tSdW40
          external_id: ''
          url: https://api.github.com/repos/github/hello-world/check-runs/4
          html_url: https://github.com/github/hello-world/runs/4
          details_url: https://example.com
          status: completed
          conclusion: neutral
          started_at: '2018-05-04T01:14:52Z'
          completed_at: '2018-05-04T01:14:52Z'
          output:
            title: Mighty Readme report
            summary: There are 0 failures, 2 warnings, and 1 notice.
            text: You may have some misspelled words on lines 2 and 4. You also may
              want to add a section in your README about how to install your app.
            annotations_count: 2
            annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
          name: mighty_readme
          check_suite:
            id: 5
          app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          pull_requests:
          - url: https://api.github.com/repos/github/hello-world/pulls/1
            id: 1934
            number: 3956
            head:
              ref: say-hello
              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
              repo:
                id: 526
                url: https://api.github.com/repos/github/hello-world
                name: hello-world
            base:
              ref: master
              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
              repo:
                id: 526
                url: https://api.github.com/repos/github/hello-world
                name: hello-world
    code-scanning-alert-items:
      value:
      - number: 4
        created_at: '2020-02-13T12:29:18Z'
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4
        html_url: https://github.com/octocat/hello-world/code-scanning/4
        state: open
        rule:
          id: js/zipslip
          severity: error
          tags:
          - security
          - external/cwe/cwe-022
          description: Arbitrary file write during zip extraction
          name: js/zipslip
        tool:
          name: CodeQL
          version: 2.4.0
        most_recent_instance:
          ref: refs/heads/main
          analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          environment: "{}"
          state: open
          commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
          message:
            text: This path depends on a user-provided value.
          location:
            path: spec-main/api-session-spec.ts
            start_line: 917
            end_line: 917
            start_column: 7
            end_column: 18
          classifications:
          - test
        instances_url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances
      - number: 3
        created_at: '2020-02-13T12:29:18Z'
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3
        html_url: https://github.com/octocat/hello-world/code-scanning/3
        state: dismissed
        dismissed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_at: '2020-02-14T12:29:18Z'
        dismissed_reason: false positive
        dismissed_comment: This alert is not actually correct, because there's a sanitizer
          included in the library.
        rule:
          id: js/zipslip
          severity: error
          tags:
          - security
          - external/cwe/cwe-022
          description: Arbitrary file write during zip extraction
          name: js/zipslip
        tool:
          name: CodeQL
          version: 2.4.0
        most_recent_instance:
          ref: refs/heads/main
          analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          environment: "{}"
          state: open
          commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
          message:
            text: This path depends on a user-provided value.
          location:
            path: lib/ab12-gen.js
            start_line: 917
            end_line: 917
            start_column: 7
            end_column: 18
          classifications: []
        instances_url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances
    code-scanning-alert:
      value:
        number: 42
        created_at: '2020-06-19T11:21:34Z'
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42
        html_url: https://github.com/octocat/hello-world/code-scanning/42
        state: dismissed
        dismissed_by:
          login: octocat
          id: 54933897
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_at: '2020-02-14T12:29:18Z'
        dismissed_reason: false positive
        dismissed_comment: This alert is not actually correct, because there's a sanitizer
          included in the library.
        rule:
          id: js/zipslip
          severity: error
          security_severity_level: high
          description: Arbitrary file write during zip extraction ("Zip Slip")
          name: js/zipslip
          full_description: Extracting files from a malicious zip archive without
            validating that the destination file path is within the destination directory
            can cause files outside the destination directory to be overwritten.
          tags:
          - security
          - external/cwe/cwe-022
          help: '# Arbitrary file write during zip extraction ("Zip Slip")\nExtracting
            files from a malicious zip archive without validating that the destination
            file path is within the destination directory can cause files outside
            the destination directory to be overwritten ...'
          help_uri: https://codeql.github.com/
        tool:
          name: CodeQL
          version: 2.4.0
        most_recent_instance:
          ref: refs/heads/main
          analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          environment: "{}"
          state: dismissed
          commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
          message:
            text: This path depends on a user-provided value.
          location:
            path: spec-main/api-session-spec.ts
            start_line: 917
            end_line: 917
            start_column: 7
            end_column: 18
          classifications:
          - test
        instances_url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42/instances
    code-scanning-alert-dismissed:
      value:
        number: 42
        created_at: '2020-08-25T21:28:36Z'
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42
        html_url: https://github.com/octocat/hello-world/code-scanning/42
        state: dismissed
        dismissed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_at: '2020-09-02T22:34:56Z'
        dismissed_reason: false positive
        dismissed_comment: This alert is not actually correct, because there's a sanitizer
          included in the library.
        rule:
          id: js/zipslip
          severity: error
          security_severity_level: high
          description: Arbitrary file write during zip extraction ("Zip Slip")
          name: js/zipslip
          full_description: Extracting files from a malicious zip archive without
            validating that the destination file path is within the destination directory
            can cause files outside the destination directory to be overwritten.
          tags:
          - security
          - external/cwe/cwe-022
          help: '# Arbitrary file write during zip extraction ("Zip Slip")\nExtracting
            files from a malicious zip archive without validating that the destination
            file path is within the destination directory can cause files outside
            the destination directory to be overwritten ...'
          help_uri: https://codeql.github.com/
        tool:
          name: CodeQL
          version: 2.4.0
        most_recent_instance:
          ref: refs/heads/main
          analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
          environment: "{}"
          state: dismissed
          commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
          message:
            text: This path depends on a user-provided value.
          location:
            path: spec-main/api-session-spec.ts
            start_line: 917
            end_line: 917
            start_column: 7
            end_column: 18
          classifications:
          - test
        instances_url: https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42/instances
    code-scanning-alert-instances:
      value:
      - ref: refs/heads/main
        analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
        environment: ''
        category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
        state: open
        commit_sha: 39406e42cb832f683daa691dd652a8dc36ee8930
        message:
          text: This path depends on a user-provided value.
        location:
          path: lib/ab12-gen.js
          start_line: 917
          end_line: 917
          start_column: 7
          end_column: 18
        classifications:
        - library
      - ref: refs/pull/3740/merge
        analysis_key: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
        environment: ''
        category: ".github/workflows/codeql-analysis.yml:CodeQL-Build"
        state: fixed
        fixed_at: '2020-02-14T12:29:18Z'
        commit_sha: b09da05606e27f463a2b49287684b4ae777092f2
        message:
          text: This suffix check is missing a length comparison to correctly handle
            lastIndexOf returning -1.
        location:
          path: app/script.js
          start_line: 2
          end_line: 2
          start_column: 10
          end_column: 50
        classifications:
        - source
    code-scanning-analysis-items:
      value:
      - ref: refs/heads/main
        commit_sha: d99612c3e1f2970085cfbaeadf8f010ef69bad83
        analysis_key: ".github/workflows/codeql-analysis.yml:analyze"
        environment: '{"language":"python"}'
        error: ''
        category: ".github/workflows/codeql-analysis.yml:analyze/language:python"
        created_at: '2020-08-27T15:05:21Z'
        results_count: 17
        rules_count: 49
        id: 201
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/201
        sarif_id: 6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53
        tool:
          name: CodeQL
          version: 2.4.0
        deletable: true
        warning: ''
      - ref: refs/heads/my-branch
        commit_sha: c8cff6510d4d084fb1b4aa13b64b97ca12b07321
        analysis_key: ".github/workflows/shiftleft.yml:build"
        environment: "{}"
        error: ''
        category: ".github/workflows/shiftleft.yml:build/"
        created_at: '2020-08-31T22:46:44Z'
        results_count: 17
        rules_count: 32
        id: 200
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/200
        sarif_id: 8981cd8e-b078-4ac3-a3be-1dad7dbd0b582
        tool:
          name: Python Security Analysis
          version: 1.2.0
        deletable: true
        warning: ''
    code-scanning-analysis-default:
      summary: application/json response
      value:
        ref: refs/heads/main
        commit_sha: c18c69115654ff0166991962832dc2bd7756e655
        analysis_key: ".github/workflows/codeql-analysis.yml:analyze"
        environment: '{"language":"javascript"}'
        error: ''
        category: ".github/workflows/codeql-analysis.yml:analyze/language:javascript"
        created_at: '2021-01-13T11:55:49Z'
        results_count: 3
        rules_count: 67
        id: 3602840
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/201
        sarif_id: 47177e22-5596-11eb-80a1-c1e54ef945c6
        tool:
          name: CodeQL
          version: 2.4.0
        deletable: true
        warning: ''
    code-scanning-analysis-sarif:
      summary: application/json+sarif response
      value:
        runs:
        - tool:
            driver:
              name: CodeQL
              organization: GitHub
              semanticVersion: 1.0.0
              rules:
              - id: js/unused-local-variable
                name: js/unused-local-variable
          results:
          - guid: 326aa09f-9af8-13cf-9851-3d0e5183ec38
            message:
              text: Unused variable foo.
            locations:
            - physicalLocation:
                artifactLocation:
                  uri: file1.js
                region:
                  startLine: 1
            ruleId: js/unused-local-variable
            properties:
            - github/alertNumber: 2
            - github/alertUrl: https://api.github.com/repos/monalisa/monalisa/code-scanning/alerts/2
    code-scanning-analysis-deletion:
      summary: Default response
      value:
        next_analysis_url: https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/41
        confirm_delete_url: https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/41?confirm_delete
    code-scanning-codeql-databases:
      value:
      - id: 1
        name: database.zip
        language: java
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content_type: application/zip
        size: 1024
        created_at: '2022-09-12T12:14:32Z'
        updated_at: '2022-09-12T12:14:32Z'
        url: https://api.github.com/repos/octocat/Hello-World/code-scanning/codeql/databases/java
        commit_oid: 12345678901234567000
      - id: 2
        name: database.zip
        language: ruby
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content_type: application/zip
        size: 1024
        created_at: '2022-09-12T12:14:32Z'
        updated_at: '2022-09-12T12:14:32Z'
        url: https://api.github.com/repos/octocat/Hello-World/code-scanning/codeql/databases/ruby
        commit_oid: 23456789012345680000
    code-scanning-codeql-database:
      value:
        id: 1
        name: database.zip
        language: java
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content_type: application/zip
        size: 1024
        created_at: '2022-09-12T12:14:32Z'
        updated_at: '2022-09-12T12:14:32Z'
        url: https://api.github.com/repos/octocat/Hello-World/code-scanning/codeql/databases/java
        commit_oid: 12345678901234567000
    code-scanning-default-setup:
      value:
        state: configured
        languages:
        - ruby
        - python
        query_suite: default
        updated_at: '2023-01-19T11:21:34Z'
        schedule: weekly
    code-scanning-default-setup-update:
      value:
        state: configured
    code-scanning-default-setup-update-response:
      value:
        run_id: 42
        run_url: https://api.github.com/repos/octoorg/octocat/actions/runs/42
    code-scanning-sarif-upload:
      summary: Default response
      value:
        id: 47177e22-5596-11eb-80a1-c1e54ef945c6
        url: https://api.github.com/repos/octocat/hello-world/code-scanning/sarifs/47177e22-5596-11eb-80a1-c1e54ef945c6
    code-scanning-sarif-upload-status:
      summary: Default response
      value:
        processing_status: complete
        analyses_url: https://api.github.com/repos/octocat/hello-world/code-scanning/analyses?sarif_id=47177e22-5596-11eb-80a1-c1e54ef945c6
    codeowners-errors:
      value:
        errors:
        - line: 3
          column: 1
          kind: Invalid pattern
          source: "***/*.rb @monalisa"
          suggestion: Did you mean `**/*.rb`?
          message: |-
            Invalid pattern on line 3: Did you mean `**/*.rb`?

              ***/*.rb @monalisa
              ^
          path: ".github/CODEOWNERS"
        - line: 7
          column: 7
          kind: Invalid owner
          source: "*.txt docs@"
          message: |-
            Invalid owner on line 7:

              *.txt docs@
                    ^
          path: ".github/CODEOWNERS"
    codespaces-list-for-repository:
      value:
        total_count: 2
        codespaces:
        - id: 1
          name: monalisa-octocat-hello-world-g4wpq6h95q
          environment_id: 26a7c758-7299-4a73-b978-5a92a7ae98a0
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          billable_owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          machine:
            name: standardLinux
            display_name: 4 cores, 16 GB RAM, 64 GB storage
            operating_system: linux
            storage_in_bytes: 68719476736
            memory_in_bytes: 17179869184
            cpus: 4
          prebuild: false
          devcontainer_path: ".devcontainer/devcontainer.json"
          created_at: '2021-10-14T00:53:30-06:00'
          updated_at: '2021-10-14T00:53:32-06:00'
          last_used_at: '2021-10-14T00:53:30-06:00'
          state: Available
          url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q
          git_status:
            ahead: 0
            behind: 0
            has_unpushed_changes: false
            has_uncommitted_changes: false
            ref: main
          location: WestUs2
          idle_timeout_minutes: 60
          web_url: https://monalisa-octocat-hello-world-g4wpq6h95q.github.dev
          machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/machines
          start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/start
          stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/stop
          recent_folders: []
        - id: 2
          name: monalisa-octocat-hello-world-3f89ada1j3
          environment_id: 526ce4d7-46da-494f-a4f9-cfd25b818719
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          billable_owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          machine:
            name: standardLinux
            display_name: 4 cores, 16 GB RAM, 64 GB storage
            operating_system: linux
            storage_in_bytes: 68719476736
            memory_in_bytes: 17179869184
            cpus: 4
          prebuild: false
          devcontainer_path: ".devcontainer/devcontainer.json"
          created_at: '2021-10-14T00:53:30-06:00'
          updated_at: '2021-10-14T00:53:32-06:00'
          last_used_at: '2021-10-14T00:53:30-06:00'
          state: Available
          url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3
          git_status:
            ahead: 0
            behind: 0
            has_unpushed_changes: false
            has_uncommitted_changes: false
            ref: main
          location: WestUs2
          idle_timeout_minutes: 60
          web_url: https://monalisa-octocat-hello-world-3f89ada1j3.github.dev
          machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3/machines
          start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3/start
          stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-3f89ada1j3/stop
          recent_folders: []
    codespaces-list-devcontainers-for-repository:
      value:
        devcontainers:
        - path: ".devcontainer/foobar/devcontainer.json"
          name: foobar
          display_name: foobar
        - path: ".devcontainer/devcontainer.json"
          name: kitchensink
          display_name: kitchensink
        - path: ".devcontainer.json"
          display_name: Default project configuration
        total_count: 3
    codespace-machines-list:
      value:
        total_count: 2
        machines:
        - name: standardLinux
          display_name: 4 cores, 16 GB RAM, 64 GB storage
          operating_system: linux
          storage_in_bytes: 68719476736
          memory_in_bytes: 17179869184
          cpus: 4
        - name: premiumLinux
          display_name: 8 cores, 32 GB RAM, 64 GB storage
          operating_system: linux
          storage_in_bytes: 68719476736
          memory_in_bytes: 34359738368
          cpus: 8
    codespaces-default-attributes-for-a-codespace:
      value:
        billable_owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        defaults:
          location: EastUs
          devcontainer_path: ".devcontainer/devcontainer.json"
    codespaces-permissions-check-for-devcontainer:
      value:
        accepted: true
    collaborator-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        permissions:
          pull: true
          triage: true
          push: true
          maintain: false
          admin: false
        role_name: write
    repository-invitation-response-when-a-new-invitation-is-created:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    repository-collaborator-permission-response-if-user-has-admin-permissions:
      value:
        permission: admin
        role_name: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    commit-comment-items:
      value:
      - html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        author_association: COLLABORATOR
    commit-comment:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: COLLABORATOR
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-comment-2:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Nice change
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: COLLABORATOR
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: support@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: support@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
    branch-short-items:
      value:
      - name: branch_5
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: false
    pull-request-simple-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          notification_setting: notifications_enabled
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
    commit:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        stats:
          additions: 104
          deletions: 4
          total: 108
        files:
        - filename: file1.txt
          additions: 10
          deletions: 2
          changes: 12
          status: modified
          raw_url: https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
          blob_url: https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
          patch: |-
            @@ -29,7 +29,7 @@
            .....
    check-suite-paginated:
      value:
        total_count: 1
        check_suites:
        - id: 5
          node_id: MDEwOkNoZWNrU3VpdGU1
          head_branch: master
          head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
          status: completed
          conclusion: neutral
          url: https://api.github.com/repos/github/hello-world/check-suites/5
          before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          after: d6fde92930d4715a2b49857d24b940956b26d2d3
          pull_requests: []
          app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            delete_branch_on_merge: true
            subscribers_count: 42
            network_count: 0
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          head_commit:
            id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            message: |-
              Merge pull request #6 from Spaceghost/patch-1

              New line at end of file.
            timestamp: '2016-10-10T00:00:00Z'
            author:
              name: The Octocat
              email: octocat@nowhere.com
            committer:
              name: The Octocat
              email: octocat@nowhere.com
          latest_check_runs_count: 1
          check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
    combined-commit-status:
      value:
        state: success
        statuses:
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/hubot_happy.gif
          id: 1
          node_id: MDY6U3RhdHVzMQ==
          state: success
          description: Build has completed successfully
          target_url: https://ci.example.com/1000/output
          context: continuous-integration/jenkins
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/other_user_happy.gif
          id: 2
          node_id: MDY6U3RhdHVzMg==
          state: success
          description: Testing has completed successfully
          target_url: https://ci.example.com/2000/output
          context: security/brakeman
          created_at: '2012-08-20T01:19:13Z'
          updated_at: '2012-08-20T01:19:13Z'
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        total_count: 2
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        commit_url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e
        url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status
    status-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    community-profile:
      value:
        health_percentage: 100
        description: My first repository on GitHub!
        files:
          code_of_conduct:
            name: Contributor Covenant
            key: contributor_covenant
            url: https://api.github.com/codes_of_conduct/contributor_covenant
            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
          code_of_conduct_file:
            url: https://api.github.com/repos/octocat/Hello-World/contents/CODE_OF_CONDUCT.md
            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
          contributing:
            url: https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING
            html_url: https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING
          issue_template:
            url: https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE
            html_url: https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE
          pull_request_template:
            url: https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE
            html_url: https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE
          license:
            name: MIT License
            key: mit
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
            html_url: https://github.com/octocat/Hello-World/blob/master/LICENSE
            node_id: MDc6TGljZW5zZW1pdA==
          readme:
            url: https://api.github.com/repos/octocat/Hello-World/contents/README.md
            html_url: https://github.com/octocat/Hello-World/blob/master/README.md
        updated_at: '2017-02-28T19:09:29Z'
        content_reports_enabled: true
    commit-comparison:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merge_base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        status: behind
        ahead_by: 1
        behind_by: 2
        total_commits: 1
        commits:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        files:
        - sha: bbcd538c8e72b8c175046e27cc8f907076331401
          filename: file1.txt
          status: added
          additions: 103
          deletions: 21
          changes: 124
          blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
          patch: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
    content-file-response-if-content-is-a-file:
      summary: Response if content is a file
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: IyBZb2dhIEJvmsgaW4gcHJvZ3Jlc3MhIEZlZWwgdAoKOndhcm5pbmc6IFdvc\nZnJlZSBmUgdG8gY0byBjaGVjayBvdXQgdGhlIGFwcCwgYnV0IGJlIHN1c29t\nZSBiYWNrIG9uY2UgaXQgaXMgY29tcGxldGUuCgpBIHdlYiBhcHAgdGhhdCBs\nZWFkcyB5b3UgdGhyb3VnaCBhIHlvZ2Egc2Vzc2lvbi4KCltXb3Jrb3V0IG5v\ndyFdKGh0dHBzOi8vc2tlZHdhcmRzODguZ2l0aHViLmlvL3lvZ2EvKQoKPGlt\nZyBzcmM9InNyYy9pbWFnZXMvbWFza2FibGVfaWNvbl81MTIucG5nIiBhbHQ9\nImJvdCBsaWZ0aW5nIHdlaWdodHMiIHdpZHRoPSIxMDAiLz4KCkRvIHlvdSBo\nYXZlIGZlZWRiYWNrIG9yIGlkZWFzIGZvciBpbXByb3ZlbWVudD8gW09wZW4g\nYW4gaXNzdWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9za2Vkd2FyZHM4OC95b2dh\nL2lzc3Vlcy9uZXcpLgoKV2FudCBtb3JlIGdhbWVzPyBWaXNpdCBbQ25TIEdh\nbWVzXShodHRwczovL3NrZWR3YXJkczg4LmdpdGh1Yi5pby9wb3J0Zm9saW8v\nKS4KCiMjIERldmVsb3BtZW50CgpUbyBhZGQgYSBuZXcgcG9zZSwgYWRkIGFu\nIGVudHJ5IHRvIHRoZSByZWxldmFudCBmaWxlIGluIGBzcmMvYXNhbmFzYC4K\nClRvIGJ1aWxkLCBydW4gYG5wbSBydW4gYnVpbGRgLgoKVG8gcnVuIGxvY2Fs\nbHkgd2l0aCBsaXZlIHJlbG9hZGluZyBhbmQgbm8gc2VydmljZSB3b3JrZXIs\nIHJ1biBgbnBtIHJ1biBkZXZgLiAoSWYgYSBzZXJ2aWNlIHdvcmtlciB3YXMg\ncHJldmlvdXNseSByZWdpc3RlcmVkLCB5b3UgY2FuIHVucmVnaXN0ZXIgaXQg\naW4gY2hyb21lIGRldmVsb3BlciB0b29sczogYEFwcGxpY2F0aW9uYCA+IGBT\nZXJ2aWNlIHdvcmtlcnNgID4gYFVucmVnaXN0ZXJgLikKClRvIHJ1biBsb2Nh\nbGx5IGFuZCByZWdpc3RlciB0aGUgc2VydmljZSB3b3JrZXIsIHJ1biBgbnBt\nIHN0YXJ0YC4KClRvIGRlcGxveSwgcHVzaCB0byBgbWFpbmAgb3IgbWFudWFs\nbHkgdHJpZ2dlciB0aGUgYC5naXRodWIvd29ya2Zsb3dzL2RlcGxveS55bWxg\nIHdvcmtmbG93Lgo=\n
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    content-file-response-if-content-is-a-directory-object:
      summary: Response if content is a directory and the application/vnd.github.v3.object
        media type is requested
      value:
        type: dir
        size: 0
        name: src
        path: src
        sha: 2962be1c94eaae9794b3080790ec9d74b2fa8358
        url: https://api.github.com/repos/octocat/octorepo/contents/src?ref=main
        git_url: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        html_url: https://github.com/octocat/octorepo/blob/main/src
        download_url: https://raw.githubusercontent.com/octocat/octorepo/main/src
        _links:
          self: https://api.github.com/repos/octocat/octorepo/contents/src
          git: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html: https://github.com/octocat/octorepo/blob/main/src
        entries:
        - type: file
          size: 625
          name: app.js
          path: src/app.js
          sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          url: https://api.github.com/repos/octocat/octorepo/contents/src/app.js
          git_url: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html_url: https://github.com/octocat/octorepo/blob/main/src/app.js
          download_url: https://raw.githubusercontent.com/octocat/octorepo/main/src/app.js
          _links:
            self: https://api.github.com/repos/octocat/octorepo/contents/src/app.js
            git: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
            html: https://github.com/octocat/octorepo/blob/main/src/app.js
        - type: dir
          size: 0
          name: images
          path: src/images
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          url: https://api.github.com/repos/octocat/octorepo/contents/src/images
          git_url: https://api.github.com/repos/octocat/octorepo/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html_url: https://github.com/octocat/octorepo/tree/main/src/images
          _links:
            self: https://api.github.com/repos/octocat/octorepo/contents/src/images
            git: https://api.github.com/repos/octocat/octorepo/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
            html: https://github.com/octocat/octorepo/tree/main/src/images
    content-file-response-if-content-is-a-directory:
      summary: Response if content is a directory and the application/json media type
        is requested
      value:
      - type: file
        size: 625
        name: octokit.rb
        path: lib/octokit.rb
        sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        html_url: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb
        _links:
          self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
      - type: dir
        size: 0
        name: octokit
        path: lib/octokit
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        html_url: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
        _links:
          self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
          git: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
    content-file-response-if-content-is-a-symlink:
      summary: Response if content is a symlink and the application/json media type
        is requested
      value:
        type: symlink
        target: "/path/to/symlink/target"
        size: 23
        name: some-symlink
        path: bin/some-symlink
        sha: 452a98979c88e093d682cab404a3ec82babebb48
        url: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
        html_url: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
          self: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
          html: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
    content-file-response-if-content-is-a-submodule:
      summary: Response if content is a submodule and the application/json media type
        is requested
      value:
        type: submodule
        submodule_git_url: git://github.com/jquery/qunit.git
        size: 0
        name: qunit
        path: test/qunit
        sha: 6ca3721222109997540bd6d9ccd396902e0ad2f9
        url: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
        git_url: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
        html_url: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
        _links:
          git: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
          self: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
          html: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
    file-commit-example-for-updating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: a56507ed892d05a37c6d6128c260937ea4d287bd
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          node_id: MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          html_url: https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
            sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6
            html_url: https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6
            sha: da5a433788da5c255edad7979b328b67d79f53f6
          verification:
            verified: false
            reason: unsigned
    file-commit-example-for-creating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
            html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
    file-commit:
      value:
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
            html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
    contributor-items-response-if-repository-contains-content:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        contributions: 32
    dependabot-alerts-for-repository:
      value:
      - number: 2
        state: dismissed
        dependency:
          package:
            ecosystem: pip
            name: django
          manifest_path: path/to/requirements.txt
          scope: runtime
        security_advisory:
          ghsa_id: GHSA-rf4j-j272-fj86
          cve_id: CVE-2018-6188
          summary: Django allows remote attackers to obtain potentially sensitive
            information by leveraging data exposure from the confirm_login_allowed()
            method, as demonstrated by discovering whether a user account is inactive
          description: django.contrib.auth.forms.AuthenticationForm in Django 2.0
            before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain
            potentially sensitive information by leveraging data exposure from the
            confirm_login_allowed() method, as demonstrated by discovering whether
            a user account is inactive.
          vulnerabilities:
          - package:
              ecosystem: pip
              name: django
            severity: high
            vulnerable_version_range: ">= 2.0.0, < 2.0.2"
            first_patched_version:
              identifier: 2.0.2
          - package:
              ecosystem: pip
              name: django
            severity: high
            vulnerable_version_range: ">= 1.11.8, < 1.11.10"
            first_patched_version:
              identifier: 1.11.10
          severity: high
          cvss:
            vector_string: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
            score: 7.5
          cwes:
          - cwe_id: CWE-200
            name: Exposure of Sensitive Information to an Unauthorized Actor
          identifiers:
          - type: GHSA
            value: GHSA-rf4j-j272-fj86
          - type: CVE
            value: CVE-2018-6188
          references:
          - url: https://nvd.nist.gov/vuln/detail/CVE-2018-6188
          - url: https://github.com/advisories/GHSA-rf4j-j272-fj86
          - url: https://usn.ubuntu.com/3559-1/
          - url: https://www.djangoproject.com/weblog/2018/feb/01/security-releases/
          - url: http://www.securitytracker.com/id/1040422
          published_at: '2018-10-03T21:13:54Z'
          updated_at: '2022-04-26T18:35:37Z'
        security_vulnerability:
          package:
            ecosystem: pip
            name: django
          severity: high
          vulnerable_version_range: ">= 2.0.0, < 2.0.2"
          first_patched_version:
            identifier: 2.0.2
        url: https://api.github.com/repos/octocat/hello-world/dependabot/alerts/2
        html_url: https://github.com/octocat/hello-world/security/dependabot/2
        created_at: '2022-06-15T07:43:03Z'
        updated_at: '2022-08-23T14:29:47Z'
        dismissed_at: '2022-08-23T14:29:47Z'
        dismissed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_reason: tolerable_risk
        dismissed_comment: This alert is accurate but we use a sanitizer.
      - number: 1
        state: open
        dependency:
          package:
            ecosystem: pip
            name: ansible
          manifest_path: path/to/requirements.txt
          scope: runtime
        security_advisory:
          ghsa_id: GHSA-8f4m-hccc-8qph
          cve_id: CVE-2021-20191
          summary: Insertion of Sensitive Information into Log File in ansible
          description: A flaw was found in ansible. Credentials, such as secrets,
            are being disclosed in console log by default and not protected by no_log
            feature when using those modules. An attacker can take advantage of this
            information to steal those credentials. The highest threat from this vulnerability
            is to data confidentiality.
          vulnerabilities:
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: ">= 2.9.0, < 2.9.18"
            first_patched_version:
              identifier: 2.9.18
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: "< 2.8.19"
            first_patched_version:
              identifier: 2.8.19
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: ">= 2.10.0, < 2.10.7"
            first_patched_version:
              identifier: 2.10.7
          severity: medium
          cvss:
            vector_string: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
            score: 5.5
          cwes:
          - cwe_id: CWE-532
            name: Insertion of Sensitive Information into Log File
          identifiers:
          - type: GHSA
            value: GHSA-8f4m-hccc-8qph
          - type: CVE
            value: CVE-2021-20191
          references:
          - url: https://nvd.nist.gov/vuln/detail/CVE-2021-20191
          - url: https://access.redhat.com/security/cve/cve-2021-20191
          - url: https://bugzilla.redhat.com/show_bug.cgi?id=1916813
          published_at: '2021-06-01T17:38:00Z'
          updated_at: '2021-08-12T23:06:00Z'
        security_vulnerability:
          package:
            ecosystem: pip
            name: ansible
          severity: medium
          vulnerable_version_range: "< 2.8.19"
          first_patched_version:
            identifier: 2.8.19
        url: https://api.github.com/repos/octocat/hello-world/dependabot/alerts/1
        html_url: https://github.com/octocat/hello-world/security/dependabot/1
        created_at: '2022-06-14T15:21:52Z'
        updated_at: '2022-06-14T15:21:52Z'
    dependabot-alert-open:
      value:
        number: 1
        state: open
        dependency:
          package:
            ecosystem: pip
            name: ansible
          manifest_path: path/to/requirements.txt
          scope: runtime
        security_advisory:
          ghsa_id: GHSA-8f4m-hccc-8qph
          cve_id: CVE-2021-20191
          summary: Insertion of Sensitive Information into Log File in ansible
          description: A flaw was found in ansible. Credentials, such as secrets,
            are being disclosed in console log by default and not protected by no_log
            feature when using those modules. An attacker can take advantage of this
            information to steal those credentials. The highest threat from this vulnerability
            is to data confidentiality.
          vulnerabilities:
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: ">= 2.9.0, < 2.9.18"
            first_patched_version:
              identifier: 2.9.18
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: "< 2.8.19"
            first_patched_version:
              identifier: 2.8.19
          - package:
              ecosystem: pip
              name: ansible
            severity: medium
            vulnerable_version_range: ">= 2.10.0, < 2.10.7"
            first_patched_version:
              identifier: 2.10.7
          severity: medium
          cvss:
            vector_string: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
            score: 5.5
          cwes:
          - cwe_id: CWE-532
            name: Insertion of Sensitive Information into Log File
          identifiers:
          - type: GHSA
            value: GHSA-8f4m-hccc-8qph
          - type: CVE
            value: CVE-2021-20191
          references:
          - url: https://nvd.nist.gov/vuln/detail/CVE-2021-20191
          - url: https://access.redhat.com/security/cve/cve-2021-20191
          - url: https://bugzilla.redhat.com/show_bug.cgi?id=1916813
          published_at: '2021-06-01T17:38:00Z'
          updated_at: '2021-08-12T23:06:00Z'
        security_vulnerability:
          package:
            ecosystem: pip
            name: ansible
          severity: medium
          vulnerable_version_range: "< 2.8.19"
          first_patched_version:
            identifier: 2.8.19
        url: https://api.github.com/repos/octocat/hello-world/dependabot/alerts/1
        html_url: https://github.com/octocat/hello-world/security/dependabot/1
        created_at: '2022-06-14T15:21:52Z'
        updated_at: '2022-06-14T15:21:52Z'
    dependabot-alert-dismissed:
      value:
        number: 2
        state: dismissed
        dependency:
          package:
            ecosystem: pip
            name: django
          manifest_path: path/to/requirements.txt
          scope: runtime
        security_advisory:
          ghsa_id: GHSA-rf4j-j272-fj86
          cve_id: CVE-2018-6188
          summary: Django allows remote attackers to obtain potentially sensitive
            information by leveraging data exposure from the confirm_login_allowed()
            method, as demonstrated by discovering whether a user account is inactive
          description: django.contrib.auth.forms.AuthenticationForm in Django 2.0
            before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain
            potentially sensitive information by leveraging data exposure from the
            confirm_login_allowed() method, as demonstrated by discovering whether
            a user account is inactive.
          vulnerabilities:
          - package:
              ecosystem: pip
              name: django
            severity: high
            vulnerable_version_range: ">= 2.0.0, < 2.0.2"
            first_patched_version:
              identifier: 2.0.2
          - package:
              ecosystem: pip
              name: django
            severity: high
            vulnerable_version_range: ">= 1.11.8, < 1.11.10"
            first_patched_version:
              identifier: 1.11.10
          severity: high
          cvss:
            vector_string: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
            score: 7.5
          cwes:
          - cwe_id: CWE-200
            name: Exposure of Sensitive Information to an Unauthorized Actor
          identifiers:
          - type: GHSA
            value: GHSA-rf4j-j272-fj86
          - type: CVE
            value: CVE-2018-6188
          references:
          - url: https://nvd.nist.gov/vuln/detail/CVE-2018-6188
          - url: https://github.com/advisories/GHSA-rf4j-j272-fj86
          - url: https://usn.ubuntu.com/3559-1/
          - url: https://www.djangoproject.com/weblog/2018/feb/01/security-releases/
          - url: http://www.securitytracker.com/id/1040422
          published_at: '2018-10-03T21:13:54Z'
          updated_at: '2022-04-26T18:35:37Z'
        security_vulnerability:
          package:
            ecosystem: pip
            name: django
          severity: high
          vulnerable_version_range: ">= 2.0.0, < 2.0.2"
          first_patched_version:
            identifier: 2.0.2
        url: https://api.github.com/repos/octocat/hello-world/dependabot/alerts/2
        html_url: https://github.com/octocat/hello-world/security/dependabot/2
        created_at: '2022-06-15T07:43:03Z'
        updated_at: '2022-08-23T14:29:47Z'
        dismissed_at: '2022-08-23T14:29:47Z'
        dismissed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        dismissed_reason: tolerable_risk
        dismissed_comment: This alert is accurate but we use a sanitizer.
    dependabot-secret-paginated:
      value:
        total_count: 2
        secrets:
        - name: AZURE_DEVOPS_PAT
          created_at: '2019-08-10T14:59:22Z'
          updated_at: '2020-01-10T14:59:22Z'
        - name: MY_ARTIFACTORY_PASSWORD
          created_at: '2020-01-10T10:59:22Z'
          updated_at: '2020-01-11T11:59:22Z'
    dependabot-secret:
      value:
        name: MY_ARTIFACTORY_PASSWORD
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
    diff-range-response:
      value:
      - change_type: removed
        manifest: package.json
        ecosystem: npm
        name: helmet
        version: 4.6.0
        package_url: pkg:npm/helmet@4.6.0
        license: MIT
        source_repository_url: https://github.com/helmetjs/helmet
        vulnerabilities: []
      - change_type: added
        manifest: package.json
        ecosystem: npm
        name: helmet
        version: 5.0.0
        package_url: pkg:npm/helmet@5.0.0
        license: MIT
        source_repository_url: https://github.com/helmetjs/helmet
        vulnerabilities: []
      - change_type: added
        manifest: Gemfile
        ecosystem: rubygems
        name: ruby-openid
        version: 2.7.0
        package_url: pkg:gem/ruby-openid@2.7.0
        source_repository_url: https://github.com/openid/ruby-openid
        vulnerabilities:
        - severity: critical
          advisory_ghsa_id: GHSA-fqfj-cmh6-hj49
          advisory_summary: Ruby OpenID
          advisory_url: https://github.com/advisories/GHSA-fqfj-cmh6-hj49
    dependency-graph-export-sbom-response:
      value:
        sbom:
          SPDXID: SPDXRef-DOCUMENT
          spdxVersion: SPDX-2.3
          creationInfo:
            created: '2021-09-01T00:00:00Z'
            creators:
            - 'Tool: GitHub.com-Dependency-Graph'
          name: github/example
          dataLicense: CC0-1.0
          documentDescribes:
          - github/example
          documentNamespace: https://github.com/github/example/dependency_graph/sbom-abcdef123456
          packages:
          - SPDXID: SPDXRef-Package
            name: rubygems:rails
            versionInfo: 1.0.0
            downloadLocation: NOASSERTION
            filesAnalyzed: false
            licenseConcluded: MIT
            licenseDeclared: MIT
    dependency-graph-create-snapshot-request:
      value:
        version: 0
        sha: ce587453ced02b1526dfb4cb910479d431683101
        ref: refs/heads/main
        job:
          correlator: yourworkflowname_youractionname
          id: yourrunid
        detector:
          name: octo-detector
          version: 0.0.1
          url: https://github.com/octo-org/octo-repo
        scanned: '2022-06-14T20:25:00Z'
        manifests:
          package-lock.json:
            name: package-lock.json
            file:
              source_location: src/package-lock.json
            resolved:
              "@actions/core":
                package_url: pkg:/npm/%40actions/core@1.1.9
                dependencies:
                - "@actions/http-client"
              "@actions/http-client":
                package_url: pkg:/npm/%40actions/http-client@1.0.7
                dependencies:
                - tunnel
              tunnel:
                package_url: pkg:/npm/tunnel@0.0.6
    dependency-graph-create-snapshot-success:
      value:
        id: 12345
        created_at: '2018-05-04T01:14:52Z'
        message: Dependency results for the repo have been successfully updated.
        result: SUCCESS
    deployment-simple-example:
      summary: Simple example
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment-status-items:
      value:
      - url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    deployment-status:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    environments:
      value:
        total_count: 1
        environments:
        - id: 161088068
          node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
          name: staging
          url: https://api.github.com/repos/github/hello-world/environments/staging
          html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
          created_at: '2020-11-23T22:00:40Z'
          updated_at: '2020-11-23T22:00:40Z'
          protection_rules:
          - id: 3736
            node_id: MDQ6R2F0ZTM3MzY=
            type: wait_timer
            wait_timer: 30
          - id: 3755
            node_id: MDQ6R2F0ZTM3NTU=
            prevent_self_review: false
            type: required_reviewers
            reviewers:
            - type: User
              reviewer:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
            - type: Team
              reviewer:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://github.com/orgs/github/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                notification_setting: notifications_enabled
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
          - id: 3756
            node_id: MDQ6R2F0ZTM3NTY=
            type: branch_policy
          deployment_branch_policy:
            protected_branches: false
            custom_branch_policies: true
    environment:
      value:
        id: 161088068
        node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
        name: staging
        url: https://api.github.com/repos/github/hello-world/environments/staging
        html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at: '2020-11-23T22:00:40Z'
        updated_at: '2020-11-23T22:00:40Z'
        protection_rules:
        - id: 3736
          node_id: MDQ6R2F0ZTM3MzY=
          type: wait_timer
          wait_timer: 30
        - id: 3755
          node_id: MDQ6R2F0ZTM3NTU=
          prevent_self_review: false
          type: required_reviewers
          reviewers:
          - type: User
            reviewer:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          - type: Team
            reviewer:
              id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              notification_setting: notifications_enabled
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
        - id: 3756
          node_id: MDQ6R2F0ZTM3NTY=
          type: branch_policy
        deployment_branch_policy:
          protected_branches: false
          custom_branch_policies: true
    deployment-branch-policies-list:
      value:
        total_count: 2
        branch_policies:
        - id: 361471
          node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=
          name: release/*
        - id: 361472
          node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzI=
          name: main
    deployment-branch-policy-wildcard:
      value:
        id: 364662
        node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjQ2NjI=
        name: release/*
    deployment-branch-policy-single-branch:
      value:
        id: 364663
        node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjQ2NjM=
        name: main
    deployment-branch-policy-single-tag:
      value:
        id: 364663
        node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjQ2NjM=
        name: v1
        type: tag
    deployment-protection-rules:
      value:
      - total_count: 2
      - custom_deployment_protection_rules:
        - id: 3
          node_id: IEH37kRlcGxveW1lbnRTdGF0ddiv
          enabled: true
          app:
            id: 1
            node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
            slug: a-custom-app
            integration_url: https://api.github.com/apps/a-custom-app
        - id: 4
          node_id: MDE2OkRlcGxveW1lbnRTdHJ41128
          enabled: true
          app:
            id: 1
            node_id: UHVE67RlcGxveW1lbnRTdTY!jfeuy
            slug: another-custom-app
            integration_url: https://api.github.com/apps/another-custom-app
    deployment-protection-rule:
      value:
        id: 3
        node_id: IEH37kRlcGxveW1lbnRTdGF0ddiv
        enabled: true
        app:
          id: 1
          node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
          slug: a-custom-app
          integration_url: https://api.github.com/apps/a-custom-app
    custom-deployment-protection-rule-apps:
      value:
      - total_count: 2
      - available_custom_deployment_protection_rule_integrations:
        - id: 1
          node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
          slug: a-custom-app
          integration_url: https://api.github.com/apps/a-custom-app
        - id: 2
          node_id: UHVE67RlcGxveW1lbnRTdTY!jfeuy
          slug: another-custom-app
          integration_url: https://api.github.com/apps/another-custom-app
    repo-events-items:
      value:
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22237752260'
        type: WatchEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          action: started
        public: true
        created_at: '2022-06-08T23:29:25Z'
    minimal-repository-items-2:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: true
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        delete_branch_on_merge: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
    short-blob:
      value:
        url: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
    blob:
      value:
        content: Q29udGVudCBvZiB0aGUgYmxvYg==
        encoding: base64
        url: https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        sha: 3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15
        size: 19
        node_id: Q29udGVudCBvZiB0aGUgYmxvYg==
    git-commit:
      value:
        sha: 7638417db6d59f3c431d3e1f261cc637155684cd
        node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
        url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
        author:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        committer:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        message: my commit message
        tree:
          url: https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132
          sha: 827efc6d56897b048c772eb4087f854f46256132
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0
          sha: 7d1b31e74ee336d15cbd21741bc88a537ed063a0
          html_url: https://github.com/octocat/Hello-World/commit/7d1b31e74ee336d15cbd21741bc88a537ed063a0
        verification:
          verified: false
          reason: unsigned
        html_url: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
    git-commit-2:
      value:
        sha: 7638417db6d59f3c431d3e1f261cc637155684cd
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
        html_url: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
        author:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        committer:
          date: '2014-11-07T22:01:45Z'
          name: Monalisa Octocat
          email: octocat@github.com
        message: added readme, because im a good github citizen
        tree:
          url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
          sha: 691272480426f78a0138979dd3ce63b77f706feb
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
          sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          html_url: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
        verification:
          verified: false
          reason: unsigned
    git-ref-items:
      value:
      - ref: refs/heads/feature-a
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWE=
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a
        object:
          type: commit
          sha: aa218f56b14c9653891f9e74264a383fa43fefbd
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
      - ref: refs/heads/feature-b
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWI=
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-b
        object:
          type: commit
          sha: 612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac
    git-ref:
      value:
        ref: refs/heads/featureA
        node_id: MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==
        url: https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA
        object:
          type: commit
          sha: aa218f56b14c9653891f9e74264a383fa43fefbd
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd
    git-tag:
      value:
        node_id: MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==
        tag: v0.0.1
        sha: 940bd336248efae0f9ee5bc7b2d5c985887b16ac
        url: https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac
        message: initial version
        tagger:
          name: Monalisa Octocat
          email: octocat@github.com
          date: '2014-11-07T22:01:45Z'
        object:
          type: commit
          sha: c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c
        verification:
          verified: false
          reason: unsigned
    git-tree:
      value:
        sha: cd8274d15fa3ae2ab983129fb037999f264ba9a7
        url: https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7
        tree:
        - path: file.rb
          mode: '100644'
          type: blob
          size: 132
          sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
        truncated: true
    git-tree-default-response:
      summary: Default response
      value:
        sha: 9fb037999f264ba9a7fc6274d15fa3ae2ab98312
        url: https://api.github.com/repos/octocat/Hello-World/trees/9fb037999f264ba9a7fc6274d15fa3ae2ab98312
        tree:
        - path: file.rb
          mode: '100644'
          type: blob
          size: 30
          sha: 44b4fc6d56897b048c772eb4087f854f46256132
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132
        - path: subdir
          mode: '040000'
          type: tree
          sha: f484d249c660418515fb01c2b9662073663c242e
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/f484d249c660418515fb01c2b9662073663c242e
        - path: exec_file
          mode: '100755'
          type: blob
          size: 75
          sha: 45b983be36b73c0788dc9cbcb76cbb80fc7bb057
          url: https://api.github.com/repos/octocat/Hello-World/git/blobs/45b983be36b73c0788dc9cbcb76cbb80fc7bb057
        truncated: false
    git-tree-response-recursively-retrieving-a-tree:
      summary: Response recursively retrieving a tree
      value:
        sha: fc6274d15fa3ae2ab983129fb037999f264ba9a7
        url: https://api.github.com/repos/octocat/Hello-World/trees/fc6274d15fa3ae2ab983129fb037999f264ba9a7
        tree:
        - path: subdir/file.txt
          mode: '100644'
          type: blob
          size: 132
          sha: 7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
          url: https://api.github.com/repos/octocat/Hello-World/git/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b
        truncated: false
    hook-items:
      value:
      - type: Repository
        id: 12345678
        name: web
        active: true
        events:
        - push
        - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        last_response:
          status: unused
    hook:
      value:
        type: Repository
        id: 12345678
        name: web
        active: true
        events:
        - push
        - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        last_response:
          status: unused
    import:
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: complete
        status_text: Done
        has_large_files: true
        large_files_size: 132331036
        large_files_count: 1
        authors_count: 4
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-2:
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: importing
        status_text: Importing...
        has_large_files: false
        large_files_size: 0
        large_files_count: 0
        authors_count: 0
        commit_count: 1042
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-example-1:
      summary: Example 1
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: detecting
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-example-2:
      summary: Example 2
      value:
        vcs: tfvc
        use_lfs: true
        vcs_url: http://tfs.mycompany.com/tfs/myproject
        tfvc_project: project1
        status: importing
        status_text: Importing...
        has_large_files: false
        large_files_size: 0
        large_files_count: 0
        authors_count: 0
        commit_count: 1042
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-response:
      summary: Response
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: importing
        status_text: Importing...
        has_large_files: false
        large_files_size: 0
        large_files_count: 0
        authors_count: 0
        commit_count: 1042
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    porter-author-items:
      value:
      - id: 2268557
        remote_id: nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        remote_name: nobody
        email: hubot@github.com
        name: Hubot
        url: https://api.github.com/repos/octocat/socm/import/authors/2268557
        import_url: https://api.github.com/repos/octocat/socm/import
      - id: 2268558
        remote_id: svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        remote_name: svner
        email: svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        name: svner
        url: https://api.github.com/repos/octocat/socm/import/authors/2268558
        import_url: https://api.github.com/repos/octocat/socm/import
      - id: 2268559
        remote_id: svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        remote_name: svner@example.com
        email: svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        name: svner@example.com
        url: https://api.github.com/repos/octocat/socm/import/authors/2268559
        import_url: https://api.github.com/repos/octocat/socm/import
    porter-author:
      value:
        id: 2268557
        remote_id: nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        remote_name: nobody
        email: hubot@github.com
        name: Hubot
        url: https://api.github.com/repos/octocat/socm/import/authors/2268557
        import_url: https://api.github.com/repos/octocat/socm/import
    porter-large-file-items:
      value:
      - ref_name: refs/heads/master
        path: foo/bar/1
        oid: d3d9446802a44259755d38e6d163e820
        size: 10485760
      - ref_name: refs/heads/master
        path: foo/bar/2
        oid: 6512bd43d9caa6e02c990b0a82652dca
        size: 11534336
      - ref_name: refs/heads/master
        path: foo/bar/3
        oid: c20ad4d76fe97759aa27a0c99bff6710
        size: 12582912
    interaction-limit-2:
      value:
        limit: collaborators_only
        origin: repository
        expires_at: '2018-08-17T04:18:39Z'
    repository-invitation-items:
      value:
      - id: 1
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
        node_id: MDQ6VXNlcjE=
    repository-invitation:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        expired: false
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    issue-items:
      value:
      - id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        closed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        author_association: COLLABORATOR
        state_reason: completed
    issue:
      value:
        id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        closed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        author_association: COLLABORATOR
        state_reason: completed
    issue-comment-items:
      value:
      - id: 1
        node_id: MDEyOklzc3VlQ29tbWVudDE=
        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
        body: Me too
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        author_association: COLLABORATOR
    issue-comment:
      value:
        id: 1
        node_id: MDEyOklzc3VlQ29tbWVudDE=
        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
        body: Me too
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        author_association: COLLABORATOR
    issue-event-items:
      value:
      - id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
        issue:
          id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
          - id: 208045946
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
            name: bug
            description: Something isn't working
            color: f29513
            default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          active_lock_reason: too heated
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          author_association: COLLABORATOR
          state_reason: completed
    issue-event:
      value:
        id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
        issue:
          id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
          - id: 208045946
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
            name: bug
            description: Something isn't working
            color: f29513
            default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          performed_via_github_app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          author_association: COLLABORATOR
          state_reason: completed
    issue-event-for-issue-items:
      value:
      - id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
        label:
          name: label
          color: red
    label-items:
      value:
      - id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
      - id: 208045947
        node_id: MDU6TGFiZWwyMDgwNDU5NDc=
        url: https://api.github.com/repos/octocat/Hello-World/labels/enhancement
        name: enhancement
        description: New feature or request
        color: a2eeef
        default: false
    label-items-2:
      value:
      - id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
    timeline-issue-events:
      value:
      - id: 6430295168
        node_id: LOE_lADODwFebM5HwC0kzwAAAAF_RoSA
        url: https://api.github.com/repos/github/roadmap/issues/events/6430295168
        actor:
          login: github
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        event: locked
        created_at: '2022-04-13T20:49:13Z'
      - id: 6430296748
        node_id: LE_lADODwFebM5HwC0kzwAAAAF_Roqs
        url: https://api.github.com/repos/github/roadmap/issues/events/6430296748
        actor:
          login: github-product-roadmap
          id: 67656570
          node_id: MDQ6VXNlcjY3NjU2NTcw
          avatar_url: https://avatars.githubusercontent.com/u/67656570?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github-product-roadmap
          html_url: https://github.com/github-product-roadmap
          followers_url: https://api.github.com/users/github-product-roadmap/followers
          following_url: https://api.github.com/users/github-product-roadmap/following{/other_user}
          gists_url: https://api.github.com/users/github-product-roadmap/gists{/gist_id}
          starred_url: https://api.github.com/users/github-product-roadmap/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github-product-roadmap/subscriptions
          organizations_url: https://api.github.com/users/github-product-roadmap/orgs
          repos_url: https://api.github.com/users/github-product-roadmap/repos
          events_url: https://api.github.com/users/github-product-roadmap/events{/privacy}
          received_events_url: https://api.github.com/users/github-product-roadmap/received_events
          type: User
          site_admin: false
        event: labeled
        created_at: '2022-04-13T20:49:34Z'
        label:
          name: beta
          color: 99dd88
      - id: 6635165802
        node_id: RTE_lADODwFebM5HwC0kzwAAAAGLfJhq
        url: https://api.github.com/repos/github/roadmap/issues/events/6635165802
        actor:
          login: github-product-roadmap
          id: 67656570
          node_id: MDQ6VXNlcjY3NjU2NTcw
          avatar_url: https://avatars.githubusercontent.com/u/67656570?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github-product-roadmap
          html_url: https://github.com/github-product-roadmap
          followers_url: https://api.github.com/users/github-product-roadmap/followers
          following_url: https://api.github.com/users/github-product-roadmap/following{/other_user}
          gists_url: https://api.github.com/users/github-product-roadmap/gists{/gist_id}
          starred_url: https://api.github.com/users/github-product-roadmap/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github-product-roadmap/subscriptions
          organizations_url: https://api.github.com/users/github-product-roadmap/orgs
          repos_url: https://api.github.com/users/github-product-roadmap/repos
          events_url: https://api.github.com/users/github-product-roadmap/events{/privacy}
          received_events_url: https://api.github.com/users/github-product-roadmap/received_events
          type: User
          site_admin: false
        event: renamed
        created_at: '2022-05-18T19:29:01Z'
        rename:
          from: 'Secret scanning: dry-runs for enterprise-level custom patterns (cloud)'
          to: 'Secret scanning: dry-runs for enterprise-level custom patterns'
      - url: https://api.github.com/repos/github/roadmap/issues/comments/1130876857
        html_url: https://github.com/github/roadmap/issues/493#issuecomment-1130876857
        issue_url: https://api.github.com/repos/github/roadmap/issues/493
        id: 1130876857
        node_id: IC_kwDODwFebM5DZ8-5
        user:
          login: octocat
          id: 94867353
          node_id: U_kgDOBaePmQ
          avatar_url: https://avatars.githubusercontent.com/u/94867353?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        created_at: '2022-05-19T00:52:15Z'
        updated_at: '2022-05-19T00:52:15Z'
        author_association: COLLABORATOR
        body: "\U0001F6A2  Shipped to the cloud: https://github.blog/changelog/2022-05-12-secret-scanning-dry-runs-for-enterprise-level-custom-patterns/"
        reactions:
          url: https://api.github.com/repos/github/roadmap/issues/comments/1130876857/reactions
          total_count: 0
          "+1": 0
          "-1": 0
          laugh: 0
          hooray: 0
          confused: 0
          heart: 0
          rocket: 0
          eyes: 0
        event: commented
        actor:
          login: octocat
          id: 94867353
          node_id: U_kgDOBaePmQ
          avatar_url: https://avatars.githubusercontent.com/u/94867353?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
    deploy-key-items:
      value:
      - id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
        added_by: octocat
        last_used: '2022-01-10T15:53:42Z'
    deploy-key:
      value:
        id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
        added_by: octocat
        last_used: '2022-01-10T15:53:42Z'
    label:
      value:
        id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
    label-2:
      value:
        id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: 'https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:'
        name: 'bug :bug:'
        description: Small bug fix required
        color: b01f26
        default: true
    language:
      value:
        C: 78769
        Python: 7769
    license-content:
      value:
        name: LICENSE
        path: LICENSE
        sha: 401c59dcc4570b954dd6d345e76199e1f4e76266
        size: 1077
        url: https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
        html_url: https://github.com/benbalter/gman/blob/master/LICENSE
        git_url: https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
        download_url: https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true
        type: file
        content: |
          VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu
          IEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv
          ZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0
          aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls
          ZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg
          d2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
          dGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg
          cHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg
          Y29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z
          IHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK
          c3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv
          dmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj
          ZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50
          aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ
          UyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL
          SU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ
          TUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG
          SVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO
          R0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ
          UklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF
          UyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G
          IENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP
          VVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU
          SEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K
        encoding: base64
        _links:
          self: https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master
          git: https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266
          html: https://github.com/benbalter/gman/blob/master/LICENSE
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
    merged-upstream:
      value:
        message: Successfully fetched and fast-forwarded from upstream defunkt:main
        merge_type: fast-forward
        base_branch: defunkt:main
    milestone-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id: 1002604
        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number: 1
        state: open
        title: v1.0
        description: Tracking milestone for version 1.0
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        open_issues: 4
        closed_issues: 8
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
        closed_at: '2013-02-12T13:22:01Z'
        due_on: '2012-10-09T23:39:01Z'
    milestone:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id: 1002604
        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number: 1
        state: open
        title: v1.0
        description: Tracking milestone for version 1.0
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        open_issues: 4
        closed_issues: 8
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
        closed_at: '2013-02-12T13:22:01Z'
        due_on: '2012-10-09T23:39:01Z'
    page:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages
        status: built
        cname: developer.github.com
        custom_404: false
        html_url: https://developer.github.com
        source:
          branch: master
          path: "/"
        public: true
        https_certificate:
          state: approved
          description: Certificate is approved
          domains:
          - developer.github.com
          expires_at: '2021-05-22'
        https_enforced: true
    page-build-items:
      value:
      - url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error: {}
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    page-build-status:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/latest
        status: queued
    page-build:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error: {}
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    page-deployment:
      value:
        status_url: https://api.github.com/repos/github/developer.github.com/pages/deployments/4fd754f7e594640989b406850d0bc8f06a121251/status
        page_url: developer.github.com
    pages-health-check:
      value:
        domain:
          host: example.com
          uri: http://example.com/
          nameservers: default
          dns_resolves: true
          is_proxied: false
          is_cloudflare_ip: false
          is_fastly_ip: false
          is_old_ip_address: false
          is_a_record: true
          has_cname_record: false
          has_mx_records_present: false
          is_valid_domain: true
          is_apex_domain: true
          should_be_a_record: true
          is_cname_to_github_user_domain: false
          is_cname_to_pages_dot_github_dot_com: false
          is_cname_to_fastly: false
          is_pointed_to_github_pages_ip: true
          is_non_github_pages_ip_present: false
          is_pages_domain: false
          is_served_by_pages: true
          is_valid: true
          responds_to_https: true
          enforces_https: true
          is_https_eligible: true
        alt_domain:
          host: www.example.com
          uri: http://www.example.com/
          nameservers: default
          dns_resolves: true
          is_proxied: false
          is_cloudflare_ip: false
          is_fastly_ip: false
          is_old_ip_address: false
          is_a_record: true
          has_cname_record: false
          has_mx_records_present: false
          is_valid_domain: true
          is_apex_domain: true
          should_be_a_record: true
          is_cname_to_github_user_domain: false
          is_cname_to_pages_dot_github_dot_com: false
          is_cname_to_fastly: false
          is_pointed_to_github_pages_ip: true
          is_non_github_pages_ip_present: false
          is_pages_domain: false
          is_served_by_pages: true
          is_valid: true
          responds_to_https: true
          enforces_https: true
          is_https_eligible: true
    project-items-2:
      value:
      - owner_url: https://api.github.com/repos/api-playground/projects-test
        url: https://api.github.com/projects/1002604
        html_url: https://github.com/api-playground/projects-test/projects/1
        columns_url: https://api.github.com/projects/1002604/columns
        id: 1002604
        node_id: MDc6UHJvamVjdDEwMDI2MDQ=
        name: Projects Documentation
        body: Developer documentation project for the developer site.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    pull-request:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            has_discussions: false
            archived: false
            disabled: false
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_merge_commit: true
            allow_forking: true
            forks: 123
            open_issues: 123
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            watchers: 123
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            has_discussions: false
            archived: false
            disabled: false
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_merge_commit: true
            forks: 123
            open_issues: 123
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            watchers: 123
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
        merged: false
        mergeable: true
        rebaseable: true
        mergeable_state: clean
        merged_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        comments: 10
        review_comments: 0
        maintainer_can_modify: true
        commits: 3
        additions: 100
        deletions: 3
        changed_files: 5
    pull-request-review-comment-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment-example-for-a-multi-line-comment:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 426899381
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    diff-entry-items:
      value:
      - sha: bbcd538c8e72b8c175046e27cc8f907076331401
        filename: file1.txt
        status: added
        additions: 103
        deletions: 21
        changes: 124
        blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
    pull-request-merge-result-response-if-merge-was-successful:
      value:
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merged: true
        message: Pull Request successfully merged
    simple-pull-request-review-request:
      value:
        users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
    pull-request-review-request:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
    pull-request-simple:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        draft: false
    pull-request-review-items:
      value:
      - id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: APPROVED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    pull-request-review:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: This is close to perfect! Please address the suggested inline change.
        state: CHANGES_REQUESTED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    pull-request-review-4:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: APPROVED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    pull-request-review-5:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: This is close to perfect! Please address the suggested inline change.
          And add more about this.
        state: CHANGES_REQUESTED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    review-comment-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
    pull-request-review-3:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: DISMISSED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    content-file:
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: encoded content ...
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    release-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        discussion_url: https://github.com/octocat/Hello-World/discussions/90
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release-asset:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-notes-content:
      value:
        name: Release v1.0.0 is now available!
        body: "##Changes in Release v1.0.0 ... ##Contributors @monalisa"
    release-asset-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-asset-response-for-successful-upload:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    repository-rule-items:
      value:
      - type: commit_message_pattern
        ruleset_source_type: Repository
        ruleset_source: monalisa/my-repo
        ruleset_id: 42
        parameters:
          operator: starts_with
          pattern: issue
      - type: commit_author_email_pattern
        ruleset_source_type: Organization
        ruleset_source: my-org
        ruleset_id: 73
        parameters:
          operator: contains
          pattern: github
    repository-ruleset-items:
      value:
      - id: 42
        name: super cool ruleset
        source_type: Repository
        source: monalisa/my-repo
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/repos/monalisa/my-repo/rulesets/42
          html:
            href: https://github.com/monalisa/my-repo/rules/42
        created_at: '2023-07-15T08:43:03Z'
        updated_at: '2023-08-23T16:29:47Z'
      - id: 314
        name: Another ruleset
        source_type: Repository
        source: monalisa/my-repo
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQQ
        _links:
          self:
            href: https://api.github.com/repos/monalisa/my-repo/rulesets/314
          html:
            href: https://github.com/monalisa/my-repo/rules/314
        created_at: '2023-08-15T08:43:03Z'
        updated_at: '2023-09-23T16:29:47Z'
    repository-ruleset:
      value:
        id: 42
        name: super cool ruleset
        target: branch
        source_type: Repository
        source: monalisa/my-repo
        enforcement: active
        bypass_actors:
        - actor_id: 234
          actor_type: Team
          bypass_mode: always
        conditions:
          ref_name:
            include:
            - refs/heads/main
            - refs/heads/master
            exclude:
            - refs/heads/dev*
        rules:
        - type: commit_author_email_pattern
          parameters:
            operator: contains
            pattern: github
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/repos/monalisa/my-repo/rulesets/42
          html:
            href: https://github.com/monalisa/my-repo/rules/42
        created_at: '2023-07-15T08:43:03Z'
        updated_at: '2023-08-23T16:29:47Z'
    secret-scanning-alert-list:
      value:
      - number: 2
        created_at: '2020-11-06T18:48:51Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2
        html_url: https://github.com/owner/private-repo/security/secret-scanning/2
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2/locations
        state: resolved
        resolution: false_positive
        resolved_at: '2020-11-07T02:47:13Z'
        resolved_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        secret_type: adafruit_io_key
        secret_type_display_name: Adafruit IO Key
        secret: aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX
        push_protection_bypassed_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        push_protection_bypassed: true
        push_protection_bypassed_at: '2020-11-06T21:48:51Z'
        resolution_comment: Example comment
      - number: 1
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/repo/secret-scanning/alerts/1
        html_url: https://github.com/owner/repo/security/secret-scanning/1
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/1/locations
        state: open
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        push_protection_bypassed: false
    secret-scanning-alert-open:
      value:
        number: 42
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42
        html_url: https://github.com/owner/private-repo/security/secret-scanning/42
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42/locations
        state: open
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        push_protection_bypassed: false
    secret-scanning-alert-resolved:
      value:
        number: 42
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42
        html_url: https://github.com/owner/private-repo/security/secret-scanning/42
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42/locations
        state: resolved
        resolution: used_in_tests
        resolved_at: '2020-11-16T22:42:07Z'
        resolved_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        push_protection_bypassed: false
        resolution_comment: Example comment
    secret-scanning-location-list:
      value:
      - type: commit
        details:
          path: "/example/secrets.txt"
          start_line: 1
          end_line: 1
          start_column: 1
          end_column: 64
          blob_sha: af5626b4a114abcb82d63db7c8082c3c4756e51b
          blob_url: https://api.github.com/repos/octocat/hello-world/git/blobs/af5626b4a114abcb82d63db7c8082c3c4756e51b
          commit_sha: f14d7debf9775f957cf4f1e8176da0786431f72b
          commit_url: https://api.github.com/repos/octocat/hello-world/git/commits/f14d7debf9775f957cf4f1e8176da0786431f72b
      - type: issue_title
        details:
          issue_title_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
      - type: issue_body
        details:
          issue_body_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
      - type: issue_comment
        details:
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451
    repository-advisory:
      value:
        ghsa_id: GHSA-abcd-1234-efgh
        cve_id: CVE-2050-00000
        url: https://api.github.com/repos/repo/a-package/security-advisories/GHSA-abcd-1234-efgh
        html_url: https://github.com/repo/a-package/security/advisories/GHSA-abcd-1234-efgh
        summary: A short summary of the advisory.
        description: A detailed description of what the advisory entails.
        severity: critical
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        publisher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        identifiers:
        - type: GHSA
          value: GHSA-abcd-1234-efgh
        - type: CVE
          value: CVE-2050-00000
        state: published
        created_at: '2020-01-01T00:00:00Z'
        updated_at: '2020-01-02T00:00:00Z'
        published_at: '2020-01-03T00:00:00Z'
        vulnerabilities:
        - package:
            ecosystem: pip
            name: a-package
          vulnerable_version_range: ">= 1.0.0, < 1.0.1"
          patched_versions: 1.0.1
          vulnerable_functions:
          - function1
        - package:
            ecosystem: pip
            name: another-package
          vulnerable_version_range: ">= 1.0.0, < 1.0.2"
          patched_versions: 1.0.2
          vulnerable_functions:
          - function2
        cvss:
          vector_string: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
          score: 9.8
        cwes:
        - cwe_id: CWE-123
          name: A CWE
        cwe_ids:
        - CWE-123
        credits:
        - login: octocat
          type: analyst
        credits_detailed:
        - user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          type: analyst
          state: accepted
        collaborating_users:
        - login: octokitten
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octokitten_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octokitten
          html_url: https://github.com/octokitten
          followers_url: https://api.github.com/users/octokitten/followers
          following_url: https://api.github.com/users/octokitten/following{/other_user}
          gists_url: https://api.github.com/users/octokitten/gists{/gist_id}
          starred_url: https://api.github.com/users/octokitten/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octokitten/subscriptions
          organizations_url: https://api.github.com/users/octokitten/orgs
          repos_url: https://api.github.com/users/octokitten/repos
          events_url: https://api.github.com/users/octokitten/events{/privacy}
          received_events_url: https://api.github.com/users/octokitten/received_events
          type: User
          site_admin: false
        collaborating_teams:
        - name: Justice League
          id: 1
          node_id: MDQ6VGVhbTE=
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          permission: admin
    repository-advisory-pvr:
      value:
        ghsa_id: GHSA-abcd-1234-efgh
        cve_id: CVE-2050-00000
        url: https://api.github.com/repos/repo/a-package/security-advisories/GHSA-abcd-1234-efgh
        html_url: https://github.com/repo/a-package/security/advisories/GHSA-abcd-1234-efgh
        summary: A newly discovered vulnerability
        description: A more in-depth description of what the problem is.
        severity: high
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        identifiers:
        - type: GHSA
          value: GHSA-abcd-1234-efgh
        - type: CVE
        state: triage
        created_at: '2020-01-01T00:00:00Z'
        updated_at: '2020-01-02T00:00:00Z'
        submission:
          accepted: false
        vulnerabilities:
        - package:
            ecosystem: npm
            name: a-package
          vulnerable_version_range: "< 1.0.0"
          patched_versions: 1.0.0
          vulnerable_functions:
          - important_function
        cwes:
        - cwe_id: CWE-123
          name: A CWE
        cwe_ids:
        - CWE-123
        credits:
        - login: octocat
          type: finder
        credits_detailed:
        - user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          type: finder
          state: accepted
        collaborating_users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        collaborating_teams:
        - name: Justice League
          id: 1
          node_id: MDQ6VGVhbTE=
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          permission: admin
    simple-user-items-default-response:
      summary: Default response
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    stargazer-items-alternative-response-with-star-creation-timestamps:
      summary: Alternative response with star creation timestamps
      value:
      - starred_at: '2011-01-16T19:06:43Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    code-frequency-stat-items:
      value:
      - - 1302998400
        - 1124
        - -435
    commit-activity-items:
      value:
      - days:
        - 0
        - 3
        - 26
        - 20
        - 39
        - 1
        - 0
        total: 89
        week: 1336280400
    contributor-activity-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        total: 135
        weeks:
        - w: 1367712000
          a: 6898
          d: 77
          c: 10
    participation-stats:
      value:
        all:
        - 11
        - 21
        - 15
        - 2
        - 8
        - 1
        - 8
        - 23
        - 17
        - 21
        - 11
        - 10
        - 33
        - 91
        - 38
        - 34
        - 22
        - 23
        - 32
        - 3
        - 43
        - 87
        - 71
        - 18
        - 13
        - 5
        - 13
        - 16
        - 66
        - 27
        - 12
        - 45
        - 110
        - 117
        - 13
        - 8
        - 18
        - 9
        - 19
        - 26
        - 39
        - 12
        - 20
        - 31
        - 46
        - 91
        - 45
        - 10
        - 24
        - 9
        - 29
        - 7
        owner:
        - 3
        - 2
        - 3
        - 0
        - 2
        - 0
        - 5
        - 14
        - 7
        - 9
        - 1
        - 5
        - 0
        - 48
        - 19
        - 2
        - 0
        - 1
        - 10
        - 2
        - 23
        - 40
        - 35
        - 8
        - 8
        - 2
        - 10
        - 6
        - 30
        - 0
        - 2
        - 9
        - 53
        - 104
        - 3
        - 3
        - 10
        - 4
        - 7
        - 11
        - 21
        - 4
        - 4
        - 22
        - 26
        - 63
        - 11
        - 2
        - 14
        - 1
        - 10
        - 3
    code-frequency-stat-items-2:
      value:
      - - 0
        - 0
        - 5
      - - 0
        - 1
        - 43
      - - 0
        - 2
        - 21
    status:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    repository-subscription-response-if-you-subscribe-to-the-repository:
      value:
        subscribed: true
        ignored: false
        created_at: '2012-10-06T21:34:12Z'
        url: https://api.github.com/repos/octocat/example/subscription
        repository_url: https://api.github.com/repos/octocat/example
    repository-subscription:
      value:
        subscribed: true
        ignored: false
        created_at: '2012-10-06T21:34:12Z'
        url: https://api.github.com/repos/octocat/example/subscription
        repository_url: https://api.github.com/repos/octocat/example
    tag-items:
      value:
      - name: v0.1
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id: MDQ6VXNlcjE=
    tag-protection-items:
      value:
      - id: 2
        pattern: v1.*
    tag-protection:
      value:
        enabled: true
    topic:
      value:
        names:
        - octocat
        - atom
        - electron
        - api
    clone-traffic:
      value:
        count: 173
        uniques: 128
        clones:
        - timestamp: '2016-10-10T00:00:00Z'
          count: 2
          uniques: 1
        - timestamp: '2016-10-11T00:00:00Z'
          count: 17
          uniques: 16
        - timestamp: '2016-10-12T00:00:00Z'
          count: 21
          uniques: 15
        - timestamp: '2016-10-13T00:00:00Z'
          count: 8
          uniques: 7
        - timestamp: '2016-10-14T00:00:00Z'
          count: 5
          uniques: 5
        - timestamp: '2016-10-15T00:00:00Z'
          count: 2
          uniques: 2
        - timestamp: '2016-10-16T00:00:00Z'
          count: 8
          uniques: 7
        - timestamp: '2016-10-17T00:00:00Z'
          count: 26
          uniques: 15
        - timestamp: '2016-10-18T00:00:00Z'
          count: 19
          uniques: 17
        - timestamp: '2016-10-19T00:00:00Z'
          count: 19
          uniques: 14
        - timestamp: '2016-10-20T00:00:00Z'
          count: 19
          uniques: 15
        - timestamp: '2016-10-21T00:00:00Z'
          count: 9
          uniques: 7
        - timestamp: '2016-10-22T00:00:00Z'
          count: 5
          uniques: 5
        - timestamp: '2016-10-23T00:00:00Z'
          count: 6
          uniques: 5
        - timestamp: '2016-10-24T00:00:00Z'
          count: 7
          uniques: 5
    content-traffic-items:
      value:
      - path: "/github/hubot"
        title: 'github/hubot: A customizable life embetterment robot.'
        count: 3542
        uniques: 2225
      - path: "/github/hubot/blob/master/docs/scripting.md"
        title: hubot/scripting.md at master · github/hubot · GitHub
        count: 1707
        uniques: 804
      - path: "/github/hubot/tree/master/docs"
        title: hubot/docs at master · github/hubot · GitHub
        count: 685
        uniques: 435
      - path: "/github/hubot/tree/master/src"
        title: hubot/src at master · github/hubot · GitHub
        count: 577
        uniques: 347
      - path: "/github/hubot/blob/master/docs/index.md"
        title: hubot/index.md at master · github/hubot · GitHub
        count: 379
        uniques: 259
      - path: "/github/hubot/blob/master/docs/adapters.md"
        title: hubot/adapters.md at master · github/hubot · GitHub
        count: 354
        uniques: 201
      - path: "/github/hubot/tree/master/examples"
        title: hubot/examples at master · github/hubot · GitHub
        count: 340
        uniques: 260
      - path: "/github/hubot/blob/master/docs/deploying/heroku.md"
        title: hubot/heroku.md at master · github/hubot · GitHub
        count: 324
        uniques: 217
      - path: "/github/hubot/blob/master/src/robot.coffee"
        title: hubot/robot.coffee at master · github/hubot · GitHub
        count: 293
        uniques: 191
      - path: "/github/hubot/blob/master/LICENSE.md"
        title: hubot/LICENSE.md at master · github/hubot · GitHub
        count: 281
        uniques: 222
    referrer-traffic-items:
      value:
      - referrer: Google
        count: 4
        uniques: 3
      - referrer: stackoverflow.com
        count: 2
        uniques: 2
      - referrer: eggsonbread.com
        count: 1
        uniques: 1
      - referrer: yandex.ru
        count: 1
        uniques: 1
    view-traffic:
      value:
        count: 14850
        uniques: 3782
        views:
        - timestamp: '2016-10-10T00:00:00Z'
          count: 440
          uniques: 143
        - timestamp: '2016-10-11T00:00:00Z'
          count: 1308
          uniques: 414
        - timestamp: '2016-10-12T00:00:00Z'
          count: 1486
          uniques: 452
        - timestamp: '2016-10-13T00:00:00Z'
          count: 1170
          uniques: 401
        - timestamp: '2016-10-14T00:00:00Z'
          count: 868
          uniques: 266
        - timestamp: '2016-10-15T00:00:00Z'
          count: 495
          uniques: 157
        - timestamp: '2016-10-16T00:00:00Z'
          count: 524
          uniques: 175
        - timestamp: '2016-10-17T00:00:00Z'
          count: 1263
          uniques: 412
        - timestamp: '2016-10-18T00:00:00Z'
          count: 1402
          uniques: 417
        - timestamp: '2016-10-19T00:00:00Z'
          count: 1394
          uniques: 424
        - timestamp: '2016-10-20T00:00:00Z'
          count: 1492
          uniques: 448
        - timestamp: '2016-10-21T00:00:00Z'
          count: 1153
          uniques: 332
        - timestamp: '2016-10-22T00:00:00Z'
          count: 566
          uniques: 168
        - timestamp: '2016-10-23T00:00:00Z'
          count: 675
          uniques: 184
        - timestamp: '2016-10-24T00:00:00Z'
          count: 614
          uniques: 237
    minimal-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          allow_forking: true
          subscribers_count: 42
          network_count: 0
    repository-3:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        allow_auto_merge: false
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
    public-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    code-search-result-item-paginated:
      value:
        total_count: 7
        incomplete_results: false
        items:
        - name: classes.js
          path: src/attributes/classes.js
          sha: d7212f9dee2dcc18f084d7df8f417b80846ded5a
          url: https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4
          git_url: https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a
          html_url: https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js
          repository:
            id: 167174
            node_id: MDEwOlJlcG9zaXRvcnkxNjcxNzQ=
            name: jquery
            full_name: jquery/jquery
            owner:
              login: jquery
              id: 70142
              node_id: MDQ6VXNlcjcwMTQy
              avatar_url: https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png
              gravatar_id: ''
              url: https://api.github.com/users/jquery
              html_url: https://github.com/jquery
              followers_url: https://api.github.com/users/jquery/followers
              following_url: https://api.github.com/users/jquery/following{/other_user}
              gists_url: https://api.github.com/users/jquery/gists{/gist_id}
              starred_url: https://api.github.com/users/jquery/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/jquery/subscriptions
              organizations_url: https://api.github.com/users/jquery/orgs
              repos_url: https://api.github.com/users/jquery/repos
              events_url: https://api.github.com/users/jquery/events{/privacy}
              received_events_url: https://api.github.com/users/jquery/received_events
              type: Organization
              site_admin: false
            private: false
            html_url: https://github.com/jquery/jquery
            description: jQuery JavaScript Library
            fork: false
            url: https://api.github.com/repos/jquery/jquery
            forks_url: https://api.github.com/repos/jquery/jquery/forks
            keys_url: https://api.github.com/repos/jquery/jquery/keys{/key_id}
            collaborators_url: https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/jquery/jquery/teams
            hooks_url: https://api.github.com/repos/jquery/jquery/hooks
            issue_events_url: https://api.github.com/repos/jquery/jquery/issues/events{/number}
            events_url: https://api.github.com/repos/jquery/jquery/events
            assignees_url: https://api.github.com/repos/jquery/jquery/assignees{/user}
            branches_url: https://api.github.com/repos/jquery/jquery/branches{/branch}
            tags_url: https://api.github.com/repos/jquery/jquery/tags
            blobs_url: https://api.github.com/repos/jquery/jquery/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/jquery/jquery/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/jquery/jquery/git/refs{/sha}
            trees_url: https://api.github.com/repos/jquery/jquery/git/trees{/sha}
            statuses_url: https://api.github.com/repos/jquery/jquery/statuses/{sha}
            languages_url: https://api.github.com/repos/jquery/jquery/languages
            stargazers_url: https://api.github.com/repos/jquery/jquery/stargazers
            contributors_url: https://api.github.com/repos/jquery/jquery/contributors
            subscribers_url: https://api.github.com/repos/jquery/jquery/subscribers
            subscription_url: https://api.github.com/repos/jquery/jquery/subscription
            commits_url: https://api.github.com/repos/jquery/jquery/commits{/sha}
            git_commits_url: https://api.github.com/repos/jquery/jquery/git/commits{/sha}
            comments_url: https://api.github.com/repos/jquery/jquery/comments{/number}
            issue_comment_url: https://api.github.com/repos/jquery/jquery/issues/comments/{number}
            contents_url: https://api.github.com/repos/jquery/jquery/contents/{+path}
            compare_url: https://api.github.com/repos/jquery/jquery/compare/{base}...{head}
            merges_url: https://api.github.com/repos/jquery/jquery/merges
            archive_url: https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/jquery/jquery/downloads
            issues_url: https://api.github.com/repos/jquery/jquery/issues{/number}
            pulls_url: https://api.github.com/repos/jquery/jquery/pulls{/number}
            milestones_url: https://api.github.com/repos/jquery/jquery/milestones{/number}
            notifications_url: https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/jquery/jquery/labels{/name}
            deployments_url: http://api.github.com/repos/octocat/Hello-World/deployments
            releases_url: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          score: 1
    commit-search-result-item-paginated:
      value:
        total_count: 1
        incomplete_results: false
        items:
        - url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          sha: bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          html_url: https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          comments_url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments
          commit:
            url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            author:
              date: '2014-02-04T14:38:36-08:00'
              name: The Octocat
              email: octocat@nowhere.com
            committer:
              date: '2014-02-12T15:18:55-08:00'
              name: The Octocat
              email: octocat@nowhere.com
            message: Create styles.css and updated README
            tree:
              url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68
              sha: a639e96f9038797fba6e0469f94a4b0cc459fa68
            comment_count: 8
          author:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer: {}
          parents:
          - url: https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            html_url: https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            sha: a30c19e3f13765a3b48829788bc1cb8b4e95cee4
          repository:
            id: 1300192
            node_id: MDEwOlJlcG9zaXRvcnkxMzAwMTky
            name: Spoon-Knife
            full_name: octocat/Spoon-Knife
            owner:
              login: octocat
              id: 583231
              node_id: MDQ6VXNlcjU4MzIzMQ==
              avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Spoon-Knife
            description: This repo is for demonstration purposes only.
            fork: false
            url: https://api.github.com/repos/octocat/Spoon-Knife
            forks_url: https://api.github.com/repos/octocat/Spoon-Knife/forks
            keys_url: https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}
            collaborators_url: https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/octocat/Spoon-Knife/teams
            hooks_url: https://api.github.com/repos/octocat/Spoon-Knife/hooks
            issue_events_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}
            events_url: https://api.github.com/repos/octocat/Spoon-Knife/events
            assignees_url: https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}
            branches_url: https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}
            tags_url: https://api.github.com/repos/octocat/Spoon-Knife/tags
            blobs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}
            trees_url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}
            statuses_url: https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}
            languages_url: https://api.github.com/repos/octocat/Spoon-Knife/languages
            stargazers_url: https://api.github.com/repos/octocat/Spoon-Knife/stargazers
            contributors_url: https://api.github.com/repos/octocat/Spoon-Knife/contributors
            subscribers_url: https://api.github.com/repos/octocat/Spoon-Knife/subscribers
            subscription_url: https://api.github.com/repos/octocat/Spoon-Knife/subscription
            commits_url: https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}
            git_commits_url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}
            comments_url: https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}
            issue_comment_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}
            contents_url: https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}
            compare_url: https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}
            merges_url: https://api.github.com/repos/octocat/Spoon-Knife/merges
            archive_url: https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/octocat/Spoon-Knife/downloads
            issues_url: https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}
            pulls_url: https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}
            milestones_url: https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}
            releases_url: https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}
            deployments_url: https://api.github.com/repos/octocat/Spoon-Knife/deployments
          score: 1
          node_id: MDQ6VXNlcjU4MzIzMQ==
    issue-search-result-item-paginated:
      value:
        total_count: 280
        incomplete_results: false
        items:
        - url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132
          repository_url: https://api.github.com/repos/batterseapower/pinyin-toolkit
          labels_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}
          comments_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments
          events_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events
          html_url: https://github.com/batterseapower/pinyin-toolkit/issues/132
          id: 35802
          node_id: MDU6SXNzdWUzNTgwMg==
          number: 132
          title: Line Number Indexes Beyond 20 Not Displayed
          user:
            login: Nick3C
            id: 90254
            node_id: MDQ6VXNlcjkwMjU0
            avatar_url: https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            gravatar_id: ''
            url: https://api.github.com/users/Nick3C
            html_url: https://github.com/Nick3C
            followers_url: https://api.github.com/users/Nick3C/followers
            following_url: https://api.github.com/users/Nick3C/following{/other_user}
            gists_url: https://api.github.com/users/Nick3C/gists{/gist_id}
            starred_url: https://api.github.com/users/Nick3C/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Nick3C/subscriptions
            organizations_url: https://api.github.com/users/Nick3C/orgs
            repos_url: https://api.github.com/users/Nick3C/repos
            events_url: https://api.github.com/users/Nick3C/events{/privacy}
            received_events_url: https://api.github.com/users/Nick3C/received_events
            type: User
            site_admin: true
          labels:
          - id: 4
            node_id: MDU6TGFiZWw0
            url: https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug
            name: bug
            color: ff0000
          state: open
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          comments: 15
          created_at: '2009-07-12T20:10:41Z'
          updated_at: '2009-07-19T09:23:43Z'
          pull_request:
            url: https://api/github.com/repos/octocat/Hello-World/pull/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          body: "..."
          score: 1
          locked: true
          author_association: COLLABORATOR
          state_reason: completed
    label-search-result-item-paginated:
      value:
        total_count: 2
        incomplete_results: false
        items:
        - id: 418327088
          node_id: MDU6TGFiZWw0MTgzMjcwODg=
          url: https://api.github.com/repos/octocat/linguist/labels/enhancement
          name: enhancement
          color: 84b6eb
          default: true
          description: New feature or request.
          score: 1
        - id: 418327086
          node_id: MDU6TGFiZWw0MTgzMjcwODY=
          url: https://api.github.com/repos/octocat/linguist/labels/bug
          name: bug
          color: ee0701
          default: true
          description: Something isn't working.
          score: 1
    repo-search-result-item-paginated:
      value:
        total_count: 40
        incomplete_results: false
        items:
        - id: 3081286
          node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
          name: Tetris
          full_name: dtrupenn/Tetris
          owner:
            login: dtrupenn
            id: 872147
            node_id: MDQ6VXNlcjg3MjE0Nw==
            avatar_url: https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            gravatar_id: ''
            url: https://api.github.com/users/dtrupenn
            received_events_url: https://api.github.com/users/dtrupenn/received_events
            type: User
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            site_admin: true
          private: false
          html_url: https://github.com/dtrupenn/Tetris
          description: A C implementation of Tetris using Pennsim through LC4
          fork: false
          url: https://api.github.com/repos/dtrupenn/Tetris
          created_at: '2012-01-01T00:31:50Z'
          updated_at: '2013-01-05T17:58:47Z'
          pushed_at: '2012-01-01T00:37:02Z'
          homepage: https://github.com
          size: 524
          stargazers_count: 1
          watchers_count: 1
          language: Assembly
          forks_count: 0
          open_issues_count: 0
          master_branch: master
          default_branch: master
          score: 1
          archive_url: https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
          blobs_url: https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
          branches_url: https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
          collaborators_url: https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
          commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
          compare_url: https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
          contents_url: https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
          contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
          deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
          downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
          events_url: https://api.github.com/repos/dtrupenn/Tetris/events
          forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
          git_commits_url: https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
          git_url: git:github.com/dtrupenn/Tetris.git
          issue_comment_url: https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
          issues_url: https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
          keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
          labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
          languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
          merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
          milestones_url: https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
          notifications_url: https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
          releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
          ssh_url: git@github.com:dtrupenn/Tetris.git
          stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
          statuses_url: https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
          subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
          subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
          tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
          teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
          trees_url: https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
          clone_url: https://github.com/dtrupenn/Tetris.git
          mirror_url: git:git.example.com/dtrupenn/Tetris
          hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
          svn_url: https://svn.github.com/dtrupenn/Tetris
          forks: 1
          open_issues: 1
          watchers: 1
          has_issues: true
          has_projects: true
          has_pages: true
          has_wiki: true
          has_downloads: true
          archived: true
          disabled: true
          visibility: private
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
    topic-search-result-item-paginated:
      value:
        total_count: 6
        incomplete_results: false
        items:
        - name: ruby
          display_name: Ruby
          short_description: Ruby is a scripting language designed for simplified
            object-oriented programming.
          description: Ruby was developed by Yukihiro "Matz" Matsumoto in 1995 with
            the intent of having an easily readable programming language. It is integrated
            with the Rails framework to create dynamic web-applications. Ruby's syntax
            is similar to that of Perl and Python.
          created_by: Yukihiro Matsumoto
          released: December 21, 1995
          created_at: '2016-11-28T22:03:59Z'
          updated_at: '2017-10-30T18:16:32Z'
          featured: true
          curated: true
          score: 1
        - name: rails
          display_name: Rails
          short_description: Ruby on Rails (Rails) is a web application framework
            written in Ruby.
          description: Ruby on Rails (Rails) is a web application framework written
            in Ruby. It is meant to help simplify the building of complex websites.
          created_by: David Heinemeier Hansson
          released: December 13 2005
          created_at: '2016-12-09T17:03:50Z'
          updated_at: '2017-10-30T16:20:19Z'
          featured: true
          curated: true
          score: 1
        - name: python
          display_name: Python
          short_description: Python is a dynamically typed programming language.
          description: Python is a dynamically typed programming language designed
            by Guido Van Rossum. Much like the programming language Ruby, Python was
            designed to be easily read by programmers. Because of its large following
            and many libraries, Python can be implemented and used to do anything
            from webpages to scientific research.
          created_by: Guido van Rossum
          released: February 20, 1991
          created_at: '2016-12-07T00:07:02Z'
          updated_at: '2017-10-27T22:45:43Z'
          featured: true
          curated: true
          score: 1
        - name: jekyll
          display_name: Jekyll
          short_description: Jekyll is a simple, blog-aware static site generator.
          description: Jekyll is a blog-aware, site generator written in Ruby. It
            takes raw text files, runs it through a renderer and produces a publishable
            static website.
          created_by: Tom Preston-Werner
          released: '2008'
          created_at: '2016-12-16T21:53:08Z'
          updated_at: '2017-10-27T19:00:24Z'
          featured: true
          curated: true
          score: 1
        - name: sass
          display_name: Sass
          short_description: Sass is a stable extension to classic CSS.
          description: Sass is a stylesheet language with a main implementation in
            Ruby. It is an extension of CSS that makes improvements to the old stylesheet
            format, such as being able to declare variables and using a cleaner nesting
            syntax.
          created_by: Hampton Catlin, Natalie Weizenbaum, Chris Eppstein
          released: November 28, 2006
          created_at: '2016-12-16T21:53:45Z'
          updated_at: '2018-01-16T16:30:40Z'
          featured: true
          curated: true
          score: 1
        - name: homebrew
          display_name: Homebrew
          short_description: Homebrew is a package manager for macOS.
          description: Homebrew is a package manager for Apple's macOS operating system.
            It simplifies the installation of software and is popular in the Ruby
            on Rails community.
          created_by: Max Howell
          released: '2009'
          created_at: '2016-12-17T20:30:44Z'
          updated_at: '2018-02-06T16:14:56Z'
          featured: true
          curated: true
          score: 1
    user-search-result-item-paginated:
      value:
        total_count: 12
        incomplete_results: false
        items:
        - login: mojombo
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
          gravatar_id: ''
          url: https://api.github.com/users/mojombo
          html_url: https://github.com/mojombo
          followers_url: https://api.github.com/users/mojombo/followers
          subscriptions_url: https://api.github.com/users/mojombo/subscriptions
          organizations_url: https://api.github.com/users/mojombo/orgs
          repos_url: https://api.github.com/users/mojombo/repos
          received_events_url: https://api.github.com/users/mojombo/received_events
          type: User
          score: 1
          following_url: https://api.github.com/users/mojombo/following{/other_user}
          gists_url: https://api.github.com/users/mojombo/gists{/gist_id}
          starred_url: https://api.github.com/users/mojombo/starred{/owner}{/repo}
          events_url: https://api.github.com/users/mojombo/events{/privacy}
          site_admin: true
    team-repository-alternative-response-with-extra-repository-information:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          maintain: false
          push: false
          triage: false
          pull: true
        role_name: read
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            pull: true
            triage: false
            push: false
            maintain: false
            admin: false
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
    private-user-response-with-public-and-private-profile-information:
      summary: Response with public and private profile information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        private_gists: 81
        total_private_repos: 100
        owned_private_repos: 100
        disk_usage: 10000
        collaborators: 8
        two_factor_authentication: true
        plan:
          name: Medium
          space: 400
          private_repos: 20
          collaborators: 0
    private-user-response-with-public-profile-information:
      summary: Response with public profile information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
    private-user:
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        private_gists: 81
        total_private_repos: 100
        owned_private_repos: 100
        disk_usage: 10000
        collaborators: 8
        two_factor_authentication: true
        plan:
          name: Medium
          space: 400
          private_repos: 20
          collaborators: 0
    codespaces-user-public-key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    user-codespaces-secret:
      value:
        name: CODESPACE_GH_SECRET
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
        visibility: selected
        selected_repositories_url: https://api.github.com/user/codespaces/secrets/CODESPACE_GH_SECRET/repositories
    minimal-repository-paginated:
      value:
        total_count: 1
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          template_repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks: 9
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            watchers: 80
            size: 108
            default_branch: master
            open_issues: 0
            open_issues_count: 0
            is_template: true
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          delete_branch_on_merge: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
          forks: 1
          open_issues: 1
          watchers: 1
    user-export-details:
      value:
        state: succeeded
        completed_at: '2022-01-01T14:59:22Z'
        branch: codespace-monalisa-octocat-hello-world-g4wpq6h95q
        sha: fd95a81ca01e48ede9f39c799ecbcef817b8a3b2
        id: latest
        export_url: https://api.github.com/user/codespaces/:name/exports/latest
    codespace-with-full-repository:
      value:
        id: 1
        name: monalisa-octocat-hello-world-g4wpq6h95q
        environment_id: 26a7c758-7299-4a73-b978-5a92a7ae98a0
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        billable_owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks_count: 9
          forks: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          open_issues: 0
          is_template: false
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            pull: true
            push: false
            admin: false
          allow_rebase_merge: true
          template_repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World-Template
            full_name: octocat/Hello-World-Template
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World-Template
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World-Template
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            homepage: https://github.com
            forks: 9
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            watchers: 80
            size: 108
            default_branch: master
            open_issues: 0
            open_issues_count: 0
            is_template: true
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          allow_forking: true
          subscribers_count: 42
          network_count: 0
          organization:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: Organization
            site_admin: false
          parent:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
          source:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        machine:
          name: standardLinux
          display_name: 4 cores, 16 GB RAM, 64 GB storage
          operating_system: linux
          storage_in_bytes: 68719476736
          memory_in_bytes: 17179869184
          cpus: 4
        prebuild: false
        devcontainer_path: ".devcontainer/devcontainer.json"
        created_at: '2021-10-14T00:53:30-06:00'
        updated_at: '2021-10-14T00:53:32-06:00'
        last_used_at: '2021-10-14T00:53:30-06:00'
        state: Available
        url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q
        git_status:
          ahead: 0
          behind: 0
          has_unpushed_changes: false
          has_uncommitted_changes: false
          ref: main
        location: WestUs2
        idle_timeout_minutes: 60
        retention_period_minutes: 43200
        web_url: https://monalisa-octocat-hello-world-g4wpq6h95q.github.dev
        machines_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/machines
        start_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/start
        stop_url: https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/stop
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        recent_folders: []
    packages-for-user:
      value:
      - id: 197
        name: hello_docker
        package_type: container
        owner:
          login: octocat
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.octocatusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: User
          site_admin: false
        version_count: 1
        visibility: private
        url: https://api.github.com/orgs/github/packages/container/hello_docker
        created_at: '2020-05-19T22:19:11Z'
        updated_at: '2020-05-19T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/package/hello_docker
      - id: 198
        name: goodbye_docker
        package_type: container
        owner:
          login: github
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: User
          site_admin: false
        version_count: 2
        visibility: private
        url: https://api.github.com/user/octocat/packages/container/goodbye_docker
        created_at: '2020-05-20T22:19:11Z'
        updated_at: '2020-05-20T22:19:11Z'
        html_url: https://github.com/user/octocat/packages/container/package/goodbye_docker
    email-items-3:
      value:
      - email: octocat@github.com
        primary: true
        verified: true
        visibility: private
    email-items-2:
      value:
      - email: octocat@github.com
        verified: true
        primary: true
        visibility: public
    email-items:
      value:
      - email: octocat@octocat.org
        primary: false
        verified: false
        visibility: public
      - email: octocat@github.com
        primary: false
        verified: false
      - email: mona@github.com
        primary: false
        verified: false
    gpg-key-items:
      value:
      - id: 3
        name: Octocat's GPG Key
        primary_key_id: 2
        key_id: 3262EFF25BA0D270
        public_key: xsBNBFayYZ...
        emails:
        - email: octocat@users.noreply.github.com
          verified: true
        subkeys:
        - id: 4
          primary_key_id: 3
          key_id: 4A595D4C72EE49C7
          public_key: zsBNBFayYZ...
          emails: []
          can_sign: false
          can_encrypt_comms: true
          can_encrypt_storage: true
          can_certify: false
          created_at: '2016-03-24T11:31:04-06:00'
          expires_at: '2016-03-24T11:31:04-07:00'
          revoked: false
        can_sign: true
        can_encrypt_comms: false
        can_encrypt_storage: false
        can_certify: true
        created_at: '2016-03-24T11:31:04-06:00'
        expires_at: '2016-03-24T11:31:04-07:00'
        revoked: false
        raw_key: string
    gpg-key:
      value:
        id: 3
        name: Octocat's GPG Key
        primary_key_id: 2
        key_id: 3262EFF25BA0D270
        public_key: xsBNBFayYZ...
        emails:
        - email: octocat@users.noreply.github.com
          verified: true
        subkeys:
        - id: 4
          primary_key_id: 3
          key_id: 4A595D4C72EE49C7
          public_key: zsBNBFayYZ...
          emails: []
          can_sign: false
          can_encrypt_comms: true
          can_encrypt_storage: true
          can_certify: false
          created_at: '2016-03-24T11:31:04-06:00'
          expires_at: '2016-03-24T11:31:04-07:00'
          revoked: false
        can_sign: true
        can_encrypt_comms: false
        can_encrypt_storage: false
        can_certify: true
        created_at: '2016-03-24T11:31:04-06:00'
        expires_at: '2016-03-24T11:31:04-07:00'
        revoked: false
        raw_key: '"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\nIts/HFYRLiFgDLmTlxo=\n=+OzK\n-----END
          PGP PUBLIC KEY BLOCK-----"'
    base-installation-for-auth-user-paginated:
      value:
        total_count: 2
        installations:
        - id: 1
          account:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          access_tokens_url: https://api.github.com/app/installations/1/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/github/settings/installations/1
          app_id: 1
          target_id: 1
          target_type: Organization
          permissions:
            checks: write
            metadata: read
            contents: read
          events:
          - push
          - pull_request
          single_file_name: config.yaml
          has_multiple_single_files: true
          single_file_paths:
          - config.yml
          - ".github/issue_TEMPLATE.md"
          repository_selection: all
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          app_slug: github-actions
        - id: 3
          account:
            login: octocat
            id: 2
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          access_tokens_url: https://api.github.com/app/installations/1/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/github/settings/installations/1
          app_id: 1
          target_id: 1
          target_type: Organization
          permissions:
            checks: write
            metadata: read
            contents: read
          events:
          - push
          - pull_request
          single_file_name: config.yaml
          has_multiple_single_files: true
          single_file_paths:
          - config.yml
          - ".github/issue_TEMPLATE.md"
          repository_selection: all
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          app_slug: github-actions
    interaction-limit-user:
      value:
        limit: collaborators_only
        origin: user
        expires_at: '2018-08-17T04:18:39Z'
    key-items:
      value:
      - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
        verified: false
        read_only: false
      - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234
        id: 3
        url: https://api.github.com/user/keys/3
        title: ssh-rsa AAAAB3NzaC1yc2EAAB
        created_at: '2020-07-11T21:31:57Z'
        verified: false
        read_only: false
    key:
      value:
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
        verified: false
        read_only: false
    user-marketplace-purchase-items:
      value:
      - billing_cycle: monthly
        next_billing_date: '2017-11-11T00:00:00Z'
        on_free_trial: true
        free_trial_ends_on: '2017-11-11T00:00:00Z'
        updated_at: '2017-11-02T01:12:12Z'
        account:
          login: github
          id: 4
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          organization_billing_email: billing@github.com
          type: Organization
        plan:
          url: https://api.github.com/marketplace_listing/plans/1313
          accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
          id: 1313
          number: 3
          name: Pro
          description: A professional-grade CI solution
          monthly_price_in_cents: 1099
          yearly_price_in_cents: 11870
          price_model: FLAT_RATE
          has_free_trial: true
          state: published
          bullets:
          - Up to 25 private repositories
          - 11 concurrent builds
    org-membership-items:
      value:
      - url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
      - url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership:
      value:
        url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-2:
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    migration-items:
      value:
      - id: 79
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state: pending
        lock_repositories: true
        exclude_attachments: false
        exclude_releases: false
        exclude_owner_projects: false
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        url: https://api.github.com/orgs/octo-org/migrations/79
        created_at: '2015-07-06T15:33:38-07:00'
        updated_at: '2015-07-06T15:33:38-07:00'
        node_id: MDQ6VXNlcjE=
    migration-2:
      value:
        id: 79
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state: pending
        lock_repositories: true
        exclude_attachments: false
        exclude_releases: false
        exclude_owner_projects: false
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        url: https://api.github.com/orgs/octo-org/migrations/79
        created_at: '2015-07-06T15:33:38-07:00'
        updated_at: '2015-07-06T15:33:38-07:00'
    migration:
      value:
        id: 79
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        state: exported
        lock_repositories: true
        exclude_attachments: false
        exclude_releases: false
        exclude_owner_projects: false
        org_metadata_only: false
        repositories:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        url: https://api.github.com/orgs/octo-org/migrations/79
        created_at: '2015-07-06T15:33:38-07:00'
        updated_at: '2015-07-06T15:33:38-07:00'
    package-user:
      value:
        id: 40201
        name: octo-name
        package_type: rubygems
        owner:
          login: octocat
          id: 209477
          node_id: MDQ6VXNlcjIwOTQ3Nw==
          avatar_url: https://avatars.githubusercontent.com/u/209477?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        version_count: 3
        visibility: public
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name
        created_at: '2019-10-20T14:17:14Z'
        updated_at: '2019-10-20T14:17:14Z'
        repository:
          id: 216219492
          node_id: MDEwOlJlcG9zaXRvcnkyMTYyMTk0OTI=
          name: octo-name-repo
          full_name: octocat/octo-name-repo
          private: false
          owner:
            login: octocat
            id: 209477
            node_id: MDQ6VXNlcjIwOTQ3Nw==
            avatar_url: https://avatars.githubusercontent.com/u/209477?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          html_url: https://github.com/octocat/octo-name-repo
          description: Project for octocats
          fork: false
          url: https://api.github.com/repos/octocat/octo-name-repo
          forks_url: https://api.github.com/repos/octocat/octo-name-repo/forks
          keys_url: https://api.github.com/repos/octocat/octo-name-repo/keys{/key_id}
          collaborators_url: https://api.github.com/repos/octocat/octo-name-repo/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/octocat/octo-name-repo/teams
          hooks_url: https://api.github.com/repos/octocat/octo-name-repo/hooks
          issue_events_url: https://api.github.com/repos/octocat/octo-name-repo/issues/events{/number}
          events_url: https://api.github.com/repos/octocat/octo-name-repo/events
          assignees_url: https://api.github.com/repos/octocat/octo-name-repo/assignees{/user}
          branches_url: https://api.github.com/repos/octocat/octo-name-repo/branches{/branch}
          tags_url: https://api.github.com/repos/octocat/octo-name-repo/tags
          blobs_url: https://api.github.com/repos/octocat/octo-name-repo/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/octo-name-repo/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/octocat/octo-name-repo/git/refs{/sha}
          trees_url: https://api.github.com/repos/octocat/octo-name-repo/git/trees{/sha}
          statuses_url: https://api.github.com/repos/octocat/octo-name-repo/statuses/{sha}
          languages_url: https://api.github.com/repos/octocat/octo-name-repo/languages
          stargazers_url: https://api.github.com/repos/octocat/octo-name-repo/stargazers
          contributors_url: https://api.github.com/repos/octocat/octo-name-repo/contributors
          subscribers_url: https://api.github.com/repos/octocat/octo-name-repo/subscribers
          subscription_url: https://api.github.com/repos/octocat/octo-name-repo/subscription
          commits_url: https://api.github.com/repos/octocat/octo-name-repo/commits{/sha}
          git_commits_url: https://api.github.com/repos/octocat/octo-name-repo/git/commits{/sha}
          comments_url: https://api.github.com/repos/octocat/octo-name-repo/comments{/number}
          issue_comment_url: https://api.github.com/repos/octocat/octo-name-repo/issues/comments{/number}
          contents_url: https://api.github.com/repos/octocat/octo-name-repo/contents/{+path}
          compare_url: https://api.github.com/repos/octocat/octo-name-repo/compare/{base}...{head}
          merges_url: https://api.github.com/repos/octocat/octo-name-repo/merges
          archive_url: https://api.github.com/repos/octocat/octo-name-repo/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/octocat/octo-name-repo/downloads
          issues_url: https://api.github.com/repos/octocat/octo-name-repo/issues{/number}
          pulls_url: https://api.github.com/repos/octocat/octo-name-repo/pulls{/number}
          milestones_url: https://api.github.com/repos/octocat/octo-name-repo/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/octo-name-repo/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/octocat/octo-name-repo/labels{/name}
          releases_url: https://api.github.com/repos/octocat/octo-name-repo/releases{/id}
          deployments_url: https://api.github.com/repos/octocat/octo-name-repo/deployments
        html_url: https://github.com/octocat/octo-name-repo/packages/40201
    package-versions-for-authenticated-user:
      value:
      - id: 45763
        name: sha256:08a44bab0bddaddd8837a8b381aebc2e4b933768b981685a9e088360af0d3dd9
        url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/45763
        package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker
        created_at: '2020-09-11T21:56:40Z'
        updated_at: '2021-02-05T21:32:32Z'
        html_url: https://github.com/users/octocat/packages/container/hello_docker/45763
        metadata:
          package_type: container
          container:
            tags:
            - latest
      - id: 881
        name: sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344
        url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/881
        package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker
        created_at: '2020-05-21T22:22:20Z'
        updated_at: '2021-02-05T21:32:32Z'
        html_url: https://github.com/users/octocat/packages/container/hello_docker/881
        metadata:
          package_type: container
          container:
            tags: []
    package-version-authenticated-user:
      value:
        id: 214
        name: sha256:3561f0cff06caccddb99c93bd26e712fcc56a811de0f8ea7a17bb865f30b176a
        url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/214
        package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker
        created_at: '2020-05-15T03:46:45Z'
        updated_at: '2020-05-15T03:46:45Z'
        html_url: https://github.com/users/octocat/packages/container/hello_docker/214
        metadata:
          package_type: container
          container:
            tags:
            - 1.13.6
    project:
      value:
        owner_url: https://api.github.com/users/octocat
        url: https://api.github.com/projects/1002603
        html_url: https://github.com/users/octocat/projects/1
        columns_url: https://api.github.com/projects/1002603/columns
        id: 1002603
        node_id: MDc6UHJvamVjdDEwMDI2MDM=
        name: My Projects
        body: A board to manage my personal projects.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    repository-items-default-response:
      summary: Default response
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
    social-account-items:
      value:
      - provider: twitter
        url: https://twitter.com/github
    ssh-signing-key-items:
      value:
      - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
      - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234
        id: 3
        url: https://api.github.com/user/keys/3
        title: ssh-rsa AAAAB3NzaC1yc2EAAB
        created_at: '2020-07-11T21:31:57Z'
    ssh-signing-key:
      value:
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
    starred-repository-items-alternative-response-with-star-creation-timestamps:
      summary: Alternative response with star creation timestamps
      value:
      - starred_at: '2011-01-16T19:06:43Z'
        repo:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    team-full-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        members_count: 3
        repos_count: 10
        created_at: '2017-07-14T16:53:42Z'
        updated_at: '2017-08-17T12:37:15Z'
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          name: github
          company: GitHub
          blog: https://github.com/blog
          location: San Francisco
          email: octocat@github.com
          is_verified: true
          has_organization_projects: true
          has_repository_projects: true
          public_repos: 2
          public_gists: 1
          followers: 20
          following: 0
          html_url: https://github.com/octocat
          created_at: '2008-01-14T04:33:35Z'
          updated_at: '2017-08-17T12:37:15Z'
          type: Organization
    public-user-default-response:
      summary: Default response
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
    public-user-response-with-git-hub-plan-information:
      summary: Response with GitHub plan information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        plan:
          name: pro
          space: 976562499
          collaborators: 0
          private_repos: 9999
    user-events-items:
      value:
      - id: '22249084947'
        type: WatchEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          action: started
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: false
        created_at: '2022-06-07T07:50:26Z'
    user-org-events-items:
      value:
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: false
        created_at: '2022-06-09T12:47:28Z'
      - id: '22196946742'
        type: CreateEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          ref_type: repository
          master_branch: master
          pusher_type: user
        public: false
        created_at: '2022-06-07T07:50:26Z'
        org:
          id: 9919
          login: github
          gravatar_id: ''
          url: https://api.github.com/orgs/github
          avatar_url: https://avatars.githubusercontent.com/u/9919?
    user-public-events-items:
      value:
      - id: '22249084947'
        type: WatchEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          action: started
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-08T23:29:25Z'
    hovercard:
      value:
        contexts:
        - message: Owns this repository
          octicon: repo
    key-simple-items:
      value:
      - id: 1
        key: ssh-rsa AAA...
    package-versions-for-user:
      value:
      - id: 3497268
        name: 0.3.0
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/3497268
        package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
        license: MIT
        created_at: '2020-08-31T15:22:11Z'
        updated_at: '2020-08-31T15:22:12Z'
        description: Project for octocats
        html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.3.0
        metadata:
          package_type: rubygems
      - id: 387039
        name: 0.2.0
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039
        package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
        license: MIT
        created_at: '2019-12-01T20:49:29Z'
        updated_at: '2019-12-01T20:49:30Z'
        description: Project for octocats
        html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0
        metadata:
          package_type: rubygems
      - id: 169770
        name: 0.1.0
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/169770
        package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
        license: MIT
        created_at: '2019-10-20T14:17:14Z'
        updated_at: '2019-10-20T14:17:15Z'
        html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.1.0
        metadata:
          package_type: rubygems
    package-version-user:
      value:
        id: 387039
        name: 0.2.0
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039
        package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
        license: MIT
        created_at: '2019-12-01T20:49:29Z'
        updated_at: '2019-12-01T20:49:30Z'
        description: Octo-name client for Ruby
        html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0
        metadata:
          package_type: rubygems
    project-items-3:
      value:
      - owner_url: https://api.github.com/users/octocat
        url: https://api.github.com/projects/1002603
        html_url: https://github.com/users/octocat/projects/1
        columns_url: https://api.github.com/projects/1002603/columns
        id: 1002603
        node_id: MDc6UHJvamVjdDEwMDI2MDM=
        name: My Projects
        body: A board to manage my personal projects.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    user-received-events-items:
      value:
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22196946742'
        type: CreateEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          ref_type: repository
          master_branch: master
          pusher_type: user
        public: false
        created_at: '2022-06-07T07:50:26Z'
        org:
          id: 9919
          login: github
          gravatar_id: ''
          url: https://api.github.com/orgs/github
          avatar_url: https://avatars.githubusercontent.com/u/9919?
    user-received-public-events-items:
      value:
      - id: '22249084964'
        type: PushEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          push_id: 10115855396
          size: 1
          distinct_size: 1
          ref: refs/heads/master
          head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          before: 883efe034920928c47fe18598c01249d1a9fdabd
          commits:
          - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            author:
              email: octocat@github.com
              name: Monalisa Octocat
            message: commit
            distinct: true
            url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
        public: true
        created_at: '2022-06-09T12:47:28Z'
      - id: '22196946742'
        type: CreateEvent
        actor:
          id: 583231
          login: octocat
          display_login: octocat
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
        repo:
          id: 1296269
          name: octocat/Hello-World
          url: https://api.github.com/repos/octocat/Hello-World
        payload:
          ref_type: repository
          master_branch: master
          pusher_type: user
        public: false
        created_at: '2022-06-07T07:50:26Z'
        org:
          id: 9919
          login: github
          gravatar_id: ''
          url: https://api.github.com/orgs/github
          avatar_url: https://avatars.githubusercontent.com/u/9919?
    check-run-completed:
      value:
        action: completed
        check_run:
          id: 128620228
          node_id: MDg6Q2hlY2tSdW4xMjg2MjAyMjg=
          head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
          external_id: ''
          url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228
          html_url: https://github.com/Codertocat/Hello-World/runs/128620228
          details_url: https://octocoders.github.io
          status: completed
          conclusion: success
          started_at: '2019-05-15T15:21:12Z'
          completed_at: '2019-05-15T15:21:45Z'
          output:
            annotations_count: 0
            annotations_url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228/annotations
          name: Octocoders-linter
          check_suite:
            id: 118578147
            node_id: MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=
            head_branch: changes
            head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            status: completed
            url: https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147
            before: 6113728f27ae82c7b1a177c8d03f9e96e0adf246
            after: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            pull_requests:
            - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
              id: 279147437
              number: 2
              head:
                ref: changes
                sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
              base:
                ref: master
                sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
            deployment:
              url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728
              id: 326191728
              node_id: MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg=
              task: deploy
              original_environment: lab
              environment: lab
              created_at: '2021-02-18T08:22:48Z'
              updated_at: '2021-02-18T09:47:16Z'
              statuses_url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728/statuses
              repository_url: https://api.github.com/repos/Codertocat/Hello-World
            app:
              id: 29310
              node_id: MDM6QXBwMjkzMTA=
              owner:
                login: Octocoders
                id: 38302899
                node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
                avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
                gravatar_id: ''
                url: https://api.github.com/users/Octocoders
                html_url: https://github.com/Octocoders
                followers_url: https://api.github.com/users/Octocoders/followers
                following_url: https://api.github.com/users/Octocoders/following{/other_user}
                gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
                starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
                organizations_url: https://api.github.com/users/Octocoders/orgs
                repos_url: https://api.github.com/users/Octocoders/repos
                events_url: https://api.github.com/users/Octocoders/events{/privacy}
                received_events_url: https://api.github.com/users/Octocoders/received_events
                type: Organization
                site_admin: false
              name: octocoders-linter
              description: ''
              external_url: https://octocoders.github.io
              html_url: https://github.com/apps/octocoders-linter
              created_at: '2019-04-19T19:36:24Z'
              updated_at: '2019-04-19T19:36:56Z'
              permissions:
                administration: write
                checks: write
                contents: write
                deployments: write
                issues: write
                members: write
                metadata: read
                organization_administration: write
                organization_hooks: write
                organization_plan: read
                organization_projects: write
                organization_user_blocking: write
                pages: write
                pull_requests: write
                repository_hooks: write
                repository_projects: write
                statuses: write
                team_discussions: write
                vulnerability_alerts: read
              events: []
            created_at: '2019-05-15T15:20:31Z'
            updated_at: '2019-05-15T15:20:31Z'
          app:
            id: 29310
            node_id: MDM6QXBwMjkzMTA=
            owner:
              login: Octocoders
              id: 38302899
              node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
              avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
              gravatar_id: ''
              url: https://api.github.com/users/Octocoders
              html_url: https://github.com/Octocoders
              followers_url: https://api.github.com/users/Octocoders/followers
              following_url: https://api.github.com/users/Octocoders/following{/other_user}
              gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
              starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
              organizations_url: https://api.github.com/users/Octocoders/orgs
              repos_url: https://api.github.com/users/Octocoders/repos
              events_url: https://api.github.com/users/Octocoders/events{/privacy}
              received_events_url: https://api.github.com/users/Octocoders/received_events
              type: Organization
              site_admin: false
            name: octocoders-linter
            description: ''
            external_url: https://octocoders.github.io
            html_url: https://github.com/apps/octocoders-linter
            created_at: '2019-04-19T19:36:24Z'
            updated_at: '2019-04-19T19:36:56Z'
            permissions:
              administration: write
              checks: write
              contents: write
              deployments: write
              issues: write
              members: write
              metadata: read
              organization_administration: write
              organization_hooks: write
              organization_plan: read
              organization_projects: write
              organization_user_blocking: write
              pages: write
              pull_requests: write
              repository_hooks: write
              repository_projects: write
              statuses: write
              team_discussions: write
              vulnerability_alerts: read
            events: []
          pull_requests:
          - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
            id: 279147437
            number: 2
            head:
              ref: changes
              sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
            base:
              ref: master
              sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
        repository:
          id: 186853002
          node_id: MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=
          name: Hello-World
          full_name: Codertocat/Hello-World
          private: false
          owner:
            login: Codertocat
            id: 21031067
            node_id: MDQ6VXNlcjIxMDMxMDY3
            avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
            gravatar_id: ''
            url: https://api.github.com/users/Codertocat
            html_url: https://github.com/Codertocat
            followers_url: https://api.github.com/users/Codertocat/followers
            following_url: https://api.github.com/users/Codertocat/following{/other_user}
            gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
            starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
            organizations_url: https://api.github.com/users/Codertocat/orgs
            repos_url: https://api.github.com/users/Codertocat/repos
            events_url: https://api.github.com/users/Codertocat/events{/privacy}
            received_events_url: https://api.github.com/users/Codertocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/Codertocat/Hello-World
          fork: false
          url: https://api.github.com/repos/Codertocat/Hello-World
          forks_url: https://api.github.com/repos/Codertocat/Hello-World/forks
          keys_url: https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}
          collaborators_url: https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/Codertocat/Hello-World/teams
          hooks_url: https://api.github.com/repos/Codertocat/Hello-World/hooks
          issue_events_url: https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}
          events_url: https://api.github.com/repos/Codertocat/Hello-World/events
          assignees_url: https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}
          branches_url: https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}
          tags_url: https://api.github.com/repos/Codertocat/Hello-World/tags
          blobs_url: https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}
          trees_url: https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}
          statuses_url: https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}
          languages_url: https://api.github.com/repos/Codertocat/Hello-World/languages
          stargazers_url: https://api.github.com/repos/Codertocat/Hello-World/stargazers
          contributors_url: https://api.github.com/repos/Codertocat/Hello-World/contributors
          subscribers_url: https://api.github.com/repos/Codertocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/Codertocat/Hello-World/subscription
          commits_url: https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}
          git_commits_url: https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}
          comments_url: https://api.github.com/repos/Codertocat/Hello-World/comments{/number}
          issue_comment_url: https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}
          contents_url: https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}
          compare_url: https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}
          merges_url: https://api.github.com/repos/Codertocat/Hello-World/merges
          archive_url: https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/Codertocat/Hello-World/downloads
          issues_url: https://api.github.com/repos/Codertocat/Hello-World/issues{/number}
          pulls_url: https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}
          milestones_url: https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/Codertocat/Hello-World/labels{/name}
          releases_url: https://api.github.com/repos/Codertocat/Hello-World/releases{/id}
          deployments_url: https://api.github.com/repos/Codertocat/Hello-World/deployments
          created_at: '2019-05-15T15:19:25Z'
          updated_at: '2019-05-15T15:21:03Z'
          pushed_at: '2019-05-15T15:20:57Z'
          git_url: git://github.com/Codertocat/Hello-World.git
          ssh_url: git@github.com:Codertocat/Hello-World.git
          clone_url: https://github.com/Codertocat/Hello-World.git
          svn_url: https://github.com/Codertocat/Hello-World
          size: 0
          stargazers_count: 0
          watchers_count: 0
          language: Ruby
          has_issues: true
          has_projects: true
          has_downloads: true
          has_wiki: true
          has_pages: true
          forks_count: 1
          archived: false
          disabled: false
          open_issues_count: 2
          forks: 1
          open_issues: 2
          watchers: 0
          default_branch: master
          is_template: false
        sender:
          login: Codertocat
          id: 21031067
          node_id: MDQ6VXNlcjIxMDMxMDY3
          avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
          gravatar_id: ''
          url: https://api.github.com/users/Codertocat
          html_url: https://github.com/Codertocat
          followers_url: https://api.github.com/users/Codertocat/followers
          following_url: https://api.github.com/users/Codertocat/following{/other_user}
          gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
          starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
          organizations_url: https://api.github.com/users/Codertocat/orgs
          repos_url: https://api.github.com/users/Codertocat/repos
          events_url: https://api.github.com/users/Codertocat/events{/privacy}
          received_events_url: https://api.github.com/users/Codertocat/received_events
          type: User
          site_admin: false
    check-run-completed-form-encoded:
      value:
        payload: "%7B%22action%22%3A%22completed%22%2C%22check_run%22%3A%7B%22id%22%3A128620228%2C%22node_id%22%3A%22MDg6Q2hlY2tSdW4xMjg2MjAyMjg%3D%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22external_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%2Fruns%2F128620228%22%2C%22details_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22status%22%3A%22completed%22%2C%22conclusion%22%3A%22success%22%2C%22started_at%22%3A%222019-05-15T15%3A21%3A12Z%22%2C%22completed_at%22%3A%222019-05-15T15%3A21%3A45Z%22%2C%22output%22%3A%7B%22title%22%3Anull%2C%22summary%22%3Anull%2C%22text%22%3Anull%2C%22annotations_count%22%3A0%2C%22annotations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%2Fannotations%22%7D%2C%22name%22%3A%22Octocoders-linter%22%2C%22check_suite%22%3A%7B%22id%22%3A118578147%2C%22node_id%22%3A%22MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc%3D%22%2C%22head_branch%22%3A%22changes%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22status%22%3A%22completed%22%2C%22conclusion%22%3Anull%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-suites%2F118578147%22%2C%22before%22%3A%226113728f27ae82c7b1a177c8d03f9e96e0adf246%22%2C%22after%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%2C%22deployment%22%3A%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%22%2C%22id%22%3A326191728%2C%22node_id%22%3A%22MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg%3D%22%2C%22task%22%3A%22deploy%22%2C%22original_environment%22%3A%22lab%22%2C%22environment%22%3A%22lab%22%2C%22description%22%3Anull%2C%22created_at%22%3A%222021-02-18T08%3A22%3A48Z%22%2C%22updated_at%22%3A%222021-02-18T09%3A47%3A16Z%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%2Fstatuses%22%2C%22repository_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22created_at%22%3A%222019-05-15T15%3A20%3A31Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A20%3A31Z%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%7D%2C%22repository%22%3A%7B%22id%22%3A186853002%2C%22node_id%22%3A%22MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI%3D%22%2C%22name%22%3A%22Hello-World%22%2C%22full_name%22%3A%22Codertocat%2FHello-World%22%2C%22private%22%3Afalse%2C%22owner%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22description%22%3Anull%2C%22fork%22%3Afalse%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22forks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fforks%22%2C%22keys_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fkeys%7B%2Fkey_id%7D%22%2C%22collaborators_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcollaborators%7B%2Fcollaborator%7D%22%2C%22teams_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fteams%22%2C%22hooks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fhooks%22%2C%22issue_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fevents%7B%2Fnumber%7D%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fevents%22%2C%22assignees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fassignees%7B%2Fuser%7D%22%2C%22branches_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fbranches%7B%2Fbranch%7D%22%2C%22tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Ftags%22%2C%22blobs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fblobs%7B%2Fsha%7D%22%2C%22git_tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftags%7B%2Fsha%7D%22%2C%22git_refs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Frefs%7B%2Fsha%7D%22%2C%22trees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftrees%7B%2Fsha%7D%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstatuses%2F%7Bsha%7D%22%2C%22languages_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flanguages%22%2C%22stargazers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstargazers%22%2C%22contributors_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontributors%22%2C%22subscribers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscribers%22%2C%22subscription_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscription%22%2C%22commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcommits%7B%2Fsha%7D%22%2C%22git_commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fcommits%7B%2Fsha%7D%22%2C%22comments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcomments%7B%2Fnumber%7D%22%2C%22issue_comment_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fcomments%7B%2Fnumber%7D%22%2C%22contents_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontents%2F%7B%2Bpath%7D%22%2C%22compare_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcompare%2F%7Bbase%7D...%7Bhead%7D%22%2C%22merges_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmerges%22%2C%22archive_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2F%7Barchive_format%7D%7B%2Fref%7D%22%2C%22downloads_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdownloads%22%2C%22issues_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%7B%2Fnumber%7D%22%2C%22pulls_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%7B%2Fnumber%7D%22%2C%22milestones_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmilestones%7B%2Fnumber%7D%22%2C%22notifications_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fnotifications%7B%3Fsince%2Call%2Cparticipating%7D%22%2C%22labels_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flabels%7B%2Fname%7D%22%2C%22releases_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Freleases%7B%2Fid%7D%22%2C%22deployments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%22%2C%22created_at%22%3A%222019-05-15T15%3A19%3A25Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A21%3A03Z%22%2C%22pushed_at%22%3A%222019-05-15T15%3A20%3A57Z%22%2C%22git_url%22%3A%22git%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22ssh_url%22%3A%22git%40github.com%3ACodertocat%2FHello-World.git%22%2C%22clone_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22svn_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22homepage%22%3Anull%2C%22size%22%3A0%2C%22stargazers_count%22%3A0%2C%22watchers_count%22%3A0%2C%22language%22%3A%22Ruby%22%2C%22has_issues%22%3Atrue%2C%22has_projects%22%3Atrue%2C%22has_downloads%22%3Atrue%2C%22has_wiki%22%3Atrue%2C%22has_pages%22%3Atrue%2C%22forks_count%22%3A1%2C%22mirror_url%22%3Anull%2C%22archived%22%3Afalse%2C%22disabled%22%3Afalse%2C%22open_issues_count%22%3A2%2C%22license%22%3Anull%2C%22forks%22%3A1%2C%22open_issues%22%3A2%2C%22watchers%22%3A0%2C%22default_branch%22%3A%22master%22%2C%22is_template%22%3Afalse%7D%2C%22sender%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%7D"
    check-run-created:
      value:
        action: created
        check_run:
          id: 128620228
          node_id: MDg6Q2hlY2tSdW4xMjg2MjAyMjg=
          head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
          external_id: ''
          url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228
          html_url: https://github.com/Codertocat/Hello-World/runs/128620228
          details_url: https://octocoders.github.io
          status: queued
          started_at: '2019-05-15T15:21:12Z'
          output:
            annotations_count: 0
            annotations_url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228/annotations
          name: Octocoders-linter
          check_suite:
            id: 118578147
            node_id: MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=
            head_branch: changes
            head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            status: queued
            url: https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147
            before: 6113728f27ae82c7b1a177c8d03f9e96e0adf246
            after: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            pull_requests:
            - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
              id: 279147437
              number: 2
              head:
                ref: changes
                sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
              base:
                ref: master
                sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
            deployment:
              url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728
              id: 326191728
              node_id: MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg=
              task: deploy
              original_environment: lab
              environment: lab
              created_at: '2021-02-18T08:22:48Z'
              updated_at: '2021-02-18T09:47:16Z'
              statuses_url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728/statuses
              repository_url: https://api.github.com/repos/Codertocat/Hello-World
            app:
              id: 29310
              node_id: MDM6QXBwMjkzMTA=
              owner:
                login: Octocoders
                id: 38302899
                node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
                avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
                gravatar_id: ''
                url: https://api.github.com/users/Octocoders
                html_url: https://github.com/Octocoders
                followers_url: https://api.github.com/users/Octocoders/followers
                following_url: https://api.github.com/users/Octocoders/following{/other_user}
                gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
                starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
                organizations_url: https://api.github.com/users/Octocoders/orgs
                repos_url: https://api.github.com/users/Octocoders/repos
                events_url: https://api.github.com/users/Octocoders/events{/privacy}
                received_events_url: https://api.github.com/users/Octocoders/received_events
                type: Organization
                site_admin: false
              name: octocoders-linter
              description: ''
              external_url: https://octocoders.github.io
              html_url: https://github.com/apps/octocoders-linter
              created_at: '2019-04-19T19:36:24Z'
              updated_at: '2019-04-19T19:36:56Z'
              permissions:
                administration: write
                checks: write
                contents: write
                deployments: write
                issues: write
                members: write
                metadata: read
                organization_administration: write
                organization_hooks: write
                organization_plan: read
                organization_projects: write
                organization_user_blocking: write
                pages: write
                pull_requests: write
                repository_hooks: write
                repository_projects: write
                statuses: write
                team_discussions: write
                vulnerability_alerts: read
              events: []
            created_at: '2019-05-15T15:20:31Z'
            updated_at: '2019-05-15T15:20:31Z'
          app:
            id: 29310
            node_id: MDM6QXBwMjkzMTA=
            owner:
              login: Octocoders
              id: 38302899
              node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
              avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
              gravatar_id: ''
              url: https://api.github.com/users/Octocoders
              html_url: https://github.com/Octocoders
              followers_url: https://api.github.com/users/Octocoders/followers
              following_url: https://api.github.com/users/Octocoders/following{/other_user}
              gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
              starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
              organizations_url: https://api.github.com/users/Octocoders/orgs
              repos_url: https://api.github.com/users/Octocoders/repos
              events_url: https://api.github.com/users/Octocoders/events{/privacy}
              received_events_url: https://api.github.com/users/Octocoders/received_events
              type: Organization
              site_admin: false
            name: octocoders-linter
            description: ''
            external_url: https://octocoders.github.io
            html_url: https://github.com/apps/octocoders-linter
            created_at: '2019-04-19T19:36:24Z'
            updated_at: '2019-04-19T19:36:56Z'
            permissions:
              administration: write
              checks: write
              contents: write
              deployments: write
              issues: write
              members: write
              metadata: read
              organization_administration: write
              organization_hooks: write
              organization_plan: read
              organization_projects: write
              organization_user_blocking: write
              pages: write
              pull_requests: write
              repository_hooks: write
              repository_projects: write
              statuses: write
              team_discussions: write
              vulnerability_alerts: read
            events: []
          pull_requests:
          - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
            id: 279147437
            number: 2
            head:
              ref: changes
              sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
            base:
              ref: master
              sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
        repository:
          id: 186853002
          node_id: MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=
          name: Hello-World
          full_name: Codertocat/Hello-World
          private: false
          owner:
            login: Codertocat
            id: 21031067
            node_id: MDQ6VXNlcjIxMDMxMDY3
            avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
            gravatar_id: ''
            url: https://api.github.com/users/Codertocat
            html_url: https://github.com/Codertocat
            followers_url: https://api.github.com/users/Codertocat/followers
            following_url: https://api.github.com/users/Codertocat/following{/other_user}
            gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
            starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
            organizations_url: https://api.github.com/users/Codertocat/orgs
            repos_url: https://api.github.com/users/Codertocat/repos
            events_url: https://api.github.com/users/Codertocat/events{/privacy}
            received_events_url: https://api.github.com/users/Codertocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/Codertocat/Hello-World
          fork: false
          url: https://api.github.com/repos/Codertocat/Hello-World
          forks_url: https://api.github.com/repos/Codertocat/Hello-World/forks
          keys_url: https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}
          collaborators_url: https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/Codertocat/Hello-World/teams
          hooks_url: https://api.github.com/repos/Codertocat/Hello-World/hooks
          issue_events_url: https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}
          events_url: https://api.github.com/repos/Codertocat/Hello-World/events
          assignees_url: https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}
          branches_url: https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}
          tags_url: https://api.github.com/repos/Codertocat/Hello-World/tags
          blobs_url: https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}
          trees_url: https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}
          statuses_url: https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}
          languages_url: https://api.github.com/repos/Codertocat/Hello-World/languages
          stargazers_url: https://api.github.com/repos/Codertocat/Hello-World/stargazers
          contributors_url: https://api.github.com/repos/Codertocat/Hello-World/contributors
          subscribers_url: https://api.github.com/repos/Codertocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/Codertocat/Hello-World/subscription
          commits_url: https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}
          git_commits_url: https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}
          comments_url: https://api.github.com/repos/Codertocat/Hello-World/comments{/number}
          issue_comment_url: https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}
          contents_url: https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}
          compare_url: https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}
          merges_url: https://api.github.com/repos/Codertocat/Hello-World/merges
          archive_url: https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/Codertocat/Hello-World/downloads
          issues_url: https://api.github.com/repos/Codertocat/Hello-World/issues{/number}
          pulls_url: https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}
          milestones_url: https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/Codertocat/Hello-World/labels{/name}
          releases_url: https://api.github.com/repos/Codertocat/Hello-World/releases{/id}
          deployments_url: https://api.github.com/repos/Codertocat/Hello-World/deployments
          created_at: '2019-05-15T15:19:25Z'
          updated_at: '2019-05-15T15:21:03Z'
          pushed_at: '2019-05-15T15:20:57Z'
          git_url: git://github.com/Codertocat/Hello-World.git
          ssh_url: git@github.com:Codertocat/Hello-World.git
          clone_url: https://github.com/Codertocat/Hello-World.git
          svn_url: https://github.com/Codertocat/Hello-World
          size: 0
          stargazers_count: 0
          watchers_count: 0
          language: Ruby
          has_issues: true
          has_projects: true
          has_downloads: true
          has_wiki: true
          has_pages: true
          forks_count: 1
          archived: false
          disabled: false
          open_issues_count: 2
          forks: 1
          open_issues: 2
          watchers: 0
          default_branch: master
          is_template: false
        sender:
          login: Codertocat
          id: 21031067
          node_id: MDQ6VXNlcjIxMDMxMDY3
          avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
          gravatar_id: ''
          url: https://api.github.com/users/Codertocat
          html_url: https://github.com/Codertocat
          followers_url: https://api.github.com/users/Codertocat/followers
          following_url: https://api.github.com/users/Codertocat/following{/other_user}
          gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
          starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
          organizations_url: https://api.github.com/users/Codertocat/orgs
          repos_url: https://api.github.com/users/Codertocat/repos
          events_url: https://api.github.com/users/Codertocat/events{/privacy}
          received_events_url: https://api.github.com/users/Codertocat/received_events
          type: User
          site_admin: false
    check-run-created-form-encoded:
      value:
        payload: "%7B%22action%22%3A%22created%22%2C%22check_run%22%3A%7B%22id%22%3A128620228%2C%22node_id%22%3A%22MDg6Q2hlY2tSdW4xMjg2MjAyMjg%3D%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22external_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%2Fruns%2F128620228%22%2C%22details_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22status%22%3A%22queued%22%2C%22conclusion%22%3Anull%2C%22started_at%22%3A%222019-05-15T15%3A21%3A12Z%22%2C%22completed_at%22%3Anull%2C%22output%22%3A%7B%22title%22%3Anull%2C%22summary%22%3Anull%2C%22text%22%3Anull%2C%22annotations_count%22%3A0%2C%22annotations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%2Fannotations%22%7D%2C%22name%22%3A%22Octocoders-linter%22%2C%22check_suite%22%3A%7B%22id%22%3A118578147%2C%22node_id%22%3A%22MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc%3D%22%2C%22head_branch%22%3A%22changes%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22status%22%3A%22queued%22%2C%22conclusion%22%3Anull%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-suites%2F118578147%22%2C%22before%22%3A%226113728f27ae82c7b1a177c8d03f9e96e0adf246%22%2C%22after%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%2C%22deployment%22%3A%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%22%2C%22id%22%3A326191728%2C%22node_id%22%3A%22MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg%3D%22%2C%22task%22%3A%22deploy%22%2C%22original_environment%22%3A%22lab%22%2C%22environment%22%3A%22lab%22%2C%22description%22%3Anull%2C%22created_at%22%3A%222021-02-18T08%3A22%3A48Z%22%2C%22updated_at%22%3A%222021-02-18T09%3A47%3A16Z%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%2Fstatuses%22%2C%22repository_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22created_at%22%3A%222019-05-15T15%3A20%3A31Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A20%3A31Z%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%7D%2C%22repository%22%3A%7B%22id%22%3A186853002%2C%22node_id%22%3A%22MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI%3D%22%2C%22name%22%3A%22Hello-World%22%2C%22full_name%22%3A%22Codertocat%2FHello-World%22%2C%22private%22%3Afalse%2C%22owner%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22description%22%3Anull%2C%22fork%22%3Afalse%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22forks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fforks%22%2C%22keys_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fkeys%7B%2Fkey_id%7D%22%2C%22collaborators_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcollaborators%7B%2Fcollaborator%7D%22%2C%22teams_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fteams%22%2C%22hooks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fhooks%22%2C%22issue_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fevents%7B%2Fnumber%7D%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fevents%22%2C%22assignees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fassignees%7B%2Fuser%7D%22%2C%22branches_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fbranches%7B%2Fbranch%7D%22%2C%22tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Ftags%22%2C%22blobs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fblobs%7B%2Fsha%7D%22%2C%22git_tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftags%7B%2Fsha%7D%22%2C%22git_refs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Frefs%7B%2Fsha%7D%22%2C%22trees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftrees%7B%2Fsha%7D%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstatuses%2F%7Bsha%7D%22%2C%22languages_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flanguages%22%2C%22stargazers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstargazers%22%2C%22contributors_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontributors%22%2C%22subscribers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscribers%22%2C%22subscription_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscription%22%2C%22commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcommits%7B%2Fsha%7D%22%2C%22git_commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fcommits%7B%2Fsha%7D%22%2C%22comments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcomments%7B%2Fnumber%7D%22%2C%22issue_comment_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fcomments%7B%2Fnumber%7D%22%2C%22contents_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontents%2F%7B%2Bpath%7D%22%2C%22compare_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcompare%2F%7Bbase%7D...%7Bhead%7D%22%2C%22merges_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmerges%22%2C%22archive_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2F%7Barchive_format%7D%7B%2Fref%7D%22%2C%22downloads_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdownloads%22%2C%22issues_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%7B%2Fnumber%7D%22%2C%22pulls_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%7B%2Fnumber%7D%22%2C%22milestones_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmilestones%7B%2Fnumber%7D%22%2C%22notifications_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fnotifications%7B%3Fsince%2Call%2Cparticipating%7D%22%2C%22labels_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flabels%7B%2Fname%7D%22%2C%22releases_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Freleases%7B%2Fid%7D%22%2C%22deployments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%22%2C%22created_at%22%3A%222019-05-15T15%3A19%3A25Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A21%3A03Z%22%2C%22pushed_at%22%3A%222019-05-15T15%3A20%3A57Z%22%2C%22git_url%22%3A%22git%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22ssh_url%22%3A%22git%40github.com%3ACodertocat%2FHello-World.git%22%2C%22clone_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22svn_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22homepage%22%3Anull%2C%22size%22%3A0%2C%22stargazers_count%22%3A0%2C%22watchers_count%22%3A0%2C%22language%22%3A%22Ruby%22%2C%22has_issues%22%3Atrue%2C%22has_projects%22%3Atrue%2C%22has_downloads%22%3Atrue%2C%22has_wiki%22%3Atrue%2C%22has_pages%22%3Atrue%2C%22forks_count%22%3A1%2C%22mirror_url%22%3Anull%2C%22archived%22%3Afalse%2C%22disabled%22%3Afalse%2C%22open_issues_count%22%3A2%2C%22license%22%3Anull%2C%22forks%22%3A1%2C%22open_issues%22%3A2%2C%22watchers%22%3A0%2C%22default_branch%22%3A%22master%22%2C%22is_template%22%3Afalse%7D%2C%22sender%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%7D"
    check-run-requested-action:
      value:
        action: requested_action
        check_run:
          id: 128620228
          node_id: MDg6Q2hlY2tSdW4xMjg2MjAyMjg=
          head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
          external_id: ''
          url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228
          html_url: https://github.com/Codertocat/Hello-World/runs/128620228
          details_url: https://octocoders.github.io
          status: queued
          started_at: '2019-05-15T15:21:12Z'
          output:
            annotations_count: 0
            annotations_url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228/annotations
          name: Octocoders-linter
          check_suite:
            id: 118578147
            node_id: MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=
            head_branch: changes
            head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            status: queued
            url: https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147
            before: 6113728f27ae82c7b1a177c8d03f9e96e0adf246
            after: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            pull_requests:
            - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
              id: 279147437
              number: 2
              head:
                ref: changes
                sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
              base:
                ref: master
                sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
            app:
              id: 29310
              node_id: MDM6QXBwMjkzMTA=
              owner:
                login: Octocoders
                id: 38302899
                node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
                avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
                gravatar_id: ''
                url: https://api.github.com/users/Octocoders
                html_url: https://github.com/Octocoders
                followers_url: https://api.github.com/users/Octocoders/followers
                following_url: https://api.github.com/users/Octocoders/following{/other_user}
                gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
                starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
                organizations_url: https://api.github.com/users/Octocoders/orgs
                repos_url: https://api.github.com/users/Octocoders/repos
                events_url: https://api.github.com/users/Octocoders/events{/privacy}
                received_events_url: https://api.github.com/users/Octocoders/received_events
                type: Organization
                site_admin: false
              name: octocoders-linter
              description: ''
              external_url: https://octocoders.github.io
              html_url: https://github.com/apps/octocoders-linter
              created_at: '2019-04-19T19:36:24Z'
              updated_at: '2019-04-19T19:36:56Z'
              permissions:
                administration: write
                checks: write
                contents: write
                deployments: write
                issues: write
                members: write
                metadata: read
                organization_administration: write
                organization_hooks: write
                organization_plan: read
                organization_projects: write
                organization_user_blocking: write
                pages: write
                pull_requests: write
                repository_hooks: write
                repository_projects: write
                statuses: write
                team_discussions: write
                vulnerability_alerts: read
              events: []
            created_at: '2019-05-15T15:20:31Z'
            updated_at: '2019-05-15T15:20:31Z'
          app:
            id: 29310
            node_id: MDM6QXBwMjkzMTA=
            owner:
              login: Octocoders
              id: 38302899
              node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
              avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
              gravatar_id: ''
              url: https://api.github.com/users/Octocoders
              html_url: https://github.com/Octocoders
              followers_url: https://api.github.com/users/Octocoders/followers
              following_url: https://api.github.com/users/Octocoders/following{/other_user}
              gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
              starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
              organizations_url: https://api.github.com/users/Octocoders/orgs
              repos_url: https://api.github.com/users/Octocoders/repos
              events_url: https://api.github.com/users/Octocoders/events{/privacy}
              received_events_url: https://api.github.com/users/Octocoders/received_events
              type: Organization
              site_admin: false
            name: octocoders-linter
            description: ''
            external_url: https://octocoders.github.io
            html_url: https://github.com/apps/octocoders-linter
            created_at: '2019-04-19T19:36:24Z'
            updated_at: '2019-04-19T19:36:56Z'
            permissions:
              administration: write
              checks: write
              contents: write
              deployments: write
              issues: write
              members: write
              metadata: read
              organization_administration: write
              organization_hooks: write
              organization_plan: read
              organization_projects: write
              organization_user_blocking: write
              pages: write
              pull_requests: write
              repository_hooks: write
              repository_projects: write
              statuses: write
              team_discussions: write
              vulnerability_alerts: read
            events: []
          pull_requests:
          - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
            id: 279147437
            number: 2
            head:
              ref: changes
              sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
            base:
              ref: master
              sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
          deployment:
            url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728
            id: 326191728
            node_id: MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg=
            task: deploy
            original_environment: lab
            environment: lab
            created_at: '2021-02-18T08:22:48Z'
            updated_at: '2021-02-18T09:47:16Z'
            statuses_url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728/statuses
            repository_url: https://api.github.com/repos/Codertocat/Hello-World
        requested_action:
          identifier: lgtm|1234
        repository:
          id: 186853002
          node_id: MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=
          name: Hello-World
          full_name: Codertocat/Hello-World
          private: false
          owner:
            login: Codertocat
            id: 21031067
            node_id: MDQ6VXNlcjIxMDMxMDY3
            avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
            gravatar_id: ''
            url: https://api.github.com/users/Codertocat
            html_url: https://github.com/Codertocat
            followers_url: https://api.github.com/users/Codertocat/followers
            following_url: https://api.github.com/users/Codertocat/following{/other_user}
            gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
            starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
            organizations_url: https://api.github.com/users/Codertocat/orgs
            repos_url: https://api.github.com/users/Codertocat/repos
            events_url: https://api.github.com/users/Codertocat/events{/privacy}
            received_events_url: https://api.github.com/users/Codertocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/Codertocat/Hello-World
          fork: false
          url: https://api.github.com/repos/Codertocat/Hello-World
          forks_url: https://api.github.com/repos/Codertocat/Hello-World/forks
          keys_url: https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}
          collaborators_url: https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/Codertocat/Hello-World/teams
          hooks_url: https://api.github.com/repos/Codertocat/Hello-World/hooks
          issue_events_url: https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}
          events_url: https://api.github.com/repos/Codertocat/Hello-World/events
          assignees_url: https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}
          branches_url: https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}
          tags_url: https://api.github.com/repos/Codertocat/Hello-World/tags
          blobs_url: https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}
          trees_url: https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}
          statuses_url: https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}
          languages_url: https://api.github.com/repos/Codertocat/Hello-World/languages
          stargazers_url: https://api.github.com/repos/Codertocat/Hello-World/stargazers
          contributors_url: https://api.github.com/repos/Codertocat/Hello-World/contributors
          subscribers_url: https://api.github.com/repos/Codertocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/Codertocat/Hello-World/subscription
          commits_url: https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}
          git_commits_url: https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}
          comments_url: https://api.github.com/repos/Codertocat/Hello-World/comments{/number}
          issue_comment_url: https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}
          contents_url: https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}
          compare_url: https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}
          merges_url: https://api.github.com/repos/Codertocat/Hello-World/merges
          archive_url: https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/Codertocat/Hello-World/downloads
          issues_url: https://api.github.com/repos/Codertocat/Hello-World/issues{/number}
          pulls_url: https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}
          milestones_url: https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/Codertocat/Hello-World/labels{/name}
          releases_url: https://api.github.com/repos/Codertocat/Hello-World/releases{/id}
          deployments_url: https://api.github.com/repos/Codertocat/Hello-World/deployments
          created_at: '2019-05-15T15:19:25Z'
          updated_at: '2019-05-15T15:21:03Z'
          pushed_at: '2019-05-15T15:20:57Z'
          git_url: git://github.com/Codertocat/Hello-World.git
          ssh_url: git@github.com:Codertocat/Hello-World.git
          clone_url: https://github.com/Codertocat/Hello-World.git
          svn_url: https://github.com/Codertocat/Hello-World
          size: 0
          stargazers_count: 0
          watchers_count: 0
          language: Ruby
          has_issues: true
          has_projects: true
          has_downloads: true
          has_wiki: true
          has_pages: true
          forks_count: 1
          archived: false
          disabled: false
          open_issues_count: 2
          forks: 1
          open_issues: 2
          watchers: 0
          default_branch: master
        sender:
          login: Codertocat
          id: 21031067
          node_id: MDQ6VXNlcjIxMDMxMDY3
          avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
          gravatar_id: ''
          url: https://api.github.com/users/Codertocat
          html_url: https://github.com/Codertocat
          followers_url: https://api.github.com/users/Codertocat/followers
          following_url: https://api.github.com/users/Codertocat/following{/other_user}
          gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
          starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
          organizations_url: https://api.github.com/users/Codertocat/orgs
          repos_url: https://api.github.com/users/Codertocat/repos
          events_url: https://api.github.com/users/Codertocat/events{/privacy}
          received_events_url: https://api.github.com/users/Codertocat/received_events
          type: User
          site_admin: false
    check-run-requested-action-form-encoded:
      value:
        payload: "%7B%22action%22%3A%22requested_action%22%2C%22check_run%22%3A%7B%22id%22%3A128620228%2C%22node_id%22%3A%22MDg6Q2hlY2tSdW4xMjg2MjAyMjg%3D%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22external_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%2Fruns%2F128620228%22%2C%22details_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22status%22%3A%22queued%22%2C%22conclusion%22%3Anull%2C%22started_at%22%3A%222019-05-15T15%3A21%3A12Z%22%2C%22completed_at%22%3Anull%2C%22output%22%3A%7B%22title%22%3Anull%2C%22summary%22%3Anull%2C%22text%22%3Anull%2C%22annotations_count%22%3A0%2C%22annotations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%2Fannotations%22%7D%2C%22name%22%3A%22Octocoders-linter%22%2C%22check_suite%22%3A%7B%22id%22%3A118578147%2C%22node_id%22%3A%22MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc%3D%22%2C%22head_branch%22%3A%22changes%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22status%22%3A%22queued%22%2C%22conclusion%22%3Anull%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-suites%2F118578147%22%2C%22before%22%3A%226113728f27ae82c7b1a177c8d03f9e96e0adf246%22%2C%22after%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22created_at%22%3A%222019-05-15T15%3A20%3A31Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A20%3A31Z%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%2C%22deployment%22%3A%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%22%2C%22id%22%3A326191728%2C%22node_id%22%3A%22MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg%3D%22%2C%22task%22%3A%22deploy%22%2C%22original_environment%22%3A%22lab%22%2C%22environment%22%3A%22lab%22%2C%22description%22%3Anull%2C%22created_at%22%3A%222021-02-18T08%3A22%3A48Z%22%2C%22updated_at%22%3A%222021-02-18T09%3A47%3A16Z%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%2Fstatuses%22%2C%22repository_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%7D%7D%2C%22requested_action%22%3A%7B%22identifier%22%3A%22lgtm%7C1234%22%7D%2C%22repository%22%3A%7B%22id%22%3A186853002%2C%22node_id%22%3A%22MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI%3D%22%2C%22name%22%3A%22Hello-World%22%2C%22full_name%22%3A%22Codertocat%2FHello-World%22%2C%22private%22%3Afalse%2C%22owner%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22description%22%3Anull%2C%22fork%22%3Afalse%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22forks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fforks%22%2C%22keys_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fkeys%7B%2Fkey_id%7D%22%2C%22collaborators_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcollaborators%7B%2Fcollaborator%7D%22%2C%22teams_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fteams%22%2C%22hooks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fhooks%22%2C%22issue_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fevents%7B%2Fnumber%7D%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fevents%22%2C%22assignees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fassignees%7B%2Fuser%7D%22%2C%22branches_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fbranches%7B%2Fbranch%7D%22%2C%22tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Ftags%22%2C%22blobs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fblobs%7B%2Fsha%7D%22%2C%22git_tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftags%7B%2Fsha%7D%22%2C%22git_refs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Frefs%7B%2Fsha%7D%22%2C%22trees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftrees%7B%2Fsha%7D%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstatuses%2F%7Bsha%7D%22%2C%22languages_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flanguages%22%2C%22stargazers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstargazers%22%2C%22contributors_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontributors%22%2C%22subscribers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscribers%22%2C%22subscription_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscription%22%2C%22commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcommits%7B%2Fsha%7D%22%2C%22git_commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fcommits%7B%2Fsha%7D%22%2C%22comments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcomments%7B%2Fnumber%7D%22%2C%22issue_comment_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fcomments%7B%2Fnumber%7D%22%2C%22contents_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontents%2F%7B%2Bpath%7D%22%2C%22compare_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcompare%2F%7Bbase%7D...%7Bhead%7D%22%2C%22merges_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmerges%22%2C%22archive_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2F%7Barchive_format%7D%7B%2Fref%7D%22%2C%22downloads_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdownloads%22%2C%22issues_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%7B%2Fnumber%7D%22%2C%22pulls_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%7B%2Fnumber%7D%22%2C%22milestones_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmilestones%7B%2Fnumber%7D%22%2C%22notifications_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fnotifications%7B%3Fsince%2Call%2Cparticipating%7D%22%2C%22labels_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flabels%7B%2Fname%7D%22%2C%22releases_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Freleases%7B%2Fid%7D%22%2C%22deployments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%22%2C%22created_at%22%3A%222019-05-15T15%3A19%3A25Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A21%3A03Z%22%2C%22pushed_at%22%3A%222019-05-15T15%3A20%3A57Z%22%2C%22git_url%22%3A%22git%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22ssh_url%22%3A%22git%40github.com%3ACodertocat%2FHello-World.git%22%2C%22clone_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22svn_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22homepage%22%3Anull%2C%22size%22%3A0%2C%22stargazers_count%22%3A0%2C%22watchers_count%22%3A0%2C%22language%22%3A%22Ruby%22%2C%22has_issues%22%3Atrue%2C%22has_projects%22%3Atrue%2C%22has_downloads%22%3Atrue%2C%22has_wiki%22%3Atrue%2C%22has_pages%22%3Atrue%2C%22forks_count%22%3A1%2C%22mirror_url%22%3Anull%2C%22archived%22%3Afalse%2C%22disabled%22%3Afalse%2C%22open_issues_count%22%3A2%2C%22license%22%3Anull%2C%22forks%22%3A1%2C%22open_issues%22%3A2%2C%22watchers%22%3A0%2C%22default_branch%22%3A%22master%22%7D%2C%22sender%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%7D"
    check-run-rerequested:
      value:
        action: rerequested
        check_run:
          id: 128620228
          node_id: MDg6Q2hlY2tSdW4xMjg2MjAyMjg=
          head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
          external_id: ''
          url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228
          html_url: https://github.com/Codertocat/Hello-World/runs/128620228
          details_url: https://octocoders.github.io
          status: completed
          conclusion: success
          started_at: '2019-05-15T15:21:12Z'
          completed_at: '2019-05-15T15:21:45Z'
          output:
            annotations_count: 0
            annotations_url: https://api.github.com/repos/Codertocat/Hello-World/check-runs/128620228/annotations
          name: Octocoders-linter
          check_suite:
            id: 118578147
            node_id: MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc=
            head_branch: changes
            head_sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            status: completed
            url: https://api.github.com/repos/Codertocat/Hello-World/check-suites/118578147
            before: 6113728f27ae82c7b1a177c8d03f9e96e0adf246
            after: ec26c3e57ca3a959ca5aad62de7213c562f8c821
            pull_requests:
            - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
              id: 279147437
              number: 2
              head:
                ref: changes
                sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
              base:
                ref: master
                sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
                repo:
                  id: 186853002
                  url: https://api.github.com/repos/Codertocat/Hello-World
                  name: Hello-World
            deployment:
              url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728
              id: 326191728
              node_id: MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg=
              task: deploy
              original_environment: lab
              environment: lab
              created_at: '2021-02-18T08:22:48Z'
              updated_at: '2021-02-18T09:47:16Z'
              statuses_url: https://api.github.com/repos/Codertocat/Hello-World/deployments/326191728/statuses
              repository_url: https://api.github.com/repos/Codertocat/Hello-World
            app:
              id: 29310
              node_id: MDM6QXBwMjkzMTA=
              owner:
                login: Octocoders
                id: 38302899
                node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
                avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
                gravatar_id: ''
                url: https://api.github.com/users/Octocoders
                html_url: https://github.com/Octocoders
                followers_url: https://api.github.com/users/Octocoders/followers
                following_url: https://api.github.com/users/Octocoders/following{/other_user}
                gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
                starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
                organizations_url: https://api.github.com/users/Octocoders/orgs
                repos_url: https://api.github.com/users/Octocoders/repos
                events_url: https://api.github.com/users/Octocoders/events{/privacy}
                received_events_url: https://api.github.com/users/Octocoders/received_events
                type: Organization
                site_admin: false
              name: octocoders-linter
              description: ''
              external_url: https://octocoders.github.io
              html_url: https://github.com/apps/octocoders-linter
              created_at: '2019-04-19T19:36:24Z'
              updated_at: '2019-04-19T19:36:56Z'
              permissions:
                administration: write
                checks: write
                contents: write
                deployments: write
                issues: write
                members: write
                metadata: read
                organization_administration: write
                organization_hooks: write
                organization_plan: read
                organization_projects: write
                organization_user_blocking: write
                pages: write
                pull_requests: write
                repository_hooks: write
                repository_projects: write
                statuses: write
                team_discussions: write
                vulnerability_alerts: read
              events: []
            created_at: '2019-05-15T15:20:31Z'
            updated_at: '2019-05-15T15:20:31Z'
          app:
            id: 29310
            node_id: MDM6QXBwMjkzMTA=
            owner:
              login: Octocoders
              id: 38302899
              node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
              avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
              gravatar_id: ''
              url: https://api.github.com/users/Octocoders
              html_url: https://github.com/Octocoders
              followers_url: https://api.github.com/users/Octocoders/followers
              following_url: https://api.github.com/users/Octocoders/following{/other_user}
              gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
              starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
              organizations_url: https://api.github.com/users/Octocoders/orgs
              repos_url: https://api.github.com/users/Octocoders/repos
              events_url: https://api.github.com/users/Octocoders/events{/privacy}
              received_events_url: https://api.github.com/users/Octocoders/received_events
              type: Organization
              site_admin: false
            name: octocoders-linter
            description: ''
            external_url: https://octocoders.github.io
            html_url: https://github.com/apps/octocoders-linter
            created_at: '2019-04-19T19:36:24Z'
            updated_at: '2019-04-19T19:36:56Z'
            permissions:
              administration: write
              checks: write
              contents: write
              deployments: write
              issues: write
              members: write
              metadata: read
              organization_administration: write
              organization_hooks: write
              organization_plan: read
              organization_projects: write
              organization_user_blocking: write
              pages: write
              pull_requests: write
              repository_hooks: write
              repository_projects: write
              statuses: write
              team_discussions: write
              vulnerability_alerts: read
            events: []
          pull_requests:
          - url: https://api.github.com/repos/Codertocat/Hello-World/pulls/2
            id: 279147437
            number: 2
            head:
              ref: changes
              sha: ec26c3e57ca3a959ca5aad62de7213c562f8c821
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
            base:
              ref: master
              sha: f95f852bd8fca8fcc58a9a2d6c842781e32a215e
              repo:
                id: 186853002
                url: https://api.github.com/repos/Codertocat/Hello-World
                name: Hello-World
        repository:
          id: 186853002
          node_id: MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=
          name: Hello-World
          full_name: Codertocat/Hello-World
          private: false
          owner:
            login: Codertocat
            id: 21031067
            node_id: MDQ6VXNlcjIxMDMxMDY3
            avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
            gravatar_id: ''
            url: https://api.github.com/users/Codertocat
            html_url: https://github.com/Codertocat
            followers_url: https://api.github.com/users/Codertocat/followers
            following_url: https://api.github.com/users/Codertocat/following{/other_user}
            gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
            starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
            organizations_url: https://api.github.com/users/Codertocat/orgs
            repos_url: https://api.github.com/users/Codertocat/repos
            events_url: https://api.github.com/users/Codertocat/events{/privacy}
            received_events_url: https://api.github.com/users/Codertocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/Codertocat/Hello-World
          fork: false
          url: https://api.github.com/repos/Codertocat/Hello-World
          forks_url: https://api.github.com/repos/Codertocat/Hello-World/forks
          keys_url: https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}
          collaborators_url: https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/Codertocat/Hello-World/teams
          hooks_url: https://api.github.com/repos/Codertocat/Hello-World/hooks
          issue_events_url: https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}
          events_url: https://api.github.com/repos/Codertocat/Hello-World/events
          assignees_url: https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}
          branches_url: https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}
          tags_url: https://api.github.com/repos/Codertocat/Hello-World/tags
          blobs_url: https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}
          trees_url: https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}
          statuses_url: https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}
          languages_url: https://api.github.com/repos/Codertocat/Hello-World/languages
          stargazers_url: https://api.github.com/repos/Codertocat/Hello-World/stargazers
          contributors_url: https://api.github.com/repos/Codertocat/Hello-World/contributors
          subscribers_url: https://api.github.com/repos/Codertocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/Codertocat/Hello-World/subscription
          commits_url: https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}
          git_commits_url: https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}
          comments_url: https://api.github.com/repos/Codertocat/Hello-World/comments{/number}
          issue_comment_url: https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}
          contents_url: https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}
          compare_url: https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}
          merges_url: https://api.github.com/repos/Codertocat/Hello-World/merges
          archive_url: https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/Codertocat/Hello-World/downloads
          issues_url: https://api.github.com/repos/Codertocat/Hello-World/issues{/number}
          pulls_url: https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}
          milestones_url: https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/Codertocat/Hello-World/labels{/name}
          releases_url: https://api.github.com/repos/Codertocat/Hello-World/releases{/id}
          deployments_url: https://api.github.com/repos/Codertocat/Hello-World/deployments
          created_at: '2019-05-15T15:19:25Z'
          updated_at: '2019-05-15T15:21:03Z'
          pushed_at: '2019-05-15T15:20:57Z'
          git_url: git://github.com/Codertocat/Hello-World.git
          ssh_url: git@github.com:Codertocat/Hello-World.git
          clone_url: https://github.com/Codertocat/Hello-World.git
          svn_url: https://github.com/Codertocat/Hello-World
          size: 0
          stargazers_count: 0
          watchers_count: 0
          language: Ruby
          has_issues: true
          has_projects: true
          has_downloads: true
          has_wiki: true
          has_pages: true
          forks_count: 1
          archived: false
          disabled: false
          open_issues_count: 2
          forks: 1
          open_issues: 2
          watchers: 0
          default_branch: master
          is_template: false
        sender:
          login: Codertocat
          id: 21031067
          node_id: MDQ6VXNlcjIxMDMxMDY3
          avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
          gravatar_id: ''
          url: https://api.github.com/users/Codertocat
          html_url: https://github.com/Codertocat
          followers_url: https://api.github.com/users/Codertocat/followers
          following_url: https://api.github.com/users/Codertocat/following{/other_user}
          gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
          starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
          organizations_url: https://api.github.com/users/Codertocat/orgs
          repos_url: https://api.github.com/users/Codertocat/repos
          events_url: https://api.github.com/users/Codertocat/events{/privacy}
          received_events_url: https://api.github.com/users/Codertocat/received_events
          type: User
          site_admin: false
    check-run-rerequested-form-encoded:
      value:
        payload: "%7B%22action%22%3A%22rerequested%22%2C%22check_run%22%3A%7B%22id%22%3A128620228%2C%22node_id%22%3A%22MDg6Q2hlY2tSdW4xMjg2MjAyMjg%3D%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22external_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%2Fruns%2F128620228%22%2C%22details_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22status%22%3A%22completed%22%2C%22conclusion%22%3A%22success%22%2C%22started_at%22%3A%222019-05-15T15%3A21%3A12Z%22%2C%22completed_at%22%3A%222019-05-15T15%3A21%3A45Z%22%2C%22output%22%3A%7B%22title%22%3Anull%2C%22summary%22%3Anull%2C%22text%22%3Anull%2C%22annotations_count%22%3A0%2C%22annotations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-runs%2F128620228%2Fannotations%22%7D%2C%22name%22%3A%22Octocoders-linter%22%2C%22check_suite%22%3A%7B%22id%22%3A118578147%2C%22node_id%22%3A%22MDEwOkNoZWNrU3VpdGUxMTg1NzgxNDc%3D%22%2C%22head_branch%22%3A%22changes%22%2C%22head_sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22status%22%3A%22completed%22%2C%22conclusion%22%3Anull%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcheck-suites%2F118578147%22%2C%22before%22%3A%226113728f27ae82c7b1a177c8d03f9e96e0adf246%22%2C%22after%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%2C%22deployment%22%3A%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%22%2C%22id%22%3A326191728%2C%22node_id%22%3A%22MDEwOkRlcGxveW1lbnQzMjYxOTE3Mjg%3D%22%2C%22task%22%3A%22deploy%22%2C%22original_environment%22%3A%22lab%22%2C%22environment%22%3A%22lab%22%2C%22description%22%3Anull%2C%22created_at%22%3A%222021-02-18T08%3A22%3A48Z%22%2C%22updated_at%22%3A%222021-02-18T09%3A47%3A16Z%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%2F326191728%2Fstatuses%22%2C%22repository_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22created_at%22%3A%222019-05-15T15%3A20%3A31Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A20%3A31Z%22%7D%2C%22app%22%3A%7B%22id%22%3A29310%2C%22node_id%22%3A%22MDM6QXBwMjkzMTA%3D%22%2C%22owner%22%3A%7B%22login%22%3A%22Octocoders%22%2C%22id%22%3A38302899%2C%22node_id%22%3A%22MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F38302899%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FOctocoders%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FOctocoders%2Freceived_events%22%2C%22type%22%3A%22Organization%22%2C%22site_admin%22%3Afalse%7D%2C%22name%22%3A%22octocoders-linter%22%2C%22description%22%3A%22%22%2C%22external_url%22%3A%22https%3A%2F%2Foctocoders.github.io%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Fapps%2Foctocoders-linter%22%2C%22created_at%22%3A%222019-04-19T19%3A36%3A24Z%22%2C%22updated_at%22%3A%222019-04-19T19%3A36%3A56Z%22%2C%22permissions%22%3A%7B%22administration%22%3A%22write%22%2C%22checks%22%3A%22write%22%2C%22contents%22%3A%22write%22%2C%22deployments%22%3A%22write%22%2C%22issues%22%3A%22write%22%2C%22members%22%3A%22write%22%2C%22metadata%22%3A%22read%22%2C%22organization_administration%22%3A%22write%22%2C%22organization_hooks%22%3A%22write%22%2C%22organization_plan%22%3A%22read%22%2C%22organization_projects%22%3A%22write%22%2C%22organization_user_blocking%22%3A%22write%22%2C%22pages%22%3A%22write%22%2C%22pull_requests%22%3A%22write%22%2C%22repository_hooks%22%3A%22write%22%2C%22repository_projects%22%3A%22write%22%2C%22statuses%22%3A%22write%22%2C%22team_discussions%22%3A%22write%22%2C%22vulnerability_alerts%22%3A%22read%22%7D%2C%22events%22%3A%5B%5D%7D%2C%22pull_requests%22%3A%5B%7B%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%2F2%22%2C%22id%22%3A279147437%2C%22number%22%3A2%2C%22head%22%3A%7B%22ref%22%3A%22changes%22%2C%22sha%22%3A%22ec26c3e57ca3a959ca5aad62de7213c562f8c821%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%2C%22base%22%3A%7B%22ref%22%3A%22master%22%2C%22sha%22%3A%22f95f852bd8fca8fcc58a9a2d6c842781e32a215e%22%2C%22repo%22%3A%7B%22id%22%3A186853002%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22name%22%3A%22Hello-World%22%7D%7D%7D%5D%7D%2C%22repository%22%3A%7B%22id%22%3A186853002%2C%22node_id%22%3A%22MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI%3D%22%2C%22name%22%3A%22Hello-World%22%2C%22full_name%22%3A%22Codertocat%2FHello-World%22%2C%22private%22%3Afalse%2C%22owner%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22description%22%3Anull%2C%22fork%22%3Afalse%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%22%2C%22forks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fforks%22%2C%22keys_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fkeys%7B%2Fkey_id%7D%22%2C%22collaborators_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcollaborators%7B%2Fcollaborator%7D%22%2C%22teams_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fteams%22%2C%22hooks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fhooks%22%2C%22issue_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fevents%7B%2Fnumber%7D%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fevents%22%2C%22assignees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fassignees%7B%2Fuser%7D%22%2C%22branches_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fbranches%7B%2Fbranch%7D%22%2C%22tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Ftags%22%2C%22blobs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fblobs%7B%2Fsha%7D%22%2C%22git_tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftags%7B%2Fsha%7D%22%2C%22git_refs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Frefs%7B%2Fsha%7D%22%2C%22trees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Ftrees%7B%2Fsha%7D%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstatuses%2F%7Bsha%7D%22%2C%22languages_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flanguages%22%2C%22stargazers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fstargazers%22%2C%22contributors_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontributors%22%2C%22subscribers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscribers%22%2C%22subscription_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fsubscription%22%2C%22commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcommits%7B%2Fsha%7D%22%2C%22git_commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fgit%2Fcommits%7B%2Fsha%7D%22%2C%22comments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcomments%7B%2Fnumber%7D%22%2C%22issue_comment_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%2Fcomments%7B%2Fnumber%7D%22%2C%22contents_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcontents%2F%7B%2Bpath%7D%22%2C%22compare_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fcompare%2F%7Bbase%7D...%7Bhead%7D%22%2C%22merges_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmerges%22%2C%22archive_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2F%7Barchive_format%7D%7B%2Fref%7D%22%2C%22downloads_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdownloads%22%2C%22issues_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fissues%7B%2Fnumber%7D%22%2C%22pulls_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fpulls%7B%2Fnumber%7D%22%2C%22milestones_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fmilestones%7B%2Fnumber%7D%22%2C%22notifications_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fnotifications%7B%3Fsince%2Call%2Cparticipating%7D%22%2C%22labels_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Flabels%7B%2Fname%7D%22%2C%22releases_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Freleases%7B%2Fid%7D%22%2C%22deployments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2FCodertocat%2FHello-World%2Fdeployments%22%2C%22created_at%22%3A%222019-05-15T15%3A19%3A25Z%22%2C%22updated_at%22%3A%222019-05-15T15%3A21%3A03Z%22%2C%22pushed_at%22%3A%222019-05-15T15%3A20%3A57Z%22%2C%22git_url%22%3A%22git%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22ssh_url%22%3A%22git%40github.com%3ACodertocat%2FHello-World.git%22%2C%22clone_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World.git%22%2C%22svn_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%2FHello-World%22%2C%22homepage%22%3Anull%2C%22size%22%3A0%2C%22stargazers_count%22%3A0%2C%22watchers_count%22%3A0%2C%22language%22%3A%22Ruby%22%2C%22has_issues%22%3Atrue%2C%22has_projects%22%3Atrue%2C%22has_downloads%22%3Atrue%2C%22has_wiki%22%3Atrue%2C%22has_pages%22%3Atrue%2C%22forks_count%22%3A1%2C%22mirror_url%22%3Anull%2C%22archived%22%3Afalse%2C%22disabled%22%3Afalse%2C%22open_issues_count%22%3A2%2C%22license%22%3Anull%2C%22forks%22%3A1%2C%22open_issues%22%3A2%2C%22watchers%22%3A0%2C%22default_branch%22%3A%22master%22%2C%22is_template%22%3Afalse%7D%2C%22sender%22%3A%7B%22login%22%3A%22Codertocat%22%2C%22id%22%3A21031067%2C%22node_id%22%3A%22MDQ6VXNlcjIxMDMxMDY3%22%2C%22avatar_url%22%3A%22https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%22%2C%22gravatar_id%22%3A%22%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2FCodertocat%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fgists%7B%2Fgist_id%7D%22%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fsubscriptions%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Forgs%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Frepos%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Fevents%7B%2Fprivacy%7D%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2FCodertocat%2Freceived_events%22%2C%22type%22%3A%22User%22%2C%22site_admin%22%3Afalse%7D%7D"
    ping:
      value:
        zen: Anything added dilutes everything else.
        hook_id: 109948940
        hook:
          type: Repository
          id: 109948940
          name: web
          active: true
          events:
          - "*"
          config:
            content_type: json
            url: https://smee.io/****************
            insecure_ssl: '0'
          updated_at: '2019-05-15T15:20:49Z'
          created_at: '2019-05-15T15:20:49Z'
          url: https://api.github.com/repos/Octocoders/Hello-World/hooks/109948940
          test_url: https://api.github.com/repos/Octocoders/Hello-World/hooks/109948940/test
          ping_url: https://api.github.com/repos/Octocoders/Hello-World/hooks/109948940/pings
          last_response:
            status: unused
        repository:
          id: 186853261
          node_id: MDEwOlJlcG9zaXRvcnkxODY4NTMyNjE=
          name: Hello-World
          full_name: Octocoders/Hello-World
          private: false
          owner:
            login: Octocoders
            id: 38302899
            node_id: MDEyOk9yZ2FuaXphdGlvbjM4MzAyODk5
            avatar_url: https://avatars1.githubusercontent.com/u/38302899?v=4
            gravatar_id: ''
            url: https://api.github.com/users/Octocoders
            html_url: https://github.com/Octocoders
            followers_url: https://api.github.com/users/Octocoders/followers
            following_url: https://api.github.com/users/Octocoders/following{/other_user}
            gists_url: https://api.github.com/users/Octocoders/gists{/gist_id}
            starred_url: https://api.github.com/users/Octocoders/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Octocoders/subscriptions
            organizations_url: https://api.github.com/users/Octocoders/orgs
            repos_url: https://api.github.com/users/Octocoders/repos
            events_url: https://api.github.com/users/Octocoders/events{/privacy}
            received_events_url: https://api.github.com/users/Octocoders/received_events
            type: Organization
            site_admin: false
          html_url: https://github.com/Octocoders/Hello-World
          fork: true
          url: https://api.github.com/repos/Octocoders/Hello-World
          forks_url: https://api.github.com/repos/Octocoders/Hello-World/forks
          keys_url: https://api.github.com/repos/Octocoders/Hello-World/keys{/key_id}
          collaborators_url: https://api.github.com/repos/Octocoders/Hello-World/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/Octocoders/Hello-World/teams
          hooks_url: https://api.github.com/repos/Octocoders/Hello-World/hooks
          issue_events_url: https://api.github.com/repos/Octocoders/Hello-World/issues/events{/number}
          events_url: https://api.github.com/repos/Octocoders/Hello-World/events
          assignees_url: https://api.github.com/repos/Octocoders/Hello-World/assignees{/user}
          branches_url: https://api.github.com/repos/Octocoders/Hello-World/branches{/branch}
          tags_url: https://api.github.com/repos/Octocoders/Hello-World/tags
          blobs_url: https://api.github.com/repos/Octocoders/Hello-World/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/Octocoders/Hello-World/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/Octocoders/Hello-World/git/refs{/sha}
          trees_url: https://api.github.com/repos/Octocoders/Hello-World/git/trees{/sha}
          statuses_url: https://api.github.com/repos/Octocoders/Hello-World/statuses/{sha}
          languages_url: https://api.github.com/repos/Octocoders/Hello-World/languages
          stargazers_url: https://api.github.com/repos/Octocoders/Hello-World/stargazers
          contributors_url: https://api.github.com/repos/Octocoders/Hello-World/contributors
          subscribers_url: https://api.github.com/repos/Octocoders/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/Octocoders/Hello-World/subscription
          commits_url: https://api.github.com/repos/Octocoders/Hello-World/commits{/sha}
          git_commits_url: https://api.github.com/repos/Octocoders/Hello-World/git/commits{/sha}
          comments_url: https://api.github.com/repos/Octocoders/Hello-World/comments{/number}
          issue_comment_url: https://api.github.com/repos/Octocoders/Hello-World/issues/comments{/number}
          contents_url: https://api.github.com/repos/Octocoders/Hello-World/contents/{+path}
          compare_url: https://api.github.com/repos/Octocoders/Hello-World/compare/{base}...{head}
          merges_url: https://api.github.com/repos/Octocoders/Hello-World/merges
          archive_url: https://api.github.com/repos/Octocoders/Hello-World/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/Octocoders/Hello-World/downloads
          issues_url: https://api.github.com/repos/Octocoders/Hello-World/issues{/number}
          pulls_url: https://api.github.com/repos/Octocoders/Hello-World/pulls{/number}
          milestones_url: https://api.github.com/repos/Octocoders/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/Octocoders/Hello-World/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/Octocoders/Hello-World/labels{/name}
          releases_url: https://api.github.com/repos/Octocoders/Hello-World/releases{/id}
          deployments_url: https://api.github.com/repos/Octocoders/Hello-World/deployments
          created_at: '2019-05-15T15:20:42Z'
          updated_at: '2019-05-15T15:20:45Z'
          pushed_at: '2019-05-15T15:20:33Z'
          git_url: git://github.com/Octocoders/Hello-World.git
          ssh_url: git@github.com:Octocoders/Hello-World.git
          clone_url: https://github.com/Octocoders/Hello-World.git
          svn_url: https://github.com/Octocoders/Hello-World
          size: 0
          stargazers_count: 0
          watchers_count: 0
          language: Ruby
          has_issues: false
          has_projects: true
          has_downloads: true
          has_wiki: true
          has_pages: false
          forks_count: 0
          archived: false
          disabled: false
          open_issues_count: 0
          forks: 0
          open_issues: 0
          watchers: 0
          default_branch: master
        sender:
          login: Codertocat
          id: 21031067
          node_id: MDQ6VXNlcjIxMDMxMDY3
          avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
          gravatar_id: ''
          url: https://api.github.com/users/Codertocat
          html_url: https://github.com/Codertocat
          followers_url: https://api.github.com/users/Codertocat/followers
          following_url: https://api.github.com/users/Codertocat/following{/other_user}
          gists_url: https://api.github.com/users/Codertocat/gists{/gist_id}
          starred_url: https://api.github.com/users/Codertocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/Codertocat/subscriptions
          organizations_url: https://api.github.com/users/Codertocat/orgs
          repos_url: https://api.github.com/users/Codertocat/repos
          events_url: https://api.github.com/users/Codertocat/events{/privacy}
          received_events_url: https://api.github.com/users/Codertocat/received_events
          type: User
          site_admin: false
    ping-form-encoded:
      value:
        payload: "%7B%22hook%22%3A%7B%22active%22%3Atrue%2C%22config%22%3A%7B%22content_type%22%3A%22form%22%2C%22insecure_ssl%22%3A%220%22%2C%22url%22%3A%22https%3A%2F%2Ftest.io%2Fform%22%7D%2C%22created_at%22%3A%222021-10-20T16%3A01%3A58Z%22%2C%22deliveries_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fhooks%2F1234%2Fdeliveries%22%2C%22events%22%3A%5B%22%2A%22%5D%2C%22id%22%3A1234%2C%22last_response%22%3A%7B%22code%22%3Anull%2C%22message%22%3Anull%2C%22status%22%3A%22unused%22%7D%2C%22name%22%3A%22web%22%2C%22ping_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fhooks%2F1234%2Fpings%22%2C%22test_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fhooks%2F1234%2Ftest%22%2C%22type%22%3A%22Repository%22%2C%22updated_at%22%3A%222021-10-20T16%3A01%3A58Z%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fhooks%2F1234%22%7D%2C%22hook_id%22%3A1234%2C%22meta%22%3A%7B%22signed_at%22%3A%222021-10-25T19%3A05%3A13%2B00%3A00%22%2C%22event%22%3A%22ping%22%2C%22nonce%22%3A%221231%22%2C%22url%22%3A%22https%3A%2F%2Ftest.io%2Fform%22%7D%2C%22repository%22%3A%7B%22allow_forking%22%3Atrue%2C%22archive_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2F%7Barchive_format%7D%7B%2Fref%7D%22%2C%22archived%22%3Afalse%2C%22assignees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fassignees%7B%2Fuser%7D%22%2C%22blobs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fgit%2Fblobs%7B%2Fsha%7D%22%2C%22branches_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fbranches%7B%2Fbranch%7D%22%2C%22clone_url%22%3A%22https%3A%2F%2Fgithub.com%2Ftestorg%2Ftestrepo.git%22%2C%22collaborators_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fcollaborators%7B%2Fcollaborator%7D%22%2C%22comments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fcomments%7B%2Fnumber%7D%22%2C%22commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fcommits%7B%2Fsha%7D%22%2C%22compare_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fcompare%2F%7Bbase%7D...%7Bhead%7D%22%2C%22contents_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fcontents%2F%7B%2Bpath%7D%22%2C%22contributors_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fcontributors%22%2C%22created_at%22%3A%222016-12-07T19%3A17%3A19Z%22%2C%22default_branch%22%3A%22master%22%2C%22deployments_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fdeployments%22%2C%22description%22%3A%22A%2Btest%2Brepository%2Bfor%2Btest%2B.%22%2C%22disabled%22%3Afalse%2C%22downloads_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fdownloads%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fevents%22%2C%22fork%22%3Afalse%2C%22forks%22%3A0%2C%22forks_count%22%3A0%2C%22forks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fforks%22%2C%22full_name%22%3A%22testorg%2Ftestrepo%22%2C%22git_commits_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fgit%2Fcommits%7B%2Fsha%7D%22%2C%22git_refs_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fgit%2Frefs%7B%2Fsha%7D%22%2C%22git_tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fgit%2Ftags%7B%2Fsha%7D%22%2C%22git_url%22%3A%22git%3A%2F%2Fgithub.com%2Ftestorg%2Ftestrepo.git%22%2C%22has_downloads%22%3Atrue%2C%22has_issues%22%3Atrue%2C%22has_pages%22%3Afalse%2C%22has_projects%22%3Atrue%2C%22has_wiki%22%3Atrue%2C%22homepage%22%3A%22%22%2C%22hooks_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fhooks%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Ftestorg%2Ftestrepo%22%2C%22id%22%3A4567%2C%22is_template%22%3Afalse%2C%22issue_comment_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fissues%2Fcomments%7B%2Fnumber%7D%22%2C%22issue_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fissues%2Fevents%7B%2Fnumber%7D%22%2C%22issues_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fissues%7B%2Fnumber%7D%22%2C%22keys_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fkeys%7B%2Fkey_id%7D%22%2C%22labels_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Flabels%7B%2Fname%7D%22%2C%22language%22%3Anull%2C%22languages_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Flanguages%22%2C%22license%22%3Anull%2C%22merges_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fmerges%22%2C%22milestones_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fmilestones%7B%2Fnumber%7D%22%2C%22mirror_url%22%3Anull%2C%22name%22%3A%22testrepo%22%2C%22node_id%22%3A%22abcd%22%2C%22notifications_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fnotifications%7B%3Fsince%2Call%2Cparticipating%7D%22%2C%22open_issues%22%3A27%2C%22open_issues_count%22%3A27%2C%22owner%22%3A%7B%22avatar_url%22%3A%22https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F1231%3Fv%3D4%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Fevents%7B%2Fprivacy%7D%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Fgists%7B%2Fgist_id%7D%22%2C%22gravatar_id%22%3A%22%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Ftestorg%22%2C%22id%22%3A4312013%2C%22login%22%3A%22testorg%22%2C%22node_id%22%3A%22abcd%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Forgs%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Freceived_events%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Frepos%22%2C%22site_admin%22%3Afalse%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%2Fsubscriptions%22%2C%22type%22%3A%22Organization%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestorg%22%7D%2C%22private%22%3Atrue%2C%22pulls_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fpulls%7B%2Fnumber%7D%22%2C%22pushed_at%22%3A%222021-10-08T17%3A33%3A23Z%22%2C%22releases_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Freleases%7B%2Fid%7D%22%2C%22size%22%3A43%2C%22ssh_url%22%3A%22git%40github.com%3Atestorg%2Ftestrepo.git%22%2C%22stargazers_count%22%3A1%2C%22stargazers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fstargazers%22%2C%22statuses_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fstatuses%2F%7Bsha%7D%22%2C%22subscribers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fsubscribers%22%2C%22subscription_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fsubscription%22%2C%22svn_url%22%3A%22https%3A%2F%2Fgithub.com%2Ftestorg%2Ftestrepo%22%2C%22tags_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Ftags%22%2C%22teams_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fteams%22%2C%22topics%22%3A%5B%5D%2C%22trees_url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%2Fgit%2Ftrees%7B%2Fsha%7D%22%2C%22updated_at%22%3A%222021-10-08T17%3A33%3A26Z%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Frepos%2Ftestorg%2Ftestrepo%22%2C%22visibility%22%3A%22private%22%2C%22watchers%22%3A1%2C%22watchers_count%22%3A1%7D%2C%22sender%22%3A%7B%22avatar_url%22%3A%22https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F1385175%3Fv%3D4%22%2C%22events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Fevents%7B%2Fprivacy%7D%22%2C%22followers_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Ffollowers%22%2C%22following_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Ffollowing%7B%2Fother_user%7D%22%2C%22gists_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Fgists%7B%2Fgist_id%7D%22%2C%22gravatar_id%22%3A%22%22%2C%22html_url%22%3A%22https%3A%2F%2Fgithub.com%2Ftestuser%22%2C%22id%22%3A1385175%2C%22login%22%3A%22testuser%22%2C%22node_id%22%3A%22abcd%22%2C%22organizations_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Forgs%22%2C%22received_events_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Freceived_events%22%2C%22repos_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Frepos%22%2C%22site_admin%22%3Atrue%2C%22starred_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%22%2C%22subscriptions_url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%2Fsubscriptions%22%2C%22type%22%3A%22User%22%2C%22url%22%3A%22https%3A%2F%2Fapi.github.com%2Fusers%2Ftestuser%22%7D%2C%22zen%22%3A%22Responsive%2Bis%2Bbetter%2Bthan%2Bfast.%22%7D"
    secret-scanning-alert-location-created:
      value:
        action: created
        alert:
          number: 42
          created_at: '2020-11-06T18:18:30Z'
          updated_at: '2020-11-06T18:18:30Z'
          url: https://api.github.com/repos/octocat-repo/hello-world/secret-scanning/alerts/42
          html_url: https://github.com/octocat-repo/hello-world/security/secret-scanning/42
          locations_url: https://api.github.com/repos/octocat-repo/hello-world/secret-scanning/alerts/42/locations
          state: open
          secret_type: mailchimp_api_key
          secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        location:
          type: commit
          details:
            path: "/example/secrets.txt"
            start_line: 1
            end_line: 1
            start_column: 1
            end_column: 64
            blob_sha: af5626b4a114abcb82d63db7c8082c3c4756e51b
            blob_url: https://api.github.com/repos/octocat-repo/hello-world/git/blobs/af5626b4a114abcb82d63db7c8082c3c4756e51b
            commit_sha: f14d7debf9775f957cf4f1e8176da0786431f72b
            commit_url: https://api.github.com/repos/octocat-repo/hello-world/git/commits/f14d7debf9775f957cf4f1e8176da0786431f72b
        repository:
          id: 186853002
          node_id: MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=
          name: hello-world
          full_name: octocat-repo/hello-world
          private: false
          owner:
            login: octocat
            id: 21031067
            node_id: MDQ6VXNlcjIxMDMxMDY3
            avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/octocat-repo/hello-world
          fork: false
          url: https://api.github.com/repos/octocat-repo/hello-world
          forks_url: https://api.github.com/repos/octocat-repo/hello-world/forks
          keys_url: https://api.github.com/repos/octocat-repo/hello-world/keys{/key_id}
          collaborators_url: https://api.github.com/repos/octocat-repo/hello-world/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/octocat-repo/hello-world/teams
          hooks_url: https://api.github.com/repos/octocat-repo/hello-world/hooks
          issue_events_url: https://api.github.com/repos/octocat-repo/hello-world/issues/events{/number}
          events_url: https://api.github.com/repos/octocat-repo/hello-world/events
          assignees_url: https://api.github.com/repos/octocat-repo/hello-world/assignees{/user}
          branches_url: https://api.github.com/repos/octocat-repo/hello-world/branches{/branch}
          tags_url: https://api.github.com/repos/octocat-repo/hello-world/tags
          blobs_url: https://api.github.com/repos/octocat-repo/hello-world/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/octocat-repo/hello-world/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/octocat-repo/hello-world/git/refs{/sha}
          trees_url: https://api.github.com/repos/octocat-repo/hello-world/git/trees{/sha}
          statuses_url: https://api.github.com/repos/octocat-repo/hello-world/statuses/{sha}
          languages_url: https://api.github.com/repos/octocat-repo/hello-world/languages
          stargazers_url: https://api.github.com/repos/octocat-repo/hello-world/stargazers
          contributors_url: https://api.github.com/repos/octocat-repo/hello-world/contributors
          subscribers_url: https://api.github.com/repos/octocat-repo/hello-world/subscribers
          subscription_url: https://api.github.com/repos/octocat-repo/hello-world/subscription
          commits_url: https://api.github.com/repos/octocat-repo/hello-world/commits{/sha}
          git_commits_url: https://api.github.com/repos/octocat-repo/hello-world/git/commits{/sha}
          comments_url: https://api.github.com/repos/octocat-repo/hello-world/comments{/number}
          issue_comment_url: https://api.github.com/repos/octocat-repo/hello-world/issues/comments{/number}
          contents_url: https://api.github.com/repos/octocat-repo/hello-world/contents/{+path}
          compare_url: https://api.github.com/repos/octocat-repo/hello-world/compare/{base}...{head}
          merges_url: https://api.github.com/repos/octocat-repo/hello-world/merges
          archive_url: https://api.github.com/repos/octocat-repo/hello-world/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/octocat-repo/hello-world/downloads
          issues_url: https://api.github.com/repos/octocat-repo/hello-world/issues{/number}
          pulls_url: https://api.github.com/repos/octocat-repo/hello-world/pulls{/number}
          milestones_url: https://api.github.com/repos/octocat-repo/hello-world/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat-repo/hello-world/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/octocat-repo/hello-world/labels{/name}
          releases_url: https://api.github.com/repos/octocat-repo/hello-world/releases{/id}
          deployments_url: https://api.github.com/repos/octocat-repo/hello-world/deployments
          created_at: '2019-05-15T15:19:25Z'
          updated_at: '2019-05-15T15:21:03Z'
          pushed_at: '2019-05-15T15:20:57Z'
          git_url: git://github.com/octocat-repo/hello-world.git
          ssh_url: git@github.com:octocat-repo/hello-world.git
          clone_url: https://github.com/octocat-repo/hello-world.git
          svn_url: https://github.com/octocat-repo/hello-world
          size: 0
          stargazers_count: 0
          watchers_count: 0
          language: Ruby
          has_issues: true
          has_projects: true
          has_downloads: true
          has_wiki: true
          has_pages: true
          forks_count: 1
          archived: false
          disabled: false
          open_issues_count: 2
          forks: 1
          open_issues: 2
          watchers: 0
          default_branch: master
          is_template: false
        sender:
          login: octocat
          id: 21031067
          node_id: MDQ6VXNlcjIxMDMxMDY3
          avatar_url: https://avatars1.githubusercontent.com/u/21031067?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    secret-scanning-alert-location-created-form-encoded:
      value:
        payload: action%3A%20created%0A%20%20alert%3A%0A%20%20%20%20number%3A%2042%0A%20%20%20%20created_at%3A%20%272020-11-06T18%3A18%3A30Z%27%0A%20%20%20%20updated_at%3A%20%272020-11-06T18%3A18%3A30Z%27%0A%20%20%20%20url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fsecret-scanning%2Falerts%2F42%0A%20%20%20%20html_url%3A%20https%3A%2F%2Fgithub.com%2Foctocat-repo%2Fhello-world%2Fsecurity%2Fsecret-scanning%2F42%0A%20%20%20%20locations_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fsecret-scanning%2Falerts%2F42%2Flocations%0A%20%20%20%20state%3A%20open%0A%20%20%20%20resolution%3A%20null%0A%20%20%20%20resolved_at%3A%20null%0A%20%20%20%20resolved_by%3A%20null%0A%20%20%20%20secret_type%3A%20mailchimp_api_key%0A%20%20%20%20secret%3A%20XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2%0A%20%20location%3A%0A%20%20%20%20type%3A%20commit%0A%20%20%20%20details%3A%0A%20%20%20%20%20%20path%3A%20%27%2Fexample%2Fsecrets.txt%27%0A%20%20%20%20%20%20start_line%3A%201%0A%20%20%20%20%20%20end_line%3A%201%0A%20%20%20%20%20%20start_column%3A%201%0A%20%20%20%20%20%20end_column%3A%2064%0A%20%20%20%20%20%20blob_sha%3A%20af5626b4a114abcb82d63db7c8082c3c4756e51b%0A%20%20%20%20%20%20blob_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Fblobs%2Faf5626b4a114abcb82d63db7c8082c3c4756e51b%0A%20%20%20%20%20%20commit_sha%3A%20f14d7debf9775f957cf4f1e8176da0786431f72b%0A%20%20%20%20%20%20commit_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Fcommits%2Ff14d7debf9775f957cf4f1e8176da0786431f72b%0A%20%20repository%3A%0A%20%20%20%20id%3A%20186853002%0A%20%20%20%20node_id%3A%20MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI%3D%0A%20%20%20%20name%3A%20hello-world%0A%20%20%20%20full_name%3A%20octocat-repo%2Fhello-world%0A%20%20%20%20private%3A%20false%0A%20%20%20%20owner%3A%0A%20%20%20%20%20%20login%3A%20octocat%0A%20%20%20%20%20%20id%3A%2021031067%0A%20%20%20%20%20%20node_id%3A%20MDQ6VXNlcjIxMDMxMDY3%0A%20%20%20%20%20%20avatar_url%3A%20https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%0A%20%20%20%20%20%20gravatar_id%3A%20%27%27%0A%20%20%20%20%20%20url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%0A%20%20%20%20%20%20html_url%3A%20https%3A%2F%2Fgithub.com%2Foctocat%0A%20%20%20%20%20%20followers_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Ffollowers%0A%20%20%20%20%20%20following_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Ffollowing%7B%2Fother_user%7D%0A%20%20%20%20%20%20gists_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fgists%7B%2Fgist_id%7D%0A%20%20%20%20%20%20starred_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%0A%20%20%20%20%20%20subscriptions_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fsubscriptions%0A%20%20%20%20%20%20organizations_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Forgs%0A%20%20%20%20%20%20repos_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Frepos%0A%20%20%20%20%20%20events_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fevents%7B%2Fprivacy%7D%0A%20%20%20%20%20%20received_events_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Freceived_events%0A%20%20%20%20%20%20type%3A%20User%0A%20%20%20%20%20%20site_admin%3A%20false%0A%20%20%20%20html_url%3A%20https%3A%2F%2Fgithub.com%2Foctocat-repo%2Fhello-world%0A%20%20%20%20description%3A%0A%20%20%20%20fork%3A%20false%0A%20%20%20%20url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%0A%20%20%20%20forks_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fforks%0A%20%20%20%20keys_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fkeys%7B%2Fkey_id%7D%0A%20%20%20%20collaborators_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fcollaborators%7B%2Fcollaborator%7D%0A%20%20%20%20teams_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fteams%0A%20%20%20%20hooks_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fhooks%0A%20%20%20%20issue_events_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fissues%2Fevents%7B%2Fnumber%7D%0A%20%20%20%20events_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fevents%0A%20%20%20%20assignees_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fassignees%7B%2Fuser%7D%0A%20%20%20%20branches_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fbranches%7B%2Fbranch%7D%0A%20%20%20%20tags_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Ftags%0A%20%20%20%20blobs_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Fblobs%7B%2Fsha%7D%0A%20%20%20%20git_tags_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Ftags%7B%2Fsha%7D%0A%20%20%20%20git_refs_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Frefs%7B%2Fsha%7D%0A%20%20%20%20trees_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Ftrees%7B%2Fsha%7D%0A%20%20%20%20statuses_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fstatuses%2F%7Bsha%7D%0A%20%20%20%20languages_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Flanguages%0A%20%20%20%20stargazers_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fstargazers%0A%20%20%20%20contributors_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fcontributors%0A%20%20%20%20subscribers_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fsubscribers%0A%20%20%20%20subscription_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fsubscription%0A%20%20%20%20commits_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fcommits%7B%2Fsha%7D%0A%20%20%20%20git_commits_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fgit%2Fcommits%7B%2Fsha%7D%0A%20%20%20%20comments_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fcomments%7B%2Fnumber%7D%0A%20%20%20%20issue_comment_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fissues%2Fcomments%7B%2Fnumber%7D%0A%20%20%20%20contents_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fcontents%2F%7B%2Bpath%7D%0A%20%20%20%20compare_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fcompare%2F%7Bbase%7D...%7Bhead%7D%0A%20%20%20%20merges_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fmerges%0A%20%20%20%20archive_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2F%7Barchive_format%7D%7B%2Fref%7D%0A%20%20%20%20downloads_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fdownloads%0A%20%20%20%20issues_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fissues%7B%2Fnumber%7D%0A%20%20%20%20pulls_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fpulls%7B%2Fnumber%7D%0A%20%20%20%20milestones_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fmilestones%7B%2Fnumber%7D%0A%20%20%20%20notifications_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fnotifications%7B%3Fsince%2Call%2Cparticipating%7D%0A%20%20%20%20labels_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Flabels%7B%2Fname%7D%0A%20%20%20%20releases_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Freleases%7B%2Fid%7D%0A%20%20%20%20deployments_url%3A%20https%3A%2F%2Fapi.github.com%2Frepos%2Foctocat-repo%2Fhello-world%2Fdeployments%0A%20%20%20%20created_at%3A%20%272019-05-15T15%3A19%3A25Z%27%0A%20%20%20%20updated_at%3A%20%272019-05-15T15%3A21%3A03Z%27%0A%20%20%20%20pushed_at%3A%20%272019-05-15T15%3A20%3A57Z%27%0A%20%20%20%20git_url%3A%20git%3A%2F%2Fgithub.com%2Foctocat-repo%2Fhello-world.git%0A%20%20%20%20ssh_url%3A%20git%40github.com%3Aoctocat-repo%2Fhello-world.git%0A%20%20%20%20clone_url%3A%20https%3A%2F%2Fgithub.com%2Foctocat-repo%2Fhello-world.git%0A%20%20%20%20svn_url%3A%20https%3A%2F%2Fgithub.com%2Foctocat-repo%2Fhello-world%0A%20%20%20%20homepage%3A%0A%20%20%20%20size%3A%200%0A%20%20%20%20stargazers_count%3A%200%0A%20%20%20%20watchers_count%3A%200%0A%20%20%20%20language%3A%20Ruby%0A%20%20%20%20has_issues%3A%20true%0A%20%20%20%20has_projects%3A%20true%0A%20%20%20%20has_downloads%3A%20true%0A%20%20%20%20has_wiki%3A%20true%0A%20%20%20%20has_pages%3A%20true%0A%20%20%20%20forks_count%3A%201%0A%20%20%20%20mirror_url%3A%0A%20%20%20%20archived%3A%20false%0A%20%20%20%20disabled%3A%20false%0A%20%20%20%20open_issues_count%3A%202%0A%20%20%20%20license%3A%0A%20%20%20%20forks%3A%201%0A%20%20%20%20open_issues%3A%202%0A%20%20%20%20watchers%3A%200%0A%20%20%20%20default_branch%3A%20master%0A%20%20%20%20is_template%3A%20false%0A%20%20sender%3A%0A%20%20%20%20login%3A%20octocat%0A%20%20%20%20id%3A%2021031067%0A%20%20%20%20node_id%3A%20MDQ6VXNlcjIxMDMxMDY3%0A%20%20%20%20avatar_url%3A%20https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F21031067%3Fv%3D4%0A%20%20%20%20gravatar_id%3A%20%27%27%0A%20%20%20%20url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%0A%20%20%20%20html_url%3A%20https%3A%2F%2Fgithub.com%2Foctocat%0A%20%20%20%20followers_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Ffollowers%0A%20%20%20%20following_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Ffollowing%7B%2Fother_user%7D%0A%20%20%20%20gists_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fgists%7B%2Fgist_id%7D%0A%20%20%20%20starred_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fstarred%7B%2Fowner%7D%7B%2Frepo%7D%0A%20%20%20%20subscriptions_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fsubscriptions%0A%20%20%20%20organizations_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Forgs%0A%20%20%20%20repos_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Frepos%0A%20%20%20%20events_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Fevents%7B%2Fprivacy%7D%0A%20%20%20%20received_events_url%3A%20https%3A%2F%2Fapi.github.com%2Fusers%2Foctocat%2Freceived_events%0A%20%20%20%20type%3A%20User%0A%20%20%20%20site_admin%3A%20false%0A
  parameters:
    pagination-before:
      name: before
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers).
        If specified, the query only searches for results before this cursor.
      in: query
      required: false
      schema:
        type: string
    pagination-after:
      name: after
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers).
        If specified, the query only searches for results after this cursor.
      in: query
      required: false
      schema:
        type: string
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    ghsa_id:
      name: ghsa_id
      description: The GHSA (GitHub Security Advisory) identifier of the advisory.
      in: path
      required: true
      schema:
        type: string
    per-page:
      name: per_page
      description: The number of results per page (max 100).
      in: query
      schema:
        type: integer
        default: 30
    cursor:
      name: cursor
      description: 'Used for pagination: the starting delivery from which the page
        of deliveries is fetched. Refer to the `link` header for the next and previous
        page cursors.'
      in: query
      required: false
      schema:
        type: string
    delivery-id:
      name: delivery_id
      in: path
      required: true
      schema:
        type: integer
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    since:
      name: since
      description: 'Only show results that were last updated after the given time.
        This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
        format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    installation-id:
      name: installation_id
      description: The unique identifier of the installation.
      in: path
      required: true
      schema:
        type: integer
      examples:
        default:
          value: 1
    client-id:
      name: client_id
      in: path
      required: true
      description: The client ID of the GitHub app.
      schema:
        type: string
      examples:
        default:
          value: Iv1.8a61f9b3a7aba766
    app-slug:
      name: app_slug
      in: path
      required: true
      schema:
        type: string
    assignment-id:
      name: assignment_id
      description: The unique identifier of the classroom assignment.
      in: path
      required: true
      schema:
        type: integer
    classroom-id:
      name: classroom_id
      description: The unique identifier of the classroom.
      in: path
      required: true
      schema:
        type: integer
    enterprise:
      name: enterprise
      description: The slug version of the enterprise name. You can also substitute
        this value with the enterprise id.
      in: path
      required: true
      schema:
        type: string
    dependabot-alert-comma-separated-states:
      name: state
      in: query
      description: |-
        A comma-separated list of states. If specified, only alerts with these states will be returned.

        Can be: `auto_dismissed`, `dismissed`, `fixed`, `open`
      schema:
        type: string
    dependabot-alert-comma-separated-severities:
      name: severity
      in: query
      description: |-
        A comma-separated list of severities. If specified, only alerts with these severities will be returned.

        Can be: `low`, `medium`, `high`, `critical`
      schema:
        type: string
    dependabot-alert-comma-separated-ecosystems:
      name: ecosystem
      in: query
      description: |-
        A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.

        Can be: `composer`, `go`, `maven`, `npm`, `nuget`, `pip`, `pub`, `rubygems`, `rust`
      schema:
        type: string
    dependabot-alert-comma-separated-packages:
      name: package
      in: query
      description: A comma-separated list of package names. If specified, only alerts
        for these packages will be returned.
      schema:
        type: string
    dependabot-alert-scope:
      name: scope
      in: query
      description: The scope of the vulnerable dependency. If specified, only alerts
        with this scope will be returned.
      schema:
        type: string
        enum:
        - development
        - runtime
    dependabot-alert-sort:
      name: sort
      in: query
      description: |-
        The property by which to sort the results.
        `created` means when the alert was created.
        `updated` means when the alert's state last changed.
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
    pagination-first:
      name: first
      description: |-
        **Deprecated**. The number of results per page (max 100), starting from the first matching result.
        This parameter must not be used in combination with `last`.
        Instead, use `per_page` in combination with `after` to fetch the first page of results.
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 30
    pagination-last:
      name: last
      description: |-
        **Deprecated**. The number of results per page (max 100), starting from the last matching result.
        This parameter must not be used in combination with `first`.
        Instead, use `per_page` in combination with `before` to fetch the last page of results.
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
    secret-scanning-alert-state:
      name: state
      in: query
      description: Set to `open` or `resolved` to only list secret scanning alerts
        in a specific state.
      required: false
      schema:
        type: string
        enum:
        - open
        - resolved
    secret-scanning-alert-secret-type:
      name: secret_type
      in: query
      description: |-
        A comma-separated list of secret types to return. By default all secret types are returned.
        See "[Secret scanning patterns](https://docs.github.com/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)"
        for a complete list of secret types.
      required: false
      schema:
        type: string
    secret-scanning-alert-resolution:
      name: resolution
      in: query
      description: A comma-separated list of resolutions. Only secret scanning alerts
        with one of these resolutions are listed. Valid resolutions are `false_positive`,
        `wont_fix`, `revoked`, `pattern_edited`, `pattern_deleted` or `used_in_tests`.
      required: false
      schema:
        type: string
    secret-scanning-alert-sort:
      name: sort
      description: The property to sort the results by. `created` means when the alert
        was created. `updated` means when the alert was updated or resolved.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
    gist-id:
      name: gist_id
      description: The unique identifier of the gist.
      in: path
      required: true
      schema:
        type: string
    comment-id:
      name: comment_id
      description: The unique identifier of the comment.
      in: path
      required: true
      schema:
        type: integer
    labels:
      name: labels
      description: 'A list of comma separated label names. Example: `bug,ui,@high`'
      in: query
      required: false
      schema:
        type: string
    account-id:
      name: account_id
      description: account_id parameter
      in: path
      required: true
      schema:
        type: integer
    plan-id:
      name: plan_id
      description: The unique identifier of the plan.
      in: path
      required: true
      schema:
        type: integer
    sort:
      name: sort
      description: The property to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name
        is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    all:
      name: all
      description: If `true`, show notifications marked as read.
      in: query
      required: false
      schema:
        type: boolean
        default: false
    participating:
      name: participating
      description: If `true`, only shows notifications in which the user is directly
        participating or mentioned.
      in: query
      required: false
      schema:
        type: boolean
        default: false
    before:
      name: before
      description: 'Only show notifications updated before the given time. This is
        a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    thread-id:
      name: thread_id
      description: The unique identifier of the notification thread. This corresponds
        to the value returned in the `id` field when you retrieve notifications (for
        example with the [`GET /notifications` operation](https://docs.github.com/rest/activity/notifications#list-notifications-for-the-authenticated-user)).
      in: path
      required: true
      schema:
        type: integer
    since-org:
      name: since
      description: An organization ID. Only return organizations with an ID greater
        than this ID.
      in: query
      required: false
      schema:
        type: integer
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repository-id:
      name: repository_id
      description: The unique identifier of the repository.
      in: path
      required: true
      schema:
        type: integer
    runner-id:
      name: runner_id
      description: Unique identifier of the self-hosted runner.
      in: path
      required: true
      schema:
        type: integer
    runner-label-name:
      name: name
      description: The name of a self-hosted runner's custom label.
      in: path
      required: true
      schema:
        type: string
    secret-name:
      name: secret_name
      description: The name of the secret.
      in: path
      required: true
      schema:
        type: string
    variables-per-page:
      name: per_page
      description: The number of results per page (max 30).
      in: query
      schema:
        type: integer
        default: 10
    variable-name:
      name: name
      description: The name of the variable.
      in: path
      required: true
      schema:
        type: string
    username:
      name: username
      description: The handle for the GitHub user account.
      in: path
      required: true
      schema:
        type: string
    tool-name:
      name: tool_name
      description: The name of a code scanning tool. Only results by this tool will
        be listed. You can specify the tool by using either `tool_name` or `tool_guid`,
        but not both.
      in: query
      required: false
      schema:
        "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
    tool-guid:
      name: tool_guid
      description: The GUID of a code scanning tool. Only results by this tool will
        be listed. Note that some code scanning tools may not include a GUID in their
        analysis data. You can specify the tool by using either `tool_guid` or `tool_name`,
        but not both.
      in: query
      required: false
      schema:
        "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
    hook-id:
      name: hook_id
      description: The unique identifier of the hook. You can find this value in the
        `X-GitHub-Hook-ID` header of a webhook delivery.
      in: path
      required: true
      schema:
        type: integer
    invitation-id:
      name: invitation_id
      description: The unique identifier of the invitation.
      in: path
      required: true
      schema:
        type: integer
    codespace-name:
      name: codespace_name
      in: path
      required: true
      description: The name of the codespace.
      schema:
        type: string
    migration-id:
      name: migration_id
      description: The unique identifier of the migration.
      in: path
      required: true
      schema:
        type: integer
    repo-name:
      name: repo_name
      description: repo_name parameter
      in: path
      required: true
      schema:
        type: string
    package-visibility:
      name: visibility
      description: |-
        The selected visibility of the packages.  This parameter is optional and only filters an existing result set.

        The `internal` visibility is only supported for GitHub Packages registries that allow for granular permissions. For other ecosystems `internal` is synonymous with `private`.
        For the list of GitHub Packages registries that support granular permissions, see "[About permissions for GitHub Packages](https://docs.github.com/packages/learn-github-packages/about-permissions-for-github-packages#granular-permissions-for-userorganization-scoped-packages)."
      in: query
      required: false
      schema:
        type: string
        enum:
        - public
        - private
        - internal
    package-type:
      name: package_type
      description: The type of supported package. Packages in GitHub's Gradle registry
        have the type `maven`. Docker images pushed to GitHub's Container registry
        (`ghcr.io`) have the type `container`. You can use the type `docker` to find
        images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`),
        even if these have now been migrated to the Container registry.
      in: path
      required: true
      schema:
        type: string
        enum:
        - npm
        - maven
        - rubygems
        - docker
        - nuget
        - container
    package-name:
      name: package_name
      description: The name of the package.
      in: path
      required: true
      schema:
        type: string
    package-version-id:
      name: package_version_id
      description: Unique identifier of the package version.
      in: path
      required: true
      schema:
        type: integer
    personal-access-token-sort:
      name: sort
      description: The property by which to sort the results.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created_at
        default: created_at
    personal-access-token-owner:
      name: owner
      description: A list of owner usernames to use to filter the results.
      in: query
      required: false
      schema:
        type: array
        maxItems: 10
        items:
          type: string
        example: owner[]=octocat1,owner[]=octocat2
    personal-access-token-repository:
      name: repository
      description: The name of the repository to use to filter the results.
      in: query
      required: false
      schema:
        type: string
        example: Hello-World
    personal-access-token-permission:
      name: permission
      description: The permission to use to filter the results.
      in: query
      required: false
      schema:
        type: string
        example: issues_read
    personal-access-token-before:
      name: last_used_before
      description: 'Only show fine-grained personal access tokens used before the
        given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
        format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    personal-access-token-after:
      name: last_used_after
      description: 'Only show fine-grained personal access tokens used after the given
        time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
        format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    fine-grained-personal-access-token-id:
      name: pat_id
      description: The unique identifier of the fine-grained personal access token.
      in: path
      required: true
      schema:
        type: integer
    repository-name-in-query:
      name: repository_name
      description: The name of the repository to filter on. When specified, only rule
        evaluations from this repository will be returned.
      in: query
      schema:
        type: integer
    time-period:
      name: time_period
      description: |-
        The time period to filter by.

        For example, `day` will filter for rule suites that occurred in the past 24 hours, and `week` will filter for insights that occurred in the past 7 days (168 hours).
      in: query
      required: false
      schema:
        type: string
        enum:
        - hour
        - day
        - week
        - month
        default: day
    actor-name-in-query:
      name: actor_name
      description: The handle for the GitHub user account to filter on. When specified,
        only rule evaluations triggered by this actor will be returned.
      in: query
      schema:
        type: string
    rule-suite-result:
      name: rule_suite_result
      description: The rule results to filter on. When specified, only suites with
        this result will be returned.
      in: query
      schema:
        type: string
        enum:
        - pass
        - fail
        - bypass
        - all
        default: all
    rule-suite-id:
      name: rule_suite_id
      description: |-
        The unique identifier of the rule suite result.
        To get this ID, you can use [GET /repos/{owner}/{repo}/rulesets/rule-suites](https://docs.github.com/rest/repos/rule-suites#list-repository-rule-suites)
        for repositories and [GET /orgs/{org}/rulesets/rule-suites](https://docs.github.com/rest/orgs/rule-suites#list-organization-rule-suites)
        for organizations.
      in: path
      required: true
      schema:
        type: integer
    secret-scanning-pagination-before-org-repo:
      name: before
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers).
        If specified, the query only searches for events before this cursor. To receive
        an initial cursor on your first request, include an empty "before" query string.
      in: query
      required: false
      schema:
        type: string
    secret-scanning-pagination-after-org-repo:
      name: after
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers).
        If specified, the query only searches for events after this cursor.  To receive
        an initial cursor on your first request, include an empty "after" query string.
      in: query
      required: false
      schema:
        type: string
    team-slug:
      name: team_slug
      description: The slug of the team name.
      in: path
      required: true
      schema:
        type: string
    discussion-number:
      name: discussion_number
      description: The number that identifies the discussion.
      in: path
      required: true
      schema:
        type: integer
    comment-number:
      name: comment_number
      description: The number that identifies the comment.
      in: path
      required: true
      schema:
        type: integer
    reaction-id:
      name: reaction_id
      description: The unique identifier of the reaction.
      in: path
      required: true
      schema:
        type: integer
    project-id:
      name: project_id
      description: The unique identifier of the project.
      in: path
      required: true
      schema:
        type: integer
    security-product:
      name: security_product
      in: path
      description: The security feature to enable or disable.
      required: true
      schema:
        type: string
        enum:
        - dependency_graph
        - dependabot_alerts
        - dependabot_security_updates
        - advanced_security
        - code_scanning_default_setup
        - secret_scanning
        - secret_scanning_push_protection
    org-security-product-enablement:
      name: enablement
      in: path
      description: |-
        The action to take.

        `enable_all` means to enable the specified security feature for all repositories in the organization.
        `disable_all` means to disable the specified security feature for all repositories in the organization.
      required: true
      schema:
        type: string
        enum:
        - enable_all
        - disable_all
    card-id:
      name: card_id
      description: The unique identifier of the card.
      in: path
      required: true
      schema:
        type: integer
    column-id:
      name: column_id
      description: The unique identifier of the column.
      in: path
      required: true
      schema:
        type: integer
    artifact-name:
      name: name
      description: The name field of an artifact. When specified, only artifacts with
        this name will be returned.
      in: query
      required: false
      schema:
        type: string
    artifact-id:
      name: artifact_id
      description: The unique identifier of the artifact.
      in: path
      required: true
      schema:
        type: integer
    actions-cache-git-ref-full:
      name: ref
      description: The full Git reference for narrowing down the cache. The `ref`
        for a branch should be formatted as `refs/heads/<branch name>`. To reference
        a pull request use `refs/pull/<number>/merge`.
      in: query
      required: false
      schema:
        type: string
    actions-cache-key:
      name: key
      description: An explicit key or prefix for identifying the cache
      in: query
      required: false
      schema:
        type: string
    actions-cache-list-sort:
      name: sort
      description: The property to sort the results by. `created_at` means when the
        cache was created. `last_accessed_at` means when the cache was last accessed.
        `size_in_bytes` is the size of the cache in bytes.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created_at
        - last_accessed_at
        - size_in_bytes
        default: last_accessed_at
    actions-cache-key-required:
      name: key
      description: A key for identifying the cache.
      in: query
      required: true
      schema:
        type: string
    cache-id:
      name: cache_id
      description: The unique identifier of the GitHub Actions cache.
      in: path
      required: true
      schema:
        type: integer
    job-id:
      name: job_id
      description: The unique identifier of the job.
      in: path
      required: true
      schema:
        type: integer
    actor:
      name: actor
      description: Returns someone's workflow runs. Use the login for the user who
        created the `push` associated with the check suite or workflow run.
      in: query
      required: false
      schema:
        type: string
    workflow-run-branch:
      name: branch
      description: Returns workflow runs associated with a branch. Use the name of
        the branch of the `push`.
      in: query
      required: false
      schema:
        type: string
    event:
      name: event
      description: Returns workflow run triggered by the event you specify. For example,
        `push`, `pull_request` or `issue`. For more information, see "[Events that
        trigger workflows](https://docs.github.com/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
      in: query
      required: false
      schema:
        type: string
    workflow-run-status:
      name: status
      description: Returns workflow runs with the check run `status` or `conclusion`
        that you specify. For example, a conclusion can be `success` or a status can
        be `in_progress`. Only GitHub can set a status of `waiting` or `requested`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - completed
        - action_required
        - cancelled
        - failure
        - neutral
        - skipped
        - stale
        - success
        - timed_out
        - in_progress
        - queued
        - requested
        - waiting
        - pending
    created:
      name: created
      description: Returns workflow runs created within the given date-time range.
        For more information on the syntax, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
      in: query
      required: false
      schema:
        type: string
        format: date-time
    exclude-pull-requests:
      name: exclude_pull_requests
      description: If `true` pull requests are omitted from the response (empty array).
      in: query
      required: false
      schema:
        type: boolean
        default: false
    workflow-run-check-suite-id:
      name: check_suite_id
      description: Returns workflow runs with the `check_suite_id` that you specify.
      in: query
      schema:
        type: integer
    workflow-run-head-sha:
      name: head_sha
      description: Only returns workflow runs that are associated with the specified
        `head_sha`.
      in: query
      required: false
      schema:
        type: string
    run-id:
      name: run_id
      description: The unique identifier of the workflow run.
      in: path
      required: true
      schema:
        type: integer
    attempt-number:
      name: attempt_number
      description: The attempt number of the workflow run.
      in: path
      required: true
      schema:
        type: integer
    workflow-id:
      name: workflow_id
      in: path
      description: The ID of the workflow. You can also pass the workflow file name
        as a string.
      required: true
      schema:
        oneOf:
        - type: integer
        - type: string
    autolink-id:
      name: autolink_id
      description: The unique identifier of the autolink.
      in: path
      required: true
      schema:
        type: integer
    branch:
      name: branch
      description: The name of the branch. Cannot contain wildcard characters. To
        use wildcard characters in branch names, use [the GraphQL API](https://docs.github.com/graphql).
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    check-run-id:
      name: check_run_id
      description: The unique identifier of the check run.
      in: path
      required: true
      schema:
        type: integer
    check-suite-id:
      name: check_suite_id
      description: The unique identifier of the check suite.
      in: path
      required: true
      schema:
        type: integer
    check-name:
      name: check_name
      description: Returns check runs with the specified `name`.
      in: query
      required: false
      schema:
        type: string
    status:
      name: status
      description: Returns check runs with the specified `status`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - queued
        - in_progress
        - completed
    git-ref:
      name: ref
      description: The Git reference for the results you want to list. The `ref` for
        a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch
        name>`. To reference a pull request use `refs/pull/<number>/merge`.
      in: query
      required: false
      schema:
        "$ref": "#/components/schemas/code-scanning-ref"
    alert-number:
      name: alert_number
      in: path
      description: The number that identifies an alert. You can find this at the end
        of the URL for a code scanning alert within GitHub, and in the `number` field
        in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts`
        operation.
      required: true
      schema:
        "$ref": "#/components/schemas/alert-number"
    commit-sha:
      name: commit_sha
      description: The SHA of the commit.
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    commit-ref:
      name: ref
      description: The commit reference. Can be a commit SHA, branch name (`heads/BRANCH_NAME`),
        or tag name (`tags/TAG_NAME`). For more information, see "[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)"
        in the Git documentation.
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    dependabot-alert-comma-separated-manifests:
      name: manifest
      in: query
      description: A comma-separated list of full manifest paths. If specified, only
        alerts for these manifests will be returned.
      schema:
        type: string
    dependabot-alert-number:
      name: alert_number
      in: path
      description: |-
        The number that identifies a Dependabot alert in its repository.
        You can find this at the end of the URL for a Dependabot alert within GitHub,
        or in `number` fields in the response from the
        `GET /repos/{owner}/{repo}/dependabot/alerts` operation.
      required: true
      schema:
        "$ref": "#/components/schemas/alert-number"
    manifest-path:
      name: name
      description: The full path, relative to the repository root, of the dependency
        manifest file.
      in: query
      required: false
      schema:
        type: string
    deployment-id:
      name: deployment_id
      description: deployment_id parameter
      in: path
      required: true
      schema:
        type: integer
    environment-name:
      name: environment_name
      in: path
      required: true
      description: The name of the environment.
      schema:
        type: string
    branch-policy-id:
      name: branch_policy_id
      in: path
      required: true
      description: The unique identifier of the branch policy.
      schema:
        type: integer
    protection-rule-id:
      name: protection_rule_id
      description: The unique identifier of the protection rule.
      in: path
      required: true
      schema:
        type: integer
    since-user:
      name: since
      description: A user ID. Only return users with an ID greater than this ID.
      in: query
      required: false
      schema:
        type: integer
    issue-number:
      name: issue_number
      description: The number that identifies the issue.
      in: path
      required: true
      schema:
        type: integer
    key-id:
      name: key_id
      description: The unique identifier of the key.
      in: path
      required: true
      schema:
        type: integer
    milestone-number:
      name: milestone_number
      description: The number that identifies the milestone.
      in: path
      required: true
      schema:
        type: integer
    pull-number:
      name: pull_number
      description: The number that identifies the pull request.
      in: path
      required: true
      schema:
        type: integer
    review-id:
      name: review_id
      description: The unique identifier of the review.
      in: path
      required: true
      schema:
        type: integer
    asset-id:
      name: asset_id
      description: The unique identifier of the asset.
      in: path
      required: true
      schema:
        type: integer
    release-id:
      name: release_id
      description: The unique identifier of the release.
      in: path
      required: true
      schema:
        type: integer
    ref-in-query:
      name: ref
      description: The name of the ref. Cannot contain wildcard characters. When specified,
        only rule evaluations triggered for this ref will be returned.
      in: query
      schema:
        type: string
      x-multi-segment: true
    tag-protection-id:
      name: tag_protection_id
      description: The unique identifier of the tag protection.
      in: path
      required: true
      schema:
        type: integer
    per:
      name: per
      description: The time frame to display results for.
      in: query
      required: false
      schema:
        type: string
        enum:
        - day
        - week
        default: day
    since-repo:
      name: since
      description: A repository ID. Only return repositories with an ID greater than
        this ID.
      in: query
      required: false
      schema:
        type: integer
    order:
      name: order
      description: Determines whether the first search result returned is the highest
        number of matches (`desc`) or lowest number of matches (`asc`). This parameter
        is ignored unless you provide `sort`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - desc
        - asc
        default: desc
    team-id:
      name: team_id
      description: The unique identifier of the team.
      in: path
      required: true
      schema:
        type: integer
    repository-id-in-query:
      name: repository_id
      description: ID of the Repository to filter on
      in: query
      schema:
        type: integer
    export-id:
      name: export_id
      in: path
      required: true
      description: The ID of the export operation, or `latest`. Currently only `latest`
        is currently supported.
      schema:
        type: string
    gpg-key-id:
      name: gpg_key_id
      description: The unique identifier of the GPG key.
      in: path
      required: true
      schema:
        type: integer
    since-repo-date:
      name: since
      description: 'Only show repositories updated after the given time. This is a
        timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    before-repo-date:
      name: before
      description: 'Only show repositories updated before the given time. This is
        a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    ssh-signing-key-id:
      name: ssh_signing_key_id
      description: The unique identifier of the SSH signing key.
      in: path
      required: true
      schema:
        type: integer
    sort-starred:
      name: sort
      description: The property to sort the results by. `created` means when the repository
        was starred. `updated` means when the repository was last pushed to.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
  responses:
    validation_failed_simple:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/validation-error-simple"
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
        application/scim+json:
          schema:
            "$ref": "#/components/schemas/scim-error"
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/validation-error"
    accepted:
      description: Accepted
      content:
        application/json:
          schema:
            type: object
          examples:
            default: {}
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
    forbidden_gist:
      description: Forbidden Gist
      content:
        application/json:
          schema:
            type: object
            properties:
              block:
                type: object
                properties:
                  reason:
                    type: string
                  created_at:
                    type: string
                  html_url:
                    type: string
                    nullable: true
              message:
                type: string
              documentation_url:
                type: string
    moved_permanently:
      description: Moved permanently
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    actions_runner_jitconfig:
      description: Response
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/jit-config"
          examples:
            default:
              "$ref": "#/components/examples/runner-jitconfig"
    actions_runner_labels:
      description: Response
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/runner-label-response"
          examples:
            default:
              "$ref": "#/components/examples/runner-labels"
    actions_runner_labels_readonly:
      description: Response
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/runner-label-response"
          examples:
            default:
              "$ref": "#/components/examples/runner-labels-readonly"
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    package_es_list_error:
      description: The value of `per_page` multiplied by `page` cannot be greater
        than 10000.
    no_content:
      description: A header with no content is returned.
    gone:
      description: Gone
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    temporary_redirect:
      description: Temporary Redirect
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    code_scanning_forbidden_read:
      description: Response if GitHub Advanced Security is not enabled for this repository
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    code_scanning_forbidden_write:
      description: Response if the repository is archived or if GitHub Advanced Security
        is not enabled for this repository
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    found:
      description: Found
    code_scanning_conflict:
      description: Response if there is already a validation run in progress with
        a different default setup configuration
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    dependency_review_forbidden:
      description: Response if GitHub Advanced Security is not enabled for this repository
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
    porter_maintenance:
      description: Unavailable due to service under maintenance.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/basic-error"
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>;
        rel="last"
      schema:
        type: string
    content-type:
      example: text/html
      schema:
        type: string
    x-common-marker-version:
      example: 0.17.4
      schema:
        type: string
    x-rate-limit-limit:
      example: 5000
      schema:
        type: integer
    x-rate-limit-remaining:
      example: 4999
      schema:
        type: integer
    x-rate-limit-reset:
      example: 1590701888
      schema:
        type: integer
        format: timestamp
    location:
      example: https://pipelines.actions.githubusercontent.com/OhgS4QRKqmgx7bKC27GKU83jnQjyeqG8oIMTge8eqtheppcmw8/_apis/pipelines/1/runs/176/signedlogcontent?urlExpires=2020-01-24T18%3A10%3A31.5729946Z&urlSigningMethod=HMACV1&urlSignature=agG73JakPYkHrh06seAkvmH7rBR4Ji4c2%2B6a2ejYh3E%3D
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
