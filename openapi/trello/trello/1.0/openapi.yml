openapi: 3.0.0
servers:
  - url: https://trello.com/1
x-hasEquivalentPaths: true
info:
  x-ballerina-display:
    label: Trello
    iconPath: "icon.png"
  contact:
    name: Trello
    url: https://trello.com/home
  description: >-
    This is a generated connector for [Trello API v1](https://trello.com) OpenAPI specification.

    Client endpoint of Trello API provides capability to perform CRUD (Create, Read, Update, and Delete) operations on resources in a Trello account.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
    
    Create a [Trello account](https://trello.com) and obtain tokens following [this guide](https://developer.atlassian.com/cloud/trello/guides/rest-api/api-introduction/#authentication-and-authorization).
  license:
    name: "Trello : Terms of Service"
    url: https://trello.com/legal
  termsOfService: https://trello.com/legal
  title: Trello
  version: "1.0"
  x-apisguru-categories:
    - collaboration
  x-logo:
    url: https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/c13d1cd96a2cff30f0460a5e1860c5ea/header-logo-blue.svg
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/trello.com/1.0/swagger.yaml
      version: "3.0"
  x-providerName: trello.com
  x-unofficialSpec: true
externalDocs:
  url: https://developers.trello.com
tags:
  - description: https://trello.com/docs/api/action/index.html
    name: action
  - description: https://trello.com/docs/api/batch/index.html
    name: batch
  - description: https://trello.com/docs/api/board/index.html
    name: board
  - description: https://trello.com/docs/api/card/index.html
    name: card
  - description: https://trello.com/docs/api/checklist/index.html
    name: checklist
  - description: https://trello.com/docs/api/label/index.html
    name: label
  - description: https://trello.com/docs/api/list/index.html
    name: list
  - description: https://trello.com/docs/api/member/index.html
    name: member
  - description: https://trello.com/docs/api/notification/index.html
    name: notification
  - description: https://trello.com/docs/api/organization/index.html
    name: organization
  - description: https://trello.com/docs/api/search/index.html
    name: search
  - description: https://trello.com/docs/api/session/index.html
    name: session
  - description: https://trello.com/docs/api/token/index.html
    name: token
  - description: https://trello.com/docs/api/type/index.html
    name: type
  - description: https://trello.com/docs/api/webhook/index.html
    name: webhook
paths:
  /batch:
    get:
      operationId: getBatch
      parameters:
        - description: List of API v1 GET routes, not including the version prefix
          in: query
          name: urls
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get batch
      tags:
        - batch
  /boards:
    post:
      operationId: addBoards
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards"
        description: Attributes of "Boards" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add new board
      tags:
        - board
  "/boards/{idBoard}":
    get:
      operationId: getBoardsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: actions_since
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: action_member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: action_member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: action_memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: action_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: card_attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: card_attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all or none"
          in: query
          name: card_checklists
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: card_stickers
          required: false
          schema:
            type: string
        - description: "One of: mine or none"
          in: query
          name: boardStars
          required: false
          schema:
            default: none
            type: string
        - description: "One of: all or none"
          in: query
          name: labels
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: color, idBoard, name or uses"
          in: query
          name: label_fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: labels_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: lists
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: memberships_member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberships_member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: "One of: admins, all, none, normal or owners"
          in: query
          name: members
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, initials, fullName, username and confirmed
            type: string
        - description: "One of: admins, all, none, normal or owners"
          in: query
          name: membersInvited
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: membersInvited_fields
          required: false
          schema:
            default: avatarHash, initials, fullName and username
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: idBoard, idCard, name or pos"
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: organization_memberships
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: myPrefs
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: name, desc, descData, closed, idOrganization, pinned, url, shortUrl,
              prefs and labelNames
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get board by ID
      tags:
        - board
    put:
      operationId: updateBoardsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards"
        description: Attributes of "Boards" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards by ID
      tags:
        - board
  "/boards/{idBoard}/actions":
    get:
      operationId: getBoardsActionsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: "0"
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards actions by ID board
      tags:
        - board
  "/boards/{idBoard}/boardStars":
    get:
      operationId: getBoardsBoardStarsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "One of: mine or none"
          in: query
          name: filter
          required: false
          schema:
            default: mine
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards board stars by ID
      tags:
        - board
  "/boards/{idBoard}/calendarKey/generate":
    post:
      operationId: addBoardsCalendarKeyGenerateByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards calendar key generate by ID
      tags:
        - board
  "/boards/{idBoard}/cards":
    get:
      operationId: getBoardsCardsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: A number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards cards by ID board
      tags:
        - board
  "/boards/{idBoard}/cards/{filter}":
    get:
      operationId: getBoardsCardsByIdBoardByFilter
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get boards cards by ID board by filter
      tags:
        - board
  "/boards/{idBoard}/cards/{idCard}":
    get:
      operationId: getBoardsCardsByIdBoardByIdCard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdCard
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: action_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, initials, fullName and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: idCheckItem or state"
          in: query
          name: checkItemState_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: labels
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: idBoard, idCard, name or pos"
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards cards by ID board by ID card
      tags:
        - board
  "/boards/{idBoard}/checklists":
    get:
      operationId: getBoardsChecklistsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all or none"
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: name, nameData, pos, state or
            type"
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: idBoard, idCard, name or pos"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards checklists by ID board
      tags:
        - board
    post:
      operationId: addBoardsChecklistsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_checklists"
        description: Attributes of "Boards Checklists" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards checklists by ID board
      tags:
        - board
  "/boards/{idBoard}/closed":
    put:
      operationId: updateBoardsClosedByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_closed"
        description: Attributes of "Boards Closed" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards closed by ID board
      tags:
        - board
  "/boards/{idBoard}/deltas":
    get:
      operationId: getBoardsDeltasByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: A valid tag for subscribing
          in: query
          name: tags
          required: true
          schema:
            type: string
        - description: A number from -1 to Infinity
          in: query
          name: ixLastUpdate
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards deltas by ID board
      tags:
        - board
  "/boards/{idBoard}/desc":
    put:
      operationId: updateBoardsDescByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_desc"
        description: Attributes of "Boards Desc" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards desc by ID board
      tags:
        - board
  "/boards/{idBoard}/emailKey/generate":
    post:
      operationId: addBoardsEmailKeyGenerateByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards email key generate by ID board
      tags:
        - board
  "/boards/{idBoard}/idOrganization":
    put:
      operationId: updateBoardsIdOrganizationByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_idOrganization"
        description: Attributes of "Boards ID Organization" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards ID organization by ID board
      tags:
        - board
  "/boards/{idBoard}/labelNames/blue":
    put:
      operationId: updateBoardsLabelNamesBlueByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labelNames_blue"
        description: Attributes of "Label Names Blue" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards label names blue by ID board
      tags:
        - board
  "/boards/{idBoard}/labelNames/green":
    put:
      operationId: updateBoardsLabelNamesGreenByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labelNames_green"
        description: Attributes of "Label Names Green" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards label names green by ID board
      tags:
        - board
  "/boards/{idBoard}/labelNames/orange":
    put:
      operationId: updateBoardsLabelNamesOrangeByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labelNames_orange"
        description: Attributes of "Label Names Orange" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards label names orange by ID board
      tags:
        - board
  "/boards/{idBoard}/labelNames/purple":
    put:
      operationId: updateBoardsLabelNamesPurpleByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labelNames_purple"
        description: Attributes of "Label Names Purple" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards label names purple by ID board
      tags:
        - board
  "/boards/{idBoard}/labelNames/red":
    put:
      operationId: updateBoardsLabelNamesRedByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labelNames_red"
        description: Attributes of "Label Names Red" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards label names red by ID board
      tags:
        - board
  "/boards/{idBoard}/labelNames/yellow":
    put:
      operationId: updateBoardsLabelNamesYellowByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labelNames_yellow"
        description: Attributes of "Label Names Yellow" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards label names yellow by ID board
      tags:
        - board
  "/boards/{idBoard}/labels":
    get:
      operationId: getBoardsLabelsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: color, idBoard, name or uses"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards labels by ID board
      tags:
        - board
    post:
      operationId: addBoardsLabelsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_labels"
        description: Attributes of "Boards Labels" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards labels by ID board
      tags:
        - board
  "/boards/{idBoard}/labels/{idLabel}":
    get:
      operationId: getBoardsLabelsByIdBoardByIdLabel
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: color, idBoard, name or uses"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards labels by ID board by ID label
      tags:
        - board
  "/boards/{idBoard}/lists":
    get:
      operationId: getBoardsListsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: filter
          required: false
          schema:
            default: open
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards lists by ID board
      tags:
        - board
    post:
      operationId: addBoardsListsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_lists"
        description: Attributes of "Boards Lists" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards lists by ID board
      tags:
        - board
  "/boards/{idBoard}/lists/{filter}":
    get:
      operationId: getBoardsListsByIdBoardByFilter
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get boards lists by ID board by filter
      tags:
        - board
  "/boards/{idBoard}/markAsViewed":
    post:
      operationId: addBoardsMarkAsViewedByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards mark as viewed by ID board
      tags:
        - board
  "/boards/{idBoard}/members":
    get:
      operationId: getBoardsMembersByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "One of: admins, all, none, normal or owners"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: True or false ; works for premium organizations only.
          in: query
          name: activity
          required: false
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards members by ID board
      tags:
        - board
    put:
      operationId: updateBoardsMembersByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/boards_members"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards members by ID board
      tags:
        - board
  "/boards/{idBoard}/members/{filter}":
    get:
      operationId: getBoardsMembersByIdBoardByFilter
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get boards members by ID board by filter
      tags:
        - board
  "/boards/{idBoard}/members/{idMember}":
    delete:
      operationId: deleteBoardsMembersByIdBoardByIdMember
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete boards members by ID board by ID member
      tags:
        - board
    put:
      operationId: updateBoardsMembersByIdBoardByIdMember
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/boards_members"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards members by ID board by ID member
      tags:
        - board
  "/boards/{idBoard}/members/{idMember}/cards":
    get:
      operationId: getBoardsMembersCardsByIdBoardByIdMember
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name, desc, closed, idOrganization, pinned, url and prefs
            type: string
        - description: "True or false"
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards members cards by ID board by ID member
      tags:
        - board
  "/boards/{idBoard}/membersInvited":
    get:
      operationId: getBoardsMembersInvitedByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards members invited by ID board
      tags:
        - board
  "/boards/{idBoard}/membersInvited/{field}":
    get:
      operationId: getBoardsMembersInvitedByIdBoardByField
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards members invited by ID board by field
      tags:
        - board
  "/boards/{idBoard}/memberships":
    get:
      operationId: getBoardsMembershipsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards memberships by ID board
      tags:
        - board
  "/boards/{idBoard}/memberships/{idMembership}":
    get:
      operationId: getBoardsMembershipsByIdBoardByIdMembership
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards memberships by ID board by ID membership
      tags:
        - board
    put:
      operationId: updateBoardsMembershipsByIdBoardByIdMembership
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: IdMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_memberships"
        description: Attributes of "Boards Memberships" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards memberships by ID board by ID membership
      tags:
        - board
  "/boards/{idBoard}/myPrefs":
    get:
      operationId: getBoardsMyPrefsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards my prefs by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/emailPosition":
    put:
      operationId: updateBoardsMyPrefsEmailPositionByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_emailPosition"
        description: Attributes of "My Prefs Email Position" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs email position by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/idEmailList":
    put:
      operationId: updateBoardsMyPrefsIdEmailListByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_idEmailList"
        description: Attributes of "My Prefs ID Email List" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs ID email list by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/showListGuide":
    put:
      operationId: updateBoardsMyPrefsShowListGuideByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_showListGuide"
        description: Attributes of "My Prefs Show List Guide" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs show list guide by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/showSidebar":
    put:
      operationId: updateBoardsMyPrefsShowSidebarByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_showSidebar"
        description: Attributes of "My Prefs Show Sidebar" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs show sidebar by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/showSidebarActivity":
    put:
      operationId: updateBoardsMyPrefsShowSidebarActivityByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_showSidebarActivity"
        description: Attributes of "My Prefs Show Sidebar Activity" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs show sidebar activity by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/showSidebarBoardActions":
    put:
      operationId: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_showSidebarBoardActions"
        description: Attributes of "My Prefs Show Sidebar Board Actions" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs show sidebar board actions by ID board
      tags:
        - board
  "/boards/{idBoard}/myPrefs/showSidebarMembers":
    put:
      operationId: updateBoardsMyPrefsShowSidebarMembersByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/myPrefs_showSidebarMembers"
        description: Attributes of "My Prefs Show Sidebar Members" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards my prefs show sidebar members by ID board
      tags:
        - board
  "/boards/{idBoard}/name":
    put:
      operationId: updateBoardsNameByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_name"
        description: Attributes of "Boards Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards name by ID board
      tags:
        - board
  "/boards/{idBoard}/organization":
    get:
      operationId: getBoardsOrganizationByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards organization by ID board
      tags:
        - board
  "/boards/{idBoard}/organization/{field}":
    get:
      operationId: getBoardsOrganizationByIdBoardByField
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get boards organization by ID board by field
      tags:
        - board
  "/boards/{idBoard}/powerUps":
    post:
      operationId: addBoardsPowerUpsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_powerUps"
        description: Attributes of "Boards Power Ups" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add boards power ups by ID board
      tags:
        - board
  "/boards/{idBoard}/powerUps/{powerUp}":
    delete:
      operationId: deleteBoardsPowerUpsByIdBoardByPowerUp
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: PowerUp
          in: path
          name: powerUp
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete boards power ups by ID board by power up
      tags:
        - board
  "/boards/{idBoard}/prefs/background":
    put:
      operationId: updateBoardsPrefsBackgroundByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_background"
        description: Attributes of "Prefs Background" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs background by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/calendarFeedEnabled":
    put:
      operationId: updateBoardsPrefsCalendarFeedEnabledByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_calendarFeedEnabled"
        description: Attributes of "Prefs Calendar Feed Enabled" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs calendar feed enabled by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/cardAging":
    put:
      operationId: updateBoardsPrefsCardAgingByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_cardAging"
        description: Attributes of "Prefs Card Aging" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs card aging by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/cardCovers":
    put:
      operationId: updateBoardsPrefsCardCoversByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_cardCovers"
        description: Attributes of "Prefs Card Covers" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs card covers by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/comments":
    put:
      operationId: updateBoardsPrefsCommentsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_comments"
        description: Attributes of "Prefs Comments" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs comments by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/invitations":
    put:
      operationId: updateBoardsPrefsInvitationsByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_invitations"
        description: Attributes of "Prefs Invitations" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs invitations by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/permissionLevel":
    put:
      operationId: updateBoardsPrefsPermissionLevelByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/prefs_permissionLevel"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs permission level by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/selfJoin":
    put:
      operationId: updateBoardsPrefsSelfJoinByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_selfJoin"
        description: Attributes of "Prefs Self Join" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs self join by ID board
      tags:
        - board
  "/boards/{idBoard}/prefs/voting":
    put:
      operationId: updateBoardsPrefsVotingByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_voting"
        description: Attributes of "Prefs Voting" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards prefs voting by ID board
      tags:
        - board
  "/boards/{idBoard}/subscribed":
    put:
      operationId: updateBoardsSubscribedByIdBoard
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boards_subscribed"
        description: Attributes of "Boards Subscribed" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update boards subscribed by ID board
      tags:
        - board
  "/boards/{idBoard}/{field}":
    get:
      operationId: getBoardsByIdBoardByField
      parameters:
        - description: Board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get boards by ID board by field
      tags:
        - board
  /cards:
    post:
      operationId: addCards
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards"
        description: Attributes of "Cards" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards
      tags:
        - card
  "/cards/{idCard}":
    delete:
      operationId: deleteCardsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards by ID card
      tags:
        - card
    get:
      operationId: getCardsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: action_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: membersVoted
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberVoted_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: idCheckItem or state"
          in: query
          name: checkItemState_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: idBoard, idCard, name or pos"
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name, desc, descData, closed, idOrganization, pinned, url and prefs
            type: string
        - description: "True or false"
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: image, imageScaled, imageUrl,
            left, rotate, top or zIndex"
          in: query
          name: sticker_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
              email, idBoard, idChecklists, idLabels, idList, idMembers,
              idShort, idAttachmentCover, manualCoverAttachment, labels, name,
              pos, shortUrl and url
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards by ID card
      tags:
        - card
    put:
      operationId: updateCardsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards"
        description: Attributes of "Cards" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards by ID card
      tags:
        - card
  "/cards/{idCard}/actions":
    get:
      operationId: getCardsActionsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: filter
          required: false
          schema:
            default: commentCard and updateCard:idList
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: "0"
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards actions by ID card
      tags:
        - card
  "/cards/{idCard}/actions/comments":
    post:
      operationId: addCardsActionsCommentsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/actions_comments"
        description: Attributes of "Actions Comments" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards actions comments by ID card
      tags:
        - card
  "/cards/{idCard}/actions/{idAction}/comments":
    delete:
      description: This can only be done by the original author of the comment, or
        someone with higher permissions than the original author.
      operationId: deleteCardsActionsCommentsByIdCardByIdAction
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards actions comments by ID card by ID action
      tags:
        - card
    put:
      description: This can only be done by the original author of the comment.
      operationId: updateCardsActionsCommentsByIdCardByIdAction
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_actions_comments"
        description: Attributes of "Cards Actions Comments" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards actions comments by ID card by ID action
      tags:
        - card
  "/cards/{idCard}/attachments":
    get:
      operationId: getCardsAttachmentsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: filter
          required: false
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards attachments by ID card
      tags:
        - card
    post:
      operationId: addCardsAttachmentsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_attachments"
        description: Attributes of "Cards Attachments" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards attachments by ID card
      tags:
        - card
  "/cards/{idCard}/attachments/{idAttachment}":
    delete:
      operationId: deleteCardsAttachmentsByIdCardByIdAttachment
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdAttachment
          in: path
          name: idAttachment
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards attachments by ID card by ID attachment
      tags:
        - card
    get:
      operationId: getCardsAttachmentsByIdCardByIdAttachment
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdAttachment
          in: path
          name: idAttachment
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards attachments by ID card by ID attachment
      tags:
        - card
  "/cards/{idCard}/board":
    get:
      operationId: getCardsBoardByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards board by ID card
      tags:
        - card
  "/cards/{idCard}/board/{field}":
    get:
      operationId: getCardsBoardByIdCardByField
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards board by ID card by field
      tags:
        - card
  "/cards/{idCard}/checkItemStates":
    get:
      operationId: getCardsCheckItemStatesByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: idCheckItem or state"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards check item states by ID card
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}":
    put:
      operationId: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklistCurrent
          in: path
          name: idChecklistCurrent
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_checklist_idChecklistCurrent_checkItem"
        description: Attributes of "Cards Checklist ID Checklist Current Check Item" to
          be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards checklist check item by ID card by ID checklist current by ID check item
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklist}/checkItem":
    post:
      operationId: addCardsChecklistCheckItemByIdCardByIdChecklist
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_checklist_checkItem"
        description: Attributes of "Cards Checklist Check Item" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards checklist check item by ID card by ID checklist
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}":
    delete:
      operationId: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards checklist check item by ID card by ID checklist by ID check item
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard":
    post:
      operationId: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards checklist check item convert to card by ID card by ID checklist by ID check item
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name":
    put:
      operationId: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_checklist_checkItem_name"
        description: Attributes of "Cards Checklist Check Item Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards checklist check item name by ID card by ID checklist by ID check item
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos":
    put:
      operationId: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_checklist_checkItem_pos"
        description: Attributes of "Cards Checklist Check Item Pos" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards checklist check item pos by ID card by ID checklist by ID check item
      tags:
        - card
  "/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state":
    put:
      operationId: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_checklist_checkItem_state"
        description: Attributes of "Cards Checklist Check Item State" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards checklist check item state by ID card by ID checklist by ID check item
      tags:
        - card
  "/cards/{idCard}/checklists":
    get:
      operationId: getCardsChecklistsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all or none"
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: name, nameData, pos, state or
            type"
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: idBoard, idCard, name or pos"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards checklists by ID card
      tags:
        - card
    post:
      operationId: addCardsChecklistsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_checklists"
        description: Attributes of "Cards Checklists" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards checklists by ID card
      tags:
        - card
  "/cards/{idCard}/checklists/{idChecklist}":
    delete:
      operationId: deleteCardsChecklistsByIdCardByIdChecklist
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards checklists by ID card by ID checklist
      tags:
        - card
  "/cards/{idCard}/closed":
    put:
      operationId: updateCardsClosedByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_closed"
        description: Attributes of "Cards Closed" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards closed by ID card
      tags:
        - card
  "/cards/{idCard}/desc":
    put:
      operationId: updateCardsDescByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_desc"
        description: Attributes of "Cards Desc" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards desc by ID card
      tags:
        - card
  "/cards/{idCard}/due":
    put:
      operationId: updateCardsDueByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_due"
        description: Attributes of "Cards Due" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards due by ID card
      tags:
        - card
  "/cards/{idCard}/idAttachmentCover":
    put:
      operationId: updateCardsIdAttachmentCoverByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_idAttachmentCover"
        description: Attributes of "Cards ID Attachment Cover" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards ID attachment cover by ID card
      tags:
        - card
  "/cards/{idCard}/idBoard":
    put:
      operationId: updateCardsIdBoardByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_idBoard"
        description: Attributes of "Cards ID Board" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards ID board by ID card
      tags:
        - card
  "/cards/{idCard}/idLabels":
    post:
      operationId: addCardsIdLabelsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_idLabels"
        description: Attributes of "Cards ID Labels" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards ID labels by ID card
      tags:
        - card
  "/cards/{idCard}/idLabels/{idLabel}":
    delete:
      operationId: deleteCardsIdLabelsByIdCardByIdLabel
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards ID labels by ID card by ID label
      tags:
        - card
  "/cards/{idCard}/idList":
    put:
      operationId: updateCardsIdListByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_idList"
        description: Attributes of "Cards ID List" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards ID list by ID card
      tags:
        - card
  "/cards/{idCard}/idMembers":
    post:
      operationId: addCardsIdMembersByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_idMembers"
        description: Attributes of "Cards ID Members" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards ID members by ID card
      tags:
        - card
    put:
      operationId: updateCardsIdMembersByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_idMembers"
        description: Attributes of "Cards ID Members" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards ID members by ID card
      tags:
        - card
  "/cards/{idCard}/idMembers/{idMember}":
    delete:
      operationId: deleteCardsIdMembersByIdCardByIdMember
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards ID members by ID card by ID member
      tags:
        - card
  "/cards/{idCard}/labels":
    post:
      operationId: addCardsLabelsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_labels"
        description: Attributes of "Cards Labels" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards labels by ID card
      tags:
        - card
    put:
      operationId: updateCardsLabelsByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_labels"
        description: Attributes of "Cards Labels" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards labels by ID card
      tags:
        - card
  "/cards/{idCard}/labels/{color}":
    delete:
      operationId: deleteCardsLabelsByIdCardByColor
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: Color
          in: path
          name: color
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards labels by ID card by color
      tags:
        - card
  "/cards/{idCard}/list":
    get:
      operationId: getCardsListByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards list by ID card
      tags:
        - card
  "/cards/{idCard}/list/{field}":
    get:
      operationId: getCardsListByIdCardByField
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards list by ID card by field
      tags:
        - card
  "/cards/{idCard}/markAssociatedNotificationsRead":
    post:
      operationId: addCardsMarkAssociatedNotificationsReadByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards mark associated notifications read by ID card
      tags:
        - card
  "/cards/{idCard}/members":
    get:
      operationId: getCardsMembersByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards members by ID card
      tags:
        - card
  "/cards/{idCard}/membersVoted":
    get:
      operationId: getCardsMembersVotedByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards members voted by ID card
      tags:
        - card
    post:
      operationId: addCardsMembersVotedByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_membersVoted"
        description: Attributes of "Cards Members Voted" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards members voted by ID card
      tags:
        - card
  "/cards/{idCard}/membersVoted/{idMember}":
    delete:
      operationId: deleteCardsMembersVotedByIdCardByIdMember
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards members voted by ID card by ID member
      tags:
        - card
  "/cards/{idCard}/name":
    put:
      operationId: updateCardsNameByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_name"
        description: Attributes of "Cards Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards name by ID card
      tags:
        - card
  "/cards/{idCard}/pos":
    put:
      operationId: updateCardsPosByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_pos"
        description: Attributes of "Cards Pos" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards pos by ID card
      tags:
        - card
  "/cards/{idCard}/stickers":
    get:
      operationId: getCardsStickersByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: image, imageScaled, imageUrl,
            left, rotate, top or zIndex"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards stickers by ID card
      tags:
        - card
    post:
      operationId: addCardsStickersByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_stickers"
        description: Attributes of "Cards Stickers" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add cards stickers by ID card
      tags:
        - card
  "/cards/{idCard}/stickers/{idSticker}":
    delete:
      operationId: deleteCardsStickersByIdCardByIdSticker
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdSticker
          in: path
          name: idSticker
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete cards stickers by ID card by ID sticker
      tags:
        - card
    get:
      operationId: getCardsStickersByIdCardByIdSticker
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdSticker
          in: path
          name: idSticker
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: image, imageScaled, imageUrl,
            left, rotate, top or zIndex"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get cards stickers by ID card by ID sticker
      tags:
        - card
    put:
      operationId: updateCardsStickersByIdCardByIdSticker
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: IdSticker
          in: path
          name: idSticker
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_stickers"
        description: Attributes of "Cards Stickers" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards stickers by ID card by ID sticker
      tags:
        - card
  "/cards/{idCard}/subscribed":
    put:
      operationId: updateCardsSubscribedByIdCard
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_subscribed"
        description: Attributes of "Cards Subscribed" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update cards subscribed by ID card
      tags:
        - card
  "/cards/{idCard}/{field}":
    get:
      operationId: getCardsByIdCardByField
      parameters:
        - description: Card ID or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get cards by ID card by field
      tags:
        - card
  /checklists:
    post:
      operationId: addChecklists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checklists"
        description: Attributes of "Checklists" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add checklists
      tags:
        - checklist
  "/checklists/{idChecklist}":
    delete:
      operationId: deleteChecklistsByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete checklists by ID checklist
      tags:
        - checklist
    get:
      operationId: getChecklistsByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all or none"
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: name, nameData, pos, state or
            type"
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        - description: "All or a comma-separated list of: idBoard, idCard, name or pos"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get checklists by ID checklist
      tags:
        - checklist
    put:
      operationId: updateChecklistsByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checklists"
        description: Attributes of "Checklists" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update checklists by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/board":
    get:
      operationId: getChecklistsBoardByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get checklists board by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/board/{field}":
    get:
      operationId: getChecklistsBoardByIdChecklistByField
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get checklists board by ID checklist by field
      tags:
        - checklist
  "/checklists/{idChecklist}/cards":
    get:
      operationId: getChecklistsCardsByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: A number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: filter
          required: false
          schema:
            default: open
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get checklists cards by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/cards/{filter}":
    get:
      operationId: getChecklistsCardsByIdChecklistByFilter
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get checklists cards by ID checklist by filter
      tags:
        - checklist
  "/checklists/{idChecklist}/checkItems":
    get:
      operationId: getChecklistsCheckItemsByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: name, nameData, pos, state or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get checklists check items by ID checklist
      tags:
        - checklist
    post:
      operationId: addChecklistsCheckItemsByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checklists_checkItems"
        description: Attributes of "Checklists Check Items" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add checklists check items by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/checkItems/{idCheckItem}":
    delete:
      operationId: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete checklists check items by ID checklist by ID check item
      tags:
        - checklist
    get:
      operationId: getChecklistsCheckItemsByIdChecklistByIdCheckItem
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: IdCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: name, nameData, pos, state or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get checklists check items by ID checklist by ID check item
      tags:
        - checklist
  "/checklists/{idChecklist}/idCard":
    put:
      operationId: updateChecklistsIdCardByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checklists_idCard"
        description: Attributes of "Checklists ID Card" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update checklists ID card by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/name":
    put:
      operationId: updateChecklistsNameByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checklists_name"
        description: Attributes of "Checklists Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update checklists name by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/pos":
    put:
      operationId: updateChecklistsPosByIdChecklist
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checklists_pos"
        description: Attributes of "Checklists Pos" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update checklists pos by ID checklist
      tags:
        - checklist
  "/checklists/{idChecklist}/{field}":
    get:
      operationId: getChecklistsByIdChecklistByField
      parameters:
        - description: IdChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get checklists by ID checklist by field
      tags:
        - checklist
  /labels:
    post:
      operationId: addLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labels"
        description: Attributes of "Labels" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add labels
      tags:
        - label
  "/labels/{idLabel}":
    delete:
      operationId: deleteLabelsByIdLabel
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete labels by ID label
      tags:
        - label
    get:
      operationId: getLabelsByIdLabel
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: color, idBoard, name or uses"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get labels by ID label
      tags:
        - label
    put:
      operationId: updateLabelsByIdLabel
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labels"
        description: Attributes of "Labels" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update labels by ID label
      tags:
        - label
  "/labels/{idLabel}/board":
    get:
      operationId: getLabelsBoardByIdLabel
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string

      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get labels board by ID label
      tags:
        - label
  "/labels/{idLabel}/board/{field}":
    get:
      operationId: getLabelsBoardByIdLabelByField
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get labels board by ID label by field
      tags:
        - label
  "/labels/{idLabel}/color":
    put:
      operationId: updateLabelsColorByIdLabel
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labels_color"
        description: Attributes of "Labels Color" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update labels color by ID label
      tags:
        - label
  "/labels/{idLabel}/name":
    put:
      operationId: updateLabelsNameByIdLabel
      parameters:
        - description: IdLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/labels_name"
        description: Attributes of "Labels Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update labels name by ID label
      tags:
        - label
  /lists:
    post:
      operationId: addLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists"
        description: Attributes of "Lists" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add lists
      tags:
        - list
  "/lists/{idList}":
    get:
      operationId: getListsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name, desc, descData, closed, idOrganization, pinned, url and prefs
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: fields
          required: false
          schema:
            default: name, closed, idBoard and pos
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get lists by ID list
      tags:
        - list
    put:
      operationId: updateListsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists"
        description: Attributes of "Lists" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update lists by ID list
      tags:
        - list
  "/lists/{idList}/actions":
    get:
      operationId: getListsActionsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: "0"
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get lists actions by ID list
      tags:
        - list
  "/lists/{idList}/archiveAllCards":
    post:
      operationId: addListsArchiveAllCardsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add lists archive all cards by ID list
      tags:
        - list
  "/lists/{idList}/board":
    get:
      operationId: getListsBoardByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get lists board by ID list
      tags:
        - list
  "/lists/{idList}/board/{field}":
    get:
      operationId: getListsBoardByIdListByField
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get lists board by ID list by field
      tags:
        - list
  "/lists/{idList}/cards":
    get:
      operationId: getListsCardsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: A number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: filter
          required: false
          schema:
            default: open
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get lists cards by ID list
      tags:
        - list
    post:
      operationId: addListsCardsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_cards"
        description: Attributes of "Lists Cards" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add lists cards by ID list
      tags:
        - list
  "/lists/{idList}/cards/{filter}":
    get:
      operationId: getListsCardsByIdListByFilter
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get lists cards by ID list by filter
      tags:
        - list
  "/lists/{idList}/closed":
    put:
      operationId: updateListsClosedByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_closed"
        description: Attributes of "Lists Closed" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update lists closed by ID list
      tags:
        - list
  "/lists/{idList}/idBoard":
    put:
      operationId: updateListsIdBoardByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_idBoard"
        description: Attributes of "Lists ID Board" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update lists ID board by ID list
      tags:
        - list
  "/lists/{idList}/moveAllCards":
    post:
      operationId: addListsMoveAllCardsByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_moveAllCards"
        description: Attributes of "Lists Move All Cards" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add lists move all cards by ID list
      tags:
        - list
  "/lists/{idList}/name":
    put:
      operationId: updateListsNameByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_name"
        description: Attributes of "Lists Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update lists name by ID list
      tags:
        - list
  "/lists/{idList}/pos":
    put:
      operationId: updateListsPosByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_pos"
        description: Attributes of "Lists Pos" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update lists pos by ID list
      tags:
        - list
  "/lists/{idList}/subscribed":
    put:
      operationId: updateListsSubscribedByIdList
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lists_subscribed"
        description: Attributes of "Lists Subscribed" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update lists subscribed by ID list
      tags:
        - list
  "/lists/{idList}/{field}":
    get:
      operationId: getListsByIdListByField
      parameters:
        - description: IdList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get lists by ID list by field
      tags:
        - list
  "/members/{idMember}":
    get:
      description: If you specify 'me' as the username, this call will respond as if
        you had supplied the username associated with the supplied token
      operationId: getMembersByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: A date, null or lastView
          in: query
          name: action_since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: action_before
          required: false
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: card_members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: card_member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: card_attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: card_attachment_fields
          required: false
          schema:
            default: url and previews
            type: string
        - description: "True or false"
          in: query
          name: card_stickers
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned"
          in: query
          name: boards
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name, closed, idOrganization and pinned
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: board_actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: board_actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: board_actions_display
          required: false
          schema:
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: board_actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: board_actions_since
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: board_actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: board_action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: board_lists
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: board_memberships
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: board_organization
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: board_organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: "All or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned"
          in: query
          name: boardsInvited
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: boardsInvited_fields
          required: false
          schema:
            default: name, closed, idOrganization and pinned
            type: string
        - description: "True or false"
          in: query
          name: boardStars
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: savedSearches
          required: false
          schema:
            type: string
        - description: "One of: all, members, none or public"
          in: query
          name: organizations
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organization_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: organization_paid_account
          required: false
          schema:
            type: string
        - description: "One of: all, members, none or public"
          in: query
          name: organizationsInvited
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organizationsInvited_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: addAdminToBoard,
            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,
            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,
            changeCard, closeBoard, commentCard, createdCard,
            declinedInvitationToBoard, declinedInvitationToOrganization,
            invitedToBoard, invitedToOrganization, makeAdminOfBoard,
            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,
            removedFromBoard, removedFromCard, removedFromOrganization,
            removedMemberFromCard, unconfirmedInvitedToBoard,
            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard"
          in: query
          name: notifications
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: notifications_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: notifications_display
          required: false
          schema:
            type: string
        - description: A number from 1 to 1000
          in: query
          name: notifications_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator,
            type or unread"
          in: query
          name: notification_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: notification_memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: notification_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: An ID, or null
          in: query
          name: notification_before
          required: false
          schema:
            type: string
        - description: An ID, or null
          in: query
          name: notification_since
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: tokens
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: paid_account
          required: false
          schema:
            type: string
        - description: "One of: all, custom, default, none or premium"
          in: query
          name: boardBackgrounds
          required: false
          schema:
            default: none
            type: string
        - description: "One of: all or none"
          in: query
          name: customBoardBackgrounds
          required: false
          schema:
            default: none
            type: string
        - description: "One of: all or none"
          in: query
          name: customStickers
          required: false
          schema:
            default: none
            type: string
        - description: "One of: all or none"
          in: query
          name: customEmoji
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members by ID member
      tags:
        - member
    put:
      operationId: updateMembersByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members"
        description: Attributes of "Members" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members by ID member
      tags:
        - member
  "/members/{idMember}/actions":
    get:
      operationId: getMembersActionsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: "0"
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members actions by ID member
      tags:
        - member
  "/members/{idMember}/avatar":
    post:
      operationId: addMembersAvatarByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_avatar"
        description: Attributes of "Members Avatar" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members avatar by ID member
      tags:
        - member
  "/members/{idMember}/avatarSource":
    put:
      operationId: updateMembersAvatarSourceByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_avatarSource"
        description: Attributes of "Members Avatar Source" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members avatar source by ID member
      tags:
        - member
  "/members/{idMember}/bio":
    put:
      operationId: updateMembersBioByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_bio"
        description: Attributes of "Members Bio" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members bio by ID member
      tags:
        - member
  "/members/{idMember}/boardBackgrounds":
    get:
      operationId: getMembersBoardBackgroundsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "One of: all, custom, default, none or premium"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members board backgrounds by ID member
      tags:
        - member
    post:
      operationId: addMembersBoardBackgroundsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_boardBackgrounds"
        description: Attributes of "Members Board Backgrounds" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members board backgrounds by ID member
      tags:
        - member
  "/members/{idMember}/boardBackgrounds/{idBoardBackground}":
    delete:
      operationId: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete members board backgrounds by ID member by ID board background
      tags:
        - member
    get:
      operationId: getMembersBoardBackgroundsByIdMemberByIdBoardBackground
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: brightness, fullSizeUrl, scaled
            or tile"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members board backgrounds by ID member by ID board background
      tags:
        - member
    put:
      operationId: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_boardBackgrounds"
        description: Attributes of "Members Board Backgrounds" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members board backgrounds by ID member by ID board background
      tags:
        - member
  "/members/{idMember}/boardStars":
    get:
      operationId: getMembersBoardStarsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members board stars by ID member
      tags:
        - member
    post:
      operationId: addMembersBoardStarsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_boardStars"
        description: Attributes of "Members Board Stars" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members board stars by ID member
      tags:
        - member
  "/members/{idMember}/boardStars/{idBoardStar}":
    delete:
      operationId: deleteMembersBoardStarsByIdMemberByIdBoardStar
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete members board stars by ID member by ID board star
      tags:
        - member
    get:
      operationId: getMembersBoardStarsByIdMemberByIdBoardStar
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members board stars by ID member by ID board star
      tags:
        - member
    put:
      operationId: updateMembersBoardStarsByIdMemberByIdBoardStar
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_boardStars"
        description: Attributes of "Members Board Stars" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members board stars by ID member by ID board star
      tags:
        - member
  "/members/{idMember}/boardStars/{idBoardStar}/idBoard":
    put:
      operationId: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_boardStars_idBoard"
        description: Attributes of "Members Board Stars ID Board" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members board stars ID board by ID member by ID board star
      tags:
        - member
  "/members/{idMember}/boardStars/{idBoardStar}/pos":
    put:
      operationId: updateMembersBoardStarsPosByIdMemberByIdBoardStar
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_boardStars_pos"
        description: Attributes of "Members Board Stars Pos" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members board stars pos by ID member by ID board star
      tags:
        - member
  "/members/{idMember}/boards":
    get:
      operationId: getMembersBoardsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: actions_since
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: lists
          required: false
          schema:
            default: none
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members boards by ID member
      tags:
        - member
  "/members/{idMember}/boards/{filter}":
    get:
      operationId: getMembersBoardsByIdMemberByFilter
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get members boards by ID member by filter
      tags:
        - member
  "/members/{idMember}/boardsInvited":
    get:
      operationId: getMembersBoardsInvitedByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members boards invited by ID member
      tags:
        - member
  "/members/{idMember}/boardsInvited/{field}":
    get:
      operationId: getMembersBoardsInvitedByIdMemberByField
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members boards invited by ID member by field
      tags:
        - member
  "/members/{idMember}/cards":
    get:
      operationId: getMembersCardsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: A number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members cards by ID member
      tags:
        - member
  "/members/{idMember}/cards/{filter}":
    get:
      operationId: getMembersCardsByIdMemberByFilter
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get members cards by ID member by filter
      tags:
        - member
  "/members/{idMember}/customBoardBackgrounds":
    get:
      operationId: getMembersCustomBoardBackgroundsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members custom board backgrounds by ID member
      tags:
        - member
    post:
      operationId: addMembersCustomBoardBackgroundsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_customBoardBackgrounds"
        description: Attributes of "Members Custom Board Backgrounds" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members custom board backgrounds by ID member
      tags:
        - member
  "/members/{idMember}/customBoardBackgrounds/{idBoardBackground}":
    delete:
      operationId: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete members custom board backgrounds by ID member by ID board background
      tags:
        - member
    get:
      operationId: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: brightness, fullSizeUrl, scaled
            or tile"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members custom board backgrounds by ID member by ID board background
      tags:
        - member
    put:
      operationId: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_customBoardBackgrounds"
        description: Attributes of "Members Custom Board Backgrounds" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members custom board backgrounds by ID member by ID board background
      tags:
        - member
  "/members/{idMember}/customEmoji":
    get:
      description: This gets the list of all of the user’s uploaded emoji
      operationId: getMembersCustomEmojiByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members custom emoji by ID member
      tags:
        - member
    post:
      operationId: addMembersCustomEmojiByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_customEmoji"
        description: Attributes of "Members Custom Emoji" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members custom emoji by ID member
      tags:
        - member
  "/members/{idMember}/customEmoji/{idCustomEmoji}":
    get:
      operationId: getMembersCustomEmojiByIdMemberByIdCustomEmoji
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdCustomEmoji
          in: path
          name: idCustomEmoji
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: name or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members custom emoji by ID member by ID custom emoji
      tags:
        - member
  "/members/{idMember}/customStickers":
    get:
      description: This gets a list of all of the user’s uploaded stickers
      operationId: getMembersCustomStickersByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members custom stickers by ID member
      tags:
        - member
    post:
      operationId: addMembersCustomStickersByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_customStickers"
        description: Attributes of "Members Custom Stickers" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members custom stickers by ID member
      tags:
        - member
  "/members/{idMember}/customStickers/{idCustomSticker}":
    delete:
      operationId: deleteMembersCustomStickersByIdMemberByIdCustomSticker
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdCustomSticker
          in: path
          name: idCustomSticker
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete members custom stickers by ID member by ID custom sticker
      tags:
        - member
    get:
      operationId: getMembersCustomStickersByIdMemberByIdCustomSticker
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdCustomSticker
          in: path
          name: idCustomSticker
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: scaled or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members custom stickers by ID member by ID custom sticker
      tags:
        - member
  "/members/{idMember}/deltas":
    get:
      operationId: getMembersDeltasByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: A valid tag for subscribing
          in: query
          name: tags
          required: true
          schema:
            type: string
        - description: A number from -1 to Infinity
          in: query
          name: ixLastUpdate
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members deltas by ID member
      tags:
        - member
  "/members/{idMember}/fullName":
    put:
      operationId: updateMembersFullNameByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_fullName"
        description: Attributes of "Members Full Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members full name by ID member
      tags:
        - member
  "/members/{idMember}/initials":
    put:
      operationId: updateMembersInitialsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_initials"
        description: Attributes of "Members Initials" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members initials by ID member
      tags:
        - member
  "/members/{idMember}/notifications":
    get:
      description: You can only read the notifications for the member associated with
        the supplied token
      operationId: getMembersNotificationsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: addAdminToBoard,
            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,
            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,
            changeCard, closeBoard, commentCard, createdCard,
            declinedInvitationToBoard, declinedInvitationToOrganization,
            invitedToBoard, invitedToOrganization, makeAdminOfBoard,
            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,
            removedFromBoard, removedFromCard, removedFromOrganization,
            removedMemberFromCard, unconfirmedInvitedToBoard,
            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all, read or unread"
          in: query
          name: read_filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator,
            type or unread"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        - description: A number from 0 to 100
          in: query
          name: page
          required: false
          schema:
            default: "0"
            type: string
        - description: An ID, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: An ID, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members notifications by ID member
      tags:
        - member
  "/members/{idMember}/notifications/{filter}":
    get:
      operationId: getMembersNotificationsByIdMemberByFilter
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get members notifications by ID member by filter
      tags:
        - member
  "/members/{idMember}/oneTimeMessagesDismissed":
    post:
      operationId: addMembersOneTimeMessagesDismissedByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_oneTimeMessagesDismissed"
        description: Attributes of "Members One Time Messages Dismissed" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members one time messages dismissed by ID member
      tags:
        - member
  "/members/{idMember}/organizations":
    get:
      operationId: getMembersOrganizationsByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "One of: all, members, none or public"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: paid_account
          required: false
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members organizations by ID member
      tags:
        - member
  "/members/{idMember}/organizations/{filter}":
    get:
      operationId: getMembersOrganizationsByIdMemberByFilter
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get members organizations by ID member by filter
      tags:
        - member
  "/members/{idMember}/organizationsInvited":
    get:
      operationId: getMembersOrganizationsInvitedByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members organizations invited by ID member
      tags:
        - member
  "/members/{idMember}/organizationsInvited/{field}":
    get:
      operationId: getMembersOrganizationsInvitedByIdMemberByField
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members organizations invited by ID member by field
      tags:
        - member
  "/members/{idMember}/prefs/colorBlind":
    put:
      operationId: updateMembersPrefsColorBlindByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_colorBlind"
        description: Attributes of "Prefs Color Blind" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members prefs color blind by ID member
      tags:
        - member
  "/members/{idMember}/prefs/locale":
    put:
      operationId: updateMembersPrefsLocaleByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_locale"
        description: Attributes of "Prefs Locale" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members prefs locale by ID member
      tags:
        - member
  "/members/{idMember}/prefs/minutesBetweenSummaries":
    put:
      operationId: updateMembersPrefsMinutesBetweenSummariesByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_minutesBetweenSummaries"
        description: Attributes of "Prefs Minutes Between Summaries" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members prefs minutes between summaries by ID member
      tags:
        - member
  "/members/{idMember}/savedSearches":
    get:
      operationId: getMembersSavedSearchesByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members saved searches by ID member
      tags:
        - member
    post:
      operationId: addMembersSavedSearchesByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_savedSearches"
        description: Attributes of "Members Saved Searches" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add members saved searches by ID member
      tags:
        - member
  "/members/{idMember}/savedSearches/{idSavedSearch}":
    delete:
      operationId: deleteMembersSavedSearchesByIdMemberByIdSavedSearch
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete members saved searches by ID member by ID saved search
      tags:
        - member
    get:
      operationId: getMembersSavedSearchesByIdMemberByIdSavedSearch
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members saved searches by ID member by ID saved search
      tags:
        - member
    put:
      operationId: updateMembersSavedSearchesByIdMemberByIdSavedSearch
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_savedSearches"
        description: Attributes of "Members Saved Searches" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members saved searches by ID member by ID saved search
      tags:
        - member
  "/members/{idMember}/savedSearches/{idSavedSearch}/name":
    put:
      operationId: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_savedSearches_name"
        description: Attributes of "Members Saved Searches Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members saved searches name by ID member by ID saved search
      tags:
        - member
  "/members/{idMember}/savedSearches/{idSavedSearch}/pos":
    put:
      operationId: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_savedSearches_pos"
        description: Attributes of "Members Saved Searches Pos" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members saved searches pos by ID member by ID saved search
      tags:
        - member
  "/members/{idMember}/savedSearches/{idSavedSearch}/query":
    put:
      operationId: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: IdSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_savedSearches_query"
        description: Attributes of "Members Saved Searches Query" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members saved searches query by ID member by ID saved search
      tags:
        - member
  "/members/{idMember}/tokens":
    get:
      operationId: getMembersTokensByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get members tokens by ID member
      tags:
        - member
  "/members/{idMember}/username":
    put:
      operationId: updateMembersUsernameByIdMember
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/members_username"
        description: Attributes of "Members Username" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update members username by ID member
      tags:
        - member
  "/members/{idMember}/{field}":
    get:
      operationId: getMembersByIdMemberByField
      parameters:
        - description: IdMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get members by ID member by field
      tags:
        - member
  /notifications/all/read:
    post:
      operationId: addNotificationsAllRead
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add notifications all read
      tags:
        - notification
  "/notifications/{idNotification}":
    get:
      operationId: getNotificationsByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator,
            type or unread"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name
            type: string
        - description: "True or false"
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: card
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: name
            type: string
        - description: "True or false"
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organization_fields
          required: false
          schema:
            default: displayName
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications by ID notification
      tags:
        - notification
    put:
      operationId: updateNotificationsByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notifications"
        description: Attributes of "Notifications" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update notifications by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/board":
    get:
      operationId: getNotificationsBoardByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications board by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/board/{field}":
    get:
      operationId: getNotificationsBoardByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications board by ID notification by field
      tags:
        - notification
  "/notifications/{idNotification}/card":
    get:
      operationId: getNotificationsCardByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications card by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/card/{field}":
    get:
      operationId: getNotificationsCardByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications card by ID notification by field
      tags:
        - notification
  "/notifications/{idNotification}/display":
    get:
      operationId: getNotificationsDisplayByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications display by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/entities":
    get:
      operationId: getNotificationsEntitiesByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications entities by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/list":
    get:
      operationId: getNotificationsListByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications list by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/list/{field}":
    get:
      operationId: getNotificationsListByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications list by ID notification by field
      tags:
        - notification
  "/notifications/{idNotification}/member":
    get:
      operationId: getNotificationsMemberByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications member by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/member/{field}":
    get:
      operationId: getNotificationsMemberByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications member by ID notification by field
      tags:
        - notification
  "/notifications/{idNotification}/memberCreator":
    get:
      operationId: getNotificationsMemberCreatorByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications member creator by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/memberCreator/{field}":
    get:
      operationId: getNotificationsMemberCreatorByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications member creator by ID notification by field
      tags:
        - notification
  "/notifications/{idNotification}/organization":
    get:
      operationId: getNotificationsOrganizationByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications organization by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/organization/{field}":
    get:
      operationId: getNotificationsOrganizationByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get notifications organization by ID notification by field
      tags:
        - notification
  "/notifications/{idNotification}/unread":
    put:
      operationId: updateNotificationsUnreadByIdNotification
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notifications_unread"
        description: Attributes of "Notifications Unread" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update notifications unread by ID notification
      tags:
        - notification
  "/notifications/{idNotification}/{field}":
    get:
      operationId: getNotificationsByIdNotificationByField
      parameters:
        - description: IdNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get notifications by ID notification by field
      tags:
        - notification
  /organizations:
    post:
      operationId: addOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations"
        description: Attributes of "Organizations" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add organizations
      tags:
        - organization
  "/organizations/{idOrg}":
    delete:
      operationId: deleteOrganizationsByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete organizations by ID org
      tags:
        - organization
    get:
      operationId: getOrganizationsByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: memberships_member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberships_member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: "One of: admins, all, none, normal or owners"
          in: query
          name: members
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username and confirmed
            type: string
        - description: True or false ; works for premium organizations only.
          in: query
          name: member_activity
          required: false
          schema:
            type: string
        - description: "One of: admins, all, none, normal or owners"
          in: query
          name: membersInvited
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: membersInvited_fields
          required: false
          schema:
            default: avatarHash, initials, fullName and username
            type: string
        - description: "All or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned"
          in: query
          name: boards
          required: false
          schema:
            default: none
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: board_actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: board_actions_entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: board_actions_display
          required: false
          schema:
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: board_actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: board_actions_since
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: board_actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: board_action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: board_lists
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: paid_account
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: fields
          required: false
          schema:
            default: name, displayName, desc, descData, url, website, logoHash, products and
              powerUps
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations by ID org
      tags:
        - organization
    put:
      operationId: updateOrganizationsByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations"
        description: Attributes of "Organizations" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations by ID org
      tags:
        - organization
  "/organizations/{idOrg}/actions":
    get:
      operationId: getOrganizationsActionsByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: "0"
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations actions by ID org
      tags:
        - organization
  "/organizations/{idOrg}/boards":
    get:
      operationId: getOrganizationsBoardsByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: A number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: "50"
            type: string
        - description: "One of: count, list or minimal"
          in: query
          name: actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: actions_since
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: data, date, idMemberCreator or
            type"
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: "One of: all, closed, none or open"
          in: query
          name: lists
          required: false
          schema:
            default: none
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations boards by ID org
      tags:
        - organization
  "/organizations/{idOrg}/boards/{filter}":
    get:
      operationId: getOrganizationsBoardsByIdOrgByFilter
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get organizations boards by ID org by filter
      tags:
        - organization
  "/organizations/{idOrg}/deltas":
    get:
      operationId: getOrganizationsDeltasByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: A valid tag for subscribing
          in: query
          name: tags
          required: true
          schema:
            type: string
        - description: A number from -1 to Infinity
          in: query
          name: ixLastUpdate
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations deltas by ID org
      tags:
        - organization
  "/organizations/{idOrg}/desc":
    put:
      operationId: updateOrganizationsDescByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_desc"
        description: Attributes of "Organizations Desc" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations desc by ID org
      tags:
        - organization
  "/organizations/{idOrg}/displayName":
    put:
      operationId: updateOrganizationsDisplayNameByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_displayName"
        description: Attributes of "Organizations Display Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations display name by ID org
      tags:
        - organization
  "/organizations/{idOrg}/logo":
    delete:
      operationId: deleteOrganizationsLogoByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete organizations logo by ID org
      tags:
        - organization
    post:
      operationId: addOrganizationsLogoByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_logo"
        description: Attributes of "Organizations Logo" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add organizations logo by ID org
      tags:
        - organization
  "/organizations/{idOrg}/members":
    get:
      operationId: getOrganizationsMembersByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: "One of: admins, all, none, normal or owners"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: True or false ; works for premium organizations only.
          in: query
          name: activity
          required: false
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations members by ID org
      tags:
        - organization
    put:
      operationId: updateOrganizationsMembersByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/organizations_members"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations members by ID org
      tags:
        - organization
  "/organizations/{idOrg}/members/{filter}":
    get:
      operationId: getOrganizationsMembersByIdOrgByFilter
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: Filter
          in: path
          name: filter
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get organizations members by ID org by filter
      tags:
        - organization
  "/organizations/{idOrg}/members/{idMember}":
    delete:
      operationId: deleteOrganizationsMembersByIdOrgByIdMember
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete organizations members by ID org by ID member
      tags:
        - organization
    put:
      operationId: updateOrganizationsMembersByIdOrgByIdMember
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/organizations_members"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations members by ID org by ID member
      tags:
        - organization
  "/organizations/{idOrg}/members/{idMember}/all":
    delete:
      operationId: deleteOrganizationsMembersAllByIdOrgByIdMember
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete organizations members all by ID org by ID member
      tags:
        - organization
  "/organizations/{idOrg}/members/{idMember}/cards":
    get:
      operationId: getOrganizationsMembersCardsByIdOrgByIdMember
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization"
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: bytes, date, edgeColor,
            idMember, isUpload, mimeType, name, previews or url"
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: "True or false"
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: "One of: all or none"
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: "True or false"
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name, desc, closed, idOrganization, pinned, url and prefs
            type: string
        - description: "True or false"
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: closed, idBoard, name, pos or
            subscribed"
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: "One of: all, closed, none, open or visible"
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations members cards by ID org by ID member
      tags:
        - organization
  "/organizations/{idOrg}/members/{idMember}/deactivated":
    put:
      operationId: updateOrganizationsMembersDeactivatedByIdOrgByIdMember
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_members_deactivated"
        description: Attributes of "Organizations Members Deactivated" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations members deactivated by ID org by ID member
      tags:
        - organization
  "/organizations/{idOrg}/membersInvited":
    get:
      operationId: getOrganizationsMembersInvitedByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username"
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations members invited by ID org
      tags:
        - organization
  "/organizations/{idOrg}/membersInvited/{field}":
    get:
      operationId: getOrganizationsMembersInvitedByIdOrgByField
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations members invited by ID org by field
      tags:
        - organization
  "/organizations/{idOrg}/memberships":
    get:
      operationId: getOrganizationsMembershipsByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: "All or a comma-separated list of: active, admin, deactivated, me
            or normal"
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations memberships by ID org
      tags:
        - organization
  "/organizations/{idOrg}/memberships/{idMembership}":
    get:
      operationId: getOrganizationsMembershipsByIdOrgByIdMembership
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
        - description: "True or false"
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get organizations memberships by ID org by ID membership
      tags:
        - organization
    put:
      operationId: updateOrganizationsMembershipsByIdOrgByIdMembership
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: IdMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_memberships"
        description: Attributes of "Organizations Memberships" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations memberships by ID org by ID membership
      tags:
        - organization
  "/organizations/{idOrg}/name":
    put:
      operationId: updateOrganizationsNameByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_name"
        description: Attributes of "Organizations Name" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations name by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/associatedDomain":
    delete:
      operationId: deleteOrganizationsPrefsAssociatedDomainByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete organizations prefs associated domain by ID org
      tags:
        - organization
    put:
      operationId: updateOrganizationsPrefsAssociatedDomainByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_associatedDomain"
        description: Attributes of "Prefs Associated Domain" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs associated domain by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/boardVisibilityRestrict/org":
    put:
      operationId: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/prefs_boardVisibilityRestrict"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs board visibility restrict org by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/boardVisibilityRestrict/private":
    put:
      operationId: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/prefs_boardVisibilityRestrict"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs board visibility restrict private by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/boardVisibilityRestrict/public":
    put:
      operationId: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/prefs_boardVisibilityRestrict"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs board visibility restrict public by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/externalMembersDisabled":
    put:
      operationId: updateOrganizationsPrefsExternalMembersDisabledByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_externalMembersDisabled"
        description: Attributes of "Prefs External Members Disabled" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs external members disabled by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/googleAppsVersion":
    put:
      operationId: updateOrganizationsPrefsGoogleAppsVersionByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_googleAppsVersion"
        description: Attributes of "Prefs Google Apps Version" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs google apps version by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/orgInviteRestrict":
    delete:
      operationId: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: An email address with optional expansion tokens
          in: query
          name: value
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Delete organizations prefs org invite restrict by ID org
      tags:
        - organization
    put:
      operationId: updateOrganizationsPrefsOrgInviteRestrictByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prefs_orgInviteRestrict"
        description: Attributes of "Prefs Org Invite Restrict" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs org invite restrict by ID org
      tags:
        - organization
  "/organizations/{idOrg}/prefs/permissionLevel":
    put:
      operationId: updateOrganizationsPrefsPermissionLevelByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        $ref: "#/components/requestBodies/prefs_permissionLevel"
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations prefs permission level by ID org
      tags:
        - organization
  "/organizations/{idOrg}/website":
    put:
      operationId: updateOrganizationsWebsiteByIdOrg
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organizations_website"
        description: Attributes of "Organizations Website" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update organizations website by ID org
      tags:
        - organization
  "/organizations/{idOrg}/{field}":
    get:
      operationId: getOrganizationsByIdOrgByField
      parameters:
        - description: IdOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: Field
          in: path
          name: field
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get organizations by ID org by field
      tags:
        - organization
  /search:
    get:
      operationId: getSearch
      parameters:
        - description: A string with a length from 1 to 16384
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: A comma-separated list of objectIds, 24-character hex strings
          in: query
          name: idBoards
          required: false
          schema:
            default: mine
            type: string
        - description: A comma-separated list of objectIds, 24-character hex strings
          in: query
          name: idOrganizations
          required: true
          schema:
            type: string
        - description: A comma-separated list of objectIds, 24-character hex strings
          in: query
          name: idCards
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: actions, boards, cards, members
            or organizations"
          in: query
          name: modelTypes
          required: false
          schema:
            default: all
            type: string
        - description: "All or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url"
          in: query
          name: board_fields
          required: false
          schema:
            default: name and idOrganization
            type: string
        - description: A number from 1 to 1000
          in: query
          name: boards_limit
          required: false
          schema:
            default: "10"
            type: string
        - description: "All or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url"
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: A number from 1 to 1000
          in: query
          name: cards_limit
          required: false
          schema:
            default: "10"
            type: string
        - description: A number from 0 to 100
          in: query
          name: cards_page
          required: false
          schema:
            default: "0"
            type: string
        - description: "True or false"
          in: query
          name: card_board
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: card_list
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: card_members
          required: false
          schema:
            type: string
        - description: "True or false"
          in: query
          name: card_stickers
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: card_attachments
          required: false
          schema:
            type: string
        - description: "All or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website"
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: A number from 1 to 1000
          in: query
          name: organizations_limit
          required: false
          schema:
            default: "10"
            type: string
        - description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username and confirmed
            type: string
        - description: A number from 1 to 1000
          in: query
          name: members_limit
          required: false
          schema:
            default: "10"
            type: string
        - description: "True or false"
          in: query
          name: partial
          required: false
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get search
      tags:
        - search
  /search/members:
    get:
      operationId: getSearchMembers
      parameters:
        - description: A string with a length from 1 to 16384
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: A number from 1 to 20
          in: query
          name: limit
          required: false
          schema:
            default: "8"
            type: string
        - description: An ID, or null
          in: query
          name: idBoard
          required: false
          schema:
            type: string
        - description: An ID, or null
          in: query
          name: idOrganization
          required: false
          schema:
            type: string
        - description: A boolean
          in: query
          name: onlyOrgMembers
          required: false
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      summary: Get search members
      tags:
        - search
  /sessions:
    post:
      operationId: addSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sessions"
        description: Attributes of "Sessions" to be added.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Add sessions
      tags:
        - session
  /sessions/socket:
    get:
      description: This is the route for WebSocket requests.  See the socket API
        reference for a description of WebSocket usage.
      operationId: getSessionsSocket 
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get sessions socket
      tags:
        - session
  "/sessions/{idSession}":
    put:
      operationId: updateSessionsByIdSession
      parameters:
        - description: IdSession
          in: path
          name: idSession
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sessions"
        description: Attributes of "Sessions" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update sessions by ID session
      tags:
        - session
  "/sessions/{idSession}/status":
    put:
      operationId: updateSessionsStatusByIdSession
      parameters:
        - description: IdSession
          in: path
          name: idSession
          required: true
          schema:
            type: string
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sessions_status"
        description: Attributes of "Sessions Status" to be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Update sessions status by ID session
      tags:
        - session
  "/types/{ID}":
    get:
      operationId: getTypesById
      parameters:
        - description: ID
          in: path
          name: ID
          required: true
          schema:
            type: string
        
      responses:
        "200":
          content: {}
          description: Success
        "400":
          description: Server rejection
      security:
        - api_key: []
        - api_token: []
      summary: Get types by ID
      tags:
        - type
security:
  - api_key: []
  - api_token: []
components:
  requestBodies:
    boards_members:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/boards_members"
      description: Attributes of "Boards Members" to be updated.
      required: true
    organizations_members:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/organizations_members"
      description: Attributes of "Organizations Members" to be updated.
      required: true
    prefs_boardVisibilityRestrict:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/prefs_boardVisibilityRestrict"
      description: Attributes of "Prefs Board Visibility Restrict" to be updated.
      required: true
    prefs_permissionLevel:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/prefs_permissionLevel"
      description: Attributes of "Prefs Permission Level" to be updated.
      required: true
    webhooks:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/webhooks"
      description: Attributes of "Webhooks" to be updated.
      required: true
  schemas:
    actions:
      properties:
        text:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: action
    actions_comments:
      properties:
        text:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    actions_text:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: action
    boards:
      properties:
        closed:
          description: "True or false"
          type: string
        desc:
          description: A string with a length from 0 to 16384
          type: string
        idBoardSource:
          description: The ID of the board to copy into the new board
          type: string
        idOrganization:
          description: The ID or name of the organization to add the board to.
          type: string
        keepFromSource:
          description: Components of the source board to copy.
          type: string
        # labelNames/blue:
        #   description: A string with a length from 0 to 16384
        #   type: string
        # labelNames/green:
        #   description: A string with a length from 0 to 16384
        #   type: string
        # labelNames/orange:
        #   description: A string with a length from 0 to 16384
        #   type: string
        # labelNames/purple:
        #   description: A string with a length from 0 to 16384
        #   type: string
        # labelNames/red:
        #   description: A string with a length from 0 to 16384
        #   type: string
        # labelNames/yellow:
        #   description: A string with a length from 0 to 16384
        #   type: string
        name:
          description: A string with a length from 1 to 16384
          type: string
        powerUps:
          description: "All or a comma-separated list of: calendar, cardAging, recap or
            voting"
          type: string
        # prefs/background:
        #   description: A standard background name, or the ID of a custom background
        #   type: string
        # prefs/calendarFeedEnabled:
        #   description: "True or false"
        #   type: string
        # prefs/cardAging:
        #   description: "One of: pirate or regular"
        #   type: string
        # prefs/cardCovers:
        #   description: "True or false"
        #   type: string
        # prefs/comments:
        #   description: "One of: disabled, members, observers, org or public"
        #   type: string
        # prefs/invitations:
        #   description: "One of: admins or members"
        #   type: string
        # prefs/permissionLevel:
        #   description: "One of: org, private or public"
        #   type: string
        # prefs/selfJoin:
        #   description: "True or false"
        #   type: string
        # prefs/voting:
        #   description: "One of: disabled, members, observers, org or public"
        #   type: string
        prefs_background:
          description: A string with a length from 0 to 16384
          type: string
        prefs_cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs_cardCovers:
          description: "True or false"
          type: string
        prefs_comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_invitations:
          description: "One of: admins or members"
          type: string
        prefs_permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs_selfJoin:
          description: "True or false"
          type: string
        prefs_voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        subscribed:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    boards_checklists:
      properties:
        name:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_closed:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    boards_desc:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_idOrganization:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        name:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_lists:
      properties:
        name:
          description: A string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: board
    boards_members:
      properties:
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: board
    boards_memberships:
      properties:
        member_fields:
          description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: board
    boards_name:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_powerUps:
      properties:
        value:
          description: "One of: calendar, cardAging, recap or voting"
          type: string
      type: object
      xml:
        name: board
    boards_subscribed:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    cards:
      properties:
        closed:
          description: "True or false"
          type: string
        desc:
          description: A string with a length from 0 to 16384
          type: string
        due:
          description: A date, or null
          type: string
        fileSource:
          description: A file
          type: string
        idAttachmentCover:
          description: ID of the image attachment of this card to use as its cover, or
            null for no cover
          type: string
        idBoard:
          description: ID of the board the card should be moved to
          type: string
        idCardSource:
          description: The ID of the card to copy into a new card.
          type: string
        idLabels:
          description: A comma-separated list of objectIds, 24-character hex strings
          type: string
        idList:
          description: ID of the list that the card should be added to
          type: string
        idMembers:
          description: A comma-separated list of objectIds, 24-character hex strings
          type: string
        keepFromSource:
          description: Properties of the card to copy over from the source.
          type: string
        labels:
          description: "All or a comma-separated list of: blue, green, orange, purple, red
            or yellow"
          type: string
        name:
          description: The name of the new card.  It isn&#39;t required if the name is
            being copied from provided by a URL, file or card that is being
            copied.
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        subscribed:
          description: "True or false"
          type: string
        urlSource:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: card
    cards_actions_comments:
      properties:
        text:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_attachments:
      properties:
        file:
          description: A file
          type: string
        mimeType:
          description: A string with a length from 0 to 256
          type: string
        name:
          description: A string with a length from 0 to 256
          type: string
        url:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem:
      properties:
        name:
          description: A string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_name:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_state:
      properties:
        value:
          description: "One of: complete, false, incomplete or true"
          type: string
      type: object
      xml:
        name: card
    cards_checklist_idChecklistCurrent_checkItem:
      properties:
        idChecklist:
          description: An ID, or null
          type: string
        name:
          description: A string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        state:
          description: "One of: complete, false, incomplete or true"
          type: string
      type: object
      xml:
        name: card
    cards_checklists:
      properties:
        idChecklistSource:
          description: The ID of the source checklist to copy into a new checklist.
          type: string
        name:
          description: A string with a length from 0 to 16384
          type: string
        value:
          description: The ID of the checklist to add to the card, or null to create a new
            one.
          type: string
      type: object
      xml:
        name: card
    cards_closed:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: card
    cards_desc:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_due:
      properties:
        value:
          description: A date, or null
          type: string
      type: object
      xml:
        name: card
    cards_idAttachmentCover:
      properties:
        value:
          description: ID of the image attachment of this card to use as its cover, or
            null for no cover
          type: string
      type: object
      xml:
        name: card
    cards_idBoard:
      properties:
        idList:
          description: ID of the list that the card should be moved to on the new board
          type: string
        value:
          description: ID of the board the card should be moved to
          type: string
      type: object
      xml:
        name: card
    cards_idLabels:
      properties:
        value:
          description: The ID of the label to add
          type: string
      type: object
      xml:
        name: card
    cards_idList:
      properties:
        value:
          description: ID of the list the card should be moved to
          type: string
      type: object
      xml:
        name: card
    cards_idMembers:
      properties:
        value:
          description: The ID of the member to add to the card
          type: string
      type: object
      xml:
        name: card
    cards_labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        name:
          description: A string with a length from 0 to 16384
          type: string
        value:
          description: "All or a comma-separated list of: blue, green, orange, purple, red
            or yellow"
          type: string
      type: object
      xml:
        name: card
    cards_membersVoted:
      properties:
        value:
          description: The ID of the member to vote &#39;yes&#39; on the card
          type: string
      type: object
      xml:
        name: card
    cards_name:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: card
    cards_stickers:
      properties:
        image:
          description: A string with a length from 0 to 16384
          type: string
        left:
          description: Undefined
          type: string
        rotate:
          description: Undefined
          type: string
        top:
          description: Undefined
          type: string
        zIndex:
          description: Valid Z values for stickers, must be an integer
          type: string
      type: object
      xml:
        name: card
    cards_subscribed:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: card
    checklists:
      properties:
        idBoard:
          description: ID of the board that the checklist should be added to
          type: string
        idCard:
          description: ID of the card that the checklist should be added to
          type: string
        idChecklistSource:
          description: The ID of the source checklist to copy into a new checklist.
          type: string
        name:
          description: A string with a length from 0 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: checklist
    checklists_checkItems:
      properties:
        checked:
          description: "True or false"
          type: string
        name:
          description: A string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: checklist
    checklists_idCard:
      properties:
        value:
          description: The ID of the card that the checklist is on
          type: string
      type: object
      xml:
        name: checklist
    checklists_name:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: checklist
    checklists_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: checklist
    labelNames_blue:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_green:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_orange:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_purple:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_red:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_yellow:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        idBoard:
          description: An ID
          type: string
        name:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: label
    labels_color:
      properties:
        value:
          description: A valid label color or null
          type: string
      type: object
      xml:
        name: label
    labels_name:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: label
    lists:
      properties:
        closed:
          description: "True or false"
          type: string
        idBoard:
          description: ID of the board that the list should be added to
          type: string
        idListSource:
          description: The ID of the list to copy into a new list.
          type: string
        name:
          description: A string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        subscribed:
          description: "True or false"
          type: string
      type: object
      xml:
        name: list
    lists_cards:
      properties:
        desc:
          description: A string with a length from 0 to 16384
          type: string
        due:
          description: A date, or null
          type: string
        idMembers:
          description: A comma-separated list of objectIds, 24-character hex strings
          type: string
        labels:
          description: "All or a comma-separated list of: blue, green, orange, purple, red
            or yellow"
          type: string
        name:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: list
    lists_closed:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: list
    lists_idBoard:
      properties:
        pos:
          description: Position of the list on the new board
          type: string
        value:
          description: ID of the board the list should be moved to
          type: string
      type: object
      xml:
        name: list
    lists_moveAllCards:
      properties:
        idBoard:
          description: ID of the board that the cards should be moved to
          type: string
      type: object
      xml:
        name: list
    lists_name:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: list
    lists_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: list
    lists_subscribed:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: list
    members:
      properties:
        avatarSource:
          description: "One of: gravatar, none or upload"
          type: string
        bio:
          description: A string with a length from 0 to 16384
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        initials:
          description: A string with a length from 1 to 4.  Cannot begin or end with a space
          type: string
        # prefs/colorBlind:
        #   description: "True or false"
        #   type: string
        # prefs/locale:
        #   description: A string with a length from 0 to 255
        #   type: string
        # prefs/minutesBetweenSummaries:
        #   description: -1 (disabled), 1 or 60
        #   type: string
        username:
          description: A string with a length of at least 3.  Only lowercase letters,
            underscores, and numbers are allowed.  Must be unique.
          type: string
      type: object
      xml:
        name: member
    members_avatar:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: member
    members_avatarSource:
      properties:
        value:
          description: "One of: gravatar, none or upload"
          type: string
      type: object
      xml:
        name: member
    members_bio:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: member
    members_boardBackgrounds:
      properties:
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: "True or false"
          type: string
      type: object
      xml:
        name: member
    members_boardStars:
      properties:
        idBoard:
          description: The ID of the board to star
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: member
    members_boardStars_idBoard:
      properties:
        value:
          description: An ID
          type: string
      type: object
      xml:
        name: member
    members_boardStars_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: member
    members_customBoardBackgrounds:
      properties:
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: "True or false"
          type: string
      type: object
      xml:
        name: member
    members_customEmoji:
      properties:
        file:
          description: A file
          type: string
        name:
          description: A string with a length from 2 to 64
          type: string
      type: object
      xml:
        name: member
    members_customStickers:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: member
    members_fullName:
      properties:
        value:
          description: A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
      type: object
      xml:
        name: member
    members_initials:
      properties:
        value:
          description: A string with a length from 1 to 4.  Cannot begin or end with a space
          type: string
      type: object
      xml:
        name: member
    members_oneTimeMessagesDismissed:
      properties:
        value:
          description: Type of message dismissed
          type: string
      type: object
      xml:
        name: member
    members_savedSearches:
      properties:
        name:
          description: A non-empty string with at least one non-space character
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        query:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_name:
      properties:
        value:
          description: A non-empty string with at least one non-space character
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_query:
      properties:
        value:
          description: A string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: member
    members_username:
      properties:
        value:
          description: A string with a length of at least 3.  Only lowercase letters,
            underscores, and numbers are allowed.  Must be unique.
          type: string
      type: object
      xml:
        name: member
    myPrefs_emailPosition:
      properties:
        value:
          description: "One of: bottom or top"
          type: string
      type: object
      xml:
        name: board
    myPrefs_idEmailList:
      properties:
        value:
          description: An ID
          type: string
      type: object
      xml:
        name: board
    myPrefs_showListGuide:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebar:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarActivity:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarBoardActions:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarMembers:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    notifications:
      properties:
        unread:
          description: "True or false"
          type: string
      type: object
      xml:
        name: notification
    notifications_unread:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: notification
    organizations:
      properties:
        desc:
          description: A string with a length from 0 to 16384
          type: string
        displayName:
          description: A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        name:
          description: A string with a length from 0 to 16384
          type: string
        # prefs/associatedDomain:
        #   description: The google apps domain to link this org to.
        #   type: string
        # prefs/boardVisibilityRestrict/org:
        #   description: "One of: admin, none or org"
        #   type: string
        # prefs/boardVisibilityRestrict/private:
        #   description: "One of: admin, none or org"
        #   type: string
        # prefs/boardVisibilityRestrict/public:
        #   description: "One of: admin, none or org"
        #   type: string
        # prefs/externalMembersDisabled:
        #   description: "True or false"
        #   type: string
        # prefs/googleAppsVersion:
        #   description: A number from 1 to 2
        #   type: string
        # prefs/orgInviteRestrict:
        #   description: An email address with optional expansion tokens
        #   type: string
        # prefs/permissionLevel:
        #   description: "One of: private or public"
        #   type: string
        website:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: organization
    organizations_desc:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: organization
    organizations_displayName:
      properties:
        value:
          description: A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
      type: object
      xml:
        name: organization
    organizations_logo:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: organization
    organizations_members:
      properties:
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: organization
    organizations_members_deactivated:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: organization
    organizations_memberships:
      properties:
        member_fields:
          description: "All or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username"
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: organization
    organizations_name:
      properties:
        value:
          description: A string with a length of at least 3.  Only lowercase letters,
            underscores, and numbers are allowed.  Must be unique.
          type: string
      type: object
      xml:
        name: organization
    organizations_website:
      properties:
        value:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: organization
    prefs_associatedDomain:
      properties:
        value:
          description: The google apps domain to link this org to.
          type: string
      type: object
      xml:
        name: organization
    prefs_background:
      properties:
        value:
          description: A standard background name, or the ID of a custom background
          type: string
      type: object
      xml:
        name: board
    prefs_boardVisibilityRestrict:
      properties:
        value:
          description: "One of: admin, none or org"
          type: string
      type: object
      xml:
        name: organization
    prefs_calendarFeedEnabled:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    prefs_cardAging:
      properties:
        value:
          description: "One of: pirate or regular"
          type: string
      type: object
      xml:
        name: board
    prefs_cardCovers:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    prefs_colorBlind:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: member
    prefs_comments:
      properties:
        value:
          description: "One of: disabled, members, observers, org or public"
          type: string
      type: object
      xml:
        name: board
    prefs_externalMembersDisabled:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: organization
    prefs_googleAppsVersion:
      properties:
        value:
          description: A number from 1 to 2
          type: string
      type: object
      xml:
        name: organization
    prefs_invitations:
      properties:
        value:
          description: "One of: admins or members"
          type: string
      type: object
      xml:
        name: board
    prefs_locale:
      properties:
        value:
          description: A string with a length from 0 to 255
          type: string
      type: object
      xml:
        name: member
    prefs_minutesBetweenSummaries:
      properties:
        value:
          description: -1 (disabled), 1 or 60
          type: string
      type: object
      xml:
        name: member
    prefs_orgInviteRestrict:
      properties:
        value:
          description: An email address with optional expansion tokens
          type: string
      type: object
      xml:
        name: organization
    prefs_permissionLevel:
      properties:
        value:
          description: "One of: private or public"
          type: string
      type: object
      xml:
        name: board
    prefs_selfJoin:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: board
    prefs_voting:
      properties:
        value:
          description: "One of: disabled, members, observers, org or public"
          type: string
      type: object
      xml:
        name: board
    sessions:
      properties:
        idBoard:
          description: The ID of the board you&#39;re viewing.  Boards with no viewers
            will not get updates about members&#39; statuses.
          type: string
        status:
          description: "One of: active, disconnected or idle"
          type: string
      type: object
      xml:
        name: session
    sessions_status:
      properties:
        value:
          description: "One of: active, disconnected or idle"
          type: string
      type: object
      xml:
        name: session
    tokens_webhooks:
      properties:
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        description:
          description: A string with a length from 0 to 16384
          type: string
        idModel:
          description: ID of the model to be monitored
          type: string
      type: object
      xml:
        name: token
    webhooks:
      properties:
        active:
          description: "True or false"
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        description:
          description: A string with a length from 0 to 16384
          type: string
        idModel:
          description: ID of the model that should be hooked
          type: string
      type: object
      xml:
        name: webhook
    webhooks_active:
      properties:
        value:
          description: "True or false"
          type: string
      type: object
      xml:
        name: webhook
    webhooks_callbackURL:
      properties:
        value:
          description: A valid URL that is reachable with a HEAD request
          type: string
      type: object
      xml:
        name: webhook
    webhooks_description:
      properties:
        value:
          description: A string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: webhook
    webhooks_idModel:
      properties:
        value:
          description: ID of the model to be monitored
          type: string
      type: object
      xml:
        name: webhook
  securitySchemes:
    api_key:
      in: query
      description: Represents API Key `key`
      name: key
      type: apiKey
    api_token:
      description: Represents API Key `token`
      in: query
      name: token
      type: apiKey