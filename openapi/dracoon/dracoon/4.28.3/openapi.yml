openapi: 3.0.1
servers:
  - url: https://stats.bis.org/api/v1
info:
  x-ballerina-display:
    label: Dracoon Public
    iconPath: "icon.png"
  contact:
    x-twitter: dracoongmbh
  description: "This is a generated connector from [Dracoon API v4.28.3](https://www.dracoon.com/en/home) OpenAPI specification.

    REST Web Services for DRACOON. <a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>"
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create a [Dracoon account](https://www.dracoon.com/en/home) and obtain OAuth tokens following [this guide](https://cloud.support.dracoon.com/hc/en-us/articles/360001329825-OAuth-2-0-example).
  title: DRACOON API
  version: 4.28.3
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://twitter.com/dracoongmbh/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://dracoon.team/api/spec_v4/
      version: "3.0"
  x-providerName: dracoon.team
security:
  - oauth2: []
tags:
  - name: public
    description: Authentication
paths:
  "/v4/public/shares/downloads/{access_key}":
    get:
      description: |-
        ### Description:
        Retrieve the public information of a Download Share.

        ### Precondition:
        None.

        ### Postcondition:
        Download Share information is returned.

        ### Further Information:
        None.
      operationId: requestPublicDownloadShareInfo
      parameters:
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicDownloadShare"
          description: OK
        "400":
          content:
            application/json:
              examples:
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                "-40751":
                  description: |-

                    * [-40751] File not found
                  summary: File not found
                  value:
                    code: 404
                    debugInfo: File not found
                    errorCode: -40751
                    message: Not Found
                "-50000":
                  description: |-

                    * [-50000] Download access key not found
                  summary: Download access key not found
                  value:
                    code: 404
                    debugInfo: Download access key not found
                    errorCode: -50000
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request public Download Share information
      tags:
        - public
    post:
      description: |-
        ### Description:
        Generate a download URL to retrieve a shared file.

        ### Precondition:
        None.

        ### Postcondition:
        Download URL and token are generated and returned.

        ### Further Information:
        Use `downloadUrl` the download `token` is deprecated.
      operationId: generateDownloadUrlPublic
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicDownloadTokenGenerateRequest"
              description: Request model for generating download URL
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicDownloadTokenGenerateResponse"
          description: Created
        "400":
          content:
            application/json:
              examples:
                "-50000":
                  description: |-

                    * [-50000] Download access key not found
                  summary: Download access key not found
                  value:
                    code: 404
                    debugInfo: Download access key not found
                    errorCode: -50000
                    message: Not Found
                "-50008":
                  description: |-

                    * [-50008] Client-side encryption passwords should not be sent to the server
                  summary: Client-side encryption passwords should not be sent to the server
                  value:
                    code: 400
                    debugInfo: Client-side encryption passwords should not be sent to the server
                    errorCode: -50008
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                "-50009":
                  description: |-

                    * [-50009] Wrong password for Download Share link
                  summary: Wrong password for Download Share link
                  value:
                    code: 401
                    debugInfo: Wrong password for Download Share link
                    errorCode: -50009
                    message: Unauthorized
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                "-51000":
                  description: |-

                    * [-51000] (Up-) Download Share is temporarily locked
                  summary: (Up-) Download Share is temporarily locked
                  value:
                    code: 403
                    debugInfo: (Up-) Download Share is temporarily locked
                    errorCode: -51000
                    message: Forbidden
                "null":
                  description: Insufficient rights to perform the operation
                  summary: Forbidden
                  value:
                    code: 403
                    debugInfo: ""
                    errorCode: null
                    message: Forbidden
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                "-50000":
                  description: |-

                    * [-50000] Download access key not found
                  summary: Download access key not found
                  value:
                    code: 404
                    debugInfo: Download access key not found
                    errorCode: -50000
                    message: Not Found
                "-50002":
                  description: |-

                    * [-50002] Downloads limit reached
                  summary: Downloads limit reached
                  value:
                    code: 404
                    debugInfo: Downloads limit reached
                    errorCode: -50002
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Generate download URL
      tags:
        - public
  "/v4/public/shares/downloads/{access_key}/{token}":
    get:
      description: |-
        ### Description:
        Download a file (or zip archive if target is a folder or room).

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Range requests are supported.
        Range requests are illegal for zip archive download.
      externalDocs:
        description: Range Requests
        url: https://tools.ietf.org/html/rfc7233
      operationId: downloadFileViaTokenPublic
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Download token
          in: path
          name: token
          required: true
          schema:
            type: string
        - description: |-
            Range

            e.g. `bytes=0-999`
          in: header
          name: Range
          required: false
          schema:
            type: string
        - description: Always return `application/octet-stream` instead of specific mimetype
          in: query
          name: generic_mimetype
          required: false
          schema:
            type: boolean
        - description: "Use Content-Disposition: `inline` instead of `attachment`"
          in: query
          name: inline
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
        "206":
          description: Partial Content
        "400":
          content:
            application/octet-stream:
              examples:
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80022":
                  description: |-

                    * [-80022] Range cannot be set at ZIP download
                  summary: Range cannot be set at ZIP download
                  value:
                    code: 400
                    debugInfo: Range cannot be set at ZIP download
                    errorCode: -80022
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/octet-stream:
              examples:
                "-40000":
                  description: |-

                    * [-40000] Container not found
                  summary: Container not found
                  value:
                    code: 404
                    debugInfo: Container not found
                    errorCode: -40000
                    message: Not Found
                "-40751":
                  description: |-

                    * [-40751] File not found
                  summary: File not found
                  value:
                    code: 404
                    debugInfo: File not found
                    errorCode: -40751
                    message: Not Found
                "-41000":
                  description: |-

                    * [-40000] Node not found
                  summary: Node not found
                  value:
                    code: 404
                    debugInfo: Node not found
                    errorCode: -41000
                    message: Not Found
                "-50000":
                  description: |-

                    * [-50000] Download access key not found
                  summary: Download access key not found
                  value:
                    code: 404
                    debugInfo: Download access key not found
                    errorCode: -50000
                    message: Not Found
                "-50001":
                  description: |-

                    * [-50001] Download token not found
                  summary: Download token not found
                  value:
                    code: 404
                    debugInfo: Download token not found
                    errorCode: -50001
                    message: Not Found
                "-50002":
                  description: |-

                    * [-50002] Downloads limit reached
                  summary: Downloads limit reached
                  value:
                    code: 404
                    debugInfo: Downloads limit reached
                    errorCode: -50002
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/octet-stream:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/octet-stream]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "416":
          content:
            application/octet-stream:
              examples:
                "null":
                  description: Download range doesn't match pattern
                  summary: Range Not Satisfiable
                  value:
                    code: 416
                    debugInfo: Download range '...' doesn't match pattern '...'
                    errorCode: null
                    message: Range Not Satisfiable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Range Not Satisfiable
      security: []
      summary: Download file with token
      tags:
        - public
    head:
      description: |-
        ### Description:
        Download a file (or zip archive if target is a folder or room).

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Range requests are supported.
        Range requests are illegal for zip archive download.
      externalDocs:
        description: Range Requests
        url: https://tools.ietf.org/html/rfc7233
      operationId: downloadFileViaTokenPublic_1
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Download token
          in: path
          name: token
          required: true
          schema:
            type: string
        - description: |-
            Range

            e.g. `bytes=0-999`
          in: header
          name: Range
          required: false
          schema:
            type: string
        - description: Always return `application/octet-stream` instead of specific mimetype
          in: query
          name: generic_mimetype
          required: false
          schema:
            type: boolean
        - description: "Use Content-Disposition: `inline` instead of `attachment`"
          in: query
          name: inline
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
        "206":
          description: Partial Content
        "400":
          content:
            application/octet-stream:
              examples:
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80022":
                  description: |-

                    * [-80022] Range cannot be set at ZIP download
                  summary: Range cannot be set at ZIP download
                  value:
                    code: 400
                    debugInfo: Range cannot be set at ZIP download
                    errorCode: -80022
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/octet-stream:
              examples:
                "-40000":
                  description: |-

                    * [-40000] Container not found
                  summary: Container not found
                  value:
                    code: 404
                    debugInfo: Container not found
                    errorCode: -40000
                    message: Not Found
                "-40751":
                  description: |-

                    * [-40751] File not found
                  summary: File not found
                  value:
                    code: 404
                    debugInfo: File not found
                    errorCode: -40751
                    message: Not Found
                "-41000":
                  description: |-

                    * [-40000] Node not found
                  summary: Node not found
                  value:
                    code: 404
                    debugInfo: Node not found
                    errorCode: -41000
                    message: Not Found
                "-50000":
                  description: |-

                    * [-50000] Download access key not found
                  summary: Download access key not found
                  value:
                    code: 404
                    debugInfo: Download access key not found
                    errorCode: -50000
                    message: Not Found
                "-50001":
                  description: |-

                    * [-50001] Download token not found
                  summary: Download token not found
                  value:
                    code: 404
                    debugInfo: Download token not found
                    errorCode: -50001
                    message: Not Found
                "-50002":
                  description: |-

                    * [-50002] Downloads limit reached
                  summary: Downloads limit reached
                  value:
                    code: 404
                    debugInfo: Downloads limit reached
                    errorCode: -50002
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/octet-stream:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/octet-stream]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "416":
          content:
            application/octet-stream:
              examples:
                "null":
                  description: Download range doesn't match pattern
                  summary: Range Not Satisfiable
                  value:
                    code: 416
                    debugInfo: Download range '...' doesn't match pattern '...'
                    errorCode: null
                    message: Range Not Satisfiable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Range Not Satisfiable
      security: []
      summary: Download file with token
      tags:
        - public
  "/v4/public/shares/uploads/{access_key}":
    get:
      description: |
        ### Description:
        Provides information about the desired Upload Share.

        ### Precondition:
        Only `userUserPublicKeyList` is returned to the users who owns one of the following permissions: <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; read</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage download share</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage upload share</span>

        ### Postcondition:
        None.

        ### Further Information:
        If no password is set, the returned information is reduced to the following attributes (if available):

        * `name`
        * `maxSlots`
        * `createdAt`
        * `isProtected`
        * `isEncrypted`
        * `showUploadedFiles`
        * `userUserPublicKeyList` (if parent is end-to-end encrypted)

        Only if the password is transmitted as `X-Sds-Share-Password` header, all values are returned.
      operationId: requestPublicUploadShareInfo
      parameters:
        - description: |-
            Upload share password. Should be base64-encoded.

            Plain X-Sds-Share-Passwords are *deprecated* and will be removed in the future
          in: header
          name: X-Sds-Share-Password
          schema:
            type: string
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicUploadShare"
          description: OK
        "400":
          content:
            application/json:
              examples:
                "-50505":
                  description: |-

                    * [-50505] No room user has a keypair
                  summary: No room user has a keypair
                  value:
                    code: 400
                    debugInfo: No room user has a keypair
                    errorCode: -50505
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                "-50502":
                  description: |-

                    * [-50502] Wrong password for Upload Share link
                  summary: Wrong password for Upload Share link
                  value:
                    code: 401
                    debugInfo: Wrong password for Upload Share link
                    errorCode: -50502
                    message: Unauthorized
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized
        "404":
          content:
            application/json:
              examples:
                "-50501":
                  description: |-

                    * [-50501] Upload access key not found
                  summary: Upload access key not found
                  value:
                    code: 404
                    debugInfo: Upload access key not found
                    errorCode: -50501
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request public Upload Share information
      tags:
        - public
    post:
      description: |
        ### Description:
        Create a new upload channel.

        ### Precondition:
        None.

        ### Postcondition:
        Upload channel is created and corresponding upload URL, token & upload ID are returned.

        ### Further Information:
        Use `uploadUrl` the upload `token` is deprecated.

        Please provide the size of the intended upload so that the quota can be checked in advanced and no data is transferred unnecessarily.

        ### Node naming convention:
        * Node (room, folder, file) names are limited to **150** characters.
        * Illegal names:
        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`
        * Illegal characters in names:
        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.' `
      operationId: createShareUploadChannel
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateShareUploadChannelRequest"
              description: Request model for creating an upload channel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShareUploadChannelResponse"
          description: Created
        "400":
          content:
            application/json:
              examples:
                "-40755":
                  description: |-

                    * [-40755] Bad node name
                  summary: Bad node name
                  value:
                    code: 400
                    debugInfo: Bad node name
                    errorCode: -40755
                    message: Bad Request
                "-50505":
                  description: |-

                    * [-50505] No room user has a keypair
                  summary: No room user has a keypair
                  value:
                    code: 400
                    debugInfo: No room user has a keypair
                    errorCode: -50505
                    message: Bad Request
                "-50506":
                  description: |-

                    * [-50506] Exceeds the number of files for this Upload Share
                  summary: Exceeds the number of files for this Upload Share
                  value:
                    code: 400
                    debugInfo: Exceeds the number of files for this Upload Share
                    errorCode: -50506
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80001":
                  description: |-

                    * [-80001] Invalid positive number
                  summary: Invalid positive number
                  value:
                    code: 400
                    debugInfo: Invalid positive number
                    errorCode: -80001
                    message: Bad Request
                "-80002":
                  description: |-

                    * [-80002] Invalid number
                  summary: Invalid number
                  value:
                    code: 400
                    debugInfo: Invalid number
                    errorCode: -80002
                    message: Bad Request
                "-80007":
                  description: |-

                    * [-80007] Maximum allowed length is exceeded
                  summary: Maximum allowed length is exceeded
                  value:
                    code: 400
                    debugInfo: Maximum allowed length is exceeded
                    errorCode: -80007
                    message: Bad Request
                "-80037":
                  description: |-

                    * [-80037] Exceeds maximum data length for AES GCM encryption
                  summary: Exceeds maximum data length for AES GCM encryption
                  value:
                    code: 400
                    debugInfo: Exceeds maximum data length for AES GCM encryption
                    errorCode: -80037
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                "-50502":
                  description: |-

                    * [-50502] Wrong password for Upload Share link
                  summary: Wrong password for Upload Share link
                  value:
                    code: 401
                    debugInfo: Wrong password for Upload Share link
                    errorCode: -50502
                    message: Unauthorized
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                "-51000":
                  description: |-

                    * [-51000] (Up-) Download Share is temporarily locked
                  summary: (Up-) Download Share is temporarily locked
                  value:
                    code: 403
                    debugInfo: (Up-) Download Share is temporarily locked
                    errorCode: -51000
                    message: Forbidden
                "null":
                  description: Insufficient rights to perform the operation
                  summary: Forbidden
                  value:
                    code: 403
                    debugInfo: ""
                    errorCode: null
                    message: Forbidden
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                "-50501":
                  description: |-

                    * [-50501] Upload access key not found
                  summary: Upload access key not found
                  value:
                    code: 404
                    debugInfo: Upload access key not found
                    errorCode: -50501
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "412":
          content:
            application/json:
              examples:
                "-90030":
                  description: |-

                    * [-90030] S3 storage disabled
                  summary: S3 storage disabled
                  value:
                    code: 412
                    debugInfo: S3 storage disabled
                    errorCode: -90030
                    message: Precondition Failed
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Precondition Failed
        "504":
          content:
            application/json:
              examples:
                "-90027":
                  description: |-

                    * [-90027] S3 connection failed
                  summary: S3 connection failed
                  value:
                    code: 504
                    debugInfo: S3 connection failed
                    errorCode: -90027
                    message: Gateway Timeout
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Gateway Timeout
        "507":
          content:
            application/json:
              examples:
                "-40200":
                  description: |-

                    * [-40200] Exceeds the free node quota in room
                  summary: Exceeds the free node quota in room
                  value:
                    code: 507
                    debugInfo: Exceeds the free node quota in room
                    errorCode: -40200
                    message: Insufficient Storage
                "-50504":
                  description: |-

                    * [-50504] Exceeds the quota for this Upload Share
                  summary: Exceeds the quota for this Upload Share
                  value:
                    code: 507
                    debugInfo: Exceeds the quota for this Upload Share
                    errorCode: -50504
                    message: Insufficient Storage
                "-90200":
                  description: |-

                    * [-90200] Exceeds the free customer quota
                  summary: Exceeds the free customer quota
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer quota
                    errorCode: -90200
                    message: Insufficient Storage
                "-90201":
                  description: |-

                    * [-90201] Exceeds the free customer physical disk space
                  summary: Exceeds the free customer physical disk space
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer physical disk space
                    errorCode: -90201
                    message: Insufficient Storage
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Insufficient Storage
      security: []
      summary: Create new file upload channel
      tags:
        - public
  "/v4/public/shares/uploads/{access_key}/{upload_id}":
    delete:
      description: |-
        ### Description:
        Abort (chunked) upload via Upload Share.

        ### Precondition:
        Valid Upload ID.

        ### Postcondition:
        Aborts upload and invalidates upload ID / token.

        ### Further Information:
        None.
      operationId: cancelFileUploadViaShare
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              examples:
                "-50506":
                  description: |-

                    * [-50506] Exceeds the number of files for this Upload Share
                  summary: Exceeds the number of files for this Upload Share
                  value:
                    code: 400
                    debugInfo: Exceeds the number of files for this Upload Share
                    errorCode: -50506
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                "-20501":
                  description: |-

                    * [-20501] Upload not found
                  summary: Upload not found
                  value:
                    code: 404
                    debugInfo: Upload not found
                    errorCode: -20501
                    message: Not Found
                "-50501":
                  description: |-

                    * [-50501] Upload access key not found
                  summary: Upload access key not found
                  value:
                    code: 404
                    debugInfo: Upload access key not found
                    errorCode: -50501
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "504":
          content:
            application/json:
              examples:
                "-90027":
                  description: |-

                    * [-90027] S3 connection failed
                  summary: S3 connection failed
                  value:
                    code: 504
                    debugInfo: S3 connection failed
                    errorCode: -90027
                    message: Gateway Timeout
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Gateway Timeout
        "507":
          content:
            application/json:
              examples:
                "-50504":
                  description: |-

                    * [-50504] Exceeds the quota for this Upload Share
                  summary: Exceeds the quota for this Upload Share
                  value:
                    code: 507
                    debugInfo: Exceeds the quota for this Upload Share
                    errorCode: -50504
                    message: Insufficient Storage
                "-90200":
                  description: |-

                    * [-90200] Exceeds the free customer quota
                  summary: Exceeds the free customer quota
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer quota
                    errorCode: -90200
                    message: Insufficient Storage
                "-90201":
                  description: |-

                    * [-90201] Exceeds the free customer physical disk space
                  summary: Exceeds the free customer physical disk space
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer physical disk space
                    errorCode: -90201
                    message: Insufficient Storage
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Insufficient Storage
      security: []
      summary: Cancel file upload
      tags:
        - public
    get:
      description: |-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since v4.15.0</h3>

        ### Description:
        Request status of a S3 file upload.

        ### Precondition:
        An upload channel has been created and the user has <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; create</span> permissions in the parent container (room or folder).

        ### Postcondition:
        Status of S3 multipart upload request is returned.

        ### Further Information:
        None.

        ### Possible errors:
        <details style="padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;">
        <summary style="cursor: pointer; outline: none"><strong>Expand</strong></summary>

        | Http Status | Error Code | Description |
        | :--- | :--- | :--- |
        | `400 Bad Request` | `-80000` | Mandatory fields cannot be empty |
        | `400 Bad Request` | `-80001` | Invalid positive number |
        | `400 Bad Request` | `-80002` | Invalid number |
        | `400 Bad Request` | `-40001` | (Target) room is not encrypted |
        | `400 Bad Request` | `-40755` | Bad file name |
        | `400 Bad Request` | `-40763` | File key must be set for an upload into encrypted room |
        | `400 Bad Request` | `-50506` | Exceeds the number of files for this Upload Share |
        | `403 Forbidden` |  | Access denied |
        | `404 Not Found` | `-20501` | Upload not found |
        | `404 Not Found` | `-40000` | Container not found |
        | `404 Not Found` | `-41000` | Node not found |
        | `404 Not Found` | `-70501` | User not found |
        | `409 Conflict` | `-40010` | Container cannot be overwritten |
        | `409 Conflict` |  | File cannot be overwritten |
        | `500 Internal Server Error` |  | System Error |
        | `502 Bad Gateway` |  | S3 Error |
        | `502 Insufficient Storage` | `-50504` | Exceeds the quota for this Upload Share |
        | `502 Insufficient Storage` | `-40200` | Exceeds the free node quota in room |
        | `502 Insufficient Storage` | `-90200` | Exceeds the free customer quota |
        | `502 Insufficient Storage` | `-90201` | Exceeds the free customer physical disk space |

        </details>
      operationId: requestUploadStatusPublic
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/S3ShareUploadStatus"
          description: OK
        "400":
          content:
            application/json:
              examples:
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                "-20501":
                  description: |-

                    * [-20501] Upload not found
                  summary: Upload not found
                  value:
                    code: 404
                    debugInfo: Upload not found
                    errorCode: -20501
                    message: Not Found
                "-40000":
                  description: |-

                    * [-40000] Container not found
                  summary: Container not found
                  value:
                    code: 404
                    debugInfo: Container not found
                    errorCode: -40000
                    message: Not Found
                "-41000":
                  description: |-

                    * [-40000] Node not found
                  summary: Node not found
                  value:
                    code: 404
                    debugInfo: Node not found
                    errorCode: -41000
                    message: Not Found
                "-90034":
                  description: |-

                    * [-90034] Corresponding S3 upload ID not found
                  summary: Corresponding S3 upload ID not found
                  value:
                    code: 404
                    debugInfo: Corresponding S3 upload ID not found
                    errorCode: -90034
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "412":
          content:
            application/json:
              examples:
                "-90030":
                  description: |-

                    * [-90030] S3 storage disabled
                  summary: S3 storage disabled
                  value:
                    code: 412
                    debugInfo: S3 storage disabled
                    errorCode: -90030
                    message: Precondition Failed
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Precondition Failed
      security: []
      summary: Request status of S3 file upload
      tags:
        - public
    post:
      description: |-
        ### Description:
        Chunked upload of files via Upload Share.

        ### Precondition:
        Valid upload ID.

        ### Postcondition:
        Chunk of file is uploaded.

        ### Further Information:
        Chunked uploads (range requests) are supported.

        Following `Content-Types` are supported by this API:
        * `multipart/form-data`
        * provided `Content-Type`

        For both file upload types set the correct `Content-Type` header and body.

        ### Examples:

        * `multipart/form-data`
        ```
        POST /api/v4/public/shares/uploads/{access_key}{upload_id} HTTP/1.1

        Header:
        ...
        Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
        ...

        Body:
        ------WebKitFormBoundary7MA4YWxkTrZu0gW
        Content-Disposition: form-data; name="file"; filename="file.txt"
        Content-Type: text/plain

        Content of file.txt
        ------WebKitFormBoundary7MA4YWxkTrZu0gW--
        ```

        * any other `Content-Type`
        ```
        POST /api/v4/public/shares/uploads/{access_key}{upload_id} HTTP/1.1

        Header:
        ...
        Content-Type: { ... }
        ...

        Body:
        raw content
        ```
      externalDocs:
        description: Range Requests
        url: https://tools.ietf.org/html/rfc7233
      operationId: uploadFileAsBinaryPublic_1
      parameters:
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          schema:
            type: string
        - description: |-
            Content-Range

            e.g. `bytes 0-999/3980`
          in: header
          name: Content-Range
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
        description: File
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChunkUploadResponse"
          description: Created
        "400":
          content:
            application/json:
              examples:
                "-50505":
                  description: |-

                    * [-50505] No room user has a keypair
                  summary: No room user has a keypair
                  value:
                    code: 400
                    debugInfo: No room user has a keypair
                    errorCode: -50505
                    message: Bad Request
                "-50506":
                  description: |-

                    * [-50506] Exceeds the number of files for this Upload Share
                  summary: Exceeds the number of files for this Upload Share
                  value:
                    code: 400
                    debugInfo: Exceeds the number of files for this Upload Share
                    errorCode: -50506
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80021":
                  description: |-

                    * [-80021] Incorrect upload Content-Range
                  summary: Incorrect upload Content-Range
                  value:
                    code: 400
                    debugInfo: Incorrect upload Content-Range
                    errorCode: -80021
                    message: Bad Request
                "-80037":
                  description: |-

                    * [-80037] Exceeds maximum data length for AES GCM encryption
                  summary: Exceeds maximum data length for AES GCM encryption
                  value:
                    code: 400
                    debugInfo: Exceeds maximum data length for AES GCM encryption
                    errorCode: -80037
                    message: Bad Request
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ChunkUploadResponse"
                  - $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                "-20501":
                  description: |-

                    * [-20501] Upload not found
                  summary: Upload not found
                  value:
                    code: 404
                    debugInfo: Upload not found
                    errorCode: -20501
                    message: Not Found
                "-50501":
                  description: |-

                    * [-50501] Upload access key not found
                  summary: Upload access key not found
                  value:
                    code: 404
                    debugInfo: Upload access key not found
                    errorCode: -50501
                    message: Not Found
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ChunkUploadResponse"
                  - $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ChunkUploadResponse"
                  - $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "412":
          content:
            application/json:
              examples:
                "-90030":
                  description: |-

                    * [-90030] S3 storage disabled
                  summary: S3 storage disabled
                  value:
                    code: 412
                    debugInfo: S3 storage disabled
                    errorCode: -90030
                    message: Precondition Failed
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ChunkUploadResponse"
                  - $ref: "#/components/schemas/ErrorResponse"
          description: Precondition Failed
        "507":
          content:
            application/json:
              examples:
                "-40200":
                  description: |-

                    * [-40200] Exceeds the free node quota in room
                  summary: Exceeds the free node quota in room
                  value:
                    code: 507
                    debugInfo: Exceeds the free node quota in room
                    errorCode: -40200
                    message: Insufficient Storage
                "-50504":
                  description: |-

                    * [-50504] Exceeds the quota for this Upload Share
                  summary: Exceeds the quota for this Upload Share
                  value:
                    code: 507
                    debugInfo: Exceeds the quota for this Upload Share
                    errorCode: -50504
                    message: Insufficient Storage
                "-90200":
                  description: |-

                    * [-90200] Exceeds the free customer quota
                  summary: Exceeds the free customer quota
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer quota
                    errorCode: -90200
                    message: Insufficient Storage
                "-90201":
                  description: |-

                    * [-90201] Exceeds the free customer physical disk space
                  summary: Exceeds the free customer physical disk space
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer physical disk space
                    errorCode: -90201
                    message: Insufficient Storage
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ChunkUploadResponse"
                  - $ref: "#/components/schemas/ErrorResponse"
          description: Insufficient Storage
      security: []
      summary: Upload file
      tags:
        - public
    put:
      description: |
        ### Description:
        Finalize (chunked) upload via Upload Share.

        ### Precondition:
        Valid upload ID.
        Only returns users that owns one of the following permissions: <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; read</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage download share</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage upload share</span>

        ### Postcondition:
        Finalizes upload.

        ### Further Information:
        Chunked uploads (range requests) are supported.

        Please ensure that all chunks have been transferred correctly before finishing the upload.
        If file hash has been created in time a `201 Created` will be responded and hash will be part of response, otherwise it will be a `202 Accepted` without it.
      externalDocs:
        description: Range Requests
        url: https://tools.ietf.org/html/rfc7233
      operationId: completeFileUploadViaShare
      parameters:
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFileKeyList"
        description: Mandatory for encrypted shares
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicUploadedFileData"
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicUploadedFileData"
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                "-40001":
                  description: |-

                    * [-40001] (Target) room is not encrypted
                  summary: (Target) room is not encrypted
                  value:
                    code: 400
                    debugInfo: (Target) room is not encrypted
                    errorCode: -40001
                    message: Bad Request
                "-40763":
                  description: |-

                    * [-40763] File key must be set for an upload into encrypted room
                  summary: File key must be set for an upload into encrypted room
                  value:
                    code: 400
                    debugInfo: File key must be set for an upload into encrypted room
                    errorCode: -40763
                    message: Bad Request
                "-50505":
                  description: |-

                    * [-50505] No room user has a keypair
                  summary: No room user has a keypair
                  value:
                    code: 400
                    debugInfo: No room user has a keypair
                    errorCode: -50505
                    message: Bad Request
                "-50506":
                  description: |-

                    * [-50506] Exceeds the number of files for this Upload Share
                  summary: Exceeds the number of files for this Upload Share
                  value:
                    code: 400
                    debugInfo: Exceeds the number of files for this Upload Share
                    errorCode: -50506
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80001":
                  description: |-

                    * [-80001] Invalid positive number
                  summary: Invalid positive number
                  value:
                    code: 400
                    debugInfo: Invalid positive number
                    errorCode: -80001
                    message: Bad Request
                "-80002":
                  description: |-

                    * [-80002] Invalid number
                  summary: Invalid number
                  value:
                    code: 400
                    debugInfo: Invalid number
                    errorCode: -80002
                    message: Bad Request
                "-80007":
                  description: |-

                    * [-80007] Maximum allowed length is exceeded
                  summary: Maximum allowed length is exceeded
                  value:
                    code: 400
                    debugInfo: Maximum allowed length is exceeded
                    errorCode: -80007
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                "-70020":
                  description: |-

                    * [-70020] User does not have a keypair
                  summary: User does not have a keypair
                  value:
                    code: 403
                    debugInfo: User does not have a keypair
                    errorCode: -70020
                    message: Forbidden
                "null":
                  description: Insufficient rights to perform the operation
                  summary: Forbidden
                  value:
                    code: 403
                    debugInfo: ""
                    errorCode: null
                    message: Forbidden
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                "-20501":
                  description: |-

                    * [-20501] Upload not found
                  summary: Upload not found
                  value:
                    code: 404
                    debugInfo: Upload not found
                    errorCode: -20501
                    message: Not Found
                "-40751":
                  description: |-

                    * [-40751] File not found
                  summary: File not found
                  value:
                    code: 404
                    debugInfo: File not found
                    errorCode: -40751
                    message: Not Found
                "-41000":
                  description: |-

                    * [-40000] Node not found
                  summary: Node not found
                  value:
                    code: 404
                    debugInfo: Node not found
                    errorCode: -41000
                    message: Not Found
                "-50501":
                  description: |-

                    * [-50501] Upload access key not found
                  summary: Upload access key not found
                  value:
                    code: 404
                    debugInfo: Upload access key not found
                    errorCode: -50501
                    message: Not Found
                "-70501":
                  description: |-

                    * [-70501] User not found
                  summary: User not found
                  value:
                    code: 404
                    debugInfo: User not found
                    errorCode: -70501
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "412":
          content:
            application/json:
              examples:
                "-90030":
                  description: |-

                    * [-90030] S3 storage disabled
                  summary: S3 storage disabled
                  value:
                    code: 412
                    debugInfo: S3 storage disabled
                    errorCode: -90030
                    message: Precondition Failed
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Precondition Failed
        "504":
          content:
            application/json:
              examples:
                "-90027":
                  description: |-

                    * [-90027] S3 connection failed
                  summary: S3 connection failed
                  value:
                    code: 504
                    debugInfo: S3 connection failed
                    errorCode: -90027
                    message: Gateway Timeout
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Gateway Timeout
        "507":
          content:
            application/json:
              examples:
                "-40200":
                  description: |-

                    * [-40200] Exceeds the free node quota in room
                  summary: Exceeds the free node quota in room
                  value:
                    code: 507
                    debugInfo: Exceeds the free node quota in room
                    errorCode: -40200
                    message: Insufficient Storage
                "-50504":
                  description: |-

                    * [-50504] Exceeds the quota for this Upload Share
                  summary: Exceeds the quota for this Upload Share
                  value:
                    code: 507
                    debugInfo: Exceeds the quota for this Upload Share
                    errorCode: -50504
                    message: Insufficient Storage
                "-90200":
                  description: |-

                    * [-90200] Exceeds the free customer quota
                  summary: Exceeds the free customer quota
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer quota
                    errorCode: -90200
                    message: Insufficient Storage
                "-90201":
                  description: |-

                    * [-90201] Exceeds the free customer physical disk space
                  summary: Exceeds the free customer physical disk space
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer physical disk space
                    errorCode: -90201
                    message: Insufficient Storage
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Insufficient Storage
      security: []
      summary: Complete file upload
      tags:
        - public
  "/v4/public/shares/uploads/{access_key}/{upload_id}/s3":
    put:
      description: |
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since v4.15.0</h3>

        ### Description:
        Finishes a S3 file upload and closes the corresponding upload channel.

        ### Precondition:
        Valid upload ID.
        Only returns users that owns one of the following permissions: <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; read</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage download share</span>, <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage upload share</span>

        ### Postcondition:
        Upload channel is closed. S3 multipart upload request is completed.

        ### Further Information:
        None.
      operationId: completeS3FileUploadViaShare
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteS3ShareUploadRequest"
              description: Request model for completing a S3 file upload
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                "-20503":
                  description: |-

                    * [-20503] Upload channel is closed
                  summary: Upload channel is closed
                  value:
                    code: 400
                    debugInfo: Upload channel is closed
                    errorCode: -20503
                    message: Bad Request
                "-40001":
                  description: |-

                    * [-40001] (Target) room is not encrypted
                  summary: (Target) room is not encrypted
                  value:
                    code: 400
                    debugInfo: (Target) room is not encrypted
                    errorCode: -40001
                    message: Bad Request
                "-40763":
                  description: |-

                    * [-40763] File key must be set for an upload into encrypted room
                  summary: File key must be set for an upload into encrypted room
                  value:
                    code: 400
                    debugInfo: File key must be set for an upload into encrypted room
                    errorCode: -40763
                    message: Bad Request
                "-50505":
                  description: |-

                    * [-50505] No room user has a keypair
                  summary: No room user has a keypair
                  value:
                    code: 400
                    debugInfo: No room user has a keypair
                    errorCode: -50505
                    message: Bad Request
                "-50506":
                  description: |-

                    * [-50506] Exceeds the number of files for this Upload Share
                  summary: Exceeds the number of files for this Upload Share
                  value:
                    code: 400
                    debugInfo: Exceeds the number of files for this Upload Share
                    errorCode: -50506
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80001":
                  description: |-

                    * [-80001] Invalid positive number
                  summary: Invalid positive number
                  value:
                    code: 400
                    debugInfo: Invalid positive number
                    errorCode: -80001
                    message: Bad Request
                "-80002":
                  description: |-

                    * [-80002] Invalid number
                  summary: Invalid number
                  value:
                    code: 400
                    debugInfo: Invalid number
                    errorCode: -80002
                    message: Bad Request
                "-80007":
                  description: |-

                    * [-80007] Maximum allowed length is exceeded
                  summary: Maximum allowed length is exceeded
                  value:
                    code: 400
                    debugInfo: Maximum allowed length is exceeded
                    errorCode: -80007
                    message: Bad Request
                "-80045":
                  description: |-

                    * [-80045] Invalid Etag(s)
                  summary: Invalid Etag(s)
                  value:
                    code: 400
                    debugInfo: Invalid Etag(s)
                    errorCode: -80045
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                "-20501":
                  description: |-

                    * [-20501] Upload not found
                  summary: Upload not found
                  value:
                    code: 404
                    debugInfo: Upload not found
                    errorCode: -20501
                    message: Not Found
                "-40751":
                  description: |-

                    * [-40751] File not found
                  summary: File not found
                  value:
                    code: 404
                    debugInfo: File not found
                    errorCode: -40751
                    message: Not Found
                "-41000":
                  description: |-

                    * [-40000] Node not found
                  summary: Node not found
                  value:
                    code: 404
                    debugInfo: Node not found
                    errorCode: -41000
                    message: Not Found
                "-50501":
                  description: |-

                    * [-50501] Upload access key not found
                  summary: Upload access key not found
                  value:
                    code: 404
                    debugInfo: Upload access key not found
                    errorCode: -50501
                    message: Not Found
                "-70501":
                  description: |-

                    * [-70501] User not found
                  summary: User not found
                  value:
                    code: 404
                    debugInfo: User not found
                    errorCode: -70501
                    message: Not Found
                "-90034":
                  description: |-

                    * [-90034] Corresponding S3 upload ID not found
                  summary: Corresponding S3 upload ID not found
                  value:
                    code: 404
                    debugInfo: Corresponding S3 upload ID not found
                    errorCode: -90034
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "412":
          content:
            application/json:
              examples:
                "-90030":
                  description: |-

                    * [-90030] S3 storage disabled
                  summary: S3 storage disabled
                  value:
                    code: 412
                    debugInfo: S3 storage disabled
                    errorCode: -90030
                    message: Precondition Failed
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Precondition Failed
      security: []
      summary: Complete S3 file upload
      tags:
        - public
  "/v4/public/shares/uploads/{access_key}/{upload_id}/s3_urls":
    post:
      description: |-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since v4.15.0</h3>

        ### Description:
        Generate presigned URLs for S3 file upload.

        ### Precondition:
        Valid upload ID

        ### Postcondition:
        List of presigned URLs is returned.

        ### Further Information:
        The size for each part must be >= 5 MB, except for the last part.
        The part number of the first part in S3 is 1 (not 0).
        Use HTTP method `PUT` for uploading bytes via presigned URL.
      operationId: generatePresignedUrlsPublic
      parameters:
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
        - description: Access key
          in: path
          name: access_key
          required: true
          schema:
            type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratePresignedUrlsRequest"
              description: Request model for generating presigned URLs
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresignedUrlList"
          description: Created
        "400":
          content:
            application/json:
              examples:
                "-20503":
                  description: |-

                    * [-20503] Upload channel is closed
                  summary: Upload channel is closed
                  value:
                    code: 400
                    debugInfo: Upload channel is closed
                    errorCode: -20503
                    message: Bad Request
                "-80000":
                  description: |-

                    * [-80000] Mandatory fields cannot be empty
                  summary: Mandatory fields cannot be empty
                  value:
                    code: 400
                    debugInfo: Mandatory fields cannot be empty
                    errorCode: -80000
                    message: Bad Request
                "-80001":
                  description: |-

                    * [-80001] Invalid positive number
                  summary: Invalid positive number
                  value:
                    code: 400
                    debugInfo: Invalid positive number
                    errorCode: -80001
                    message: Bad Request
                "-80002":
                  description: |-

                    * [-80002] Invalid number
                  summary: Invalid number
                  value:
                    code: 400
                    debugInfo: Invalid number
                    errorCode: -80002
                    message: Bad Request
                "-80046":
                  description: |-

                    * [-80046] Invalid size
                  summary: Invalid size
                  value:
                    code: 400
                    debugInfo: Invalid size
                    errorCode: -80046
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                "null":
                  description: Insufficient rights to perform the operation
                  summary: Forbidden
                  value:
                    code: 403
                    debugInfo: ""
                    errorCode: null
                    message: Forbidden
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                "-20501":
                  description: |-

                    * [-20501] Upload not found
                  summary: Upload not found
                  value:
                    code: 404
                    debugInfo: Upload not found
                    errorCode: -20501
                    message: Not Found
                "-40000":
                  description: |-

                    * [-40000] Container not found
                  summary: Container not found
                  value:
                    code: 404
                    debugInfo: Container not found
                    errorCode: -40000
                    message: Not Found
                "-41000":
                  description: |-

                    * [-40000] Node not found
                  summary: Node not found
                  value:
                    code: 404
                    debugInfo: Node not found
                    errorCode: -41000
                    message: Not Found
                "-90034":
                  description: |-

                    * [-90034] Corresponding S3 upload ID not found
                  summary: Corresponding S3 upload ID not found
                  value:
                    code: 404
                    debugInfo: Corresponding S3 upload ID not found
                    errorCode: -90034
                    message: Not Found
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
        "412":
          content:
            application/json:
              examples:
                "-90030":
                  description: |-

                    * [-90030] S3 storage disabled
                  summary: S3 storage disabled
                  value:
                    code: 412
                    debugInfo: S3 storage disabled
                    errorCode: -90030
                    message: Precondition Failed
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Precondition Failed
        "504":
          content:
            application/json:
              examples:
                "-90027":
                  description: |-

                    * [-90027] S3 connection failed
                  summary: S3 connection failed
                  value:
                    code: 504
                    debugInfo: S3 connection failed
                    errorCode: -90027
                    message: Gateway Timeout
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Gateway Timeout
        "507":
          content:
            application/json:
              examples:
                "-50504":
                  description: |-

                    * [-50504] Exceeds the quota for this Upload Share
                  summary: Exceeds the quota for this Upload Share
                  value:
                    code: 507
                    debugInfo: Exceeds the quota for this Upload Share
                    errorCode: -50504
                    message: Insufficient Storage
                "-90200":
                  description: |-

                    * [-90200] Exceeds the free customer quota
                  summary: Exceeds the free customer quota
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer quota
                    errorCode: -90200
                    message: Insufficient Storage
                "-90201":
                  description: |-

                    * [-90201] Exceeds the free customer physical disk space
                  summary: Exceeds the free customer physical disk space
                  value:
                    code: 507
                    debugInfo: Exceeds the free customer physical disk space
                    errorCode: -90201
                    message: Insufficient Storage
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Insufficient Storage
      security: []
      summary: Generate presigned URLs for S3 file upload
      tags:
        - public
  /v4/public/software/third_party_dependencies:
    get:
      description: |+
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since v4.9.0</h3>

        ### Description:
        Provides information about used third-party software dependencies.

        ### Precondition:
        None.

        ### Postcondition:
        List of the third-party software dependencies used by **DRACOON Core** (referred to as _"Server"_) is returned.

        ### Further Information:
        None.

      operationId: requestThirdPartyDependencies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ThirdPartyDependenciesData"
                type: array
          description: OK
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request third-party software dependencies
      tags:
        - public
  /v4/public/software/version:
    get:
      description: |-
        ### Description:
        Public software version information.

        ### Precondition:
        None.

        ### Postcondition:
        Sofware version information is returned.

        ### Further Information:
        The version of DRACOON Server consists of two components:
        * **API**
        * **Core** (referred to as _"Server"_)

        which are versioned individually.
      operationId: requestSoftwareVersion
      parameters:
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftwareVersionData"
          description: OK
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request software version information
      tags:
        - public
  /v4/public/system/info:
    get:
      description: |-
        ### Description:
        Provides information about system.

        ### Precondition:
        None.

        ### Postcondition:
        System information is returned.

        ### Further Information:
        Authentication methods are sorted by **priority** attribute.
        Smaller values have higher priority.
        Authentication method with highest priority is considered as default.

        ### System information:
        <details style="padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;">
        <summary style="cursor: pointer; outline: none"><strong>Expand</strong></summary>

        | Setting | Description | Value |
        | :--- | :--- | :--- |
        | `languageDefault` | Defines which language should be default. | `ISO 639-1 code` |
        | `hideLoginInputFields` | Defines if login fields should be hidden. | `true or false` |
        | `s3Hosts` | List of available S3 hosts. | `String array` |
        | `s3EnforceDirectUpload` | Determines whether S3 direct upload is enforced or not. | `true or false` |
        | `useS3Storage` | Determines whether S3 Storage enabled and used. | `true or false` |

        </details>

        ### Authentication methods:
        <details style="padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;">
        <summary style="cursor: pointer; outline: none"><strong>Expand</strong></summary>

        | Authentication Method | Description |
        | :--- | :--- |
        | `basic` | **Basic** authentication globally allowed.<br>This option **MUST** be activated to allow users to log in with their credentials stored in the database.<br>Formerly known as `sql`. |
        | `active_directory` | **Active Directory** authentication globally allowed.<br>This option **MUST** be activated to allow users to log in with their Active Directory credentials. |
        | `radius` | **RADIUS** authentication globally allowed.<br>This option **MUST** be activated to allow users to log in with their RADIUS username, their PIN and a token password. |
        | `openid` | **OpenID Connect** authentication globally allowed.This option **MUST** be activated to allow users to log in with their OpenID Connect identity. |
        | `hideLoginInputFields` | Determines whether input fields for login should be enabled | `true or false` |

        </details>
      externalDocs:
        description: Tags for Identifying Languages
        url: https://tools.ietf.org/html/rfc5646
      operationId: requestSystemInfo
      parameters:
        - description: Show only enabled authentication methods
          in: query
          name: is_enabled
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemInfo"
          description: OK
        "400":
          content:
            application/json:
              examples:
                "-80005":
                  description: |-

                    * [-80005] Invalid boolean value
                  summary: Invalid boolean value
                  value:
                    code: 400
                    debugInfo: Invalid boolean value
                    errorCode: -80005
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request system information
      tags:
        - public
  /v4/public/system/info/auth/ad:
    get:
      description: |-
        ### Description:
        Provides information about Active Directory authentication options.

        ### Precondition:
        None.

        ### Postcondition:
        Active Directory authentication options information is returned.

        ### Further Information:
        None.
      operationId: requestActiveDirectoryAuthInfo
      parameters:
        - description: Show only global available items
          in: query
          name: is_global_available
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveDirectoryAuthInfo"
          description: OK
        "400":
          content:
            application/json:
              examples:
                "-80005":
                  description: |-

                    * [-80005] Invalid boolean value
                  summary: Invalid boolean value
                  value:
                    code: 400
                    debugInfo: Invalid boolean value
                    errorCode: -80005
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request Active Directory authentication information
      tags:
        - public
  /v4/public/system/info/auth/openid:
    get:
      description: |-
        ### Description:
        Provides information about OpenID Connect authentication options.

        ### Precondition:
        None.

        ### Postcondition:
        OpenID Connect authentication options information is returned.

        ### Further Information:
        None.
      operationId: requestOpenIdAuthInfo
      parameters:
        - description: Show only global available items
          in: query
          name: is_global_available
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenIdAuthInfo"
          description: OK
        "400":
          content:
            application/json:
              examples:
                "-80005":
                  description: |-

                    * [-80005] Invalid boolean value
                  summary: Invalid boolean value
                  value:
                    code: 400
                    debugInfo: Invalid boolean value
                    errorCode: -80005
                    message: Bad Request
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Bad Request
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request OpenID Connect provider authentication information
      tags:
        - public
  /v4/public/time:
    get:
      description: |-
        ### Description:
        Retrieve the actual server time.

        ### Precondition:
        None.

        ### Postcondition:
        Server time is returned.

        ### Further Information:
        None.
      operationId: requestSystemTime
      parameters:
        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
          in: header
          name: X-Sds-Date-Format
          schema:
            enum:
              - UTC
              - LOCAL
              - OFFSET
              - EPOCH
              - LEET
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SdsServerTime"
          description: OK
        "406":
          content:
            application/json:
              examples:
                "null":
                  description: "Acceptable Content-Types are: `[application/json]`"
                  summary: Content type not acceptable
                  value:
                    code: 406
                    debugInfo: "Content type '...' not acceptable. Acceptable Content-Types are: [...]"
                    errorCode: null
                    message: Not Acceptable
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Not Acceptable
      security: []
      summary: Request system time
      tags:
        - public
components:
  schemas:
    ActiveDirectory:
      description: Active Directory information
      properties:
        alias:
          description: Unique name for an Active Directory configuration
          type: string
        id:
          description: ID
          format: int32
          type: integer
        isGlobalAvailable:
          description: Is available for all customers
          type: boolean
      required:
        - alias
        - id
        - isGlobalAvailable
      type: object
    ActiveDirectoryAuthInfo:
      description: List of Active Directories
      properties:
        items:
          description: List of available Active Directories
          items:
            $ref: "#/components/schemas/ActiveDirectory"
          type: array
      required:
        - items
      type: object
    ActiveDirectoryConfig:
      description: Active Directory configuration
      properties:
        adExportGroup:
          description: |-
            If `userImport` is set to `true`,

            the user must be member of this Active Directory group to receive a newly created DRACOON account.
          type: string
        alias:
          description: Unique name for an Active Directory configuration
          type: string
        createHomeFolder:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            DEPRECATED, will be ignored

            Determines whether a room is created for each user that is created by automatic import (like a home folder).

            Room's name will equal the user's login name.
          type: boolean
        homeFolderParent:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            DEPRECATED, will be ignored

            ID of the room in which the individual rooms for users will be created.
          format: int64
          type: integer
        id:
          description: ID
          format: int32
          type: integer
        ldapUsersDomain:
          description: Search scope of Active Directory; only users below this node can log on.
          type: string
        sdsImportGroup:
          description: |-
            User group that is assigned to users who are created by automatic import.

            Reset with `0`
          format: int64
          type: integer
        serverAdminName:
          description: Distinguished Name (DN) of Active Directory administrative account
          type: string
        serverIp:
          description: IPv4 or IPv6 address or host name
          type: string
        serverPort:
          description: Port
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        sslFingerPrint:
          description: |-
            SSL finger print of Active Directory server.

            Mandatory for LDAPS connections.

            Format: `Algorithm/Fingerprint`
          type: string
        useLdaps:
          description: Determines whether LDAPS should be used instead of plain LDAP.
          type: boolean
        userFilter:
          description: Name of Active Directory attribute that is used as login name.
          type: string
        userImport:
          description: |-
            Determines if a DRACOON account is automatically created for a new user

            who successfully logs on with his / her AD / IDP account.
          type: boolean
      required:
        - adExportGroup
        - alias
        - id
        - ldapUsersDomain
        - serverAdminName
        - serverIp
        - serverPort
        - useLdaps
        - userFilter
        - userImport
      type: object
    ActiveDirectoryConfigList:
      description: List of Active Directory configurations
      properties:
        items:
          description: List of Active Directory configurations
          items:
            $ref: "#/components/schemas/ActiveDirectoryConfig"
          type: array
      required:
        - items
      type: object
    AlgorithmVersionInfo:
      description: Algorithm information
      properties:
        description:
          description: Algorithm description
          type: string
        status:
          description: |-
            Algorithm status

            Derived from preference value and threshold
          enum:
            - REQUIRED
            - DISCOURAGED
          type: string
        version:
          description: Algorithm version
          type: string
      required:
        - description
        - status
        - version
      type: object
    AlgorithmVersionInfoList:
      description: Information of all available algorithms
      properties:
        fileKeyAlgorithms:
          description: List of file key algorithms
          items:
            $ref: "#/components/schemas/AlgorithmVersionInfo"
          type: array
        keyPairAlgorithms:
          description: List of key pair algorithms
          items:
            $ref: "#/components/schemas/AlgorithmVersionInfo"
          type: array
      required:
        - fileKeyAlgorithms
        - keyPairAlgorithms
      type: object
    AttributesResponse:
      description: Ranged list of attributes
      properties:
        items:
          description: List of key-value pairs
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    AuditNodeResponse:
      description: Audit node report
      properties:
        auditUserPermissionList:
          description: List of assigned users with permissions
          items:
            $ref: "#/components/schemas/AuditUserPermission"
          type: array
        nodeCntChildren:
          description: |-
            Number of direct children

            (no recursion; for rooms only)
          format: int32
          type: integer
        nodeCreatedAt:
          description: Creation date
          format: date-time
          type: string
        nodeCreatedBy:
          $ref: "#/components/schemas/UserInfo"
        nodeHasActivitiesLog:
          default: true
          description: Is activities log active (for rooms only)
          type: boolean
        nodeHasRecycleBin:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            Is recycle bin active (for rooms only)

            Recycle bin is always on (disabling is not possible).
          type: boolean
        nodeId:
          description: Node ID
          format: int64
          type: integer
        nodeIsEncrypted:
          description: Encryption state
          type: boolean
        nodeName:
          description: Node name
          type: string
        nodeParentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        nodeParentPath:
          description: |-
            Parent node path

            `/` if node is a root node (room)
          type: string
        nodeQuota:
          description: Quota in byte
          format: int64
          type: integer
        nodeRecycleBinRetentionPeriod:
          description: Retention period for deleted nodes in days
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        nodeSize:
          description: Node size in byte
          format: int64
          type: integer
        nodeUpdatedAt:
          description: Modification date
          format: date-time
          type: string
        nodeUpdatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - auditUserPermissionList
        - nodeCntChildren
        - nodeId
        - nodeName
        - nodeParentPath
      type: object
    AuditUserPermission:
      description: Audit user permissions report
      properties:
        permissions:
          $ref: "#/components/schemas/NodePermissions"
        userFirstName:
          description: User first name
          type: string
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
        userLastName:
          description: User last name
          type: string
        userLogin:
          description: User login name
          type: string
      required:
        - permissions
        - userFirstName
        - userId
        - userLastName
        - userLogin
      type: object
    AuthConfig:
      description: Authentication settings
      properties:
        authMethods:
          description: List of authentication methods
          items:
            $ref: "#/components/schemas/AuthMethod"
          type: array
      required:
        - authMethods
      type: object
    AuthMethod:
      description: Authentication method
      properties:
        isEnabled:
          description: Is enabled
          type: boolean
        name:
          description: |-
            Authentication methods:

            * `basic`

            * `active_directory`

            * `radius`

            * `openid`
          type: string
        priority:
          description: Priority (smaller values have higher priority)
          format: int32
          type: integer
      required:
        - isEnabled
        - name
        - priority
      type: object
    AuthTokenRestrictions:
      description: Auth token restrictions
      properties:
        accessTokenValidity:
          description: |-
            &#128640; Since v4.13.0

            Restricted OAuth access token validity (in seconds)
          format: int32
          type: integer
        refreshTokenValidity:
          description: |-
            &#128640; Since v4.13.0

            Restricted OAuth refresh token validity (in seconds)
          format: int32
          type: integer
        restrictionEnabled:
          description: |-
            &#128640; Since v4.13.0

            Defines if OAuth token restrictions are enabled
          type: boolean
      type: object
    Avatar:
      description: User avatar information
      properties:
        avatarUri:
          description: Avatar URI
          type: string
        avatarUuid:
          description: Avatar UUID
          type: string
        isCustomAvatar:
          description: Determines whether user updated his / her avatar with own image
          type: boolean
      required:
        - avatarUri
        - avatarUuid
        - isCustomAvatar
      type: object
    ChangeGroupMembersRequest:
      description: List of user IDs
      properties:
        ids:
          description: List of user IDs
          items:
            description: List of user IDs
            format: int64
            type: integer
          type: array
      required:
        - ids
      type: object
    ChangeNodeCommentRequest:
      description: Request model for updating a node comment
      properties:
        text:
          description: Comment text
          type: string
      required:
        - text
      type: object
    ChangeUserPasswordRequest:
      description: Request model for updating user's password
      properties:
        newPassword:
          description: New password
          type: string
        oldPassword:
          description: Old password
          type: string
      required:
        - newPassword
        - oldPassword
      type: object
    CharacterRules:
      description: Password character rules
      properties:
        mustContainCharacters:
          description: |-
            Characters which a password must contain:

            * `alpha` - at least one alphabetical character (`uppercase` OR `lowercase`)

            * `uppercase` - at least one uppercase character

            * `lowercase` - at least one lowercase character

            * `numeric` - at least one numeric character

            * `special` - at least one special character (letters and digits excluded)

            * `all` - combination of `uppercase`, `lowercase`, `numeric` and `special` (available only in request models)

            * `none` - none of the above
          enum:
            - alpha
            - uppercase
            - lowercase
            - numeric
            - special
            - all
            - none
          items:
            description: |-
              Characters which a password must contain:

              * `alpha` - at least one alphabetical character (`uppercase` OR `lowercase`)

              * `uppercase` - at least one uppercase character

              * `lowercase` - at least one lowercase character

              * `numeric` - at least one numeric character

              * `special` - at least one special character (letters and digits excluded)

              * `all` - combination of `uppercase`, `lowercase`, `numeric` and `special` (available only in request models)

              * `none` - none of the above
            enum:
              - alpha
              - uppercase
              - lowercase
              - numeric
              - special
              - all
              - none
            type: string
          type: array
        numberOfCharacteristicsToEnforce:
          description: |-
            Number of characteristics to enforce

            e.g. from `["uppercase", "lowercase", "numeric", "special"]`

            all 4 character sets can be enforced; but also only 2 of them
          format: int32
          maximum: 4
          minimum: 0
          type: integer
      required:
        - mustContainCharacters
        - numberOfCharacteristicsToEnforce
      type: object
    ChunkUploadResponse:
      description: Chunk upload response
      properties:
        hash:
          description: Hash value of transferred chunk
          type: string
        size:
          description: Chunk size
          format: int64
          type: integer
      required:
        - hash
        - size
      type: object
    Comment:
      description: Node comment information
      properties:
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        id:
          description: Comment ID
          format: int64
          type: integer
        isChanged:
          description: Determines whether comment was edited or not
          type: boolean
        isDeleted:
          description: Determines whether comment was deleted or not
          type: boolean
        text:
          description: Comment text
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - createdAt
        - createdBy
        - id
        - isChanged
        - isDeleted
        - text
        - updatedAt
        - updatedBy
      type: object
    CommentList:
      description: List of node comments
      properties:
        items:
          description: List of node comments
          items:
            $ref: "#/components/schemas/Comment"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    CompleteS3FileUploadRequest:
      description: Request model for completing a S3 file upload
      properties:
        fileKey:
          $ref: "#/components/schemas/FileKey"
        fileName:
          description: New file name to store with
          type: string
        keepShareLinks:
          default: false
          description: Preserve Download Share Links and point them to the new node.
          type: boolean
        parts:
          description: List of S3 file upload parts
          items:
            $ref: "#/components/schemas/S3FileUploadPart"
          type: array
        resolutionStrategy:
          default: autorename
          description: |-
            Node conflict resolution strategy:

            * `autorename`

            * `overwrite`

            * `fail`
          enum:
            - autorename
            - overwrite
            - fail
          type: string
      required:
        - parts
      type: object
    CompleteS3ShareUploadRequest:
      description: Request model for completing a S3 file upload
      properties:
        parts:
          description: List of S3 file upload parts
          items:
            $ref: "#/components/schemas/S3FileUploadPart"
          type: array
        userFileKeyList:
          description: List of user file keys
          items:
            $ref: "#/components/schemas/UserFileKey"
          type: array
      required:
        - parts
      type: object
    CompleteUploadRequest:
      description: Request model for completing an upload
      properties:
        fileKey:
          $ref: "#/components/schemas/FileKey"
        fileName:
          description: New file name to store with
          type: string
        keepShareLinks:
          default: false
          description: Preserve Download Share Links and point them to the new node.
          type: boolean
        resolutionStrategy:
          default: autorename
          description: |-
            Node conflict resolution strategy:

            * `autorename`

            * `overwrite`

            * `fail`
          enum:
            - autorename
            - overwrite
            - fail
          type: string
        userFileKeyList:
          $ref: "#/components/schemas/UserFileKeyList"
      type: object
    ConfigOptionList:
      description: List of key-value pairs
      properties:
        items:
          description: List of key-value pairs
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
      required:
        - items
      type: object
    ConfigRoomRequest:
      description: Request model for configuring a room
      properties:
        adminGroupIds:
          description: |-
            List of group ids

            A room requires at least one admin (user or group)
          items:
            description: |-
              List of group ids

              A room requires at least one admin (user or group)
            format: int64
            type: integer
          type: array
        adminIds:
          description: |-
            List of user ids

            A room requires at least one admin (user or group)
          items:
            description: |-
              List of user ids

              A room requires at least one admin (user or group)
            format: int64
            type: integer
          type: array
        classification:
          default: 2
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential



            Provided (or default) classification is taken from room

            when file gets uploaded without any classification.
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        hasActivitiesLog:
          default: true
          description: Is activities log active (for rooms only)
          type: boolean
        hasRecycleBin:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            Is recycle bin active (for rooms only)

            Recycle bin is always on (disabling is not possible).
          type: boolean
        inheritPermissions:
          description: |-
            Inherit permissions from parent room

            (default: `false` if `parentId` is `0`; otherwise: `true`)
          type: boolean
        newGroupMemberAcceptance:
          default: autoallow
          description: |-
            Behaviour when new users are added to the group:

            * `autoallow`

            * `pending`



            Only relevant if `adminGroupIds` has items.
          enum:
            - autoallow
            - pending
          type: string
        recycleBinRetentionPeriod:
          description: Retention period for deleted nodes in days
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        takeOverPermissions:
          description: Take over existing permissions
          type: boolean
      type: object
    CopyNode:
      description: Copied node information
      properties:
        id:
          description: Source node ID
          format: int64
          type: integer
        name:
          description: New node name
          type: string
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      required:
        - id
      type: object
    CopyNodesRequest:
      description: Request model for copying nodes
      properties:
        items:
          description: List of nodes to be copied
          items:
            $ref: "#/components/schemas/CopyNode"
          type: array
        keepShareLinks:
          default: false
          description: Preserve Download Share Links and point them to the new node.
          type: boolean
        nodeIds:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.5.0

            Node IDs

            Please use `items` instead.
          items:
            deprecated: true
            description: |-
              Node IDs

              Please use `items` instead.
            format: int64
            type: integer
          type: array
        resolutionStrategy:
          default: autorename
          description: |-
            Node conflict resolution strategy:

            * `autorename`

            * `overwrite`

            * `fail`
          enum:
            - autorename
            - overwrite
            - fail
          type: string
      type: object
    CreateActiveDirectoryConfigRequest:
      description: Request model for creating an Active Directory configuration
      properties:
        adExportGroup:
          description: |-
            If `userImport` is set to `true`,

            the user must be member of this Active Directory group to receive a newly created DRACOON account.
          type: string
        alias:
          description: Unique name for an Active Directory configuration
          type: string
        createHomeFolder:
          default: false
          description: |-
            DEPRECATED, will be ignored

            Determines whether a room is created for each user that is created by automatic import (like a home folder).

            Room's name will equal the user's login name.
          type: boolean
        homeFolderParent:
          description: |-
            DEPRECATED, will be ignored

            ID of the room in which the individual rooms for users will be created.
          format: int64
          type: integer
        ldapUsersDomain:
          description: Search scope of Active Directory; only users below this node can log on.
          type: string
        sdsImportGroup:
          description: |-
            User group that is assigned to users who are created by automatic import.

            Reset with `0`
          format: int64
          type: integer
        serverAdminName:
          description: Distinguished Name (DN) of Active Directory administrative account
          type: string
        serverAdminPassword:
          description: Password of Active Directory administrative account
          type: string
        serverIp:
          description: IPv4 or IPv6 address or host name
          type: string
        serverPort:
          description: Port
          format: int32
          type: integer
        sslFingerPrint:
          description: |-
            SSL finger print of Active Directory server.

            Mandatory for LDAPS connections.

            Format: `Algorithm/Fingerprint`
          type: string
        useLdaps:
          default: false
          description: Determines whether LDAPS should be used instead of plain LDAP.
          type: boolean
        userFilter:
          description: Name of Active Directory attribute that is used as login name.
          type: string
        userImport:
          default: false
          description: |-
            Determines if a DRACOON account is automatically created for a new user

            who successfully logs on with his / her AD / IDP account.
          type: boolean
      required:
        - alias
        - ldapUsersDomain
        - serverAdminName
        - serverAdminPassword
        - serverIp
        - serverPort
        - userFilter
      type: object
    CreateDownloadShareRequest:
      description: Request model for creating a Download Share
      properties:
        creatorLanguage:
          description: |-
            &#128679; Deprecated since v4.20.0

            Language tag for messages to creator
          type: string
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        fileKey:
          $ref: "#/components/schemas/FileKey"
        internalNotes:
          description: |-
            &#128640; Since v4.11.0

            Internal notes
          maximum: 255
          type: string
        keyPair:
          $ref: "#/components/schemas/UserKeyPairContainer"
        mailBody:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Notification email content
          type: string
        mailRecipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient email addresses
          type: string
        mailSubject:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Notification email subject
          type: string
        maxDownloads:
          description: Max allowed downloads
          format: int32
          type: integer
        name:
          description: |-
            Alias name

            (default: name of the shared node)
          type: string
        nodeId:
          description: Source node ID
          format: int64
          type: integer
        notes:
          description: User notes
          maximum: 255
          type: string
        notifyCreator:
          default: false
          description: |-
            &#128679; Deprecated since v4.20.0

            Notify creator on every download.
          type: boolean
        password:
          description: Access password, not allowed for encrypted shares
          type: string
        receiverLanguage:
          description: Language tag for messages to receiver
          type: string
        sendMail:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Notify recipients via email

            Please use `POST /shares/downloads/{share_id}/email` API instead.
          type: boolean
        sendSms:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Send share password via SMS

            Please use `textMessageRecipients` attribute instead.
          type: boolean
        showCreatorName:
          default: false
          description: Show creator first and last name.
          type: boolean
        showCreatorUsername:
          default: false
          description: Show creator email address.
          type: boolean
        smsRecipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient MSISDNs
          type: string
        textMessageRecipients:
          description: |-
            &#128640; Since v4.11.0

            List of recipient FQTNs

            E.123 / E.164 Format
          items:
            description: |-
              List of recipient FQTNs

              E.123 / E.164 Format
            type: string
          type: array
      required:
        - nodeId
      type: object
    CreateFileUploadRequest:
      description: Request model for creating an upload channel
      properties:
        classification:
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential



            (default: classification from parent room)
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        directS3Upload:
          default: false
          description: |-
            &#128640; Since v4.15.0

            Upload direct to S3
          type: boolean
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        name:
          description: File name
          type: string
        notes:
          description: |-
            User notes

            Use empty string to remove.
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        size:
          description: File size in byte
          format: int64
          type: integer
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      required:
        - name
        - parentId
      type: object
    CreateFileUploadResponse:
      description: Upload channel information
      properties:
        token:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.3.0

            Upload token
          type: string
        uploadId:
          description: Upload (channel) ID
          type: string
        uploadUrl:
          description: (public) Upload URL
          type: string
      required:
        - token
        - uploadId
        - uploadUrl
      type: object
    CreateFolderRequest:
      description: Request model for creating a folder
      properties:
        name:
          description: Name
          type: string
        notes:
          description: |-
            User notes

            Use empty string to remove.
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      required:
        - name
        - parentId
      type: object
    CreateGroupRequest:
      description: Request model for creating a group
      properties:
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        name:
          description: Group name
          type: string
      required:
        - name
      type: object
    CreateKeyPairRequest:
      description: Request model for creating a key pair
      properties:
        previousPrivateKey:
          $ref: "#/components/schemas/PrivateKeyContainer"
        privateKeyContainer:
          $ref: "#/components/schemas/PrivateKeyContainer"
        publicKeyContainer:
          $ref: "#/components/schemas/PublicKeyContainer"
      required:
        - previousPrivateKey
        - privateKeyContainer
        - publicKeyContainer
      type: object
    CreateNodeCommentRequest:
      description: Request model for creating a node comment
      properties:
        text:
          description: Comment text
          type: string
      required:
        - text
      type: object
    CreateOAuthClientRequest:
      description: Request model for creating an OAuth client
      properties:
        accessTokenValidity:
          description: Validity of the access token in seconds.
          format: int32
          type: integer
        approvalValidity:
          description: |-
            &#128640; Since v4.22.0

            Validity of the approval interval in seconds.
          format: int32
          type: integer
        clientId:
          description: ID of the OAuth client
          type: string
        clientName:
          description: Name, which is shown at the client configuration and authorization.
          type: string
        clientSecret:
          description: Secret, which client uses at authentication.
          type: string
        clientType:
          description: Determines whether client is a confidential or public client.
          enum:
            - confidential
            - public
          type: string
        grantTypes:
          description: |-
            Authorized grant types

            * `authorization_code`

            * `implicit`

            * `password`

            * `client_credentials`

            * `refresh_token`



            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
          enum:
            - authorization_code
            - client_credentials
            - implicit
            - password
            - refresh_token
          items:
            description: |-
              Authorized grant types

              * `authorization_code`

              * `implicit`

              * `password`

              * `client_credentials`

              * `refresh_token`



              cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
            enum:
              - authorization_code
              - client_credentials
              - implicit
              - password
              - refresh_token
            type: string
          type: array
        redirectUris:
          description: URIs, to which a user is redirected after authorization.
          items:
            description: URIs, to which a user is redirected after authorization.
            type: string
          type: array
        refreshTokenValidity:
          description: Validity of the refresh token in seconds.
          format: int32
          type: integer
      required:
        - clientName
        - grantTypes
      type: object
    CreateOpenIdIdpConfigRequest:
      description: Request model for creating an OpenID Connect IDP configuration
      properties:
        authorizationEndPointUrl:
          description: URL of the authorization endpoint
          type: string
        clientId:
          description: ID of the OpenID client
          type: string
        clientSecret:
          description: Secret, which client uses at authentication.
          type: string
        fallbackMappingClaim:
          description: Name of the claim which is used for the user mapping fallback.
          type: string
        flow:
          description: |-
            &#128640; Since v4.11.0

            Flow, which is used at authentication
          enum:
            - authorization_code
            - hybrid
          type: string
        issuer:
          description: |-
            Issuer identifier of the IDP

            The value is a case sensitive URL.
          type: string
        jwksEndPointUrl:
          description: URL of the JWKS endpoint
          type: string
        mappingClaim:
          description: Name of the claim which is used for the user mapping.
          type: string
        name:
          description: Name of the IDP
          type: string
        pkceChallengeMethod:
          default: plain
          description: |-
            PKCE code challenge method.

            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
          type: string
        pkceEnabled:
          default: false
          description: |-
            Determines whether PKCE is enabled.

            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
          type: boolean
        redirectUris:
          description: URIs, to which a user is redirected after authorization.
          items:
            description: URIs, to which a user is redirected after authorization.
            type: string
          type: array
        scopes:
          description: List of requested scopes
          items:
            description: List of requested scopes
            type: string
          type: array
        tokenEndPointUrl:
          description: URL of the token endpoint
          type: string
        userImportEnabled:
          default: false
          description: |-
            Determines if a DRACOON account is automatically created for a new user

            who successfully logs on with his / her AD / IDP account.
          type: boolean
        userImportGroup:
          description: |-
            User group that is assigned to users who are created by automatic import.

            Reset with `0`
          format: int64
          type: integer
        userInfoEndPointUrl:
          description: URL of the user info endpoint
          type: string
        userInfoSource:
          description: |-
            &#128640; Since v4.23.0

            Source, which is used to get user information at the import or update of a user.
          enum:
            - user_info_endpoint
            - id_token
          type: string
        userManagementUrl:
          description: |-
            URL of the user management UI.

            Use empty string to remove.
          type: string
        userUpdateEnabled:
          default: false
          description: |-
            Determines if the DRACOON account is updated with data from AD / IDP.

            For OpenID Connect, the scopes `email` and `profile` are needed.
          type: boolean
      required:
        - authorizationEndPointUrl
        - clientId
        - clientSecret
        - issuer
        - jwksEndPointUrl
        - mappingClaim
        - name
        - redirectUris
        - scopes
        - tokenEndPointUrl
        - userInfoEndPointUrl
      type: object
    CreateRoomRequest:
      description: Request model for creating a room
      properties:
        adminGroupIds:
          description: |-
            List of group ids

            A room requires at least one admin (user or group)
          items:
            description: |-
              List of group ids

              A room requires at least one admin (user or group)
            format: int64
            type: integer
          type: array
        adminIds:
          description: |-
            List of user ids

            A room requires at least one admin (user or group)
          items:
            description: |-
              List of user ids

              A room requires at least one admin (user or group)
            format: int64
            type: integer
          type: array
        classification:
          default: 2
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential



            Provided (or default) classification is taken from room

            when file gets uploaded without any classification.
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        hasActivitiesLog:
          default: true
          description: Is activities log active (for rooms only)
          type: boolean
        hasRecycleBin:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            Is recycle bin active (for rooms only)

            Recycle bin is always on (disabling is not possible).
          type: boolean
        inheritPermissions:
          description: |-
            Inherit permissions from parent room

            (default: `false` if `parentId` is `0`; otherwise: `true`)
          type: boolean
        name:
          description: Name
          type: string
        newGroupMemberAcceptance:
          default: autoallow
          description: |-
            Behaviour when new users are added to the group:

            * `autoallow`

            * `pending`



            Only relevant if `adminGroupIds` has items.
          enum:
            - autoallow
            - pending
          type: string
        notes:
          description: |-
            User notes

            Use empty string to remove.
          type: string
        parentId:
          description: Parent room ID or `null` (not 0) to create a top level room
          format: int64
          type: integer
        quota:
          description: Quota in byte
          format: int64
          type: integer
        recycleBinRetentionPeriod:
          description: Retention period for deleted nodes in days
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      required:
        - name
      type: object
    CreateShareUploadChannelRequest:
      description: Request model for creating an upload channel
      properties:
        directS3Upload:
          default: false
          description: |-
            &#128640; Since v4.15.0

            Upload direct to S3
          type: boolean
        name:
          description: File name
          type: string
        password:
          description: Password
          type: string
        size:
          description: File size in byte
          format: int64
          type: integer
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      required:
        - name
      type: object
    CreateShareUploadChannelResponse:
      description: Upload channel information
      properties:
        token:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.3.0

            Upload token
          type: string
        uploadId:
          description: Upload (channel) ID
          type: string
        uploadUrl:
          description: (public) Upload URL
          type: string
      required:
        - uploadId
        - uploadUrl
      type: object
    CreateUploadShareRequest:
      description: Request model for creating an Upload Share
      properties:
        creatorLanguage:
          description: |-
            &#128679; Deprecated since v4.20.0

            Language tag for messages to creator
          type: string
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        filesExpiryPeriod:
          description: Number of days after which uploaded files expire
          format: int32
          type: integer
        internalNotes:
          description: |-
            &#128640; Since v4.11.0

            Internal notes
          maximum: 255
          type: string
        mailBody:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Notification email content
          type: string
        mailRecipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient email addresses
          type: string
        mailSubject:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Notification email subject
          type: string
        maxSize:
          description: Maximal total size of uploaded files (in bytes)
          format: int64
          type: integer
        maxSlots:
          description: Maximal amount of files to upload
          format: int32
          type: integer
        name:
          description: |-
            Alias name

            (default: name of the shared node)
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        notifyCreator:
          default: false
          description: |-
            &#128679; Deprecated since v4.20.0

            Notify creator on every upload.
          type: boolean
        password:
          description: Password
          type: string
        receiverLanguage:
          description: Language tag for messages to receiver
          type: string
        sendMail:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Notify recipients via email

            Please use `POST /shares/uploads/{share_id}/email` API instead.
          type: boolean
        sendSms:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Send share password via SMS

            Please use `textMessageRecipients` attribute instead.
          type: boolean
        showCreatorName:
          default: false
          description: |-
            &#128640; Since v4.11.0

            Show creator first and last name.
          type: boolean
        showCreatorUsername:
          default: false
          description: |-
            &#128640; Since v4.11.0

            Show creator email address.
          type: boolean
        showUploadedFiles:
          default: false
          description: Allow display of already uploaded files
          type: boolean
        smsRecipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient MSISDNs
          type: string
        targetId:
          description: Target room or folder ID
          format: int64
          type: integer
        textMessageRecipients:
          description: |-
            &#128640; Since v4.11.0

            List of recipient FQTNs

            E.123 / E.164 Format
          items:
            description: |-
              List of recipient FQTNs

              E.123 / E.164 Format
            type: string
          type: array
      required:
        - targetId
      type: object
    CreateUserRequest:
      description: Request model for creating an user
      properties:
        authData:
          $ref: "#/components/schemas/UserAuthData"
        authMethods:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Authentication methods:

            * `sql`

            * `active_directory`

            * `radius`

            * `openid`

            use `authData` instead
          items:
            $ref: "#/components/schemas/UserAuthMethod"
          type: array
        email:
          description: "Email "
          type: string
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender

            Do NOT use `gender`! It will be ignored.
          type: string
        isNonmemberViewer:
          description: |-
            &#128640; Since v4.12.0

            Determines whether user has the role NONMEMBER_VIEWER
          type: boolean
        lastName:
          description: User last name
          type: string
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        needsToChangePassword:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Determines whether user has to change his / her initial password.

            use `authDate.mustChangePassword` instead
          type: boolean
        notifyUser:
          description: |-
            &#128640; Since v4.9.0

            Notify user about his new account

            * default: `true` for `basic` auth type

            * default: `false` for `active_directory`, `openid` and `radius` auth types
          type: boolean
        password:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            An initial password may be preset

            use `authData` instead
          type: string
        phone:
          description: Phone number
          type: string
        receiverLanguage:
          description: IETF language tag
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
      required:
        - firstName
        - lastName
      type: object
    CreateWebhookRequest:
      description: Request model for creating a webhook
      properties:
        eventTypeNames:
          description: List of names of event types
          items:
            description: List of names of event types
            type: string
          type: array
        isEnabled:
          description: Is enabled
          type: boolean
        name:
          description: Name
          type: string
        secret:
          description: Secret; used for event message signatures
          type: string
        triggerExampleEvent:
          description: If set to true, an example event is being created
          type: boolean
        url:
          description: URL (must begin with the `HTTPS` scheme)
          type: string
      required:
        - eventTypeNames
        - name
        - url
      type: object
    Customer:
      description: Customer information
      properties:
        activationCode:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.8.0

            Customer activation code string:

            * valid only for types `free` and `demo`

            * for `pay` customers it is empty
          type: string
        companyName:
          description: Company name
          type: string
        createdAt:
          description: Creation date
          format: date-time
          type: string
        customerAttributes:
          $ref: "#/components/schemas/CustomerAttributes"
        customerContractType:
          description: Customer type
          enum:
            - demo
            - free
            - pay
          type: string
        customerUuid:
          description: |-
            &#128640; Since v4.21.0

            Customer UUID
          type: string
        id:
          description: Unique identifier for the customer
          format: int64
          type: integer
        isLocked:
          default: false
          description: |-
            Customer is locked:

            * `false` - unlocked

            * `true` - locked



            All users of this customer will be blocked and can not login anymore.
          type: boolean
        lastLoginAt:
          description: Date of last seen login for the customer
          format: date-time
          type: string
        lockStatus:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Customer lock status:

            * `false` - unlocked

            * `true` - locked



            Please use `isLocked` instead.

            All users of this customer will be blocked and can not login anymore.
          type: boolean
        providerCustomerId:
          description: Provider customer ID
          type: string
        quotaMax:
          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
          format: int64
          type: integer
        quotaUsed:
          description: Used amount of disc space in bytes
          format: int64
          type: integer
        trialDaysLeft:
          description: |-
            Number of days left for trial period (relevant only for type `demo`)

            (not used)
          format: int32
          type: integer
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        userMax:
          description: Maximal number of users
          format: int32
          type: integer
        userUsed:
          description: Number of users which are already allocated.
          format: int32
          type: integer
        webhooksMax:
          description: |-
            &#128640; Since v4.19.0

            Maximal number of webhooks
          format: int64
          type: integer
      required:
        - companyName
        - createdAt
        - customerContractType
        - customerUuid
        - id
        - lockStatus
        - quotaMax
        - quotaUsed
        - userMax
        - userUsed
      type: object
    CustomerAttributes:
      description: List of customer attributes
      properties:
        items:
          description: List of customer attributes
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
      required:
        - items
      type: object
    CustomerData:
      description: Customer information
      properties:
        accountsLimit:
          description: User accounts limit
          format: int32
          type: integer
        accountsUsed:
          description: User accounts used
          format: int32
          type: integer
        cntFiles:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Total number of files

            Visible only with at least one global role.
          format: int64
          type: integer
        cntFolders:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Total number of folders

            Visible only with at least one global role.
          format: int64
          type: integer
        cntRooms:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Total number of rooms

            Visible only with at least one global role.
          format: int64
          type: integer
        customerEncryptionEnabled:
          description: Clientside encryption for customer enabled
          type: boolean
        id:
          description: Unique identifier for the customer
          format: int64
          type: integer
        isProviderCustomer:
          description: Customer is Provider Customer
          type: boolean
        name:
          description: Customer name
          type: string
        spaceLimit:
          description: Space limit (in bytes). -1 for unlimited
          format: int64
          type: integer
        spaceUsed:
          description: Space used (in bytes)
          format: int64
          type: integer
      required:
        - accountsLimit
        - accountsUsed
        - customerEncryptionEnabled
        - id
        - isProviderCustomer
        - name
        - spaceLimit
        - spaceUsed
      type: object
    CustomerList:
      description: List of customers
      properties:
        items:
          description: List of customers
          items:
            $ref: "#/components/schemas/Customer"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    CustomerSettingsRequest:
      description: Request model for setting the customer settings
      properties:
        homeRoomParentName:
          description: Homeroom Parent Name
          type: string
        homeRoomQuota:
          description: Homeroom Quota in bytes
          format: int64
          type: integer
        homeRoomsActive:
          description: Homerooms active
          type: boolean
      type: object
    CustomerSettingsResponse:
      description: Customer settings
      properties:
        homeRoomParentId:
          description: Homeroom Parent ID
          format: int64
          type: integer
        homeRoomParentName:
          description: Homeroom Parent Name
          type: string
        homeRoomQuota:
          description: Homeroom Quota in bytes
          format: int64
          type: integer
        homeRoomsActive:
          description: Homerooms active
          type: boolean
      required:
        - homeRoomsActive
      type: object
    DeleteDeletedNodesRequest:
      description: Request model for deleting nodes from recycle bin
      properties:
        deletedNodeIds:
          description: List of deleted node IDs
          items:
            description: List of deleted node IDs
            format: int64
            type: integer
          type: array
      required:
        - deletedNodeIds
      type: object
    DeleteDownloadSharesRequest:
      description: Request model for deleting Download Shares
      properties:
        shareIds:
          description: List of share IDs
          items:
            description: List of share IDs
            format: int64
            type: integer
          type: array
      required:
        - shareIds
      type: object
    DeleteNodesRequest:
      description: Request model for deleting nodes
      properties:
        nodeIds:
          description: List of node IDs
          items:
            description: List of node IDs
            format: int64
            type: integer
          type: array
      required:
        - nodeIds
      type: object
    DeleteUploadSharesRequest:
      description: Request model for deleting Upload Shares
      properties:
        shareIds:
          description: List of share IDs
          items:
            description: List of share IDs
            format: int64
            type: integer
          type: array
      required:
        - shareIds
      type: object
    DeletedNode:
      description: Deleted node information (Deleted node can be a folder or file)
      properties:
        accessedAt:
          description: Last access date
          format: date-time
          type: string
        classification:
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential



            (default: classification from parent room)
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        deletedAt:
          description: Deletion date
          format: date-time
          type: string
        deletedBy:
          $ref: "#/components/schemas/UserInfo"
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        id:
          description: Node ID
          format: int64
          type: integer
        isEncrypted:
          description: Encryption state
          type: boolean
        name:
          description: Node name
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        parentPath:
          description: |-
            Parent node path

            `/` if node is a root node (room)
          type: string
        size:
          description: Node size in byte
          format: int64
          type: integer
        type:
          description: Node type
          enum:
            - folder
            - file
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - name
        - parentId
        - parentPath
        - type
      type: object
    DeletedNodeSummary:
      description: Deleted node information (Deleted node can be a folder or file)
      properties:
        cntVersions:
          description: Number of deleted versions of this file
          format: int32
          type: integer
        firstDeletedAt:
          description: First deleted version
          format: date-time
          type: string
        lastDeletedAt:
          description: Last deleted version
          format: date-time
          type: string
        lastDeletedNodeId:
          description: Node ID of last deleted version
          format: int64
          type: integer
        name:
          description: Node name
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        parentPath:
          description: |-
            Parent node path

            `/` if node is a root node (room)
          type: string
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system
          format: date-time
          type: string
        type:
          description: Node type
          enum:
            - folder
            - file
          type: string
      required:
        - cntVersions
        - firstDeletedAt
        - lastDeletedAt
        - lastDeletedNodeId
        - name
        - parentId
        - parentPath
        - type
      type: object
    DeletedNodeSummaryList:
      description: List of deleted nodes
      properties:
        items:
          description: List of deleted nodes (summary)
          items:
            $ref: "#/components/schemas/DeletedNodeSummary"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    DeletedNodeVersionsList:
      description: List of deleted versions of nodes
      properties:
        items:
          description: List of deleted nodes
          items:
            $ref: "#/components/schemas/DeletedNode"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    DownloadShare:
      description: Download Share information
      properties:
        accessKey:
          description: Share access key to generate secure link
          type: string
        classification:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential



            (default: classification from parent room)
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        cntDownloads:
          description: Downloads counter (incremented on each download)
          format: int32
          type: integer
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        dataUrl:
          description: Path to shared download node
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        id:
          description: Share ID
          format: int64
          type: integer
        internalNotes:
          description: |-
            &#128640; Since v4.11.0

            Internal notes
          maximum: 255
          type: string
        isEncrypted:
          description: |-
            Encrypted share

            (this only applies to shared files, not folders)
          type: boolean
        isProtected:
          description: Is share protected by password
          type: boolean
        maxDownloads:
          description: Max allowed downloads
          format: int32
          type: integer
        name:
          description: Alias name
          type: string
        nodeId:
          description: Source node ID
          format: int64
          type: integer
        nodePath:
          description: Path to shared download node
          type: string
        nodeType:
          description: Node type
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        notifyCreator:
          description: |-
            &#128679; Deprecated since v4.20.0

            Notify creator on every download.
          type: boolean
        recipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient email addresses
          type: string
        showCreatorName:
          description: Show creator first and last name.
          type: boolean
        showCreatorUsername:
          description: Show creator email address.
          type: boolean
        smsRecipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient MSISDNs
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - accessKey
        - cntDownloads
        - createdAt
        - createdBy
        - id
        - name
        - nodeId
        - notifyCreator
      type: object
    DownloadShareLinkEmail:
      description: Request model for sending an email of a Download Share link
      properties:
        body:
          description: Notification email content
          type: string
        receiverLanguage:
          description: Language tag for messages to receiver
          type: string
        recipients:
          description: List of recipient email addresses
          items:
            description: List of recipient email addresses
            type: string
          type: array
      required:
        - body
        - recipients
      type: object
    DownloadShareList:
      description: List of Download Shares
      properties:
        items:
          description: List of Download Shares
          items:
            $ref: "#/components/schemas/DownloadShare"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    DownloadTokenGenerateResponse:
      description: Download URL
      properties:
        downloadUrl:
          description: Download URL
          type: string
        token:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.3.0

            Download token
          type: string
      required:
        - downloadUrl
        - token
      type: object
    EnableCustomerEncryptionRequest:
      description: Request model for enabling customer encryption
      properties:
        dataSpaceRescueKey:
          $ref: "#/components/schemas/UserKeyPairContainer"
        enableCustomerEncryption:
          description: Set `true` to enable encryption for this customer
          type: boolean
      required:
        - dataSpaceRescueKey
        - enableCustomerEncryption
      type: object
    EncryptRoomRequest:
      description: Request model for handling encryption settings for a room
      properties:
        dataRoomRescueKey:
          $ref: "#/components/schemas/UserKeyPairContainer"
        isEncrypted:
          description: Encryption state
          type: boolean
        useDataSpaceRescueKey:
          description: Use system emergency password (rescue key) for files in this room
          type: boolean
      required:
        - isEncrypted
      type: object
    EncryptionInfo:
      description: Encryption states
      properties:
        dataSpaceKeyState:
          description: DRACOON key state
          enum:
            - none
            - available
            - pending
          type: string
        roomKeyState:
          description: Room key state
          enum:
            - none
            - available
            - pending
          type: string
        userKeyState:
          description: User key state
          enum:
            - none
            - available
            - pending
          type: string
      required:
        - dataSpaceKeyState
        - roomKeyState
        - userKeyState
      type: object
    EncryptionPasswordPolicies:
      description: Encryption password policies
      properties:
        characterRules:
          $ref: "#/components/schemas/CharacterRules"
        minLength:
          description: Minimum number of characters a password must contain
          format: int32
          maximum: 1024
          minimum: 1
          type: integer
        rejectKeyboardPatterns:
          description: |-
            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)

            (min. 4 character pattern)
          type: boolean
        rejectUserInfo:
          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)
          type: boolean
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      type: object
    ErrorResponse:
      description: Error information
      properties:
        code:
          description: HTTP status code
          format: int32
          type: integer
        debugInfo:
          description: Debug information
          type: string
        errorCode:
          description: Internal error code
          format: int32
          type: integer
        message:
          description: HTTP status code description
          type: string
      required:
        - code
        - message
      type: object
    EventType:
      description: Event type information
      properties:
        id:
          description: ID
          format: int32
          type: integer
        name:
          description: Name
          type: string
        usableCustomerAdminWebhook:
          description: Usable as customer admin webhook
          type: boolean
        usableNodeWebhook:
          description: Usable as node webhook
          type: boolean
        usablePushNotification:
          description: Usable as push notification
          type: boolean
        usableTenantWebhook:
          description: Usable as tenant webhook
          type: boolean
      required:
        - id
        - name
        - usableCustomerAdminWebhook
        - usableNodeWebhook
        - usablePushNotification
        - usableTenantWebhook
      type: object
    EventTypeList:
      description: List of event types
      properties:
        items:
          description: List of event types
          items:
            $ref: "#/components/schemas/EventType"
          type: array
      required:
        - items
      type: object
    EventlogConfig:
      description: Eventlog settings
      properties:
        enabled:
          description: Is eventlog enabled?
          type: boolean
        logIpEnabled:
          description: Determines whether user’s IP address is logged.
          type: boolean
        retentionPeriod:
          description: |-
            Retention period (in days) of event log entries.

            After that period, all entries are deleted.

            Recommended value: 7
          format: int32
          type: integer
      type: object
    FailoverServer:
      description: Failover server information
      properties:
        failoverEnabled:
          description: RADIUS Failover Server is active
          type: boolean
        failoverIpAddress:
          description: |-
            RADIUS Failover Server IP Address

            Required if failover server is enabled.
          type: string
        failoverPort:
          description: |-
            RADIUS Failover Server Port

            Required if failover server is enabled.
          format: int32
          type: integer
      required:
        - failoverEnabled
        - failoverIpAddress
        - failoverPort
      type: object
    FileFileKeys:
      description: File key information
      properties:
        fileKeyContainer:
          $ref: "#/components/schemas/FileKeyContainer"
        id:
          description: File ID
          format: int64
          type: integer
      type: object
    FileKey:
      description: File key information
      properties:
        iv:
          description: Initial vector
          type: string
        key:
          description: Encryption key
          type: string
        tag:
          description: |-
            Authentication tag

            (needed with authenticated encryption)
          type: string
        version:
          description: Version
          type: string
      required:
        - iv
        - key
        - tag
        - version
      type: object
    FileKeyContainer:
      description: File key container
      properties:
        iv:
          description: Initial vector
          type: string
        key:
          description: Encryption key
          type: string
        tag:
          description: |-
            Authentication tag

            (needed with authenticated encryption)
          type: string
        version:
          description: Version
          type: string
      required:
        - iv
        - key
        - version
      type: object
    FirstAdminUser:
      description: First administrator user
      properties:
        authData:
          $ref: "#/components/schemas/UserAuthData"
        authMethods:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Authentication methods:

            * `sql`

            * `active_directory`

            * `radius`

            * `openid`

            use `authData` instead
          items:
            $ref: "#/components/schemas/UserAuthMethod"
          type: array
        email:
          description: "Email "
          type: string
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender
          type: string
        language:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Language ID or ISO 639-1 code
          type: string
        lastName:
          description: User last name
          type: string
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        needsToChangePassword:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Determines whether user has to change his / her initial password.

            use `authDate.mustChangePassword` instead
          type: boolean
        needsToChangeUserName:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            If `true`, the user must change the `userName` at the first login.
          type: boolean
        notifyUser:
          description: |-
            Notify user about his new account

            * default: `true` for `basic` auth type

            * default: `false` for `active_directory`, `openid` and `radius` auth types
          type: boolean
        password:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            An initial password may be preset

            use `authData` instead
          type: string
        phone:
          description: Phone number
          type: string
        receiverLanguage:
          description: IETF language tag
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
      required:
        - firstName
        - lastName
      type: object
    GeneralSettings:
      description: General settings
      properties:
        authTokenRestrictions:
          $ref: "#/components/schemas/AuthTokenRestrictions"
        cryptoEnabled:
          description: |-
            Activation status of client-side encryption.

            Can only be enabled once; disabling is not possible.
          type: boolean
        emailNotificationButtonEnabled:
          description: Enable email notification button
          type: boolean
        eulaEnabled:
          description: Each user has to confirm the EULA at first login.
          type: boolean
        hideLoginInputFields:
          description: |-
            &#128640; Since v4.13.0

            Defines if login fields should be hidden
          type: boolean
        mediaServerEnabled:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Determines if the media server is enabled
          type: boolean
        s3TagsEnabled:
          description: |-
            &#128640; Since v4.9.0

            Defines if S3 tags are enabled
          type: boolean
        sharePasswordSmsEnabled:
          description: Allow sending of share passwords via SMS
          type: boolean
        useS3Storage:
          description: Defines if S3 is used as storage backend
          type: boolean
        weakPasswordEnabled:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.14.0

            Allow weak password

            * A weak password has to fulfill the following criteria:

               * is at least 8 characters long

               * contains letters and numbers

            * A strong password has to fulfill the following criteria in addition:

               * contains at least one special character

               * contains upper and lower case characters

            Please use `GET /system/config/policies/passwords` API to get configured password policies.
          type: boolean
      type: object
    GeneralSettingsInfo:
      description: General settings
      properties:
        cryptoEnabled:
          description: |-
            Activation status of client-side encryption.

            Can only be enabled once; disabling is not possible.
          type: boolean
        emailNotificationButtonEnabled:
          description: Enable email notification button
          type: boolean
        eulaEnabled:
          description: Each user has to confirm the EULA at first login.
          type: boolean
        homeRoomParentId:
          description: |-
            &#128640; Since v4.10.0

            Homeroom Parent ID
          format: int64
          type: integer
        homeRoomsActive:
          description: |-
            &#128640; Since v4.10.0

            Homerooms active
          type: boolean
        mediaServerEnabled:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Determines if the media server is enabled
          type: boolean
        s3TagsEnabled:
          description: |-
            &#128640; Since v4.9.0

            Defines if S3 tags are enabled
          type: boolean
        sharePasswordSmsEnabled:
          description: Allow sending of share passwords via SMS
          type: boolean
        useS3Storage:
          description: Defines if S3 is used as storage backend
          type: boolean
        weakPasswordEnabled:
          description: |-
            Allow weak password

            * A weak password has to fulfill the following criteria:

               * is at least 8 characters long

               * contains letters and numbers

            * A strong password has to fulfill the following criteria in addition:

               * contains at least one special character

               * contains upper and lower case characters
          type: boolean
      type: object
    GeneratePresignedUrlsRequest:
      description: Request model for generating presigned URLs
      properties:
        firstPartNumber:
          description: "First part number of a range of requested presigned URLs (for S3 it is: `1`)"
          format: int32
          type: integer
        lastPartNumber:
          description: Last part number of a range of requested presigned URLs
          format: int32
          type: integer
        size:
          description: |-
            `Content-Length` header size for each presigned URL (in bytes)

            *MUST* be >= 5 MB except the last part.
          format: int64
          type: integer
      required:
        - firstPartNumber
        - lastPartNumber
        - size
      type: object
    Group:
      description: Group information
      properties:
        cntUsers:
          description: Amount of users
          format: int32
          type: integer
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        groupRoles:
          $ref: "#/components/schemas/RoleList"
        id:
          description: Unique identifier for the group
          format: int64
          type: integer
        name:
          description: Group name
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - cntUsers
        - createdAt
        - createdBy
        - id
        - name
      type: object
    GroupIds:
      description: List of group IDs
      properties:
        ids:
          description: List of group IDs
          items:
            description: List of group IDs
            format: int64
            type: integer
          type: array
      required:
        - ids
      type: object
    GroupInfo:
      description: Group information
      properties:
        id:
          description: Unique identifier for the group
          format: int64
          type: integer
        name:
          description: Group name
          type: string
      required:
        - id
        - name
      type: object
    GroupList:
      description: List of groups
      properties:
        items:
          description: List of groups
          items:
            $ref: "#/components/schemas/Group"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    GroupUser:
      description: User information
      properties:
        displayName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Display name

            use information from `UserInfo` instead to combine a display name
          type: string
        email:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Email

            use `email` from `UserInfo` instead
          type: string
        id:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Unique identifier for the user

            use `id` from `UserInfo` instead
          format: int64
          type: integer
        isMember:
          description: Determines whether user is a member of the group or not
          type: boolean
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            User login name
          type: string
        userInfo:
          $ref: "#/components/schemas/UserInfo"
      required:
        - displayName
        - email
        - id
        - isMember
        - login
        - userInfo
      type: object
    GroupUserList:
      description: List of users
      properties:
        items:
          description: List of group-user mappings
          items:
            $ref: "#/components/schemas/GroupUser"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    InfrastructureProperties:
      description: Infrastructure properties
      properties:
        isDracoonCloud:
          description: |-
            &#128640; Since v4.21.0

            Determines if the DRACOON Core is deployed in the cloud environment
          type: boolean
        mediaServerConfigEnabled:
          description: Determines if the media server is enabled
          type: boolean
        s3DefaultRegion:
          description: Suggested S3 Region
          type: string
        s3EnforceDirectUpload:
          description: |-
            &#128640; Since v4.15.0

            Enforce direct upload to S3
          type: boolean
        smsConfigEnabled:
          description: Allow sending of share passwords via SMS
          type: boolean
        tenantUuid:
          description: |-
            &#128640; Since v4.21.0

            Current tenant UUID
          type: string
      type: object
    KeyValueEntry:
      description: Key-value pair
      properties:
        key:
          description: Entry key
          type: string
        value:
          description: Entry value
          type: string
      required:
        - key
        - value
      type: object
    LastAdminGroupRoom:
      description: Room information
      properties:
        id:
          description: Room ID
          format: int64
          type: integer
        name:
          description: Room name
          type: string
        parentId:
          description: Parent room ID
          format: int64
          type: integer
        parentPath:
          description: |-
            Parent node path

            `/` if node is a root node (room)
          type: string
      required:
        - id
        - name
        - parentPath
      type: object
    LastAdminGroupRoomList:
      description: List of (last admin group) rooms
      properties:
        items:
          description: List of last admin rooms
          items:
            $ref: "#/components/schemas/LastAdminGroupRoom"
          type: array
      required:
        - items
      type: object
    LastAdminUserRoom:
      description: Room information
      properties:
        id:
          description: Room ID
          format: int64
          type: integer
        lastAdminInGroup:
          description: Determines whether user is last admin of a room due to being the last member of last admin group
          type: boolean
        lastAdminInGroupId:
          description: |-
            ID of the last admin group where the user is the only remaining member

            (returned only if `lastAdminInGroup` is `true`)
          format: int64
          type: integer
        name:
          description: Room name
          type: string
        parentId:
          description: Parent room ID
          format: int64
          type: integer
        parentPath:
          description: |-
            Parent node path

            `/` if node is a root node (room)
          type: string
      required:
        - id
        - lastAdminInGroup
        - name
        - parentPath
      type: object
    LastAdminUserRoomList:
      description: List of (last admin user) rooms
      properties:
        items:
          description: List of last admin rooms
          items:
            $ref: "#/components/schemas/LastAdminUserRoom"
          type: array
      required:
        - items
      type: object
    LogEvent:
      description: Log event information
      properties:
        attribute1:
          description: Attribute 1
          type: string
        attribute2:
          description: Attribute 2
          type: string
        attribute3:
          description: Attribute 3
          type: string
        authParentSource:
          description: Auth parent source ID
          type: string
        authParentTarget:
          description: Auth parent target ID
          type: string
        customerId:
          description: Unique identifier for the customer
          format: int64
          type: integer
        id:
          description: Event ID
          format: int64
          type: integer
        message:
          description: Event description
          type: string
        objectId1:
          description: Object ID 1
          format: int64
          type: integer
        objectId2:
          description: Object ID 2
          format: int64
          type: integer
        objectName1:
          description: Object name 1
          type: string
        objectName2:
          description: Object name 2
          type: string
        objectType1:
          description: Object type 1
          format: int32
          type: integer
        objectType2:
          description: Object type 2
          format: int32
          type: integer
        operationId:
          description: Operation type ID
          format: int32
          type: integer
        operationName:
          description: Operation name
          type: string
        status:
          description: |-
            Operation status:

            * `0` - Success

            * `2` - Error
          enum:
            - 0
            - 2
          format: int32
          type: integer
        time:
          description: Event timestamp
          format: date-time
          type: string
        userClient:
          description: Client
          type: string
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
        userIp:
          description: User IP
          type: string
        userName:
          description: Username
          type: string
      required:
        - id
        - message
        - time
        - userId
      type: object
    LogEventList:
      description: List of log events
      properties:
        items:
          description: List of log events
          items:
            $ref: "#/components/schemas/LogEvent"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    LogOperation:
      description: Log operation
      properties:
        id:
          description: Operation type ID
          format: int32
          type: integer
        isDeprecated:
          description: Determines whether log operation is deprecated or not
          type: boolean
        name:
          description: Operation name
          type: string
      required:
        - id
        - isDeprecated
        - name
      type: object
    LogOperationList:
      description: List of log operations
      properties:
        operationList:
          description: List of all log operations
          items:
            $ref: "#/components/schemas/LogOperation"
          type: array
      required:
        - operationList
      type: object
    LoginPasswordPolicies:
      description: Login password policies
      properties:
        characterRules:
          $ref: "#/components/schemas/CharacterRules"
        minLength:
          description: Minimum number of characters a password must contain
          format: int32
          maximum: 1024
          minimum: 1
          type: integer
        numberOfArchivedPasswords:
          description: |-
            Number of passwords to archive

            (must be between `0` and `10`; `0` means that password history is disabled)
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        passwordExpiration:
          $ref: "#/components/schemas/PasswordExpiration"
        rejectDictionaryWords:
          description: Determines whether a password must NOT contain word(s) from a dictionary
          type: boolean
        rejectKeyboardPatterns:
          description: |-
            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)

            (min. 4 character pattern)
          type: boolean
        rejectUserInfo:
          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)
          type: boolean
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
        userLockout:
          $ref: "#/components/schemas/UserLockout"
      required:
        - characterRules
        - minLength
        - numberOfArchivedPasswords
        - passwordExpiration
        - rejectDictionaryWords
        - rejectKeyboardPatterns
        - rejectUserInfo
        - updatedAt
        - updatedBy
        - userLockout
      type: object
    LoginRequest:
      description: Request model for performing an authentication
      properties:
        authType:
          description: Authentication methods
          enum:
            - basic
            - active_directory
            - radius
          type: string
        language:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Language ID or ISO 639-1 code
          type: string
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            User login name
          type: string
        password:
          description: Password
          type: string
        state:
          description: |-
            For RADIUS Access-Challenge

            If a `replyState` is returned, it must be included as `state` in the following request.
          type: string
        token:
          description: RADIUS Token
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
      required:
        - password
      type: object
    LoginResponse:
      description: Authentication token
      properties:
        token:
          description: Authentication token
          type: string
      required:
        - token
      type: object
    MissingKeysResponse:
      description: Missing keys information
      properties:
        files:
          description: List of file keys
          items:
            $ref: "#/components/schemas/FileFileKeys"
          type: array
        items:
          description: List of user ID and file ID mappings
          items:
            $ref: "#/components/schemas/UserIdFileIdItem"
          type: array
        range:
          $ref: "#/components/schemas/Range"
        users:
          description: List of user public keys
          items:
            $ref: "#/components/schemas/UserUserPublicKey"
          type: array
      type: object
    MoveNode:
      description: Moved node information
      properties:
        id:
          description: Source node ID
          format: int64
          type: integer
        name:
          description: New node name
          type: string
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      required:
        - id
      type: object
    MoveNodesRequest:
      description: Request model for moving nodes
      properties:
        items:
          description: List of nodes to be moved
          items:
            $ref: "#/components/schemas/MoveNode"
          type: array
        keepShareLinks:
          default: false
          description: Preserve Download Share Links and point them to the new node.
          type: boolean
        nodeIds:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.5.0

            Node IDs

            Please use `items` instead.
          items:
            deprecated: true
            description: |-
              Node IDs

              Please use `items` instead.
            format: int64
            type: integer
          type: array
        resolutionStrategy:
          default: autorename
          description: |-
            Node conflict resolution strategy:

            * `autorename`

            * `overwrite`

            * `fail`
          enum:
            - autorename
            - overwrite
            - fail
          type: string
      type: object
    NewCustomerRequest:
      description: Request model for creating a customer
      properties:
        activationCode:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.8.0

            Customer activation code string:

            * valid only for types `free` and `demo`

            * for `pay` customers it is empty
          type: string
        companyName:
          description: Company name
          type: string
        customerAttributes:
          $ref: "#/components/schemas/CustomerAttributes"
        customerContractType:
          description: Customer type
          enum:
            - demo
            - free
            - pay
          type: string
        firstAdminUser:
          $ref: "#/components/schemas/FirstAdminUser"
        isLocked:
          default: false
          description: |-
            Customer is locked:

            * `false` - unlocked

            * `true` - locked



            All users of this customer will be blocked and can not login anymore.
          type: boolean
        lockStatus:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Customer lock status:

            * `false` - unlocked

            * `true` - locked



            Please use `isLocked` instead.

            All users of this customer will be blocked and can not login anymore.
          type: boolean
        providerCustomerId:
          description: Provider customer ID
          type: string
        quotaMax:
          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
          format: int64
          type: integer
        trialDays:
          description: |-
            Number of days left for trial period (relevant only for type `demo`)

            (not used)
          format: int32
          type: integer
        userMax:
          description: Maximal number of users
          format: int32
          type: integer
        webhooksMax:
          description: |-
            &#128640; Since v4.19.0

            Maximal number of webhooks
          format: int64
          type: integer
      required:
        - customerContractType
        - firstAdminUser
        - quotaMax
        - userMax
      type: object
    NewCustomerResponse:
      description: Customer information
      properties:
        activationCode:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.8.0

            Customer activation code string:

            * valid only for types `free` and `demo`

            * for `pay` customers it is empty
          type: string
        companyName:
          description: Company name
          type: string
        createdAt:
          description: Creation date
          format: date-time
          type: string
        customerAttributes:
          $ref: "#/components/schemas/CustomerAttributes"
        customerContractType:
          description: Customer type
          enum:
            - demo
            - free
            - pay
          type: string
        customerUuid:
          description: |-
            &#128640; Since v4.21.0

            Customer UUID
          type: string
        firstAdminUser:
          $ref: "#/components/schemas/FirstAdminUser"
        id:
          description: Unique identifier for the customer
          format: int64
          type: integer
        isLocked:
          default: false
          description: |-
            Customer is locked:

            * `false` - unlocked

            * `true` - locked



            All users of this customer will be blocked and can not login anymore.
          type: boolean
        lockStatus:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Customer lock status:

            * `false` - unlocked

            * `true` - locked



            Please use `isLocked` instead.

            All users of this customer will be blocked and can not login anymore.
          type: boolean
        providerCustomerId:
          description: Provider customer ID
          type: string
        quotaMax:
          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
          format: int64
          type: integer
        trialDays:
          description: |-
            Number of days left for trial period (relevant only for type `demo`)

            (not used)
          format: int32
          type: integer
        userMax:
          description: Maximal number of users
          format: int32
          type: integer
        webhooksMax:
          description: |-
            &#128640; Since v4.19.0

            Maximal number of webhooks
          format: int64
          type: integer
      required:
        - companyName
        - customerContractType
        - customerUuid
        - firstAdminUser
        - lockStatus
        - quotaMax
        - userMax
      type: object
    Node:
      description: Node information (Node can be a room, folder or file)
      properties:
        authParentId:
          description: |-
            &#128640; Since v4.15.0

            Auth parent room ID
          format: int64
          type: integer
        branchVersion:
          description: Version of last change in this node or a node further down the tree.
          format: int64
          type: integer
        children:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            Child nodes list (if requested)

            (for rooms / folders only)
          items:
            $ref: "#/components/schemas/Node"
          type: array
        classification:
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        cntAdmins:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Number of admins (for rooms only)
          format: int32
          type: integer
        cntChildren:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Number of direct children

            (no recursion; for rooms / folders only)
          format: int32
          type: integer
        cntComments:
          description: Returns the number of comments of this node.
          format: int32
          type: integer
        cntDeletedVersions:
          description: |-
            Number of deleted versions of this file / folder

            (for rooms / folders only)
          format: int32
          type: integer
        cntDownloadShares:
          description: Returns the number of Download Shares of this node.
          format: int32
          type: integer
        cntFiles:
          description: |-
            &#128640; Since v4.11.0

            Amount of direct child files where this node is the parent node

            (no recursion; for rooms / folders only)
          format: int32
          type: integer
        cntFolders:
          description: |-
            &#128640; Since v4.11.0

            Amount of direct child folders where this node is the parent node

            (no recursion; for rooms / folders only)
          format: int32
          type: integer
        cntRooms:
          description: |-
            &#128640; Since v4.11.0

            Amount of direct child rooms where this node is the parent node

            (no recursion; for rooms only)
          format: int32
          type: integer
        cntUploadShares:
          description: Returns the number of Upload Shares of this node.
          format: int32
          type: integer
        cntUsers:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Number of users (for rooms only)
          format: int32
          type: integer
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        encryptionInfo:
          $ref: "#/components/schemas/EncryptionInfo"
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        fileType:
          description: File type / extension (for files only)
          type: string
        hasActivitiesLog:
          default: true
          description: Is activities log active (for rooms only)
          type: boolean
        hasRecycleBin:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            Is recycle bin active (for rooms only)

            Recycle bin is always on (disabling is not possible).
          type: boolean
        hash:
          description: MD5 hash of file
          type: string
        id:
          description: Node ID
          format: int64
          type: integer
        inheritPermissions:
          description: |-
            Inherit permissions from parent room

            (default: `false` if `parentId` is `0`; otherwise: `true`)
          type: boolean
        isBrowsable:
          description: |-
            &#128640; Since v4.11.0

            Determines whether node is browsable by client (for rooms only)
          type: boolean
        isEncrypted:
          description: Encryption state
          type: boolean
        isFavorite:
          description: Node is marked as favorite (for rooms / folders only)
          type: boolean
        mediaToken:
          description: Media server media token
          type: string
        mediaType:
          description: File media type (for files only)
          type: string
        name:
          description: Name
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        parentPath:
          description: |-
            Parent node path

            `/` if node is a root node (room)
          type: string
        permissions:
          $ref: "#/components/schemas/NodePermissions"
        quota:
          description: Quota in byte
          format: int64
          type: integer
        recycleBinRetentionPeriod:
          description: Retention period for deleted nodes in days
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        size:
          description: Node size in byte
          format: int64
          type: integer
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system
          format: date-time
          type: string
        type:
          description: Node type
          enum:
            - room
            - folder
            - file
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - id
        - name
        - type
      type: object
    NodeList:
      description: List of nodes
      properties:
        items:
          description: List of nodes
          items:
            $ref: "#/components/schemas/Node"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    NodeParent:
      description: Parent node
      properties:
        id:
          description: Node ID
          format: int64
          type: integer
        name:
          description: Node name
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        type:
          description: Node type
          type: string
      required:
        - id
        - name
        - type
      type: object
    NodeParentList:
      description: List of parent nodes
      properties:
        items:
          description: List of node parents
          items:
            $ref: "#/components/schemas/NodeParent"
          type: array
      type: object
    NodePermissions:
      description: Node permissions
      properties:
        change:
          description: "User / Group may update metadata of nodes: rename files and folders, change classification, etc."
          type: boolean
        create:
          description: User / Group may upload files, create folders and copy / move files to this room, overwriting is not possible.
          type: boolean
        delete:
          description: User / Group may overwrite and remove files / folders, move files from this room.
          type: boolean
        deleteRecycleBin:
          description: User / Group may permanently remove files / folders from the recycle bin.
          type: boolean
        manage:
          description: |-
            User / Group may grant all of the above permissions to other users and groups independently,

            may update room metadata and create / update / delete subordinary rooms, has all permissions.
          type: boolean
        manageDownloadShare:
          description: User / Group may create Download Shares for files and containers view all previously created Download Shares in this room.
          type: boolean
        manageUploadShare:
          description: User / Group may create Upload Shares for containers, view all previously created Upload Shares in this room.
          type: boolean
        read:
          description: User / Group may see all rooms, files and folders in the room and download everything, copy files from this room.
          type: boolean
        readRecycleBin:
          description: User / Group may look up files / folders in the recycle bin.
          type: boolean
        restoreRecycleBin:
          description: User / Group may restore files / folders from recycle bin - room permissions required.
          type: boolean
      required:
        - change
        - create
        - delete
        - deleteRecycleBin
        - manage
        - manageDownloadShare
        - manageUploadShare
        - read
        - readRecycleBin
        - restoreRecycleBin
      type: object
    NotificationChannel:
      description: Notification channel information
      properties:
        frequency:
          description: Channel frequency (aggregation window size in minutes)
          format: int64
          type: integer
        id:
          description: Channel ID
          format: int32
          type: integer
        isEnabled:
          description: Determines whether channel is enabled
          type: boolean
        name:
          description: Name
          type: string
        type:
          description: Channel type (only `EMAIL` available at the moment)
          type: string
      required:
        - frequency
        - id
        - isEnabled
        - name
        - type
      type: object
    NotificationChannelActivationRequest:
      description: Request model for switching notification channel status
      properties:
        channelId:
          description: Channel ID
          format: int32
          type: integer
        isEnabled:
          description: Determines whether channel is enabled
          type: boolean
      required:
        - channelId
        - isEnabled
      type: object
    NotificationChannelList:
      description: List of notification channels
      properties:
        items:
          description: List of notification channels
          items:
            $ref: "#/components/schemas/NotificationChannel"
          type: array
      required:
        - items
      type: object
    NotificationConfig:
      description: Notification configuration information
      properties:
        channelIds:
          description: List of notification channel IDs
          items:
            description: List of notification channel IDs
            format: int32
            type: integer
          type: array
        eventTypeName:
          description: Event type name
          type: string
        id:
          description: Notification configuration ID
          format: int64
          type: integer
        scopeId:
          description: Scope ID
          format: int32
          type: integer
      required:
        - channelIds
        - eventTypeName
        - id
        - scopeId
      type: object
    NotificationConfigChangeRequest:
      description: Request model for updating notification configuration
      properties:
        channelIds:
          description: |-
            List of notification channel IDs.

            Leave empty to disable notifications.
          items:
            description: |-
              List of notification channel IDs.

              Leave empty to disable notifications.
            format: int32
            type: integer
          type: array
      required:
        - channelIds
      type: object
    NotificationConfigList:
      description: List of notification configurations
      properties:
        items:
          description: List of notification configurations
          items:
            $ref: "#/components/schemas/NotificationConfig"
          type: array
      required:
        - items
      type: object
    NotificationScope:
      description: Notification scope information
      properties:
        id:
          description: Scope ID
          format: int32
          type: integer
        name:
          description: Name
          type: string
      required:
        - id
        - name
      type: object
    NotificationScopeList:
      description: List of notification scopes
      properties:
        items:
          description: List of notification scopes
          items:
            $ref: "#/components/schemas/NotificationScope"
          type: array
      required:
        - items
      type: object
    OAuthApproval:
      description: OAuth client approval information
      properties:
        clientId:
          description: ID of the OAuth client
          type: string
        clientName:
          description: Name, which is shown at the client configuration and authorization.
          type: string
        expiresAt:
          description: Expiration date of the approval
          format: date-time
          type: string
      required:
        - clientId
        - clientName
      type: object
    OAuthAuthorization:
      description: OAuth authorization
      properties:
        clientId:
          description: ID of the OAuth client
          type: string
        clientName:
          description: Name, which is shown at the client configuration and authorization.
          type: string
        createdAt:
          description: |-
            &#128640; Since v4.13.0

            Creation date of the authorization
          format: date-time
          type: string
        expiresAt:
          description: Expiration date of the authorization
          format: date-time
          type: string
        id:
          description: |-
            &#128640; Since v4.12.0

            ID of the OAuth authorization
          format: int64
          type: integer
        isCurrentAuthorization:
          description: |-
            &#128640; Since v4.25.0

            Determines whether authorization matches the one from Authorization Header
          type: boolean
        isStandard:
          description: |-
            &#128640; Since v4.12.0

            Determines whether client is a standard client.
          type: boolean
        usedAt:
          description: |-
            &#128640; Since v4.13.0

            Usage date of the authorization

            (Time of last usage.)
          format: date-time
          type: string
        userAgentCategory:
          description: |-
            &#128640; Since v4.12.0

            User agent category.
          enum:
            - browser
            - native
            - unknown
          type: string
        userAgentInfo:
          description: |-
            &#128640; Since v4.12.0

            User agent info.
          type: string
        userAgentOs:
          description: |-
            &#128640; Since v4.12.0

            User agent OS.
          type: string
        userAgentType:
          description: |-
            &#128640; Since v4.12.0

            User agent type.
          type: string
      required:
        - clientId
        - clientName
        - userAgentCategory
      type: object
    OAuthClient:
      description: OAuth client information
      properties:
        accessTokenValidity:
          description: Validity of the access token in seconds.
          format: int32
          type: integer
        approvalValidity:
          description: |-
            &#128640; Since v4.22.0

            Validity of the approval interval in seconds.
          format: int32
          type: integer
        clientId:
          description: ID of the OAuth client
          type: string
        clientName:
          description: Name, which is shown at the client configuration and authorization.
          type: string
        clientSecret:
          description: Secret, which client uses at authentication.
          type: string
        clientType:
          description: Determines whether client is a confidential or public client.
          enum:
            - confidential
            - public
          type: string
        grantTypes:
          description: |-
            Authorized grant types

            * `authorization_code`

            * `implicit`

            * `password`

            * `client_credentials`

            * `refresh_token`



            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
          enum:
            - authorization_code
            - client_credentials
            - implicit
            - password
            - refresh_token
          items:
            description: |-
              Authorized grant types

              * `authorization_code`

              * `implicit`

              * `password`

              * `client_credentials`

              * `refresh_token`



              cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
            enum:
              - authorization_code
              - client_credentials
              - implicit
              - password
              - refresh_token
            type: string
          type: array
        isEnabled:
          description: Determines whether client is enabled.
          type: boolean
        isExternal:
          description: Determines whether client is an external client.
          type: boolean
        isStandard:
          description: Determines whether client is a standard client.
          type: boolean
        redirectUris:
          description: URIs, to which a user is redirected after authorization.
          items:
            description: URIs, to which a user is redirected after authorization.
            type: string
          type: array
        refreshTokenValidity:
          description: Validity of the refresh token in seconds.
          format: int32
          type: integer
      required:
        - clientId
        - grantTypes
      type: object
    ObjectExpiration:
      description: Expiration information
      properties:
        enableExpiration:
          description: enabled / disabled
          type: boolean
        expireAt:
          description: Expiration date
          format: date-time
          type: string
      required:
        - enableExpiration
      type: object
    OpenIdAuthInfo:
      description: List of OpenID Connect providers
      properties:
        items:
          description: List of available OpenID Connect identity providers
          items:
            $ref: "#/components/schemas/OpenIdProvider"
          type: array
      required:
        - items
      type: object
    OpenIdAuthResources:
      description: List of OpenID Connect providers
      properties:
        openIdProviders:
          description: List of available OpenID Connect identity providers
          items:
            $ref: "#/components/schemas/OpenIdProvider"
          type: array
      required:
        - openIdProviders
      type: object
    OpenIdIdpConfig:
      description: OpenID Connect IDP configuration
      properties:
        authorizationEndPointUrl:
          description: URL of the authorization endpoint
          type: string
        clientId:
          description: ID of the OpenID client
          type: string
        clientSecret:
          description: Secret, which client uses at authentication.
          type: string
        fallbackMappingClaim:
          description: Name of the claim which is used for the user mapping fallback.
          type: string
        flow:
          description: |-
            &#128640; Since v4.11.0

            Flow, which is used at authentication
          enum:
            - authorization_code
            - hybrid
          type: string
        id:
          description: ID
          format: int32
          type: integer
        issuer:
          description: |-
            Issuer identifier of the IDP

            The value is a case sensitive URL.
          type: string
        jwksEndPointUrl:
          description: URL of the JWKS endpoint
          type: string
        mappingClaim:
          description: Name of the claim which is used for the user mapping.
          type: string
        name:
          description: Name of the IDP
          type: string
        pkceChallengeMethod:
          description: |-
            PKCE code challenge method.

            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
          type: string
        pkceEnabled:
          default: false
          description: |-
            Determines whether PKCE is enabled.

            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
          type: boolean
        redirectUris:
          description: URIs, to which a user is redirected after authorization.
          items:
            description: URIs, to which a user is redirected after authorization.
            type: string
          type: array
        scopes:
          description: |-
            List of requested scopes

            Usually `openid` and the names of the requested claims.
          items:
            description: |-
              List of requested scopes

              Usually `openid` and the names of the requested claims.
            type: string
          type: array
        tokenEndPointUrl:
          description: URL of the token endpoint
          type: string
        userImportEnabled:
          default: false
          description: |-
            Determines if a DRACOON account is automatically created for a new user

            who successfully logs on with his / her AD / IDP account.
          type: boolean
        userImportGroup:
          description: |-
            User group that is assigned to users who are created by automatic import.

            Reset with `0`
          format: int64
          type: integer
        userInfoEndPointUrl:
          description: URL of the user info endpoint
          type: string
        userInfoSource:
          description: |-
            &#128640; Since v4.23.0

            Source, which is used to get user information at the import or update of a user.
          enum:
            - user_info_endpoint
            - id_token
          type: string
        userManagementUrl:
          description: |-
            URL of the user management UI.

            Use empty string to remove.
          type: string
        userUpdateEnabled:
          default: false
          description: |-
            Determines if the DRACOON account is updated with data from AD / IDP.

            For OpenID Connect, the scopes `email` and `profile` are needed.
          type: boolean
      required:
        - id
      type: object
    OpenIdProvider:
      description: OpenID Connect provider information
      properties:
        id:
          description: ID
          format: int32
          type: integer
        isGlobalAvailable:
          description: Is available for all customers
          type: boolean
        issuer:
          description: |-
            Issuer identifier of the IDP

            The value is a case sensitive URL.
          type: string
        mappingClaim:
          description: Name of the claim which is used for the user mapping.
          type: string
        name:
          description: Name of the IDP
          type: string
        userManagementUrl:
          description: |-
            URL of the user management UI.

            Use empty string to remove.
          type: string
      required:
        - id
        - isGlobalAvailable
        - issuer
        - mappingClaim
        - name
      type: object
    PasswordExpiration:
      description: Password expiration information
      properties:
        enabled:
          description: Determines whether password expiration is enabled
          type: boolean
        maxPasswordAge:
          description: Maximum allowed password age (in days)
          format: int32
          type: integer
      required:
        - enabled
      type: object
    PasswordPoliciesConfig:
      description: Set of password policies
      properties:
        encryptionPasswordPolicies:
          $ref: "#/components/schemas/EncryptionPasswordPolicies"
        loginPasswordPolicies:
          $ref: "#/components/schemas/LoginPasswordPolicies"
        sharesPasswordPolicies:
          $ref: "#/components/schemas/SharesPasswordPolicies"
      type: object
    PasswordPolicyViolationResponse:
      description: List of violated password policies
      properties:
        code:
          description: HTTP status code
          format: int32
          type: integer
        debugInfo:
          description: Debug information
          type: string
        errorCode:
          description: Internal error code
          format: int32
          type: integer
        message:
          description: HTTP status code description
          type: string
        violatedPasswordPolicies:
          description: List of violated password policies
          items:
            $ref: "#/components/schemas/ViolatedPasswordPolicy"
          type: array
      required:
        - code
        - message
      type: object
    PendingAssignment:
      description: Pending assignment information
      properties:
        groupId:
          description: Unique identifier for the group
          format: int64
          type: integer
        roomId:
          description: Room ID
          format: int64
          type: integer
        roomName:
          description: Room name
          type: string
        state:
          description: |-
            Acceptance state:

            * `ACCEPTED`

            * `WAITING`

            * `DENIED`
          enum:
            - ACCEPTED
            - DENIED
            - WAITING
          type: string
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
      required:
        - groupId
        - roomId
        - roomName
        - state
        - userId
      type: object
    PendingAssignmentData:
      description: Pending assignment information
      properties:
        groupId:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Unique identifier for the group
          format: int64
          type: integer
        groupInfo:
          $ref: "#/components/schemas/GroupInfo"
        pendingGroupData:
          $ref: "#/components/schemas/PendingGroupData"
        pendingUserData:
          $ref: "#/components/schemas/PendingUserData"
        roomId:
          description: Room ID
          format: int64
          type: integer
        roomName:
          description: Room name
          type: string
        state:
          description: |-
            Acceptance state:

            * `ACCEPTED`

            * `WAITING`

            * `DENIED`
          enum:
            - ACCEPTED
            - DENIED
            - WAITING
          type: string
        userId:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Unique identifier for the user
          format: int64
          type: integer
        userInfo:
          $ref: "#/components/schemas/UserInfo"
      required:
        - groupInfo
        - pendingGroupData
        - pendingUserData
        - roomId
        - roomName
        - state
        - userInfo
      type: object
    PendingAssignmentList:
      description: List of pending assignments
      properties:
        items:
          description: List of pending assignment information
          items:
            $ref: "#/components/schemas/PendingAssignmentData"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
      type: object
    PendingAssignmentsRequest:
      description: Request model for handling pending assignments
      properties:
        items:
          description: List of pending assignments
          items:
            $ref: "#/components/schemas/PendingAssignment"
          type: array
      required:
        - items
      type: object
    PendingGroupData:
      deprecated: true
      description: Pending group information
      properties:
        id:
          description: |-
            Unique identifier for the group

            use `id` from `GroupInfo` instead
          format: int64
          type: integer
        name:
          description: |-
            Group name

            use `name` from `GroupInfo` instead
          type: string
      required:
        - id
        - name
      type: object
    PendingUserData:
      deprecated: true
      description: Pending user information
      properties:
        displayName:
          description: |-
            Display name

            use information from `UserInfo` instead to combine a display name
          type: string
        email:
          description: |-
            Email

            use `email` from `UserInfo` instead
          type: string
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        login:
          description: User login name
          type: string
      required:
        - displayName
        - email
        - id
        - login
      type: object
    PresignedUrl:
      description: Presigned URL information
      properties:
        partNumber:
          description: Corresponding part number
          format: int32
          type: integer
        url:
          description: S3 presigned URL
          type: string
      required:
        - partNumber
        - url
      type: object
    PresignedUrlList:
      description: List of generated presigned URLs
      properties:
        urls:
          description: List of S3 presigned URLs
          items:
            $ref: "#/components/schemas/PresignedUrl"
          type: array
      required:
        - urls
      type: object
    PrivateKeyContainer:
      description: Private key container
      properties:
        createdAt:
          description: |-
            &#128640; Since v4.24.0

            Creation date
          format: date-time
          type: string
        createdBy:
          description: |-
            &#128640; Since v4.24.0

            Created by user
          format: int64
          type: integer
        expireAt:
          description: Expiration date
          format: date-time
          type: string
          writeOnly: true
        privateKey:
          description: Private key
          type: string
        version:
          description: Version
          type: string
      required:
        - privateKey
        - version
      type: object
    ProfileAttributes:
      description: User profile attributes
      properties:
        items:
          description: List of key-value pairs
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    ProfileAttributesRequest:
      description: Request model for setting user profile attributes
      properties:
        items:
          description: List of key-value pairs
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
      required:
        - items
      type: object
    PublicDownloadShare:
      description: Download Share information
      properties:
        createdAt:
          description: Creation date
          format: date-time
          type: string
        creatorName:
          description: Creator name
          type: string
        creatorUsername:
          description: Creator username
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        fileKey:
          $ref: "#/components/schemas/FileKey"
        fileName:
          description: File name
          type: string
        hasDownloadLimit:
          description: |-
            &#128640; Since v4.11.0

            Determines whether Download Share has a limit for amount of downloads
          type: boolean
        isEncrypted:
          description: Encryption state
          type: boolean
        isProtected:
          description: Is share protected by password
          type: boolean
        limitReached:
          description: Downloads limit reached
          type: boolean
        mediaType:
          description: |-
            &#128640; Since v4.11.0

            * `application/zip` (for folders and rooms)

            * actual file media type (for files only)
          type: string
        name:
          description: Share display name (alias name)
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        privateKeyContainer:
          $ref: "#/components/schemas/PrivateKeyContainer"
        size:
          description: File size or container size not compressed (in bytes)
          format: int64
          type: integer
      required:
        - createdAt
        - creatorName
        - fileName
        - hasDownloadLimit
        - isProtected
        - limitReached
        - mediaType
        - size
      type: object
    PublicDownloadTokenGenerateRequest:
      description: Request model for generating download URL
      properties:
        password:
          description: Password (only for password-protected shares)
          type: string
      type: object
    PublicDownloadTokenGenerateResponse:
      description: Download URL
      properties:
        downloadUrl:
          description: Download URL
          type: string
        token:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.3.0

            Download token
          type: string
      required:
        - token
      type: object
    PublicKeyContainer:
      description: Public key container
      properties:
        createdAt:
          description: |-
            &#128640; Since v4.24.0

            Creation date
          format: date-time
          type: string
        createdBy:
          description: |-
            &#128640; Since v4.24.0

            Created by user
          format: int64
          type: integer
        expireAt:
          description: Expiration date
          format: date-time
          type: string
          writeOnly: true
        publicKey:
          description: Public key
          type: string
        version:
          description: Version
          type: string
      required:
        - publicKey
        - version
      type: object
    PublicUploadShare:
      description: Upload Share information
      properties:
        createdAt:
          description: Creation date
          format: date-time
          type: string
        creatorName:
          description: |-
            &#128640; Since v4.11.0

            Creator name
          type: string
        creatorUsername:
          description: |-
            &#128640; Since v4.11.0

            Creator username
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        isEncrypted:
          description: Encryption state
          type: boolean
        isProtected:
          description: Is share protected by password
          type: boolean
        maxSize:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Maximal total size of uploaded files (in bytes)
          format: double
          type: number
        maxSlots:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Maximal amount of files to upload
          format: int32
          type: integer
        name:
          description: Share display name (alias name)
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        remainingSize:
          description: Remaining size
          format: int64
          type: integer
        remainingSlots:
          description: Remaining slots
          format: int32
          type: integer
        showUploadedFiles:
          description: Allow display of already uploaded files
          type: boolean
        uploadedFiles:
          description: List of (public) uploaded files
          items:
            $ref: "#/components/schemas/PublicUploadedFileData"
          type: array
        userUserPublicKeyList:
          $ref: "#/components/schemas/UserUserPublicKeyList"
      required:
        - createdAt
        - creatorName
        - isProtected
        - maxSlots
      type: object
    PublicUploadedFileData:
      description: File information
      properties:
        createdAt:
          description: Creation date
          format: date-time
          type: string
        hash:
          description: Hash value of transferred file
          type: string
        name:
          description: Name
          type: string
        size:
          description: File size in byte
          format: int64
          type: integer
      required:
        - createdAt
        - name
        - size
      type: object
    RadiusChallengeResponse:
      description: RADIUS challenge reply
      properties:
        code:
          description: HTTP status code
          format: int32
          type: integer
        debugInfo:
          description: Debug information
          type: string
        errorCode:
          description: Internal error code
          format: int32
          type: integer
        message:
          description: HTTP status code description
          type: string
        replyMessage:
          description: |-
            RADIUS Reply-Message

            Instruction how to handle the situation.
          type: string
        replyState:
          description: |-
            For RADIUS Access-Challenge

            If a `replyState` is returned, it must be included as `state` in the following request.
          type: string
      required:
        - code
        - message
        - replyMessage
        - replyState
      type: object
    RadiusConfig:
      description: RADIUS configuration
      properties:
        failoverServer:
          $ref: "#/components/schemas/FailoverServer"
        ipAddress:
          description: RADIUS Server IP Address
          type: string
        otpPinFirst:
          default: true
          description: Sequence order of concatenated PIN and one-time token
          type: boolean
        port:
          description: RADIUS Server Port
          format: int32
          type: integer
        sharedSecret:
          description: Shared Secret to access the RADIUS server
          type: string
      required:
        - ipAddress
        - otpPinFirst
        - port
        - sharedSecret
      type: object
    RadiusConfigCreateRequest:
      description: Request model for creating a RADIUS configuration
      properties:
        failoverServer:
          $ref: "#/components/schemas/FailoverServer"
        ipAddress:
          description: RADIUS Server IP Address
          type: string
        otpPinFirst:
          default: true
          description: Sequence order of concatenated PIN and one-time token
          type: boolean
        port:
          description: RADIUS Server Port
          format: int32
          type: integer
        sharedSecret:
          description: Shared Secret to access the RADIUS server
          type: string
      required:
        - ipAddress
        - port
        - sharedSecret
      type: object
    RadiusConfigUpdateRequest:
      description: Request model for updating a RADIUS configuration
      properties:
        failoverServer:
          $ref: "#/components/schemas/FailoverServer"
        ipAddress:
          description: RADIUS Server IP Address
          type: string
        otpPinFirst:
          default: true
          description: Sequence order of concatenated PIN and one-time token
          type: boolean
        port:
          description: RADIUS Server Port
          format: int32
          type: integer
        sharedSecret:
          description: Shared Secret to access the RADIUS server
          type: string
      type: object
    Range:
      description: Range information
      properties:
        limit:
          description: Range limit. Maximum 500.
          format: int64
          type: integer
        offset:
          description: Range offset
          format: int64
          type: integer
        total:
          description: Total items available
          format: int64
          type: integer
      required:
        - limit
        - offset
        - total
      type: object
    RecoverUserNameRequest:
      description: Recover usernames for email
      properties:
        creatorLanguage:
          description: IETF language tag
          type: string
        email:
          description: "Email "
          type: string
      required:
        - email
      type: object
    ResetPasswordRequest:
      description: Request model for reseting user's login password
      properties:
        creatorLanguage:
          description: IETF language tag
          type: string
        language:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Language ID or ISO 639-1 code
          type: string
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
      type: object
    ResetPasswordTokenValidateResponse:
      description: Password reset information
      properties:
        allowSystemGlobalWeakPassword:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.14.0

            Allow weak password

            Please use `loginPasswordPolicies` instead
          type: boolean
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender
          type: string
        lastName:
          description: User last name
          type: string
        loginPasswordPolicies:
          $ref: "#/components/schemas/LoginPasswordPolicies"
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
      required:
        - firstName
        - lastName
      type: object
    ResetPasswordWithTokenRequest:
      description: New password
      properties:
        password:
          description: New password
          type: string
      required:
        - password
      type: object
    RestoreDeletedNodesRequest:
      description: Request model for restoring deleted nodes
      properties:
        deletedNodeIds:
          description: List of deleted node IDs
          items:
            description: List of deleted node IDs
            format: int64
            type: integer
          type: array
        keepShareLinks:
          default: false
          description: Preserve Download Share Links and point them to the new node.
          type: boolean
        parentId:
          description: |-
            Node parent ID

            (default: previous parent ID)
          format: int64
          type: integer
        resolutionStrategy:
          default: autorename
          description: |-
            Node conflict resolution strategy:

            * `autorename`

            * `overwrite`

            * `fail`
          enum:
            - autorename
            - overwrite
            - fail
          type: string
      required:
        - deletedNodeIds
      type: object
    Right:
      description: Right information
      properties:
        description:
          description: Right description
          type: string
        id:
          description: Unique identifier for the right
          format: int32
          type: integer
        name:
          description: Right (unique) name
          type: string
      required:
        - description
        - id
        - name
      type: object
    Role:
      description: Role information
      properties:
        description:
          description: Role description
          type: string
        id:
          description: Unique identifier for the role
          format: int32
          type: integer
        items:
          description: List of reachable right over role
          items:
            $ref: "#/components/schemas/Right"
          type: array
        name:
          description: Role (unique) name
          type: string
      required:
        - description
        - id
        - name
      type: object
    RoleGroup:
      description: Group information
      properties:
        id:
          description: Unique identifier for the group
          format: int64
          type: integer
        isMember:
          description: Is group member of the role
          type: boolean
        name:
          description: Group name
          type: string
      required:
        - id
        - isMember
        - name
      type: object
    RoleGroupList:
      description: List of groups with assigned role
      properties:
        items:
          description: List of role-group mappings
          items:
            $ref: "#/components/schemas/RoleGroup"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    RoleList:
      description: List of roles
      properties:
        items:
          description: List of roles
          items:
            $ref: "#/components/schemas/Role"
          type: array
      required:
        - items
      type: object
    RoleUser:
      description: User information
      properties:
        displayName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Display name

            use information from `UserInfo` instead to combine a display name
          type: string
        id:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Unique identifier for the user

            use `id` from `UserInfo` instead
          format: int64
          type: integer
        isMember:
          description: Is user member of the role
          type: boolean
        userInfo:
          $ref: "#/components/schemas/UserInfo"
      required:
        - displayName
        - id
        - isMember
        - userInfo
      type: object
    RoleUserList:
      description: List of users with assigned role
      properties:
        items:
          description: List of role-user mappings
          items:
            $ref: "#/components/schemas/RoleUser"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    RoomData:
      description: Room information
      properties:
        children:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            List of rooms, where this room is a parent (if exist)
          items:
            $ref: "#/components/schemas/RoomData"
          type: array
        cntAdmins:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Number of admins (for rooms only)
          format: int32
          type: integer
        cntDownloadShares:
          description: Returns the number of Download Shares of this node.
          format: int32
          type: integer
        cntUploadShares:
          description: Returns the number of Upload Shares of this node.
          format: int32
          type: integer
        cntUsers:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.2.0

            Number of users (for rooms only)
          format: int32
          type: integer
        createdAt:
          description: Expiration date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        hasRecycleBin:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.10.0

            Is recycle bin active (for rooms only)

            Recycle bin is always on (disabling is not possible).
          type: boolean
        id:
          description: Room ID
          format: int64
          type: integer
        isEncrypted:
          description: Encryption state
          type: boolean
        isFavorite:
          description: Node is marked as favorite (for rooms / folders only)
          type: boolean
        isGranted:
          description: Is user granted room permissions
          type: boolean
        name:
          description: Name
          type: string
        parentId:
          description: Parent node ID (room or folder)
          format: int64
          type: integer
        permissions:
          $ref: "#/components/schemas/NodePermissions"
        quota:
          description: Quota in byte
          format: int64
          type: integer
        recycleBinRetentionPeriod:
          description: Retention period for deleted nodes in days
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        size:
          description: Room size
          format: int64
          type: integer
        type:
          description: Node type
          enum:
            - room
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - hasRecycleBin
        - id
        - isEncrypted
        - isGranted
        - name
        - recycleBinRetentionPeriod
      type: object
    RoomGroup:
      description: Group information
      properties:
        id:
          description: Unique identifier for the group
          format: int64
          type: integer
        isGranted:
          description: Is user granted room permissions
          type: boolean
        name:
          description: Group name
          type: string
        newGroupMemberAcceptance:
          default: autoallow
          description: |-
            Behaviour when new users are added to the group:

            * `autoallow`

            * `pending`



            Only relevant if `adminGroupIds` has items.
          enum:
            - autoallow
            - pending
          type: string
        permissions:
          $ref: "#/components/schemas/NodePermissions"
      required:
        - id
        - isGranted
        - name
      type: object
    RoomGroupList:
      description: List of groups
      properties:
        items:
          description: List of room-group mappings
          items:
            $ref: "#/components/schemas/RoomGroup"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    RoomGroupsAddBatchRequest:
      description: Request model for granting group(s) to the room
      properties:
        items:
          description: List of room-group mappings
          items:
            $ref: "#/components/schemas/RoomGroupsAddBatchRequestItem"
          type: array
      required:
        - items
      type: object
    RoomGroupsAddBatchRequestItem:
      description: Request item model for granting group to the room
      properties:
        id:
          description: Unique identifier for the group
          format: int64
          type: integer
        newGroupMemberAcceptance:
          default: autoallow
          description: |-
            Behaviour when new users are added to the group:

            * `autoallow`

            * `pending`



            Only relevant if `adminGroupIds` has items.
          enum:
            - autoallow
            - pending
          type: string
        permissions:
          $ref: "#/components/schemas/NodePermissions"
      required:
        - id
        - permissions
      type: object
    RoomGroupsDeleteBatchRequest:
      description: Request model for revoking group(s) from the room
      properties:
        ids:
          description: List of group IDs
          items:
            description: List of group IDs
            format: int64
            type: integer
          type: array
      required:
        - ids
      type: object
    RoomTreeDataList:
      description: List of rooms
      properties:
        items:
          description: List of room data information
          items:
            $ref: "#/components/schemas/RoomData"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    RoomUser:
      description: User information
      properties:
        displayName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Display name

            use information from `UserInfo` instead to combine a display name
          type: string
        email:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Email

            use `email` from `UserInfo` instead
          type: string
        id:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Unique identifier for the user

            use `id` from `UserInfo` instead
          format: int64
          type: integer
        isGranted:
          description: Is user granted room permissions
          type: boolean
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            User login name
          type: string
        permissions:
          $ref: "#/components/schemas/NodePermissions"
        publicKeyContainer:
          $ref: "#/components/schemas/PublicKeyContainer"
        userInfo:
          $ref: "#/components/schemas/UserInfo"
      required:
        - displayName
        - email
        - id
        - isGranted
        - login
        - userInfo
      type: object
    RoomUserList:
      description: List of users
      properties:
        items:
          description: List of room-user mappings
          items:
            $ref: "#/components/schemas/RoomUser"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    RoomUsersAddBatchRequest:
      description: Request model for granting user(s) to the room
      properties:
        items:
          description: List of room-user mappings
          items:
            $ref: "#/components/schemas/RoomUsersAddBatchRequestItem"
          type: array
      required:
        - items
      type: object
    RoomUsersAddBatchRequestItem:
      description: Request item model for granting user to the room
      properties:
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        permissions:
          $ref: "#/components/schemas/NodePermissions"
      required:
        - id
        - permissions
      type: object
    RoomUsersDeleteBatchRequest:
      description: Request model for revoking user(s) from the room
      properties:
        ids:
          description: List of user IDs
          items:
            description: List of user IDs
            format: int64
            type: integer
          type: array
      required:
        - ids
      type: object
    RoomWebhook:
      description: Webhook information
      properties:
        isAssigned:
          description: Determines whether webhook is assigned to the room.
          type: boolean
        webhook:
          $ref: "#/components/schemas/Webhook"
      required:
        - isAssigned
        - webhook
      type: object
    RoomWebhookAssignment:
      description: Request model for handling webhook assignments
      properties:
        isAssigned:
          description: Determines whether webhook is assigned to the room.
          type: boolean
        webhookId:
          description: Webhook ID
          format: int64
          type: integer
      required:
        - isAssigned
        - webhookId
      type: object
    RoomWebhookList:
      description: List of webhooks
      properties:
        items:
          description: List of webhooks
          items:
            $ref: "#/components/schemas/RoomWebhook"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    S3Config:
      description: S3 configuration
      properties:
        accessKeyDefined:
          description: Determines whether Access Key ID is defined
          type: boolean
        bucketName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            S3 bucket name

            use `bucketUrl` instead
          type: string
        bucketUrl:
          description: S3 object storage bucket URL
          type: string
        endpointUrl:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            S3 object storage endpoint URL

            use `bucketUrl` instead
          type: string
        region:
          description: S3 region
          type: string
        secretKeyDefined:
          description: Determines whether Access Secret Key is defined
          type: boolean
      required:
        - accessKeyDefined
        - bucketUrl
        - secretKeyDefined
      type: object
    S3ConfigCreateRequest:
      description: Request model for creating a S3 configuration
      properties:
        accessKey:
          description: Access Key ID
          type: string
        bucketName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            S3 bucket name

            use `bucketUrl` instead
          type: string
        bucketUrl:
          description: S3 object storage bucket URL
          type: string
        endpointUrl:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            S3 object storage endpoint URL

            use `bucketUrl` instead
          type: string
        region:
          description: S3 region
          type: string
        secretKey:
          description: Secret Access Key
          type: string
      required:
        - accessKey
        - secretKey
      type: object
    S3ConfigUpdateRequest:
      description: Request model for updating a S3 configuration
      properties:
        accessKey:
          description: Access Key ID
          type: string
        bucketName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            S3 bucket name

            use `bucketUrl` instead
          type: string
        bucketUrl:
          description: S3 object storage bucket URL
          type: string
        endpointUrl:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            S3 object storage endpoint URL

            use `bucketUrl` instead
          type: string
        region:
          description: S3 region
          type: string
        secretKey:
          description: Secret Access Key
          type: string
      type: object
    S3FileUploadPart:
      description: S3 file upload part information
      properties:
        partEtag:
          description: Corresponding part ETag
          type: string
        partNumber:
          description: Corresponding part number
          format: int32
          type: integer
      required:
        - partEtag
        - partNumber
      type: object
    S3FileUploadStatus:
      description: S3 file upload status information
      properties:
        errorDetails:
          $ref: "#/components/schemas/ErrorResponse"
        node:
          $ref: "#/components/schemas/Node"
        status:
          description: |-
            S3 file upload status:

            * `transfer` - upload in progress

            * `finishing` - completing file upload

            * `done` - file upload successully done

            * `error` - an error occurred while file upload
          type: string
      required:
        - status
      type: object
    S3ShareUploadStatus:
      description: S3 file upload status information
      properties:
        errorDetails:
          $ref: "#/components/schemas/ErrorResponse"
        fileName:
          description: File name
          type: string
        size:
          description: File size in byte
          format: int64
          type: integer
        status:
          description: |-
            S3 file upload status:

            * `transfer` - upload in progress

            * `finishing` - completing file upload

            * `done` - file upload successully done

            * `error` - an error occurred while file upload
          type: string
      required:
        - fileName
        - status
      type: object
    S3Tag:
      description: S3 tag information
      properties:
        id:
          description: S3 tag ID
          format: int64
          type: integer
        isMandatory:
          default: false
          description: Determines whether S3 is mandatory or not
          type: boolean
        key:
          description: S3 tag key
          type: string
        value:
          description: S3 tag value
          type: string
      type: object
    S3TagCreateRequest:
      description: Request model for creating a S3 tag
      properties:
        isMandatory:
          default: false
          description: Determines whether S3 is mandatory or not
          type: boolean
        key:
          description: S3 tag key
          type: string
        value:
          description: S3 tag value
          type: string
      required:
        - key
        - value
      type: object
    S3TagIds:
      description: List of S3 tag IDs
      properties:
        ids:
          description: List of S3 tag IDs
          items:
            description: List of S3 tag IDs
            format: int64
            type: integer
          type: array
      required:
        - ids
      type: object
    S3TagList:
      description: List of S3 tags
      properties:
        items:
          description: List of configured S3 tags
          items:
            $ref: "#/components/schemas/S3Tag"
          type: array
      type: object
    SdsServerTime:
      description: DRACOON server time
      properties:
        time:
          description: DRACOON server time
          format: date-time
          type: string
      type: object
    SharesPasswordPolicies:
      description: Shares password policies
      properties:
        characterRules:
          $ref: "#/components/schemas/CharacterRules"
        minLength:
          description: Minimum number of characters a password must contain
          format: int32
          maximum: 1024
          minimum: 1
          type: integer
        rejectDictionaryWords:
          description: Determines whether a password must NOT contain word(s) from a dictionary
          type: boolean
        rejectKeyboardPatterns:
          description: |-
            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)

            (min. 4 character pattern)
          type: boolean
        rejectUserInfo:
          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)
          type: boolean
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      type: object
    SoftwareVersionData:
      description: Software version information
      properties:
        buildDate:
          description: Build date
          format: date-time
          type: string
        isDracoonCloud:
          description: |-
            &#128640; Since v4.24.0

            Determines if the DRACOON Core is deployed in the cloud environment
          type: boolean
        restApiVersion:
          description: REST API version
          type: string
        scmRevisionNumber:
          description: Revision number
          type: string
        sdsServerVersion:
          description: DRACOON server version
          type: string
      required:
        - buildDate
        - restApiVersion
        - scmRevisionNumber
        - sdsServerVersion
      type: object
    SubscribedDownloadShare:
      description: Subscribed download share information
      properties:
        authParentId:
          description: Auth parent room ID
          format: int64
          type: integer
        id:
          description: Share ID
          format: int64
          type: integer
      required:
        - id
      type: object
    SubscribedDownloadShareList:
      description: List of subscribed download shares
      properties:
        items:
          description: List of subscribed download shares
          items:
            $ref: "#/components/schemas/SubscribedDownloadShare"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    SubscribedNode:
      description: Subscribed node information
      properties:
        authParentId:
          description: Auth parent room ID
          format: int64
          type: integer
        id:
          description: Node ID
          format: int64
          type: integer
        type:
          description: Node type
          enum:
            - room
            - folder
            - file
          type: string
      required:
        - id
      type: object
    SubscribedNodeList:
      description: List of subscribed nodes
      properties:
        items:
          description: List of subscribed nodes
          items:
            $ref: "#/components/schemas/SubscribedNode"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    SubscribedUploadShare:
      description: Subscribed upload share information
      properties:
        id:
          description: Share ID
          format: int64
          type: integer
        targetNodeId:
          description: Target room or folder ID
          format: int64
          type: integer
      required:
        - id
      type: object
    SubscribedUploadShareList:
      description: List of subscribed upload shares
      properties:
        items:
          description: List of subscribed upload shares
          items:
            $ref: "#/components/schemas/SubscribedUploadShare"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    SyslogConfig:
      description: Syslog settings
      properties:
        enabled:
          description: Is syslog enabled?
          type: boolean
        host:
          description: Syslog server (IP or FQDN)
          type: string
        logIpEnabled:
          description: Determines whether user’s IP address is logged.
          type: boolean
        port:
          description: Syslog server port
          format: int32
          type: integer
        protocol:
          description: Protocol to connect to syslog server
          enum:
            - TCP
            - UDP
          type: string
      type: object
    SyslogEvent:
      deprecated: true
      description: Syslog event information
      properties:
        attribute1:
          description: Attribute 1
          type: string
        attribute2:
          description: Attribute 2
          type: string
        attribute3:
          description: Attribute 3
          type: string
        authParentSource:
          description: Auth parent source ID
          type: string
        authParentTarget:
          description: Auth parent target ID
          type: string
        customerId:
          description: Unique identifier for the customer
          format: int64
          type: integer
        id:
          description: Event ID
          format: int64
          type: integer
        message:
          description: Event description
          type: string
        objectId1:
          description: Object ID 1
          format: int64
          type: integer
        objectId2:
          description: Object ID 2
          format: int64
          type: integer
        objectName1:
          description: Object name 1
          type: string
        objectName2:
          description: Object type 2
          type: string
        objectType1:
          description: Object type 1
          format: int32
          type: integer
        objectType2:
          description: Object type 2
          format: int32
          type: integer
        operationId:
          description: Operation type ID
          format: int32
          type: integer
        operationName:
          description: Operation name
          type: string
        status:
          description: |-
            Operation status:

            * `0` - Success

            * `2` - Error
          enum:
            - 0
            - 2
          format: int32
          type: integer
        time:
          description: Event timestamp
          format: date-time
          type: string
        userClient:
          description: Client
          type: string
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
        userIp:
          description: User IP
          type: string
        userName:
          description: Username
          type: string
      required:
        - id
        - message
        - time
        - userId
      type: object
    SyslogEventList:
      deprecated: true
      description: List of syslog events
      properties:
        items:
          description: List of log events
          items:
            $ref: "#/components/schemas/SyslogEvent"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    SystemDefaults:
      description: System defaults
      properties:
        downloadShareDefaultExpirationPeriod:
          description: Default expiration period for Download Shares in days.
          format: int32
          type: integer
        fileDefaultExpirationPeriod:
          description: Default expiration period for all uploaded files in days.
          format: int32
          type: integer
        hideLoginInputFields:
          description: |-
            &#128640; Since v4.13.0

            Defines if login fields should be hidden
          type: boolean
        languageDefault:
          description: Define which language should be default.
          type: string
        nonmemberViewerDefault:
          description: |-
            &#128640; Since v4.12.0

            Defines if new users get the role Non Member Viewer by default
          type: boolean
        uploadShareDefaultExpirationPeriod:
          description: Default expiration period for Upload Shares in days.
          format: int32
          type: integer
      type: object
    SystemInfo:
      description: System information (default language and authentication methods)
      properties:
        authMethods:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Authentication methods:

            * `sql`

            * `active_directory`

            * `radius`

            * `openid`

            use `authData` instead
          items:
            $ref: "#/components/schemas/AuthMethod"
          type: array
        hideLoginInputFields:
          description: |-
            &#128640; Since v4.13.0

            Defines if login fields should be hidden
          type: boolean
        languageDefault:
          description: |-
            System default language

            cf. [RFC 5646](https://tools.ietf.org/html/rfc5646)
          type: string
        s3EnforceDirectUpload:
          description: |-
            &#128640; Since v4.15.0

            Determines whether S3 direct upload is enforced or not
          type: boolean
        s3Hosts:
          description: |-
            &#128640; Since v4.14.0

            List of S3 Hosts for CSP header
          items:
            description: List of S3 Hosts for CSP header
            type: string
          type: array
        useS3Storage:
          description: |-
            &#128640; Since v4.21.0

            Defines if S3 is used as storage backend
          type: boolean
      required:
        - authMethods
        - hideLoginInputFields
        - languageDefault
        - s3EnforceDirectUpload
        - s3Hosts
        - useS3Storage
      type: object
    TestActiveDirectoryConfigRequest:
      description: Request model for testing connection for Active Directory configuration
      properties:
        ldapUsersDomain:
          description: Search scope of Active Directory; only users below this node can log on.
          type: string
        serverAdminName:
          description: Distinguished Name (DN) of Active Directory administrative account
          type: string
        serverAdminPassword:
          description: Password of Active Directory administrative account
          type: string
        serverIp:
          description: IPv4 or IPv6 address or host name
          type: string
        serverPort:
          description: Port
          format: int32
          type: integer
        sslFingerPrint:
          description: |-
            SSL finger print of Active Directory server.

            Mandatory for LDAPS connections.

            Format: `Algorithm/Fingerprint`
          type: string
        useLdaps:
          default: false
          description: Determines whether LDAPS should be used instead of plain LDAP.
          type: boolean
      required:
        - ldapUsersDomain
        - serverAdminName
        - serverAdminPassword
        - serverIp
        - serverPort
      type: object
    TestActiveDirectoryConfigResponse:
      description: Response model for testing connection for Active Directory configuration
      properties:
        ldapUsersDomain:
          description: Search scope of Active Directory; only users below this node can log on.
          type: string
        serverAdminName:
          description: Distinguished Name (DN) of Active Directory administrative account
          type: string
        serverAdminPassword:
          description: Password of Active Directory administrative account
          type: string
        serverIp:
          description: IPv4 or IPv6 address or host name
          type: string
        serverPort:
          description: Port
          format: int32
          type: integer
        sslFingerPrint:
          description: |-
            SSL finger print of Active Directory server.

            Mandatory for LDAPS connections.

            Format: `Algorithm/Fingerprint`
          type: string
        useLdaps:
          description: Determines whether LDAPS should be used instead of plain LDAP.
          type: boolean
      required:
        - ldapUsersDomain
        - serverAdminName
        - serverAdminPassword
        - serverIp
        - serverPort
        - useLdaps
      type: object
    ThirdPartyDependenciesData:
      description: Third-party dependency information
      properties:
        artifactId:
          description: Third party dependencies artifactId
          type: string
        description:
          description: Third party dependencies description
          type: string
        groupId:
          description: Third party dependencies groupId
          type: string
        id:
          description: Third party dependencies id
          type: string
        licenses:
          description: Third party dependencies licenses type
          items:
            description: Third party dependencies licenses type
            type: string
          type: array
        name:
          description: Third party dependencies name
          type: string
        type:
          description: Third party dependencies type
          type: string
        url:
          description: Third party dependencies url
          type: string
        version:
          description: Third party dependencies version
          type: string
      required:
        - artifactId
        - description
        - groupId
        - id
        - licenses
        - name
        - type
        - url
        - version
      type: object
    UpdateActiveDirectoryConfigRequest:
      description: Request model for updating an Active Directory configuration
      properties:
        adExportGroup:
          description: |-
            If `userImport` is set to `true`,

            the user must be member of this Active Directory group to receive a newly created DRACOON account.
          type: string
        alias:
          description: Unique name for an Active Directory configuration
          type: string
        createHomeFolder:
          default: false
          description: |-
            DEPRECATED, will be ignored

            Determines whether a room is created for each user that is created by automatic import (like a home folder).

            Room's name will equal the user's login name.
          type: boolean
        homeFolderParent:
          description: |-
            DEPRECATED, will be ignored

            ID of the room in which the individual rooms for users will be created.
          format: int64
          type: integer
        ldapUsersDomain:
          description: Search scope of Active Directory; only users below this node can log on.
          type: string
        sdsImportGroup:
          description: |-
            User group that is assigned to users who are created by automatic import.

            Reset with `0`
          format: int64
          type: integer
        serverAdminName:
          description: Distinguished Name (DN) of Active Directory administrative account
          type: string
        serverAdminPassword:
          description: Password of Active Directory administrative account
          type: string
        serverIp:
          description: IPv4 or IPv6 address or host name
          type: string
        serverPort:
          description: Port
          format: int32
          type: integer
        sslFingerPrint:
          description: |-
            SSL finger print of Active Directory server.

            Mandatory for LDAPS connections.

            Format: `Algorithm/Fingerprint`
          type: string
        useLdaps:
          description: Determines whether LDAPS should be used instead of plain LDAP.
          type: boolean
        userFilter:
          description: Name of Active Directory attribute that is used as login name.
          type: string
        userImport:
          description: |-
            Determines if a DRACOON account is automatically created for a new user

            who successfully logs on with his / her AD / IDP account.
          type: boolean
      type: object
    UpdateAuthTokenRestrictions:
      description: Request model for updating auth token settings
      properties:
        accessTokenValidity:
          description: |-
            &#128640; Since v4.13.0

            Restricted OAuth access token validity (in seconds)
          format: int32
          type: integer
        overwriteEnabled:
          description: |-
            &#128640; Since v4.13.0

            Defines if OAuth token restrictions are enabled
          type: boolean
        refreshTokenValidity:
          description: |-
            &#128640; Since v4.13.0

            Restricted OAuth refresh token validity (in seconds)
          format: int32
          type: integer
      required:
        - overwriteEnabled
      type: object
    UpdateCustomerRequest:
      description: Request model for updating a customer
      properties:
        companyName:
          description: Company name
          type: string
        customerContractType:
          description: Customer type
          enum:
            - demo
            - free
            - pay
          type: string
        isLocked:
          default: false
          description: |-
            Customer is locked:

            * `false` - unlocked

            * `true` - locked



            All users of this customer will be blocked and can not login anymore.
          type: boolean
        lockStatus:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Customer lock status:

            * `false` - unlocked

            * `true` - locked



            Please use `isLocked` instead.

            All users of this customer will be blocked and can not login anymore.
          type: boolean
        providerCustomerId:
          description: Provider customer ID
          type: string
        quotaMax:
          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
          format: int64
          type: integer
        userMax:
          description: Maximal number of users
          format: int32
          type: integer
        webhooksMax:
          description: |-
            &#128640; Since v4.19.0

            Maximal number of webhooks
          format: int64
          type: integer
      required:
        - customerContractType
      type: object
    UpdateCustomerResponse:
      description: Customer information
      properties:
        activationCode:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.8.0

            Customer activation code string:

            * valid only for types `free` and `demo`

            * for `pay` customers it is empty
          type: string
        companyName:
          description: Company name
          type: string
        createdAt:
          description: Creation date
          format: date-time
          type: string
        customerAttributes:
          $ref: "#/components/schemas/CustomerAttributes"
        customerContractType:
          description: Customer type
          enum:
            - demo
            - free
            - pay
          type: string
        customerUuid:
          description: |-
            &#128640; Since v4.21.0

            Customer UUID
          type: string
        id:
          description: Unique identifier for the customer
          format: int64
          type: integer
        isLocked:
          default: false
          description: |-
            Customer is locked:

            * `false` - unlocked

            * `true` - locked



            All users of this customer will be blocked and can not login anymore.
          type: boolean
        lockStatus:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            Customer lock status:

            * `false` - unlocked

            * `true` - locked



            Please use `isLocked` instead.

            All users of this customer will be blocked and can not login anymore.
          type: boolean
        providerCustomerId:
          description: Provider customer ID
          type: string
        quotaMax:
          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
          format: int64
          type: integer
        trialDays:
          description: |-
            Number of days left for trial period (relevant only for type `demo`)

            (not used)
          format: int32
          type: integer
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        userMax:
          description: Maximal number of users
          format: int32
          type: integer
        webhooksMax:
          description: |-
            &#128640; Since v4.19.0

            Maximal number of webhooks
          format: int64
          type: integer
      required:
        - companyName
        - customerContractType
        - customerUuid
        - id
        - lockStatus
        - quotaMax
        - userMax
      type: object
    UpdateDownloadShareRequest:
      description: Request model for updating a Download Share
      properties:
        defaultCountry:
          description: Country shorthand symbol (cf. ISO 3166-2)
          type: string
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        internalNotes:
          description: |-
            &#128640; Since v4.11.0

            Internal notes
          maximum: 255
          type: string
        maxDownloads:
          description: Max allowed downloads
          format: int32
          type: integer
        name:
          description: Alias name
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        notifyCreator:
          description: |-
            &#128679; Deprecated since v4.20.0

            Notify creator on every download.
          type: boolean
        password:
          description: Access password, not allowed for encrypted shares
          type: string
        receiverLanguage:
          description: Language tag for messages to receiver
          type: string
        resetMaxDownloads:
          description: Set 'true' to reset 'maxDownloads' for Download Share.
          type: boolean
        resetPassword:
          description: Set 'true' to reset 'password' for Download Share.
          type: boolean
        showCreatorName:
          description: Show creator first and last name.
          type: boolean
        showCreatorUsername:
          description: Show creator email address.
          type: boolean
        textMessageRecipients:
          description: |-
            List of recipient FQTNs

            E.123 / E.164 Format
          items:
            description: |-
              List of recipient FQTNs

              E.123 / E.164 Format
            type: string
          type: array
      type: object
    UpdateDownloadSharesBulkRequest:
      description: Request model for updating a list of Download Shares
      properties:
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        maxDownloads:
          description: Max allowed downloads
          format: int32
          type: integer
        objectIds:
          description: List of ids
          items:
            description: List of ids
            format: int64
            type: integer
          type: array
        resetMaxDownloads:
          description: Set 'true' to reset 'maxDownloads' for Download Share.
          type: boolean
        showCreatorName:
          description: Show creator first and last name.
          type: boolean
        showCreatorUsername:
          description: Show creator email address.
          type: boolean
      required:
        - objectIds
      type: object
    UpdateEncryptionPasswordPolicies:
      description: Request model for updating encryption password policies
      properties:
        characterRules:
          $ref: "#/components/schemas/CharacterRules"
        minLength:
          description: Minimum number of characters a password must contain
          format: int32
          maximum: 1024
          minimum: 1
          type: integer
        rejectKeyboardPatterns:
          description: |-
            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)

            (min. 4 character pattern)
          type: boolean
        rejectUserInfo:
          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)
          type: boolean
      type: object
    UpdateEventlogConfig:
      description: Request model for updating eventlog settings
      properties:
        enabled:
          description: Is eventlog enabled?
          type: boolean
        logIpEnabled:
          description: Determines whether user’s IP address is logged.
          type: boolean
        retentionPeriod:
          description: |-
            Retention period (in days) of event log entries.

            After that period, all entries are deleted.

            Recommended value: 7
          format: int32
          type: integer
      type: object
    UpdateFavoritesBulkRequest:
      description: Request model for updating favorites
      properties:
        isFavorite:
          description: Sets the favorite attribute to true or false on each file in an array of nodes.
          type: boolean
        objectIds:
          description: List of ids
          items:
            description: List of ids
            format: int64
            type: integer
          type: array
      required:
        - isFavorite
        - objectIds
      type: object
    UpdateFileRequest:
      description: Request model for updating file's metadata
      properties:
        classification:
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential
          format: int32
          type: integer
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        name:
          description: File name
          type: string
        notes:
          description: |-
            User notes

            Use empty string to remove.
          type: string
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      type: object
    UpdateFilesBulkRequest:
      description: Request model for updating files
      properties:
        classification:
          description: |-
            Classification ID:

            * `1` - public

            * `2` - internal

            * `3` - confidential

            * `4` - strictly confidential
          format: int32
          type: integer
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        objectIds:
          description: List of ids
          items:
            description: List of ids
            format: int64
            type: integer
          type: array
      required:
        - objectIds
      type: object
    UpdateFolderRequest:
      description: Request model for updating folder's metadata
      properties:
        name:
          description: Folder name
          type: string
        notes:
          description: |-
            User notes

            Use empty string to remove.
          type: string
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system

            (default: current server datetime in UTC format)
          format: date-time
          type: string
      type: object
    UpdateGeneralSettings:
      description: Request model for updating general settings
      properties:
        authTokenRestrictions:
          $ref: "#/components/schemas/UpdateAuthTokenRestrictions"
        cryptoEnabled:
          description: |-
            Activation status of client-side encryption.

            Can only be enabled once; disabling is not possible.
          type: boolean
        emailNotificationButtonEnabled:
          description: Enable email notification button
          type: boolean
        eulaEnabled:
          description: Each user has to confirm the EULA at first login.
          type: boolean
        hideLoginInputFields:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Defines if login fields should be hidden
          type: boolean
        mediaServerEnabled:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Determines if the media server is enabled
          type: boolean
        s3TagsEnabled:
          description: |-
            &#128640; Since v4.9.0

            Defines if S3 tags are enabled
          type: boolean
        sharePasswordSmsEnabled:
          description: Allow sending of share passwords via SMS
          type: boolean
        weakPasswordEnabled:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.14.0

            Allow weak password

            * A weak password has to fulfill the following criteria:

               * is at least 8 characters long

               * contains letters and numbers

            * A strong password has to fulfill the following criteria in addition:

               * contains at least one special character

               * contains upper and lower case characters

            Please use `PUT /system/config/policies/passwords` API to change configured password policies.
          type: boolean
      type: object
    UpdateGroupRequest:
      description: Request model for updating group's metadata
      properties:
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        name:
          description: Group name
          type: string
      type: object
    UpdateLoginPasswordPolicies:
      description: Request model for updating login password policies
      properties:
        characterRules:
          $ref: "#/components/schemas/CharacterRules"
        enforceLoginPasswordChange:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.24.0

            Determines whether a login password change should be enforced for all users

            Only takes effect, if login password policies get stricter
          type: boolean
        minLength:
          description: Minimum number of characters a password must contain
          format: int32
          maximum: 1024
          minimum: 1
          type: integer
        numberOfArchivedPasswords:
          description: |-
            Number of passwords to archive

            (must be between `0` and `10`; `0` means that password history is disabled)
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        passwordExpiration:
          $ref: "#/components/schemas/PasswordExpiration"
        rejectDictionaryWords:
          description: Determines whether a password must NOT contain word(s) from a dictionary
          type: boolean
        rejectKeyboardPatterns:
          description: |-
            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)

            (min. 4 character pattern)
          type: boolean
        rejectUserInfo:
          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)
          type: boolean
        userLockout:
          $ref: "#/components/schemas/UserLockout"
      type: object
    UpdateOAuthClientRequest:
      description: Request model for updating an OAuth client
      properties:
        accessTokenValidity:
          description: Validity of the access token in seconds.
          format: int32
          type: integer
        approvalValidity:
          description: |-
            &#128640; Since v4.22.0

            Validity of the approval interval in seconds.
          format: int32
          type: integer
        clientName:
          description: Name, which is shown at the client configuration and authorization.
          type: string
        clientSecret:
          description: Secret, which client uses at authentication.
          type: string
        clientType:
          description: Determines whether client is a confidential or public client.
          enum:
            - confidential
            - public
          type: string
        grantTypes:
          description: |-
            Authorized grant types

            * `authorization_code`

            * `implicit`

            * `password`

            * `client_credentials`

            * `refresh_token`



            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
          enum:
            - authorization_code
            - client_credentials
            - implicit
            - password
            - refresh_token
          items:
            description: |-
              Authorized grant types

              * `authorization_code`

              * `implicit`

              * `password`

              * `client_credentials`

              * `refresh_token`



              cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
            enum:
              - authorization_code
              - client_credentials
              - implicit
              - password
              - refresh_token
            type: string
          type: array
        isEnabled:
          description: Determines whether client is enabled.
          type: boolean
        redirectUris:
          description: URIs, to which a user is redirected after authorization.
          items:
            description: URIs, to which a user is redirected after authorization.
            type: string
          type: array
        refreshTokenValidity:
          description: Validity of the refresh token in seconds.
          format: int32
          type: integer
      required:
        - grantTypes
      type: object
    UpdateOpenIdIdpConfigRequest:
      description: Request model for updating an OpenID Connect IDP configuration
      properties:
        authorizationEndPointUrl:
          description: URL of the authorization endpoint
          type: string
        clientId:
          description: ID of the OpenID client
          type: string
        clientSecret:
          description: Secret, which client uses at authentication.
          type: string
        fallbackMappingClaim:
          description: Name of the claim which is used for the user mapping fallback.
          type: string
        flow:
          description: |-
            &#128640; Since v4.11.0

            Flow, which is used at authentication
          enum:
            - authorization_code
            - hybrid
          type: string
        issuer:
          description: |-
            Issuer identifier of the IDP

            The value is a case sensitive URL.
          type: string
        jwksEndPointUrl:
          description: URL of the JWKS endpoint
          type: string
        mappingClaim:
          description: Name of the claim which is used for the user mapping.
          type: string
        name:
          description: Name of the IDP
          type: string
        pkceChallengeMethod:
          description: |-
            PKCE code challenge method.

            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
          type: string
        pkceEnabled:
          default: false
          description: |-
            Determines whether PKCE is enabled.

            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
          type: boolean
        redirectUris:
          description: URIs, to which a user is redirected after authorization.
          items:
            description: URIs, to which a user is redirected after authorization.
            type: string
          type: array
        resetFallbackMappingClaim:
          description: Set `true` to reset `fallbackMappingClaim`.
          type: boolean
        scopes:
          description: |-
            List of requested scopes

            Usually `openid` and the names of the requested claims.
          items:
            description: |-
              List of requested scopes

              Usually `openid` and the names of the requested claims.
            type: string
          type: array
        tokenEndPointUrl:
          description: URL of the token endpoint
          type: string
        userImportEnabled:
          default: false
          description: |-
            Determines if a DRACOON account is automatically created for a new user

            who successfully logs on with his / her AD / IDP account.
          type: boolean
        userImportGroup:
          description: |-
            User group that is assigned to users who are created by automatic import.

            Reset with `0`
          format: int64
          type: integer
        userInfoEndPointUrl:
          description: URL of the user info endpoint
          type: string
        userInfoSource:
          description: |-
            &#128640; Since v4.23.0

            Source, which is used to get user information at the import or update of a user.
          enum:
            - user_info_endpoint
            - id_token
          type: string
        userManagementUrl:
          description: |-
            URL of the user management UI.

            Use empty string to remove.
          type: string
        userUpdateEnabled:
          default: false
          description: |-
            Determines if the DRACOON account is updated with data from AD / IDP.

            For OpenID Connect, the scopes `email` and `profile` are needed.
          type: boolean
      type: object
    UpdatePasswordPoliciesConfig:
      description: Request model for updating a set of password policies
      properties:
        encryptionPasswordPolicies:
          $ref: "#/components/schemas/UpdateEncryptionPasswordPolicies"
        loginPasswordPolicies:
          $ref: "#/components/schemas/UpdateLoginPasswordPolicies"
        sharesPasswordPolicies:
          $ref: "#/components/schemas/UpdateSharesPasswordPolicies"
      type: object
    UpdateRoomRequest:
      description: Request model for updating room's metadata
      properties:
        name:
          description: Name
          type: string
        notes:
          description: |-
            User notes

            Use empty string to remove.
          type: string
        quota:
          description: Quota in byte
          format: int64
          type: integer
        timestampCreation:
          description: |-
            &#128640; Since v4.22.0

            Time the node was created on external file system
          format: date-time
          type: string
        timestampModification:
          description: |-
            &#128640; Since v4.22.0

            Time the content of a node was last modified on external file system
          format: date-time
          type: string
      type: object
    UpdateRoomWebhookRequest:
      description: Request model for handling webhook assignments
      properties:
        items:
          description: "Assign a webhook to a room to use it for node actions within the room "
          items:
            $ref: "#/components/schemas/RoomWebhookAssignment"
          type: array
      required:
        - items
      type: object
    UpdateSharesPasswordPolicies:
      description: Request model for updating shares password policies
      properties:
        characterRules:
          $ref: "#/components/schemas/CharacterRules"
        minLength:
          description: Minimum number of characters a password must contain
          format: int32
          maximum: 1024
          minimum: 1
          type: integer
        rejectDictionaryWords:
          description: Determines whether a password must NOT contain word(s) from a dictionary
          type: boolean
        rejectKeyboardPatterns:
          description: |-
            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)

            (min. 4 character pattern)
          type: boolean
        rejectUserInfo:
          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)
          type: boolean
      type: object
    UpdateSubscriptionsBulkRequest:
      description: Request model for updating subscriptions
      properties:
        isSubscribed:
          description: Creates or deletes a subscription on each item in an array of objects.
          type: boolean
        objectIds:
          description: List of ids
          items:
            description: List of ids
            format: int64
            type: integer
          type: array
      required:
        - isSubscribed
        - objectIds
      type: object
    UpdateSyslogConfig:
      description: Request model for updating syslog settings
      properties:
        enabled:
          description: Is syslog enabled?
          type: boolean
        host:
          description: Syslog server (IP or FQDN)
          type: string
        logIpEnabled:
          description: Determines whether user’s IP address is logged.
          type: boolean
        port:
          description: Syslog server port
          format: int32
          type: integer
        protocol:
          description: Protocol to connect to syslog server
          enum:
            - TCP
            - UDP
          type: string
      type: object
    UpdateSystemDefaults:
      description: Request model for updating system defaults
      properties:
        downloadShareDefaultExpirationPeriod:
          description: Default expiration period for Download Shares in days.
          format: int32
          type: integer
        fileDefaultExpirationPeriod:
          description: Default expiration period for all uploaded files in days.
          format: int32
          type: integer
        languageDefault:
          description: Define which language should be default.
          type: string
        nonmemberViewerDefault:
          description: |-
            &#128640; Since v4.12.0

            Defines if new users get the role Non Member Viewer by default
          type: boolean
        uploadShareDefaultExpirationPeriod:
          description: Default expiration period for Upload Shares in days.
          format: int32
          type: integer
      type: object
    UpdateUploadShareRequest:
      description: Request model for updating an Upload Share
      properties:
        defaultCountry:
          description: Country shorthand symbol (cf. ISO 3166-2)
          type: string
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        filesExpiryPeriod:
          description: Number of days after which uploaded files expire
          format: int32
          type: integer
        internalNotes:
          description: |-
            &#128640; Since v4.11.0

            Internal notes
          maximum: 255
          type: string
        maxSize:
          description: Maximal total size of uploaded files (in bytes)
          format: int64
          type: integer
        maxSlots:
          description: Maximal amount of files to upload
          format: int32
          type: integer
        name:
          description: Alias name
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        notifyCreator:
          description: |-
            &#128679; Deprecated since v4.20.0

            Notify creator on every upload.
          type: boolean
        password:
          description: Password
          type: string
        receiverLanguage:
          description: Language tag for messages to receiver
          type: string
        resetFilesExpiryPeriod:
          description: Set 'true' to reset 'filesExpiryPeriod' for Upload Share
          type: boolean
        resetMaxSize:
          description: Set 'true' to reset 'maxSize' for Upload Share
          type: boolean
        resetMaxSlots:
          description: Set 'true' to reset 'maxSlots' for Upload Share
          type: boolean
        resetPassword:
          description: Set 'true' to reset 'password' for Upload Share.
          type: boolean
        showCreatorName:
          description: Show creator first and last name.
          type: boolean
        showCreatorUsername:
          description: Show creator email address.
          type: boolean
        showUploadedFiles:
          description: Allow display of already uploaded files
          type: boolean
        textMessageRecipients:
          description: |-
            List of recipient FQTNs

            E.123 / E.164 Format
          items:
            description: |-
              List of recipient FQTNs

              E.123 / E.164 Format
            type: string
          type: array
      type: object
    UpdateUploadSharesBulkRequest:
      description: Request model for updating a list of Download Shares
      properties:
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        filesExpiryPeriod:
          description: Number of days after which uploaded files expire
          format: int32
          type: integer
        maxSize:
          description: Maximal total size of uploaded files (in bytes)
          format: int64
          type: integer
        maxSlots:
          description: Maximal amount of files to upload
          format: int32
          type: integer
        objectIds:
          description: List of ids
          items:
            description: List of ids
            format: int64
            type: integer
          type: array
        resetFilesExpiryPeriod:
          description: Set 'true' to reset 'filesExpiryPeriod' for Upload Share
          type: boolean
        resetMaxSize:
          description: Set 'true' to reset 'maxSize' for Upload Share
          type: boolean
        resetMaxSlots:
          description: Set 'true' to reset 'maxSlots' for Upload Share
          type: boolean
        showCreatorName:
          description: Show creator first and last name.
          type: boolean
        showCreatorUsername:
          description: Show creator email address.
          type: boolean
        showUploadedFiles:
          description: Allow display of already uploaded files
          type: boolean
      required:
        - objectIds
      type: object
    UpdateUserAccountRequest:
      description: Request model for updating user account information
      properties:
        acceptEULA:
          description: |-
            Accept EULA

            Present, if EULA is system global active.

            cf. `GET system/config/settings/general` - `eulaEnabled`

            If accepted can not be undone.
          type: boolean
        email:
          description: "Email "
          type: string
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender

            Do NOT use `gender`! It will be ignored.
          type: string
        language:
          description: |-
            &#128640; Since v4.20.0

            IETF language tag
          type: string
        lastName:
          description: User last name
          type: string
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        phone:
          description: Phone number
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
      type: object
    UpdateUserRequest:
      description: Request model for updating user's metadata
      properties:
        authData:
          $ref: "#/components/schemas/UserAuthDataUpdateRequest"
        authMethods:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Authentication methods:

            * `sql`

            * `active_directory`

            * `radius`

            * `openid`

            use `authData` instead
          items:
            $ref: "#/components/schemas/UserAuthMethod"
          type: array
        email:
          description: "Email "
          type: string
        expiration:
          $ref: "#/components/schemas/ObjectExpiration"
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender

            Do NOT use `gender`! It will be ignored.
          type: string
        isLocked:
          default: false
          description: |-
            User is locked:

            * `false` - unlocked

            * `true` - locked



            User is locked and can not login anymore.
          type: boolean
        lastName:
          description: User last name
          type: string
        lockStatus:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            User lock status:

            * `0` - locked

            * `1` - Web access allowed

            * `2` - Web and mobile access allowed



            Please use `isLocked` instead.
          format: int32
          type: integer
        phone:
          description: Phone number
          type: string
        receiverLanguage:
          description: IETF language tag
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
      type: object
    UpdateWebhookRequest:
      description: Request model for updating a webhook
      properties:
        eventTypeNames:
          description: List of names of event types
          items:
            description: List of names of event types
            type: string
          type: array
        isEnabled:
          description: Is enabled
          type: boolean
        name:
          description: Name
          type: string
        secret:
          description: Secret; used for event message signatures
          type: string
        triggerExampleEvent:
          description: If set to true, an example event is being created
          type: boolean
        url:
          description: URL (must begin with the `HTTPS` scheme)
          type: string
      type: object
    UploadShare:
      description: Upload Share information
      properties:
        accessKey:
          description: Share access key to generate secure link
          type: string
        cntFiles:
          description: Total amount of existing files uploaded with this share.
          format: int32
          type: integer
        cntUploads:
          description: Total amount of uploads conducted with this share.
          format: int32
          type: integer
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        dataUrl:
          description: Upload Share URL
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        filesExpiryPeriod:
          description: Number of days after which uploaded files expire
          format: int32
          type: integer
        id:
          description: Share ID
          format: int64
          type: integer
        internalNotes:
          description: |-
            &#128640; Since v4.11.0

            Internal notes
          maximum: 255
          type: string
        isEncrypted:
          description: Encryption state
          type: boolean
        isProtected:
          description: Is share protected by password
          type: boolean
        maxSize:
          description: Maximal total size of uploaded files (in bytes)
          format: int64
          type: integer
        maxSlots:
          description: Maximal amount of files to upload
          format: int32
          type: integer
        name:
          description: Alias name
          type: string
        notes:
          description: User notes
          maximum: 255
          type: string
        notifyCreator:
          description: |-
            &#128679; Deprecated since v4.20.0

            Notify creator on every upload.
          type: boolean
        recipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient email addresses
          type: string
        showCreatorName:
          description: |-
            &#128640; Since v4.11.0

            Show creator first and last name.
          type: boolean
        showCreatorUsername:
          description: |-
            &#128640; Since v4.11.0

            Show creator email address.
          type: boolean
        showUploadedFiles:
          description: Allow display of already uploaded files
          type: boolean
        smsRecipients:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            CSV string of recipient MSISDNs
          type: string
        targetId:
          description: Target room or folder ID
          format: int64
          type: integer
        targetPath:
          description: Path to shared upload node
          type: string
        targetType:
          description: Node type
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
      required:
        - accessKey
        - createdAt
        - createdBy
        - id
        - isProtected
        - name
        - notifyCreator
        - targetId
      type: object
    UploadShareLinkEmail:
      description: Request model for sending an email of an Upload Share link
      properties:
        body:
          description: Notification email content
          type: string
        receiverLanguage:
          description: Language tag for messages to receiver
          type: string
        recipients:
          description: List of recipient email addresses
          items:
            description: List of recipient email addresses
            type: string
          type: array
      required:
        - body
        - recipients
      type: object
    UploadShareList:
      description: List of Upload Shares
      properties:
        items:
          description: List of Upload Shares
          items:
            $ref: "#/components/schemas/UploadShare"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    UserAccount:
      description: User information
      properties:
        authData:
          $ref: "#/components/schemas/UserAuthData"
        authMethods:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Authentication methods:

            * `sql`

            * `active_directory`

            * `radius`

            * `openid`

            use `authData` instead
          items:
            $ref: "#/components/schemas/UserAuthMethod"
          type: array
        customer:
          $ref: "#/components/schemas/CustomerData"
        email:
          description: "Email "
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender
          type: string
        hasManageableRooms:
          description: User has manageable rooms
          type: boolean
        homeRoomId:
          description: Homeroom ID
          format: int64
          type: integer
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        isEncryptionEnabled:
          description: |-
            User has generated private key.

            Possible if client-side encryption is active for this customer
          type: boolean
        isLocked:
          default: false
          description: |-
            User is locked:

            * `false` - unlocked

            * `true` - locked



            User is locked and can not login anymore.
          type: boolean
        language:
          description: |-
            &#128640; Since v4.20.0

            IETF language tag
          type: string
        lastLoginFailAt:
          description: Last failed logon date
          format: date-time
          type: string
        lastLoginFailIp:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.6.0

            Last failed logon IP address
          type: string
        lastLoginSuccessAt:
          description: Last successful logon date
          format: date-time
          type: string
        lastLoginSuccessIp:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.6.0

            Last successful logon IP address
          type: string
        lastName:
          description: User last name
          type: string
        lockStatus:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            User lock status:

            * `0` - locked

            * `1` - Web access allowed

            * `2` - Web and mobile access allowed



            Please use `isLocked` instead.
          format: int32
          type: integer
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        mustSetEmail:
          default: false
          description: |-
            &#128640; Since v4.13.0

            If `true`, the user must set the `email` at the first login.
          type: boolean
        needsToAcceptEULA:
          description: |-
            User has accepted EULA.

            Present, if EULA is system global active.

            cf. `GET system/config/settings/general` - `eulaEnabled`
          type: boolean
        needsToChangePassword:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Determines whether user has to change his / her password
          type: boolean
        needsToChangeUserName:
          default: false
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            If `true`, the user must change the `userName` at the first login.
          type: boolean
        phone:
          description: Phone number
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userAttributes:
          $ref: "#/components/schemas/UserAttributes"
        userGroups:
          description: All groups the user is member of
          items:
            $ref: "#/components/schemas/UserGroup"
          type: array
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
        userRoles:
          $ref: "#/components/schemas/RoleList"
      required:
        - authData
        - customer
        - firstName
        - hasManageableRooms
        - id
        - isLocked
        - language
        - lastName
        - lockStatus
        - needsToChangePassword
        - userName
        - userRoles
      type: object
    UserAttributes:
      deprecated: true
      description: User custom attributes (list of key-value pairs)
      properties:
        items:
          description: List of key-value pairs
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
      required:
        - items
      type: object
    UserAuthData:
      description: User Authentication Data
      properties:
        adConfigId:
          description: ID of the user's Active Directory.
          format: int32
          type: integer
        login:
          description: User login name
          type: string
        method:
          description: |-
            Authentication method



            Authentication methods:

            * `basic`

            * `active_directory`

            * `radius`

            * `openid`
          type: string
        mustChangePassword:
          description: |-
            Determines whether user has to change his / her password

            * default: `true` for `basic` auth type

            * default: `false` for `active_directory`, `openid` and `radius` auth types
          type: boolean
        oidConfigId:
          description: ID of the user's OIDC provider.
          format: int32
          type: integer
        password:
          description: |-
            Password (only relevant for `basic` authentication type)

            *NOT* your Active Directory, OpenID or RADIUS password!
          type: string
      required:
        - method
      type: object
    UserAuthDataUpdateRequest:
      description: User Authentication Data Update Request
      properties:
        adConfigId:
          description: ID of the user's Active Directory.
          format: int32
          type: integer
        login:
          description: User login name
          type: string
        method:
          description: |-
            Authentication method



            Authentication methods:

            * `basic`

            * `active_directory`

            * `radius`

            * `openid`
          type: string
        oidConfigId:
          description: ID of the user's OIDC provider.
          format: int32
          type: integer
      type: object
    UserAuthMethod:
      deprecated: true
      description: Authentication method
      properties:
        authId:
          description: |-
            Authentication method



            Authentication methods:

            * `basic`

            * `active_directory`

            * `radius`

            * `openid`
          type: string
        isEnabled:
          description: Is enabled
          type: boolean
        options:
          description: Authentication method options
          items:
            $ref: "#/components/schemas/KeyValueEntry"
          type: array
      required:
        - authId
        - isEnabled
      type: object
    UserData:
      description: User information
      properties:
        authData:
          $ref: "#/components/schemas/UserAuthData"
        authMethods:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            Authentication methods:

            * `sql`

            * `active_directory`

            * `radius`

            * `openid`

            use `authData` instead
          items:
            $ref: "#/components/schemas/UserAuthMethod"
          type: array
        avatarUuid:
          description: |-
            &#128640; Since v4.11.0

            Avatar UUID
          type: string
        email:
          description: "Email "
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender
          type: string
        hasManageableRooms:
          description: User has manageable rooms
          type: boolean
        homeRoomId:
          description: Homeroom ID
          format: int64
          type: integer
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        isEncryptionEnabled:
          description: |-
            User has generated private key.

            Possible if client-side encryption is active for this customer
          type: boolean
        isLocked:
          default: false
          description: |-
            User is locked:

            * `false` - unlocked

            * `true` - locked



            User is locked and can not login anymore.
          type: boolean
        lastLoginSuccessAt:
          description: Last successful logon date
          format: date-time
          type: string
        lastName:
          description: User last name
          type: string
        lockStatus:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            User lock status:

            * `0` - locked

            * `1` - Web access allowed

            * `2` - Web and mobile access allowed



            Please use `isLocked` instead.
          format: int32
          type: integer
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        phone:
          description: Phone number
          type: string
        publicKeyContainer:
          $ref: "#/components/schemas/PublicKeyContainer"
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userAttributes:
          $ref: "#/components/schemas/UserAttributes"
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
        userRoles:
          $ref: "#/components/schemas/RoleList"
      required:
        - authData
        - avatarUuid
        - firstName
        - id
        - isLocked
        - lastName
        - lockStatus
        - userName
      type: object
    UserFileKey:
      description: User file key
      properties:
        fileKey:
          $ref: "#/components/schemas/FileKey"
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
      required:
        - fileKey
        - userId
      type: object
    UserFileKeyList:
      deprecated: true
      description: List of user file keys
      properties:
        items:
          description: List of user file keys
          items:
            $ref: "#/components/schemas/UserFileKey"
          type: array
      type: object
    UserFileKeySetBatchRequest:
      description: List of request models for setting a user file key(s)
      properties:
        items:
          description: List of user file keys
          items:
            $ref: "#/components/schemas/UserFileKeySetRequest"
          type: array
      required:
        - items
      type: object
    UserFileKeySetRequest:
      description: Request model for setting a user file key
      properties:
        fileId:
          description: File ID
          format: int64
          type: integer
        fileKey:
          $ref: "#/components/schemas/FileKey"
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
      required:
        - fileId
        - fileKey
        - userId
      type: object
    UserGroup:
      description: Group information
      properties:
        id:
          description: Unique identifier for the group
          format: int64
          type: integer
        isMember:
          description: Determines whether user is a member of the group or not
          type: boolean
        name:
          description: Group name
          type: string
      required:
        - id
        - isMember
        - name
      type: object
    UserGroupList:
      description: List of groups
      properties:
        items:
          description: List of user-group mappings
          items:
            $ref: "#/components/schemas/UserGroup"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    UserIdFileIdItem:
      description: User ID and file ID mapping
      properties:
        fileId:
          description: File ID
          format: int64
          type: integer
        userId:
          description: Unique identifier for the user
          format: int64
          type: integer
      type: object
    UserIds:
      description: List of user IDs
      properties:
        ids:
          description: List of user IDs
          items:
            description: List of user IDs
            format: int64
            type: integer
          type: array
      required:
        - ids
      type: object
    UserInfo:
      description: User information
      properties:
        avatarUuid:
          description: |-
            &#128640; Since v4.11.0

            Avatar UUID
          type: string
        displayName:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.11.0

            Display name

            use other fields from `UserInfo` instead to combine a display name
          type: string
        email:
          description: |-
            &#128640; Since v4.11.0

            Email
          type: string
        firstName:
          description: |-
            &#128640; Since v4.11.0

            User first name (mandatory if `userType` is `internal`)
          type: string
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        lastName:
          description: |-
            &#128640; Since v4.11.0

            User last name (mandatory if `userType` is `internal`)
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username (only returned for `internal` users)
          type: string
        userType:
          description: |-
            &#128640; Since v4.11.0

            User type:

            * `internal` - ordinary DRACOON user

            * `external` - external user without DRACOON account

            * `system` - system user (non human &#128125;)

            * `deleted` - deleted DRACOON user
          enum:
            - system
            - internal
            - external
            - deleted
          type: string
      required:
        - avatarUuid
        - firstName
        - id
        - lastName
        - userName
        - userType
      type: object
    UserItem:
      description: User information
      properties:
        avatarUuid:
          description: |-
            &#128640; Since v4.11.0

            Avatar UUID
          type: string
        createdAt:
          description: Creation date
          format: date-time
          type: string
        email:
          description: "Email "
          type: string
        expireAt:
          description: Expiration date
          format: date-time
          type: string
        firstName:
          description: User first name
          type: string
        gender:
          default: n
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.12.0

            Gender
          type: string
        hasManageableRooms:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.27.0

            User has manageable rooms
          type: boolean
        homeRoomId:
          description: Homeroom ID
          format: int64
          type: integer
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        isEncryptionEnabled:
          description: |-
            User has generated private key.

            Possible if client-side encryption is active for this customer
          type: boolean
        isLocked:
          default: false
          description: |-
            User is locked:

            * `false` - unlocked

            * `true` - locked



            User is locked and can not login anymore.
          type: boolean
        lastLoginSuccessAt:
          description: Last successful logon date
          format: date-time
          type: string
        lastName:
          description: User last name
          type: string
        lockStatus:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.7.0

            User lock status:

            * `0` - locked

            * `1` - Web access allowed

            * `2` - Web and mobile access allowed



            Please use `isLocked` instead.
          format: int32
          type: integer
        login:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.13.0

            User login name
          type: string
        phone:
          description: Phone number
          type: string
        title:
          deprecated: true
          description: |-
            &#128679; Deprecated since v4.18.0

            Job title
          type: string
        userAttributes:
          $ref: "#/components/schemas/UserAttributes"
        userName:
          description: |-
            &#128640; Since v4.13.0

            Username
          type: string
        userRoles:
          $ref: "#/components/schemas/RoleList"
      required:
        - avatarUuid
        - firstName
        - id
        - isLocked
        - lastName
        - lockStatus
        - login
        - userName
      type: object
    UserKeyPairContainer:
      description: Key pair container
      properties:
        privateKeyContainer:
          $ref: "#/components/schemas/PrivateKeyContainer"
        publicKeyContainer:
          $ref: "#/components/schemas/PublicKeyContainer"
      required:
        - privateKeyContainer
        - publicKeyContainer
      type: object
    UserList:
      description: List of users
      properties:
        items:
          description: List of users
          items:
            $ref: "#/components/schemas/UserItem"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    UserLockout:
      description: User lockout information
      properties:
        enabled:
          description: Determines whether user lockout is enabled
          type: boolean
        lockoutPeriod:
          description: Amount of minutes a user has to wait to make another login attempt after `maxNumberOfLoginFailures` has been exceeded
          format: int32
          type: integer
        maxNumberOfLoginFailures:
          description: Maximum allowed number of failed login attempts
          format: int32
          type: integer
      required:
        - enabled
      type: object
    UserUserPublicKey:
      description: Public key information
      properties:
        id:
          description: Unique identifier for the user
          format: int64
          type: integer
        publicKeyContainer:
          $ref: "#/components/schemas/PublicKeyContainer"
      type: object
    UserUserPublicKeyList:
      description: List of user public keys
      properties:
        items:
          description: List of user public keys
          items:
            $ref: "#/components/schemas/UserUserPublicKey"
          type: array
      required:
        - items
      type: object
    ViolatedPasswordPolicy:
      description: Violated password policy information
      properties:
        message:
          description: Message from password validator
          type: string
        name:
          description: Name of the violated password policy
          type: string
      type: object
    Webhook:
      description: Webhook information
      properties:
        createdAt:
          description: Creation date
          format: date-time
          type: string
        createdBy:
          $ref: "#/components/schemas/UserInfo"
        eventTypeNames:
          description: List of names of event types
          items:
            description: List of names of event types
            type: string
          type: array
        expireAt:
          description: Expiration date / time
          format: date-time
          type: string
        failStatus:
          description: Last HTTP status code when a webhook is disabled due to delivery failures
          format: int32
          type: integer
        id:
          description: ID
          format: int64
          type: integer
        isEnabled:
          description: Is enabled
          type: boolean
        name:
          description: Name
          type: string
        secret:
          description: Secret; used for event message signatures
          type: string
        updatedAt:
          description: Modification date
          format: date-time
          type: string
        updatedBy:
          $ref: "#/components/schemas/UserInfo"
        url:
          description: URL
          type: string
      required:
        - createdAt
        - eventTypeNames
        - expireAt
        - id
        - isEnabled
        - name
        - updatedAt
        - url
      type: object
    WebhookList:
      description: List of webhooks
      properties:
        items:
          description: List of webhooks
          items:
            $ref: "#/components/schemas/Webhook"
          type: array
        range:
          $ref: "#/components/schemas/Range"
      required:
        - items
        - range
      type: object
    ZipDownloadRequest:
      description: Request model for ZIP download
      properties:
        nodeIds:
          description: List of node IDs
          items:
            description: List of node IDs
            format: int64
            type: integer
          type: array
      required:
        - nodeIds
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          scopes:
            all: every operation is allowed
          tokenUrl: /oauth/token
      type: oauth2
