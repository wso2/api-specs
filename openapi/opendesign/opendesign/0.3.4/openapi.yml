openapi: 3.0.2
info:
  title: Open Design REST API
  description: >
    This is a generated connector for [Open Design REST API v0.3.4](https://opendesign.dev/docs/api-reference/introduction) OpenAPI specification. 

    Open Design read and display data from designs using code. Unlock the power of programmatic design.
  x-ballerina-init-description: > 
    The connector initialization requires setting the API credentials.

    Create a [Open Design account](https://opendesign.dev) and obtain tokens by following [this guide](https://opendesign.dev/docs/api-reference/introduction#step-1-get-your-api-token).
  x-ballerina-display:
    label: opendesign
    iconPath: "icon.png"
  version: 0.3.4
  contact:
    name: Open Design
    email: team@opendesign.dev
    url: https://opendesign.dev
paths:
  /token:
    get:
      tags:
        - Auth
      description: Auth Token Check
      operationId: CheckToken
      responses:
        '200':
          description: Returns info about the token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  expires_at:
                    type: integer
                    format: int32
                    nullable: true
                    description: >-
                      UTC timestamp (in milliseconds) when the provided token
                      expires.
                required:
                  - expires_at
        '400':
          description: Unexpected parameters provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided on invalid/expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/upload:
    post:
      tags:
        - Import
      description: Design File Upload
      operationId: PostDesignUpload
      parameters: []
      requestBody:
        description: Upload information
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/MultipartFilePart'
                format:
                  $ref: '#/components/schemas/DesignImportFormatEnum'
              required:
                - file
      responses:
        '201':
          description: Returns the created design entity.
          headers:
            location:
              description: URL of the created design.
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: A design file descriptor
                properties:
                  design:
                    $ref: '#/components/schemas/Design'
                required:
                  - design
        '400':
          description: >-
            Invalid or unexpected input (wrong headers, invalid multi-part data
            etc.)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '#/components/schemas/InvalidHeaderError'
                      - $ref: '#/components/schemas/InvalidFormatError'
                      - $ref: '#/components/schemas/MissingUploadFileError'
                      - $ref: '#/components/schemas/InvalidUploadFileFieldError'
                      - $ref: '#/components/schemas/InvalidInputError'
                    discriminator:
                      propertyName: code
                      mapping:
                        InvalidHeader: '#/components/schemas/InvalidHeaderError'
                        InvalidFormat: '#/components/schemas/InvalidFormatError'
                        MissingUploadFile: '#/components/schemas/MissingUploadFileError'
                        InvalidUploadFileField: '#/components/schemas/InvalidUploadFileFieldError'
                        InvalidInput: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '429':
          description: Rate limit reached.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/RateLimitReachedError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/link:
    post:
      tags:
        - Import
      description: URL-Based Design File Import
      operationId: PostDesignLink
      parameters: []
      requestBody:
        description: Design link information
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: A publicly accessible URL of the design file to import.
                format:
                  $ref: '#/components/schemas/DesignImportFormatEnum'
                design_name:
                  type: string
                  nullable: true
                  description: >-
                    Name of the design. (When no name is provided, the server
                    infers the name from the URL.)
              required:
                - url
        required: true
      responses:
        '201':
          description: Returns the created design entity.
          headers:
            location:
              description: URL of the created design.
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                description: A design file descriptor
                properties:
                  design:
                    $ref: '#/components/schemas/Design'
                required:
                  - design
        '400':
          description: Invalid or unexpected input (misformed URL etc.)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '#/components/schemas/InvalidUploadLinkError'
                      - $ref: '#/components/schemas/InvalidFormatError'
                      - $ref: '#/components/schemas/InvalidInputError'
                    discriminator:
                      propertyName: code
                      mapping:
                        InvalidUploadLink: '#/components/schemas/InvalidUploadLinkError'
                        InvalidFormat: '#/components/schemas/InvalidFormatError'
                        InvalidInput: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '429':
          description: Rate limit reached.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/RateLimitReachedError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/figma-link:
    post:
      tags:
        - Import
      description: Figma Design File Import
      operationId: PostDesignFigmaLink
      parameters: []
      requestBody:
        description: Figma design information
        content:
          application/json:
            schema:
              type: object
              properties:
                design_name:
                  type: string
                  nullable: true
                  description: Name of the design.
                figma_token:
                  type: string
                  description: An access token from Figma.
                figma_filekey:
                  type: string
                  description: ID of the file in Figma.
                figma_ids:
                  type: array
                  items:
                    $ref: '#/components/schemas/FigmaFrameId'
                  description: >-
                    Frame IDs to sync. When not specified, all frames are
                    included.
                exports:
                  type: array
                  items:
                    type: object
                    properties:
                      format:
                        $ref: '#/components/schemas/DesignExportTargetFormatEnum'
                    required:
                      - format
                  description: >-
                    Design file exports to intiate automatically with the
                    import. (Only Sketch is supported currently as the target
                    format.)
              required:
                - figma_token
                - figma_filekey
        required: true
      responses:
        '201':
          description: >-
            Returns the created design entity or its processing status (in case
            a export was requested).
          headers:
            location:
              description: URL of the created design.
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  design:
                    oneOf:
                      - $ref: '#/components/schemas/FigmaDesign'
                      - $ref: '#/components/schemas/DesignProcessing'
                  exports:
                    type: array
                    items:
                      $ref: '#/components/schemas/DesignExport'
                    description: Inititated design file exports for the import.
                required:
                  - design
                  - exports
        '400':
          description: The requested design export is invalid or not supported.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '#/components/schemas/InvalidFormatError'
                      - $ref: '#/components/schemas/MultipleDesignExportsError'
                      - $ref: '#/components/schemas/InvalidInputError'
                    discriminator:
                      propertyName: code
                      mapping:
                        InvalidFormat: '#/components/schemas/InvalidFormatError'
                        MultipleDesignExports: '#/components/schemas/MultipleDesignExportsError'
                        InvalidInput: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '429':
          description: Rate limit reached.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/RateLimitReachedError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs:
    get:
      tags:
        - Designs
      description: Design List
      operationId: GetDesignList
      responses:
        '200':
          description: Returns a list of design entities
          content:
            application/json:
              schema:
                type: object
                properties:
                  designs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Design'
                    description: List of design entities
                required:
                  - designs
        '400':
          description: Unexpected parameters provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/{design_id}:
    get:
      tags:
        - Designs
      description: Design Info
      operationId: GetDesign
      parameters:
        - name: design_id
          description: A unique identifier (UUID) of an imported design file.
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      responses:
        '200':
          description: Returns the design entity or its processing status.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Design'
                  - $ref: '#/components/schemas/DesignProcessing'
        '202':
          description: The design is being processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignProcessing'
        '400':
          description: Invalid or unexpected input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '404':
          description: No such design entity (or not accessible with the provided token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/DesignNotFoundError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/{design_id}/exports:
    post:
      tags:
        - Export
      description: Start Design Export
      operationId: PostDesignExport
      parameters:
        - name: design_id
          description: A unique identifier (UUID) of an imported design file.
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      requestBody:
        description: Design export target
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  $ref: '#/components/schemas/DesignExportTargetFormatEnum'
              required:
                - format
        required: true
      responses:
        '201':
          description: Returns the started design export task entity.
          headers:
            location:
              description: URL where info about the created design export can be checked.
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignExport'
        '400':
          description: Invalid or unexpected input or incompatible design.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '#/components/schemas/InvalidFormatError'
                      - $ref: '#/components/schemas/DesignNotProcessedError'
                      - $ref: '#/components/schemas/InvalidInputError'
                    discriminator:
                      propertyName: code
                      mapping:
                        InvalidFormat: '#/components/schemas/InvalidFormatError'
                        DesignNotProcessed: '#/components/schemas/DesignNotProcessedError'
                        InvalidInput: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '404':
          description: No such design entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/DesignNotFoundError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/{design_id}/exports/{export_id}:
    get:
      tags:
        - Export
      description: Design Export Info
      operationId: GetDesignExport
      parameters:
        - name: design_id
          description: A unique identifier (UUID) of an imported design file.
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        - name: export_id
          description: An identifier of a export task of an imported design file.
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      responses:
        '200':
          description: Returns the design export task entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignExport'
        '400':
          description: Invalid or unexpected input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '404':
          description: >-
            No such design entity or design export (or not accessible with the
            provided token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '#/components/schemas/DesignNotFoundError'
                      - $ref: '#/components/schemas/DesignExportNotFoundError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/{design_id}/summary:
    get:
      tags:
        - Design Contents
      description: Design Summary
      operationId: GetDesignSummary
      parameters:
        - name: design_id
          description: A unique identifier (UUID) of an imported design file.
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      responses:
        '200':
          description: >-
            Returns an extended design entity with the complete page and
            artboard entity lists or the processing status of the design.
          content:
            application/json:
              schema:
                description: Descriptor for a design
                oneOf:
                  - $ref: '#/components/schemas/DesignSummary'
                  - $ref: '#/components/schemas/DesignProcessing'
        '202':
          description: The design is being uploaded or processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignProcessing'
        '400':
          description: Invalid or unexpected input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '404':
          description: No such design entity (or not accessible with the provided token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/DesignNotFoundError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/{design_id}/pages:
    get:
      tags:
        - Design Contents
      description: Page List
      operationId: GetDesignPageList
      parameters:
        - name: design_id
          description: A unique identifier (UUID) of an imported design file.
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      responses:
        '200':
          description: Returns a page entity list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                    description: The list of pages within the paged (`has_pages=true`) design file.
                required:
                  - pages
        '202':
          description: The design is being uploaded or processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Page'
                    description: The list of pages within the paged (`has_pages=true`) design file.
                required:
                  - pages
        '400':
          description: Invalid or unexpected input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '404':
          description: No such design entity (or not accessible with the provided token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/DesignNotFoundError'
                required:
                  - error
        '406':
          description: The design file is unpaged.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/DesignNotPagedError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  /designs/{design_id}/artboards:
    get:
      tags:
        - Design Contents
      description: Artboard List
      operationId: GetDesignArtboardList
      parameters:
        - name: design_id
          description: A unique identifier (UUID) of an imported design file.
          in: path
          required: true
          schema:
            type: string
            description: A unique identifier (UUID) of an imported design file.
            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      responses:
        '200':
          description: Returns a artboard entity list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  artboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Artboard'
                    description: The list of artboards within the design file.
                required:
                  - artboards
        '202':
          description: The design is being uploaded or processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  artboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Artboard'
                    description: The list of artboards within the design file.
                required:
                  - artboards
        '400':
          description: Invalid or unexpected input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/InvalidInputError'
                required:
                  - error
        '401':
          description: Token not provided or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/AuthTokenError'
                required:
                  - error
        '404':
          description: No such design entity (or not accessible with the provided token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - $ref: '#/components/schemas/DesignNotFoundError'
                      - $ref: '#/components/schemas/ArtboardNotFoundError'
                required:
                  - error
        '500':
          description: There was an internal error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/ServerError'
                required:
                  - error
  # /designs/{design_id}/artboards/{artboard_id}/content:
  #   get:
  #     tags:
  #       - Design Contents
  #     description: Artboard Content
  #     operationId: GetDesignArtboardContent
  #     parameters:
  #       - name: design_id
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #           description: A unique identifier (UUID) of an imported design file.
  #           pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
  #       - name: artboard_id
  #         in: path
  #         required: true
  #         schema:
  #           $ref: '#/components/schemas/ArtboardId'
  #     responses:
  #       '200':
  #         description: Returns the content of the artboard as JSON.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/OctopusDocument'
  #       '202':
  #         description: The design or the artboard is being uploaded or processed.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/DesignArtboardProcessing'
  #       '400':
  #         description: Invalid or unexpected input.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   $ref: '#/components/schemas/InvalidInputError'
  #               required:
  #                 - error
  #       '401':
  #         description: Token not provided or invalid.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   $ref: '#/components/schemas/AuthTokenError'
  #               required:
  #                 - error
  #       '404':
  #         description: >-
  #           No such design or artboard entity (or not accessible with the
  #           provided token).
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   oneOf:
  #                     - $ref: '#/components/schemas/DesignNotFoundError'
  #                     - $ref: '#/components/schemas/ArtboardNotFoundError'
  #                     - $ref: '#/components/schemas/ArtboardContentNotFoundError'
  #               required:
  #                 - error
  #       '500':
  #         description: There was an internal error.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   $ref: '#/components/schemas/ServerError'
  #               required:
  #                 - error
components:
  schemas:
    InvalidInputError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InvalidInput
        message:
          type: string
          description: Error message
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: Some of the input parameters are invalid or missing.
    AuthTokenError:
      oneOf:
        - $ref: '#/components/schemas/NoAuthTokenError'
        - $ref: '#/components/schemas/InvalidAuthTokenError'
        - $ref: '#/components/schemas/InactiveAccountError'
    ServerError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - ServerError
        message:
          type: string
          description: A human-readable technical message of the error.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
    MultipartFilePart:
      type: string
      format: binary
      description: A multipart file upload field.
    DesignImportFormatEnum:
      type: string
      enum:
        - photoshop
        - xd
        - sketch
        - illustrator
      description: >-
        The design file format. (This is not needed when the format can be
        inferred from the file extension.)
    Design:
      type: object
      description: A design file descriptor 
      properties:
        id:
          type: string
          description: A unique identifier (UUID) of an imported design file.
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        name:
          type: string
          nullable: true
          description: The name of the design.
        format:
          $ref: '#/components/schemas/DesignFormatEnum'
        created_at:
          type: integer
          format: int32
          description: UTC timestamp (in milliseconds) when the design file was imported.
        completed_at:
          type: integer
          format: int32
          nullable: true
          description: >-
            UTC timestamp (in milliseconds) when the processing of the design
            file successfully finished.
        status:
          $ref: '#/components/schemas/DesignStatusEnum'
        has_pages:
          type: boolean
          description: >-
            Flag denoting there are pages in the design file and the client can
            obtain the page list via a GET `…/pages` request.
      required:
        - id
        - name
        - format
        - created_at
        - completed_at
        - status
        - has_pages
    InvalidHeaderError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InvalidHeader
        message:
          type: string
          description: Error message
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: A required HTTP header is either not provided of invalid.
    InvalidFormatError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InvalidFormat
        message:
          type: string
          description: Error message
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The provided file format is not valid or supported.
    MissingUploadFileError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - MissingUploadFile
        message:
          type: string
          description: Error message
          enum:
            - The upload request does not include a file.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The multipart request does not contain file data.
    InvalidUploadFileFieldError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InvalidUploadFileField
        message:
          type: string
          description: Error message
          enum:
            - The uploaded file multipart field name is incorrect.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The multipart request contain the file data under the wrong field name.
    RateLimitReachedError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - RateLimitReached
        message:
          type: string
          description: Error message
          enum:
            - The rate limit for the operation has been reached.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The rate limit for the operation has been reached.
    InvalidUploadLinkError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InvalidUploadLink
        message:
          type: string
          description: Error message
          enum:
            - The provided link is not a valid URL.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The provided file URL is not valid.
    FigmaFrameId:
      type: string
      description: An identifier of a "frame" component within a Figma file.
    DesignExportTargetFormatEnum:
      type: string
      enum:
        - sketch
      description: >-
        The target design file format of a export. (Only Sketch is supported
        currently.)
    FigmaDesign:
      type: object
      description:  A descriptor of a figma design file
      properties:
        format:
          type: string
          description: Design format
          enum:
            - figma
        id:
          type: string
          description: A unique identifier (UUID) of an imported design file.
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        name:
          type: string
          nullable: true
          description: The name of the design.
        created_at:
          type: integer
          format: int32
          description: UTC timestamp (in milliseconds) when the design file was imported.
        completed_at:
          type: integer
          format: int32
          nullable: true
          description: >-
            UTC timestamp (in milliseconds) when the processing of the design
            file successfully finished.
        status:
          $ref: '#/components/schemas/DesignStatusEnum'
        has_pages:
          type: boolean
          description: >-
            Flag denoting there are pages in the design file and the client can
            obtain the page list via a GET `…/pages` request.
      required:
        - format
        - id
        - name
        - created_at
        - completed_at
        - status
        - has_pages
    DesignProcessing:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier (UUID) of an imported design file.
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        status:
          $ref: '#/components/schemas/DesignStatusEnum'
      required:
        - id
        - status
      description: A descriptor of a design file which is being processed.
    DesignExport:
      type: object
      properties:
        id:
          type: string
          description: An identifier of a export task of an imported design file.
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        created_at:
          type: integer
          format: int32
          description: UTC timestamp (in milliseconds) when the design export started.
        completed_at:
          type: integer
          format: int32
          nullable: true
          description: >-
            UTC timestamp (in milliseconds) when the design export successfully
            finished.
        status:
          $ref: '#/components/schemas/DesignExportStatusEnum'
        result_format:
          $ref: '#/components/schemas/DesignExportTargetFormatEnum'
        result_url:
          type: string
          nullable: true
          description: >-
            The URL of the produced design file in the `result_format` format
            when the export is successfully finished.
      required:
        - id
        - created_at
        - completed_at
        - status
        - result_format
        - result_url
    MultipleDesignExportsError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - MultipleDesignExports
        message:
          type: string
          description: Error message
          enum:
            - There can currently only be a single export requested at a time.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The provided file format is not valid or supported.
    DesignId:
      type: string
      description: A unique identifier (UUID) of an imported design file.
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    DesignNotFoundError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - DesignNotFound
        message:
          type: string
          description: Error message
          enum:
            - No such design found.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The specified design file is not found.
    DesignNotProcessedError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - DesignNotProcessed
        message:
          type: string
          description: Error message
          enum:
            - >-
              There design has not been processed (or failed) and cannot be
              exported yet.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The provided file format is not valid or supported.
    # DesignExportId:
    #   type: string
    #   description: An identifier of a export task of an imported design file.
    #   pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    DesignExportNotFoundError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - DesignExportNotFound
        message:
          type: string
          description: Error message
          enum:
            - No such design export task found.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The specified design file export task is not found.
    DesignSummary:
      type: object
      properties:
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page'
          description: The list of pages within the paged (`has_pages=true`) design file.
        artboards:
          type: array
          items:
            $ref: '#/components/schemas/Artboard'
          description: The list of artboards within the design file.
        id:
          type: string
          description: A unique identifier (UUID) of an imported design file.
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        name:
          type: string
          nullable: true
          description: The name of the design.
        format:
          $ref: '#/components/schemas/DesignFormatEnum'
        created_at:
          type: integer
          format: int32
          description: UTC timestamp (in milliseconds) when the design file was imported.
        completed_at:
          type: integer
          format: int32
          nullable: true
          description: >-
            UTC timestamp (in milliseconds) when the processing of the design
            file successfully finished.
        status:
          $ref: '#/components/schemas/DesignStatusEnum'
        has_pages:
          type: boolean
          description: >-
            Flag denoting there are pages in the design file and the client can
            obtain the page list via a GET `…/pages` request.
      required:
        - artboards
        - id
        - name
        - format
        - created_at
        - completed_at
        - status
        - has_pages
    Page:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PageId'
        name:
          type: string
        status:
          $ref: '#/components/schemas/PageStatusEnum'
      required:
        - id
        - name
        - status
    DesignNotPagedError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - DesignNotPaged
        message:
          type: string
          description: Error message
          enum:
            - The design is unpaged.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The specified design file is not paged (`has_pages=false`).
    Artboard:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ArtboardId'
        page_id:
          type: string
          description: >-
            The design file page containing the artboard in case of paged
            (`has_pages=true`) designs.
        name:
          type: string
          description: The name of the design file artboard.
        status:
          $ref: '#/components/schemas/ArtboardStatusEnum'
        has_content:
          type: boolean
          description: >-
            Flag denoting there is content in the design file artboard and the
            client can obtain it via a GET `…/content` request.
      required:
        - id
        - name
        - status
        - has_content
    ArtboardNotFoundError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - ArtboardNotFound
        message:
          type: string
          description: Error message
          enum:
            - No such artboard found in the design.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The specified artboard is not present in the design file.
    ArtboardId:
      type: string
      description: An identifier of an artboard within a design file.
    # OctopusDocument:
    #   $ref: ./octopus.json#/components/schemas/OctopusDocument
    DesignArtboardProcessing:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ArtboardId'
        design_id:
          description: A unique identifier (UUID) of an imported design file.
          $ref: '#/components/schemas/DesignId'
        status:
          $ref: '#/components/schemas/ArtboardStatusEnum'
      required:
        - id
        - design_id
        - status
      description: A descriptor of a design artboard which is being processed.
    ArtboardContentNotFoundError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - ArtboardContentNotFoundError
        message:
          type: string
          description: Error message
          enum:
            - The content for the artboard not found.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: The specified artboard does not have any content.
    ErrorDocsUrl:
      type: string
      description: The URL of a documentation web page with more info about the error.
    NoAuthTokenError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - NoAuthToken
        message:
          type: string
          description: Error message
          enum:
            - No authentication token provided.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: >-
        The endpoint requires an auth token provided via the `Authorization`
        HTTP header.
    InvalidAuthTokenError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InvalidAuthToken
        message:
          type: string
          description: Error message
          enum:
            - The provided authentication token is invalid.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: >-
        The auth token provided via the `Authorization` HTTP header is not
        valid.
    InactiveAccountError:
      type: object
      properties:
        code:
          type: string
          description: Error code
          enum:
            - InactiveAccount
        message:
          type: string
          description: Error message
          enum:
            - The user account is inactive or blocked.
        docs_url:
          $ref: '#/components/schemas/ErrorDocsUrl'
      required:
        - code
        - message
      description: >-
        The auth token provided via the `Authorization` HTTP header is
        associated with an account which is either expired or blocked.
    DesignFormatEnum:
      type: string
      enum:
        - photoshop
        - xd
        - sketch
        - figma
        - illustrator
      description: The design file format.
    DesignStatusEnum:
      type: string
      enum:
        - uploading
        - processing
        - done
        - failed
      description: The processing status of the design file.
    DesignExportStatusEnum:
      type: string
      enum:
        - uploading
        - processing
        - done
        - failed
      description: The processing status of the design file export task.
    PageId:
      type: string
      description: An identifier of an page within a design file.
    PageStatusEnum:
      type: string
      enum:
        - uploading
        - processing
        - done
        - failed
      description: The processing status of a page within a design file.
    ArtboardStatusEnum:
      type: string
      enum:
        - uploading
        - processing
        - done
        - failed
      description: The processing status of an artboard within a design file.
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Authorization: Bearer JWT'
security:
  - JWT: []
externalDocs:
  url: https://opendesign.dev/docs/
  description: Documentation
tags:
  - name: Auth
    description: Authentication/authorization-related endpoints
  - name: Import
    description: Design file import endpoints
  - name: Designs
    description: Design entity listing and detail endpoints
  - name: Design Contents
    description: Design content (Octopus) endpoints
  - name: Export
    description: Design file export endpoints
servers:
  - url: https://api.opendesign.dev
