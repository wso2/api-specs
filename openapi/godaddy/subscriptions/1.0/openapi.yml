openapi: 3.0.1
info:
  x-ballerina-display:
    label: GoDaddy Subscriptions
    iconPath: "icon.png"
  title: GoDaddy  API
  description: >-
    This is a generated connector for [GoDaddy Subscriptions API
    v1](https://developer.godaddy.com/doc/endpoint/subscriptions) OpenAPI
    specification.

    The GoDaddy Subscriptions API provides capability to access GoDaddy operations
    related to subscriptions.
  version: '1.0'
  x-ballerina-init-description: >-
    The connector initialization requires setting the API credentials. 

    Create a [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following
    [this guide](https://developer.godaddy.com/getstarted).
servers:
  - url: https://api.ote-godaddy.com/
tags:
  - name: v1
    description: ''
paths:
  /v1/subscriptions:
    get:
      tags:
        - v1
      summary: Retrieve a list of Subscriptions for the specified Shopper
      operationId: listSubscriptions
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID to return subscriptions for when not using JWT
          schema:
            type: string
        - name: X-Market-Id
          in: header
          description: The market that the response should be formatted for
          schema:
            type: string
            default: en-US
        - name: productGroupKeys
          in: query
          description: Only return Subscriptions with the specified product groups
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: includes
          in: query
          description: Optional details to be included in the response
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            enum:
              - addons
              - relations
        - name: offset
          in: query
          description: >-
            Number of Subscriptions to skip before starting to return paged
            results (must be a multiple of the limit)
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: >-
            Number of Subscriptions to retrieve in this page, starting after
            offset
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 25
        - name: sort
          in: query
          description: >-
            Property name that will be used to sort results. "-" indicates
            descending
          schema:
            type: string
            default: '-expiresAt'
            enum:
              - expiresAt
              - '-expiresAt'
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
            application/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
            text/javascript:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Invalid query parameter (custom message returned for each parameter)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/subscriptions/productGroups:
    get:
      tags:
        - v1
      summary: Retrieve a list of ProductGroups for the specified Shopper
      operationId: listProductGroups
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID to return data for when not using JWT
          schema:
            type: string
        - name: X-Market-Id
          in: header
          description: The market that the response should be formatted for
          schema:
            type: string
            default: en-US
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/subscriptions/{subscriptionId}:
    get:
      tags:
        - v1
      summary: Retrieve details for the specified Subscription
      operationId: getSubscription
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID to be operated on, if different from JWT
          schema:
            type: string
        - name: X-Market-Id
          in: header
          description: Unique identifier of the Market in which the request is happening
          schema:
            type: string
            default: en-US
        - name: subscriptionId
          in: path
          description: Unique identifier of the Subscription to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Subscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscription'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Subscription'
            text/xml:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Invalid Subscription Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - v1
      summary: Cancel the specified Subscription
      operationId: cancelSubscription
      parameters:
        - name: X-Shopper-Id
          in: header
          description: Shopper ID to cancel subscriptions for when not using JWT
          schema:
            type: string
        - name: subscriptionId
          in: path
          description: Unique identifier of the Subscription to cancel
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: >-
            Failed to determine if the domain is protected (invalid domain
            ID)<br>Invalid Subscription Id<br>The Office 365 Subscription cannot
            be cancelled (shopper is migrating)<br>The Subscription cannot be
            cancelled<br>The Subscription cannot be cancelled (PFID is disabled
            for cancellation)<br>The Subscription cannot be cancelled (domain is
            protected)<br>The domain alert Subscription cannot be cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: >-
            Failed to determine if the Office 365 account is migrating<br>Failed
            to determine if the domain alert is cancellable<br>Failed to
            determine if the domain is protected<br>Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - v1
      summary: Update details for the specified Subscription
      description: >-
        Only Subscription properties that can be changed without immediate
        financial impact can be modified via PATCH, whereas some properties can
        be changed by purchasing a renewal<br/><strong>This endpoint only
        supports JWT authentication</strong>
      operationId: updateSubscription
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the Subscription to update
          required: true
          schema:
            type: string
      requestBody:
        description: Details of the Subscription to change
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'
          text/xml:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            Authenticated user is not allowed access <br> This method only
            supports JWT authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found <br> Payment profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: subscription
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      x-ballerina-apikey-description: >-
        Provide your API Key as `Authorization`. Eg: {Authorization : sso-key
        [<API_KEY>]:[<API_SECRET>]}
  schemas:
    Error:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorField'
        message:
          type: string
          description: Human-readable, English description of the error
    ErrorField:
      required:
        - code
        - path
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        message:
          type: string
          description: >-
            Human-readable, English description of the problem with the contents
            of the field
        path:
          type: string
          description: >-
            <ul>

            <li style='margin-left: 12px;'>JSONPath referring to a field
            containing an error</li>

            <strong style='margin-left: 12px;'>OR</strong>

            <li style='margin-left: 12px;'>JSONPath referring to a field that
            refers to an object containing an error, with more detail in
            `pathRelated`</li>

            </ul>
          format: json-path
        pathRelated:
          type: string
          description: >-
            JSONPath referring to a field containing an error, which is
            referenced by `path`
          format: json-path
    ErrorLimit:
      required:
        - code
        - retryAfterSec
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorField'
        message:
          type: string
          description: Human-readable, English description of the error
        retryAfterSec:
          type: integer
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
    Pagination:
      type: object
      properties:
        first:
          type: string
          description: URI to access the first page
        last:
          type: string
          description: URI to access the last page
        next:
          type: string
          description: URI to access the next page
        previous:
          type: string
          description: URI to access the previous page
        total:
          type: integer
          description: Number of records available
    ProductGroup:
      required:
        - productGroupKey
        - subscriptionCount
      type: object
      properties:
        productGroupKey:
          type: string
          description: Primary key of a grouping of related Subscriptions
        subscriptionCount:
          type: integer
          description: The number of Subscriptions that the shopper owns in this group
    Subscription:
      required:
        - billing
        - createdAt
        - priceLocked
        - product
        - renewAuto
        - renewable
        - status
        - subscriptionId
        - upgradeable
      type: object
      properties:
        addons:
          type: array
          description: >-
            An array of additional products that have been purchased to augment
            this Subscription
          items:
            $ref: '#/components/schemas/SubscriptionAddon'
        billing:
          $ref: '#/components/schemas/SubscriptionBilling'
        cancelable:
          type: boolean
          description: Whether or not the Subscription is allowed to be canceled
        createdAt:
          type: string
          description: When the Subscription was created
          format: iso-datetime
        expiresAt:
          type: string
          description: When the Subscription will expire
          format: iso-datetime
        label:
          type: string
          description: A human readable description of this Subscription
        launchUrl:
          type: string
          description: The url to use or manage this Subscription's active product
          format: url
        paymentProfileId:
          type: integer
          description: >-
            Unique identifier of the payment profile that will be used to
            automatically renew this Subscription
        priceLocked:
          type: boolean
          description: >-
            Whether the renewal price will be based from the list price or a
            locked-in price for this shopper
        product:
          $ref: '#/components/schemas/SubscriptionProduct'
        relations:
          $ref: '#/components/schemas/SubscriptionRelations'
        renewAuto:
          type: boolean
          description: >-
            Whether or not the Subscription is set to be automatically renewed
            via the billing agent
        renewable:
          type: boolean
          description: Whether or not the Subscription is allowed to be renewed
        status:
          type: string
          description: Whether the Subscription is active or the specific non-active state
          enum:
            - ACTIVE
            - PENDING
            - CANCELED
        subscriptionId:
          type: string
          description: Unique identifier of the Subscription
        upgradeable:
          type: boolean
          description: Whether or not the Subscription is allowed to be upgraded
    SubscriptionAddon:
      required:
        - commitment
        - pfid
        - quantity
      type: object
      properties:
        commitment:
          type: string
          description: The financial commitment the customer has in the product
          enum:
            - PAID
            - FREE
            - TRIAL
        pfid:
          type: integer
          description: Unique identifier of the add-in product
        quantity:
          type: integer
    SubscriptionBilling:
      required:
        - commitment
        - renewAt
        - status
      type: object
      properties:
        commitment:
          type: string
          description: The financial commitment the customer has in the product
          enum:
            - PAID
            - FREE
            - TRIAL
        pastDueTypes:
          type: array
          description: The types of charges that are past due when `status` is PAST_DUE
          items:
            type: string
            enum:
              - ADDON
              - BURST
              - SUBSCRIPTION
        renewAt:
          type: string
          description: >-
            The point in time after which the Subscription will bill for
            automatic renewal
          format: iso-datetime
        status:
          type: string
          description: Whether payments are past due
          enum:
            - CURRENT
            - PAST_DUE
    SubscriptionList:
      required:
        - pagination
        - subscriptions
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        subscriptions:
          type: array
          description: A collection of subscriptions
          items:
            $ref: '#/components/schemas/Subscription'
    SubscriptionProduct:
      required:
        - label
        - namespace
        - pfid
        - productGroupKey
        - renewalPeriod
        - renewalPeriodUnit
        - renewalPfid
        - supportBillOn
      type: object
      properties:
        label:
          type: string
          description: A human readable description of the Product that is subscribed
        namespace:
          type: string
          description: Grouping of related Subscriptions
        pfid:
          type: integer
          description: Unique identifier of the Product that is subscribed
        productGroupKey:
          type: string
          description: Primary key of a grouping of related Subscriptions
        renewalPeriod:
          type: integer
          description: >-
            The number of `renewalPeriodUnits` that will be added by the
            `renewalPfid`
        renewalPeriodUnit:
          type: string
          description: The unit of time that `renewalPeriod` is measured in
          enum:
            - MONTH
            - QUARTER
            - SEMI_ANNUAL
            - YEAR
        renewalPfid:
          type: integer
          description: Unique identifier of the renewal Product
        supportBillOn:
          type: boolean
          description: >-
            Whether the product supports the `billOn` option on the renewal
            endpoint
    SubscriptionRelations:
      type: object
      properties:
        children:
          type: array
          description: >-
            A set of related Subscriptions that will be canceled automatically
            if this Subscription is canceled
          items:
            type: string
        parent:
          type: string
          description: Unique identifier of this Subscription's parent
    SubscriptionUpdate:
      type: object
      properties:
        paymentProfileId:
          type: integer
          description: >-
            Unique identifier of the payment profile you want to be used for
            automatic renewal
        renewAuto:
          type: boolean
          description: Whether or not you want the Subscription renew automatically
