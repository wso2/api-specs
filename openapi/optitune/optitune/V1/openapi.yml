openapi: 3.0.1
info:
  title: OptiTune REST API
  description: |
    This is a generated connector for [OptiTune API v1](https://manage.opti-tune.com/help/site/articles/api/default.html) OpenAPI specification.
    A complete API for interacting with all objects on an OptiTune Management Server
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
  
    Create a [OptiTune account](https://manage.opti-tune.com) and obtain tokens by following [this guide](https://manage.opti-tune.com/help/site/articles/api/default.html#authentication).
  x-ballerina-display:
    label: OptiTune 
    iconPath: "icon.png"
  contact:
    name: Bravura Software LLC
    url: https://www.bravurasoftware.com/optitune/
    email: customer_support@bravurasoftware.com
  license:
    name: Master Subscription Agreement
    url: https://manage.opti-tune.com/legal/subscription-agreement.aspx
  version: V1
  x-swagger-net-version: 8.3.47.101
servers:
- url: https://manage.opti-tune.com/
tags:
- name: Accounts
- name: AdvancedSettings
- name: AgentConfig
- name: AgentInstallers
- name: AgentStatus
- name: AlertInstances
- name: AlertSubscriptions
- name: Announcements
- name: Applications
- name: AuditLog
- name: BackupCloudberry
- name: BenchmarkDataPoints
- name: BenchmarkDataSets
- name: Benchmarks
- name: BillingLicenseUsage
- name: BillingSettings
- name: BrandDomains
- name: Brands
- name: BusinessEntities
- name: ComputerDetails
- name: ComputerDisplayName
- name: ComputerMetadata
- name: Computers
- name: DeploymentResults
- name: Deployments
- name: EndpointProtection
- name: EndpointProtectionSettings
- name: EventCategories
- name: EventCategoryMemberships
- name: EventDescriptors
- name: EventSources
- name: FavoriteTasks
- name: Files
- name: GroupMemberships
- name: Groups
- name: InstallTasks
- name: LocalUsers
- name: MailTemplates
- name: MalwareThreats
- name: NotificationGroupMemberAccounts
- name: NotificationGroupMembers
- name: NotificationGroups
- name: OptiTuneTasks
- name: Organizations
  description: "This resource is used for back end administration of Organizations\
    \ on an OptiTune management server.  \r\nIt is typically used by resellers who\
    \ have their own OptiTune management servers and billing integration, and is not\
    \ available\r\non the standard cloud hosted version of the OptiTune management\
    \ server.  The caller must have the master administrator role to call any of these\
    \ methods."
- name: OrganizationSettings
  description: "The OrganizationSettings resource is used in reseller scenarios to\
    \ manage each organizations storage quota, billing settings, etc...\r\nIt is not\
    \ available in the regular cloud hosted version of OptiTune.  The caller must\
    \ have the master administrator role to call any of these methods."
- name: PerformanceSettings
- name: ProductKeys
- name: RemoteAccessSettings
- name: RemoteAssistanceRequests
- name: RemoteConnections
- name: RepairTasks
- name: RetiredComputers
- name: ScriptTasks
- name: SingletonGroups
  description: "Each computer in OptiTune has a \"singleton\" group, that is a group\
    \ that only contains that computer.  The singleton group is not normally\r\ndisplayed\
    \ in the UI, but it exists for when you want to deploy a task to a single computer,\
    \ or create settings for a single computer, since\r\nthese resources require a\
    \ group ID to operate on.  In this case, you would deploy the task to the singleton\
    \ group for a computer.\r\n\r\nYou can retrieve the singleton group for any computer\
    \ using this resource."
- name: SystemTasks
- name: TrayIconSettings
- name: UninstallTasks
- name: Webhooks
- name: WindowsEventLog
- name: WindowsEventLogSettings
- name: WindowsUpdateCategories
- name: WindowsUpdateComputerState
- name: WindowsUpdateHistory
- name: WindowsUpdates
- name: WindowsUpdateSettings
paths:
  /api/v1/Accounts/Me:
    get:
      tags:
      - Accounts
      summary: Gets the logged in user account
      operationId: GetMyAccounts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            text/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
  /api/v1/Accounts:
    get:
      tags:
      - Accounts
      summary: Gets all accounts in the organization
      operationId: GetAllAccounts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
    post:
      tags:
      - Accounts
      summary: Adds a new account
      operationId: PostAccounts
      requestBody:
        description: The account to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          text/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
          text/xml:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            text/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad Request
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: account
  /api/v1/Accounts/{id}:
    get:
      tags:
      - Accounts
      summary: Gets a single account in the organization, given an account ID
      operationId: GetAccounts
      parameters:
      - name: id
        description: Account ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            text/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
      - Accounts
      summary: Updates an existing account
      operationId: PutAccounts
      parameters:
      - name: id
        in: path
        description: The id of the Account
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: The Account data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          text/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
          text/xml:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            text/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad Request
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: account
    delete:
      tags:
      - Accounts
      summary: Deletes an existing account
      operationId: DeleteAccounts
      parameters:
      - name: id
        description: Account ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/AdvancedSettings:
    get:
      tags:
      - AdvancedSettings
      summary: Gets the advanced settings for an organization
      operationId: GetAdvancedSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
        404:
          description: Not Found
          content: {}
    put:
      tags:
      - AdvancedSettings
      summary: Adds or updates advanced settings for the organization
      operationId: PutAdvancedSettings
      requestBody:
        description: AdvancedSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/AdvancedSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/AdvancedSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/AdvancedSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvancedSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/AdvancedSettings'
        400:
          description: Bad Request
          content: {}
      x-codegen-request-body-name: advancedSetting
  /api/v1/Computers/{computerid}/AgentConfig:
    get:
      tags:
      - AgentConfig
      summary: Gets the OptiTune agent configuration for a given computer id, in XML
        format
      operationId: GetAgentConfig
      parameters:
      - name: computerid
        description: computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/AgentInstallers:
    get:
      tags:
      - AgentInstallers
      summary: Gets all agent installers in the organization
      operationId: AgentInstallers_GetAll
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentInstaller'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentInstaller'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentInstaller'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentInstaller'
    post:
      tags:
      - AgentInstallers
      summary: "Adds a new agent installer.  Upload the files specifying local storage\
        \ first, and then \r\nspecify the file IDs in the agent installer here"
      operationId: PostAgentInstallers
      requestBody:
        description: AgentInstaller data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentInstaller'
          text/json:
            schema:
              $ref: '#/components/schemas/AgentInstaller'
          application/xml:
            schema:
              $ref: '#/components/schemas/AgentInstaller'
          text/xml:
            schema:
              $ref: '#/components/schemas/AgentInstaller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentInstaller'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
            text/json:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
            text/xml:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
      x-codegen-request-body-name: agentInstaller
  /api/v1/AgentInstallers/{id}:
    get:
      tags:
      - AgentInstallers
      summary: Gets a single agent installer in the organization, given an agent installer
        ID
      operationId: GetAgentInstallers
      parameters:
      - name: id
        description: Agent installer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
            text/json:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
            application/xml:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
            text/xml:
              schema:
                $ref: '#/components/schemas/AgentInstaller'
    delete:
      tags:
      - AgentInstallers
      summary: Deletes an existing agent installer
      operationId: DeleteAgentInstallers
      parameters:
      - name: id
        description: Agent installer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/AgentState:
    get:
      tags:
      - AgentStatus
      summary: Gets the state of a single OptiTune agent, given a computer ID.  The
        state will frequently change as the agent performs its duties.
      operationId: GetAgentStateAgentStatus
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentState'
            text/json:
              schema:
                $ref: '#/components/schemas/AgentState'
  /api/v1/Computers/{computerid}/ConnectionState:
    get:
      tags:
      - AgentStatus
      summary: Gets the connection status for a single computer
      operationId: GetConnectionStateAgentStatus
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStatusInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ConnectionStatusInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConnectionStatusInfo'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConnectionStatusInfo'
  /api/v1/AlertInstances/{id}:
    get:
      tags:
      - AlertInstances
      summary: Gets a single alert instance, given an alert instance ID
      operationId: GetAlertInstances
      parameters:
      - name: id
        description: Alert instance ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertInstance'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertInstance'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertInstance'
            text/xml:
              schema:
                $ref: '#/components/schemas/AlertInstance'
    delete:
      tags:
      - AlertInstances
      summary: Deletes an existing alert instance
      operationId: DeleteAlertInstances
      parameters:
      - name: id
        description: Alert instance ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/AlertInstances:
    get:
      tags:
      - AlertInstances
      summary: Gets all alert instances that fall into a given page range.
      operationId: GetAllAlertInstances
      parameters:
      - name: page.number
        description: Page Number
        in: query
        schema:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
      - name: page.size
        description: Page Size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertInstance'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertInstance'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertInstance'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertInstance'
    patch:
      tags:
      - AlertInstances
      summary: Updates only the status for a given alert instance
      operationId: PatchAlertInstances
      requestBody:
        description: AlertInstance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInstance'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInstance'
          application/xml:
            schema:
              $ref: '#/components/schemas/AlertInstance'
          text/xml:
            schema:
              $ref: '#/components/schemas/AlertInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertInstance'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertInstance'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertInstance'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertInstance'
            text/xml:
              schema:
                $ref: '#/components/schemas/AlertInstance'
      x-codegen-request-body-name: alertInstance
  /api/v1/AlertSubscriptions:
    get:
      tags:
      - AlertSubscriptions
      summary: Gets all alert subscriptions in the organization
      operationId: GetAllAlertSubscriptions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertSubscription'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertSubscription'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertSubscription'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertSubscription'
    post:
      tags:
      - AlertSubscriptions
      summary: Adds a new alert subscription
      operationId: PostAlertSubscriptions
      requestBody:
        description: AlertSubscription data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          application/xml:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          text/xml:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            text/xml:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
      x-codegen-request-body-name: alertSubscription
  /api/v1/AlertSubscriptions/{id}:
    get:
      tags:
      - AlertSubscriptions
      summary: Gets a alert subscription by ID
      operationId: GetAlertSubscriptions
      parameters:
      - name: id
        description: Alert subscription ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            text/xml:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
    put:
      tags:
      - AlertSubscriptions
      summary: Updates an existing alert subscription, using a given ID
      operationId: PutAlertSubscriptions
      parameters:
      - name: id
        description: Alert subscription ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: AlertSubscription data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          application/xml:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          text/xml:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
            text/xml:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
      x-codegen-request-body-name: alertSubscription
    delete:
      tags:
      - AlertSubscriptions
      summary: Deletes an existing alert subscription, given an ID
      operationId: DeleteAlertSubscriptions
      parameters:
      - name: id
        description: Alert subscription ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Announcements:
    get:
      tags:
      - Announcements
      summary: Gets all announcements on the management server
      operationId: GetAllAnnouncements
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
  /api/v1/Computers/{computerid}/Applications:
    get:
      tags:
      - Applications
      summary: Gets all applications installed on a given computer
      operationId: GetApplications
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
  /api/v1/AuditLog:
    get:
      tags:
      - AuditLog
      summary: Gets all audit log entries between optional start and end times, in
        UTC
      operationId: GetByDateAuditLog
      parameters:
      - name: startDateTime
        in: query
        description: An optional start time
        schema:
          type: string
          format: date-time
      - name: endDateTime
        in: query
        description: An optional end time
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogEntry'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogEntry'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogEntry'
  /api/v1/Computers/{computerid}/BackupCloudberryConfig:
    get:
      tags:
      - BackupCloudberry
      summary: Gets the cloudberry backup configuration for a given computer
      operationId: GetConfigBackupCloudberry
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupCloudberryComputerConfig'
            text/json:
              schema:
                $ref: '#/components/schemas/BackupCloudberryComputerConfig'
  /api/v1/Computers/{computerid}/BackupCloudberryPlans:
    get:
      tags:
      - BackupCloudberry
      summary: Gets the cloudberry backup plans for a given computer
      operationId: GetPlansBackupCloudberry
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlan'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlan'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlan'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlan'
  /api/v1/Computers/{computerid}/BackupCloudberryPlans/{planid}/History:
    get:
      tags:
      - BackupCloudberry
      summary: Gets the cloudberry backup plan history, for a given computer ID and
        plan ID
      operationId: GetPlanHistoryBackupCloudberry
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: planid
        description: Plan ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlanHistory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlanHistory'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlanHistory'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackupCloudberryComputerPlanHistory'
  /api/v1/Computers/{computerid}/BenchmarkDataPoints:
    get:
      tags:
      - BenchmarkDataPoints
      summary: Gets all benchmark data points for a given computer.  Each benchmark
        data point will have an associated "benchmark" and "benchmark data set".
      operationId: GetByComputerBenchmarkDataPoints
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataPoint'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataPoint'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataPoint'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataPoint'
  /api/v1/BenchmarkDataSets:
    get:
      tags:
      - BenchmarkDataSets
      summary: Each benchmark for a particular computer may contain multiple data
        sets.  This returns all available data sets for the organization, across all
        computers.
      operationId: GetAllBenchmarkDataSets
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataSet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataSet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataSet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenchmarkDataSet'
  /api/v1/BenchmarkDataSets/{id}:
    get:
      tags:
      - BenchmarkDataSets
      summary: Gets a particular benchmark data set given a benchmark data set id
      operationId: GetBenchmarkDataSets
      parameters:
      - name: id
        description: Benchmark data set ID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchmarkDataSet'
            text/json:
              schema:
                $ref: '#/components/schemas/BenchmarkDataSet'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenchmarkDataSet'
            text/xml:
              schema:
                $ref: '#/components/schemas/BenchmarkDataSet'
  /api/v1/Benchmarks:
    get:
      tags:
      - Benchmarks
      summary: Gets all available benchmarks for the organization.  Each benchmark
        is named for the corresponding performance counter, e.g. Name = "\Processor(_Total)\%
        Processor Time"
      operationId: GetAllBenchmarks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benchmark'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benchmark'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benchmark'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benchmark'
  /api/v1/Benchmarks/{id}:
    get:
      tags:
      - Benchmarks
      summary: Gets a particular benchmark given a benchmark id
      operationId: GetBenchmarks
      parameters:
      - name: id
        description: Benchmark ID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benchmark'
            text/json:
              schema:
                $ref: '#/components/schemas/Benchmark'
            application/xml:
              schema:
                $ref: '#/components/schemas/Benchmark'
            text/xml:
              schema:
                $ref: '#/components/schemas/Benchmark'
  /api/v1/BillingLicenseUsage:
    get:
      tags:
      - BillingLicenseUsage
      summary: Gets all billing license usage data for the organization, between optional
        start and end dates (in UTC)
      operationId: GetByDateBillingLicenseUsage
      parameters:
      - name: startDateTime
        description: Start date
        in: query
        schema:
          type: string
          format: date-time
      - name: endDateTime
        description: End date
        in: query
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
  /api/v1/BillingSettings:
    get:
      tags:
      - BillingSettings
      summary: Gets the billing settings for the current organization
      operationId: GetBillingSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/BillingSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/BillingSettings'
    put:
      tags:
      - BillingSettings
      summary: Updates existing billing settings.  If you provide a valid billing
        token (from https://www.bravurasoftware.com/billing), the organization will
        use monthly billing for its license usage
      operationId: PutBillingSettings
      requestBody:
        description: BillingSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/BillingSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/BillingSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/BillingSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BillingSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/BillingSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/BillingSettings'
      x-codegen-request-body-name: billingSettings
  /api/v1/BrandDomains:
    get:
      tags:
      - BrandDomains
      summary: Gets all available root domains for branding.  When configuring a brand
        for your organization, you can pick between one or more root domains, e.g.
        "rmmportal.com"
      operationId: GetAllBrandDomains
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandDomain'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandDomain'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandDomain'
  /api/v1/Brands:
    get:
      tags:
      - Brands
      summary: Gets all brands in the organization
      operationId: GetAllBrands
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
    post:
      tags:
      - Brands
      summary: Adds a new brand
      operationId: PostBrands
      requestBody:
        description: Brand data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          text/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/xml:
            schema:
              $ref: '#/components/schemas/Brand'
          text/xml:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
            text/json:
              schema:
                $ref: '#/components/schemas/Brand'
            application/xml:
              schema:
                $ref: '#/components/schemas/Brand'
            text/xml:
              schema:
                $ref: '#/components/schemas/Brand'
      x-codegen-request-body-name: brand
  /api/v1/Brands/{id}:
    get:
      tags:
      - Brands
      summary: Gets a brand by ID
      operationId: GetBrands
      parameters:
      - name: id
        description: Brand ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
            text/json:
              schema:
                $ref: '#/components/schemas/Brand'
            application/xml:
              schema:
                $ref: '#/components/schemas/Brand'
            text/xml:
              schema:
                $ref: '#/components/schemas/Brand'
    delete:
      tags:
      - Brands
      summary: Deletes an existing brand
      operationId: DeleteBrands
      parameters:
      - name: id
        description: Brand ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/BusinessEntities:
    get:
      tags:
      - BusinessEntities
      summary: Gets all business entities in the organization
      operationId: GetAllBusinessEntities
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessEntity'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessEntity'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessEntity'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessEntity'
    post:
      tags:
      - BusinessEntities
      summary: Adds a new business entity
      operationId: PostBusinessEntities
      requestBody:
        description: BusinessEntity data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          text/xml:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
      x-codegen-request-body-name: businessEntity
  /api/v1/BusinessEntities/{id}:
    get:
      tags:
      - BusinessEntities
      summary: Gets a business entity, based on the provided business entity ID
      operationId: GetBusinessEntities
      parameters:
      - name: id
        description: Business entity ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
    put:
      tags:
      - BusinessEntities
      summary: Updates an existing business entity.  You can also change the parent
        of the business entity by adjusting the ParentID value.
      operationId: PutBusinessEntities
      parameters:
      - name: id
        in: path
        description: The id of the Business Entity
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: The Business Entity data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          text/xml:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessEntity'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessEntity'
        400:
          description: Bad Request
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: businessEntity
    delete:
      tags:
      - BusinessEntities
      summary: Deletes an existing business entity
      operationId: DeleteBusinessEntities
      parameters:
      - name: id
        description: Business entity ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/Details:
    get:
      tags:
      - ComputerDetails
      operationId: GetComputerDetails
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ComputerDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComputerDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/ComputerDetails'
  /api/v1/Computers/{computerid}/DisplayName:
    get:
      tags:
      - ComputerDisplayName
      summary: "Returns the user provided display name for a given computer.  The\
        \ display name typically entered in the computer details page,\r\nand is independent\
        \ of the normal computer name, as seen in Windows."
      operationId: GetComputerDisplayName
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
    put:
      tags:
      - ComputerDisplayName
      summary: Adds or Updates the computer's user defined display name
      operationId: PutComputerDisplayName
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: User defined display name
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
      x-codegen-request-body-name: computerDisplayName
    delete:
      tags:
      - ComputerDisplayName
      summary: Deletes the display name for a single computer
      operationId: DeleteComputerDisplayName
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/Metadata:
    get:
      tags:
      - ComputerMetadata
      summary: Gets computer metadata for a given computer
      operationId: GetComputerMetadata
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            text/xml:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
    put:
      tags:
      - ComputerMetadata
      summary: Adds or updates Metadata for a single computer
      operationId: PutComputerMetadata
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Computer Metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          text/json:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          application/xml:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          text/xml:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            text/xml:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
      x-codegen-request-body-name: computerMetadata
    delete:
      tags:
      - ComputerMetadata
      summary: Deletes the metadata for a single computer
      operationId: DeleteComputerMetadata
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
    patch:
      tags:
      - ComputerMetadata
      summary: "Updates individual metadata fields for one computer.  The Patch method\
        \ will update individual fields, whereas the Put \r\nmethod adds or updates\
        \ the entire metadata for one computer."
      operationId: PatchComputerMetadata
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Computer metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          text/json:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          application/xml:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          text/xml:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComputerMetadata'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
            text/xml:
              schema:
                $ref: '#/components/schemas/ComputerMetadata'
      x-codegen-request-body-name: computerMetadata
  /api/v1/ComputerMetadata:
    get:
      tags:
      - ComputerMetadata
      summary: Gets all computer metadata values for all computers in the organization.  Note
        that not every computer will have metadata associated with it.
      operationId: GetAllComputerMetadata
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputerMetadata'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputerMetadata'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputerMetadata'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComputerMetadata'
  /api/v1/Computers:
    get:
      tags:
      - Computers
      summary: Gets all computers in the organization
      operationId: GetAllComputers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Computer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Computer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Computer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Computer'
  /api/v1/Computers/{id}:
    get:
      tags:
      - Computers
      summary: Gets a computer by the computer's id
      operationId: GetComputers
      parameters:
      - name: id
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Computer'
            text/json:
              schema:
                $ref: '#/components/schemas/Computer'
    delete:
      tags:
      - Computers
      summary: "Retires an existing computer, deleting all of its data in OptiTune.\r\
        \nCalling this method will add it to the list of retired computers.  The computer\
        \ will\r\nbe blocked from accessing OptiTune until it is removed from the\
        \ list of retired computers."
      operationId: DeleteComputers
      parameters:
      - name: id
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Deployments/{deploymentid}/Results:
    get:
      tags:
      - DeploymentResults
      summary: Gets all deployment results for a given deployment ID
      operationId: GetDeploymentResults
      parameters:
      - name: deploymentid
        description: Deployment ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentResult'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentResult'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentResult'
  /api/v1/Groups/{groupid}/Deployments:
    get:
      tags:
      - Deployments
      summary: Gets all deployments to a given group
      operationId: GetForGroupDeployments
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
  /api/v1/Deployments:
    get:
      tags:
      - Deployments
      summary: Gets all deployments in the organization
      operationId: GetAllDeployments
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
    post:
      tags:
      - Deployments
      summary: Adds a new deployment
      operationId: PostDeployments
      requestBody:
        description: Deployment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          text/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/xml:
            schema:
              $ref: '#/components/schemas/Deployment'
          text/xml:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
            text/json:
              schema:
                $ref: '#/components/schemas/Deployment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deployment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Deployment'
      x-codegen-request-body-name: deployment
  /api/v1/Deployments/{id}:
    get:
      tags:
      - Deployments
      summary: Gets a deployment by ID
      operationId: GetDeployments
      parameters:
      - name: id
        description: Deployment ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
            text/json:
              schema:
                $ref: '#/components/schemas/Deployment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Deployment'
            text/xml:
              schema:
                $ref: '#/components/schemas/Deployment'
    delete:
      tags:
      - Deployments
      summary: Deletes an existing deployment
      operationId: DeleteDeployments
      parameters:
      - name: id
        description: Deployment ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/EndpointProtection:
    get:
      tags:
      - EndpointProtection
      summary: Gets the endpoint protection information for a given computer, if available
      operationId: GetEndpointProtection
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointProtection'
            text/json:
              schema:
                $ref: '#/components/schemas/EndpointProtection'
  /api/v1/Groups/{groupid}/EndpointProtectionSettings:
    get:
      tags:
      - EndpointProtectionSettings
      summary: Gets the endpoint protection settings for a given group, if available
      operationId: GetEndpointProtectionSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
    put:
      tags:
      - EndpointProtectionSettings
      summary: Adds or updates endpoint protection settings for a given group
      operationId: PutEndpointProtectionSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: EndpointProtectionSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointProtectionSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/EndpointProtectionSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/EndpointProtectionSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/EndpointProtectionSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EndpointProtectionSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointProtectionSettings'
      x-codegen-request-body-name: endpointProtectionSettings
    delete:
      tags:
      - EndpointProtectionSettings
      summary: Deletes existing endpoint protection settings for a given group
      operationId: DeleteEndpointProtectionSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/EndpointProtectionSettings:
    get:
      tags:
      - EndpointProtectionSettings
      summary: Gets all endpoint protection settings for all groups in the organization
      operationId: GetAllEndpointProtectionSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndpointProtectionSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndpointProtectionSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndpointProtectionSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndpointProtectionSettings'
  /api/v1/EventCategories:
    get:
      tags:
      - EventCategories
      summary: Gets all event categories in the organization
      operationId: GetAllEventCategories
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategory'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategory'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategory'
    post:
      tags:
      - EventCategories
      summary: Adds a new event category
      operationId: PostEventCategories
      requestBody:
        description: EventCategory data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/EventCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/EventCategory'
          text/xml:
            schema:
              $ref: '#/components/schemas/EventCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCategory'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategory'
      x-codegen-request-body-name: eventCategory
  /api/v1/EventCategories/{id}:
    get:
      tags:
      - EventCategories
      summary: Gets an event category by ID
      operationId: GetEventCategories
      parameters:
      - name: id
        description: Event category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/EventCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventCategory'
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategory'
    delete:
      tags:
      - EventCategories
      summary: Deletes an existing event category
      operationId: DeleteEventCategories
      parameters:
      - name: id
        description: Event category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/EventCategories/{eventCategoryid}/Memberships:
    get:
      tags:
      - EventCategoryMemberships
      summary: Gets the event category members for a given event category, if available
      operationId: GetEventCategoryMemberships
      parameters:
      - name: eventCategoryid
        description: Event category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategoryMembership'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategoryMembership'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategoryMembership'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventCategoryMembership'
  /api/v1/EventCategories/{eventCategoryid}/Memberships/{eventSourceid}:
    post:
      tags:
      - EventCategoryMemberships
      summary: Adds event source to an event category, if it doesn't already exist
      operationId: PostEventCategoryMemberships
      parameters:
      - name: eventCategoryid
        description: Event category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: eventSourceid
        description: Event source ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
    delete:
      tags:
      - EventCategoryMemberships
      summary: Deletes a event category membership for a given event category and
        event source
      operationId: DeleteEventCategoryMemberships
      parameters:
      - name: eventCategoryid
        description: Event category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: eventSourceid
        description: Event source ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/EventDescriptors:
    get:
      tags:
      - EventDescriptors
      summary: "Gets all event descriptors that are available on the management server.\
        \  \r\nTo create a new event source, you will need an event descriptor with\
        \ valid parameters filled in."
      operationId: GetAllEventDescriptors
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDescriptor'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDescriptor'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDescriptor'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDescriptor'
  /api/v1/EventSources:
    get:
      tags:
      - EventSources
      summary: Gets all event sources in the organization
      operationId: GetAllEventSources
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSource'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSource'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSource'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSource'
    post:
      tags:
      - EventSources
      summary: Adds a new event source.  Use the EventDescriptors resource to get
        the valid event descriptors on the management server, and pick one to use
        for the new event source.
      operationId: PostEventSources
      requestBody:
        description: EventSource data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSource'
          text/json:
            schema:
              $ref: '#/components/schemas/EventSource'
          application/xml:
            schema:
              $ref: '#/components/schemas/EventSource'
          text/xml:
            schema:
              $ref: '#/components/schemas/EventSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventSource'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSource'
            text/json:
              schema:
                $ref: '#/components/schemas/EventSource'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventSource'
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSource'
      x-codegen-request-body-name: eventSource
  /api/v1/EventSources/{id}:
    get:
      tags:
      - EventSources
      summary: Gets an event source by ID
      operationId: GetEventSources
      parameters:
      - name: id
        description: Event source ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSource'
            text/json:
              schema:
                $ref: '#/components/schemas/EventSource'
            application/xml:
              schema:
                $ref: '#/components/schemas/EventSource'
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSource'
    delete:
      tags:
      - EventSources
      summary: Deletes an existing event source
      operationId: DeleteEventSources
      parameters:
      - name: id
        description: Event source ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/FavoriteTasks:
    get:
      tags:
      - FavoriteTasks
      summary: Gets all favorite tasks in the organization
      operationId: GetAllFavoriteTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteTask'
    post:
      tags:
      - FavoriteTasks
      summary: Adds a new favorite task
      operationId: PostFavoriteTasks
      requestBody:
        description: FavoriteTask data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteTask'
          text/json:
            schema:
              $ref: '#/components/schemas/FavoriteTask'
          application/xml:
            schema:
              $ref: '#/components/schemas/FavoriteTask'
          text/xml:
            schema:
              $ref: '#/components/schemas/FavoriteTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FavoriteTask'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
            text/json:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
      x-codegen-request-body-name: favoriteTask
  /api/v1/FavoriteTasks/{id}:
    get:
      tags:
      - FavoriteTasks
      summary: Gets a favorite task by task ID
      operationId: GetFavoriteTasks
      parameters:
      - name: id
        description: Task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
            text/json:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/FavoriteTask'
    delete:
      tags:
      - FavoriteTasks
      summary: Deletes an existing favorite task, by task ID
      operationId: DeleteFavoriteTasks
      parameters:
      - name: id
        description: Task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Files:
    get:
      tags:
      - Files
      summary: Gets all files in the organization
      operationId: GetAllFiles
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
    post:
      tags:
      - Files
      summary: Upload a file using 'multipart/form-data', supplying a storage type
        to use (1 for local storage, 2 for cloud)
      operationId: UploadFiles
      parameters:
      - name: storageType
        in: query
        description: 1 for local storage, 2 for cloud storage
        schema:
          type: integer
          default: 1
      requestBody:
        description: File data
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
            text/json:
              schema:
                $ref: '#/components/schemas/File'
            application/xml:
              schema:
                $ref: '#/components/schemas/File'
            text/xml:
              schema:
                $ref: '#/components/schemas/File'
  /api/v1/Files/{id}:
    get:
      tags:
      - Files
      summary: Gets a single file in the organization, given a file ID
      operationId: GetFiles
      parameters:
      - name: id
        description: File ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
            text/json:
              schema:
                $ref: '#/components/schemas/File'
            application/xml:
              schema:
                $ref: '#/components/schemas/File'
            text/xml:
              schema:
                $ref: '#/components/schemas/File'
    delete:
      tags:
      - Files
      summary: Deletes an existing file
      operationId: DeleteFiles
      parameters:
      - name: id
        description: File ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Groups/{groupid}/Memberships:
    get:
      tags:
      - GroupMemberships
      summary: Gets the group members for a given group, if available
      operationId: GetGroupMemberships
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMembership'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMembership'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMembership'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMembership'
  /api/v1/Groups/{groupid}/Memberships/{computerid}:
    post:
      tags:
      - GroupMemberships
      summary: Adds computer to a group, using the static membership type
      operationId: PostGroupMemberships
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
    delete:
      tags:
      - GroupMemberships
      summary: "Deletes a group membership for a given computer and group.  Note that\
        \ this will only\r\nwork if the group membership type for the computer is\
        \ 'Static'."
      operationId: DeleteGroupMemberships
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Groups:
    get:
      tags:
      - Groups
      summary: Gets all groups in the organization
      operationId: GetAllGroups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneGroup'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneGroup'
    post:
      tags:
      - Groups
      summary: Adds a new group
      operationId: PostGroups
      requestBody:
        description: OptiTuneGroup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptiTuneGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/OptiTuneGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/OptiTuneGroup'
          text/xml:
            schema:
              $ref: '#/components/schemas/OptiTuneGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OptiTuneGroup'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
      x-codegen-request-body-name: group
  /api/v1/Groups/{id}:
    get:
      tags:
      - Groups
      summary: Looks up a given group, based on its ID
      operationId: GetGroups
      parameters:
      - name: id
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/OptiTuneGroup'
    delete:
      tags:
      - Groups
      summary: Deletes an existing group
      operationId: DeleteGroups
      parameters:
      - name: id
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/InstallTasks:
    get:
      tags:
      - InstallTasks
      summary: Gets all install tasks in the organization
      operationId: GetAllInstallTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstallTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstallTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstallTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstallTask'
    post:
      tags:
      - InstallTasks
      summary: Adds a new install task.  If using PackageFileID, be sure to upload
        your package file first and get the ID of the file before calling this method
      operationId: PostInstallTasks
      requestBody:
        description: InstallTask data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallTask'
          text/json:
            schema:
              $ref: '#/components/schemas/InstallTask'
          application/xml:
            schema:
              $ref: '#/components/schemas/InstallTask'
          text/xml:
            schema:
              $ref: '#/components/schemas/InstallTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InstallTask'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallTask'
            text/json:
              schema:
                $ref: '#/components/schemas/InstallTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/InstallTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/InstallTask'
      x-codegen-request-body-name: installTask
  /api/v1/InstallTasks/{id}:
    get:
      tags:
      - InstallTasks
      summary: Gets a install task by ID
      operationId: GetInstallTasks
      parameters:
      - name: id
        description: Install task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallTask'
            text/json:
              schema:
                $ref: '#/components/schemas/InstallTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/InstallTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/InstallTask'
    delete:
      tags:
      - InstallTasks
      summary: Deletes an existing install task, and all of its associated deployments
      operationId: DeleteInstallTasks
      parameters:
      - name: id
        description: Install task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/LocalUsers:
    get:
      tags:
      - LocalUsers
      summary: Gets all applications installed on a given computer
      operationId: GetLocalUsers
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalUser'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalUser'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalUser'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalUser'
  /api/v1/MailTemplates:
    get:
      tags:
      - MailTemplates
      summary: Gets all mail templates in the organization
      operationId: GetAllMailTemplates
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailTemplate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailTemplate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailTemplate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailTemplate'
    post:
      tags:
      - MailTemplates
      summary: Adds a new mail template
      operationId: PostMailTemplates
      requestBody:
        description: MailTemplate data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          application/xml:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          text/xml:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailTemplate'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            application/xml:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            text/xml:
              schema:
                $ref: '#/components/schemas/MailTemplate'
      x-codegen-request-body-name: mailTemplate
  /api/v1/MailTemplates/{id}:
    get:
      tags:
      - MailTemplates
      summary: Gets a mail template by ID
      operationId: GetMailTemplates
      parameters:
      - name: id
        description: Mail template ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            application/xml:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            text/xml:
              schema:
                $ref: '#/components/schemas/MailTemplate'
    put:
      tags:
      - MailTemplates
      summary: Updates an existing mail template, using a given ID
      operationId: PutMailTemplates
      parameters:
      - name: id
        description: Mail template ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: MailTemplate data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          application/xml:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          text/xml:
            schema:
              $ref: '#/components/schemas/MailTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MailTemplate'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            application/xml:
              schema:
                $ref: '#/components/schemas/MailTemplate'
            text/xml:
              schema:
                $ref: '#/components/schemas/MailTemplate'
      x-codegen-request-body-name: mailTemplate
    delete:
      tags:
      - MailTemplates
      summary: Deletes an existing mail template
      operationId: DeleteMailTemplates
      parameters:
      - name: id
        description: Mail template ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/MalwareThreats:
    get:
      tags:
      - MalwareThreats
      summary: Gets any detected malware threats on a given computer
      operationId: GetMalwareThreats
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MalwareThreat'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MalwareThreat'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MalwareThreat'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MalwareThreat'
  /api/v1/NotificationGroups/{notificationgroupid}/MemberAccounts:
    get:
      tags:
      - NotificationGroupMemberAccounts
      summary: Gets the account members of a notification group by notification group
        ID
      operationId: GetNotificationGroupMemberAccounts
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMemberAccount'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMemberAccount'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMemberAccount'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMemberAccount'
  /api/v1/NotificationGroups/{notificationgroupid}/MemberAccounts/{accountid}:
    put:
      tags:
      - NotificationGroupMemberAccounts
      summary: Adds an account to a notification group
      operationId: PutNotificationGroupMemberAccounts
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: accountid
        description: Account ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: NotificationGroupMemberAccount data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupMemberAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupMemberAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroupMemberAccount'
          text/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroupMemberAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationGroupMemberAccount'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroupMemberAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationGroupMemberAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroupMemberAccount'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroupMemberAccount'
      x-codegen-request-body-name: notificationGroupMemberAccount
    delete:
      tags:
      - NotificationGroupMemberAccounts
      summary: Deletes an existing notification group account
      operationId: DeleteNotificationGroupMemberAccounts
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: accountid
        description: Account ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/NotificationGroups/{notificationgroupid}/Members:
    get:
      tags:
      - NotificationGroupMembers
      summary: Gets the members of a notification group by notification group ID
      operationId: GetNotificationGroupMembers
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMember'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMember'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMember'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroupMember'
    post:
      tags:
      - NotificationGroupMembers
      summary: Adds a member to a notification group.  For users that already have
        OptiTune accounts, use NotificationGroupMemberAccounts instead.
      operationId: PostNotificationGroupMembers
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: NotificationGroupMember data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          application/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          text/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
      x-codegen-request-body-name: notificationGroupMember
  /api/v1/NotificationGroups/{notificationgroupid}/Members/{notificationgroupmemberid}:
    put:
      tags:
      - NotificationGroupMembers
      summary: Updates an existing notification group member
      operationId: PutNotificationGroupMembers
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: notificationgroupmemberid
        description: Notification group member ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: NotificationGroupMember data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          application/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          text/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationGroupMember'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroupMember'
      x-codegen-request-body-name: notificationGroupMember
    delete:
      tags:
      - NotificationGroupMembers
      summary: Deletes an existing notification group member
      operationId: DeleteNotificationGroupMembers
      parameters:
      - name: notificationgroupid
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: notificationgroupmemberid
        description: Notification group member ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/NotificationGroups:
    get:
      tags:
      - NotificationGroups
      summary: Gets all notification groups in the organization
      operationId: GetAllNotificationGroups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroup'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationGroup'
    post:
      tags:
      - NotificationGroups
      summary: Adds a new notification group
      operationId: PostNotificationGroups
      requestBody:
        description: NotificationGroup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          text/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
      x-codegen-request-body-name: notificationGroup
  /api/v1/NotificationGroups/{id}:
    get:
      tags:
      - NotificationGroups
      summary: Gets a notification group by ID
      operationId: GetNotificationGroups
      parameters:
      - name: id
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
    put:
      tags:
      - NotificationGroups
      summary: Updates an existing notification group, using a given ID
      operationId: PutNotificationGroups
      parameters:
      - name: id
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: NotificationGroup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          text/xml:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationGroup'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
            text/xml:
              schema:
                $ref: '#/components/schemas/NotificationGroup'
      x-codegen-request-body-name: notificationGroup
    delete:
      tags:
      - NotificationGroups
      summary: Deletes an existing notification group
      operationId: DeleteNotificationGroups
      parameters:
      - name: id
        description: Notification group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/OptiTuneTasks:
    get:
      tags:
      - OptiTuneTasks
      summary: Gets all tasks in the organization, that match the given taskType.  Use
        AllTasks to get all tasks in the organization.
      operationId: GetAllOptiTuneTasks
      parameters:
      - name: taskType
        description: Task type
        in: query
        required: true
        schema:
          type: string
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptiTuneTask'
  /api/v1/OptiTuneTasks/{id}:
    get:
      tags:
      - OptiTuneTasks
      summary: Gets a task by ID
      operationId: GetOptiTuneTasks
      parameters:
      - name: id
        description: Task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptiTuneTask'
            text/json:
              schema:
                $ref: '#/components/schemas/OptiTuneTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/OptiTuneTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/OptiTuneTask'
  /api/v1/Organizations/{organizationid}/BillingLicenseUsage:
    get:
      tags:
      - Organizations
      summary: Gets an organization's license usage data for an optional date and
        time range, in UTC
      operationId: GetOrganizationsBillingLicenseUsageByDate
      parameters:
      - name: organizationid
        description: Organization ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: startDateTime
        description: Start Date Time
        in: query
        schema:
          type: string
          format: date-time
      - name: endDateTime
        description: End Date Time
        in: query
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingLicenseUsage'
  /api/v1/Organizations:
    get:
      tags:
      - Organizations
      summary: Gets all organizations on the management server.  You need to have
        master administrator privileges to call any of the Organization resource methods
      operationId: GetAllOrganizations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    post:
      tags:
      - Organizations
      summary: Adds a new organization
      operationId: PostOrganizations
      parameters:
      - name: generateApiCredentials
        description: Generate Api credentials
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: OrganizationRegistration data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRegistration'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationRegistration'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrganizationRegistration'
          text/xml:
            schema:
              $ref: '#/components/schemas/OrganizationRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRegistration'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
      x-codegen-request-body-name: orgRegistration
  /api/v1/Organizations/{id}:
    get:
      tags:
      - Organizations
      summary: Gets a organization by ID
      operationId: GetOrganizations
      parameters:
      - name: id
        description: Organization ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
    put:
      tags:
      - Organizations
      summary: Updates an existing organization, using a given ID
      operationId: PutOrganizations
      parameters:
      - name: id
        description: Organization ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Organization data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          text/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          text/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            text/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/xml:
              schema:
                $ref: '#/components/schemas/Organization'
      x-codegen-request-body-name: organization
    delete:
      tags:
      - Organizations
      summary: Deletes an existing organization, and all of its associated data
      operationId: DeleteOrganizations
      parameters:
      - name: id
        description: Organization ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/OrganizationSettings:
    get:
      tags:
      - OrganizationSettings
      summary: Gets all organization settings, for all organizations
      operationId: GetAllOrganizationSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationSettings'
  /api/v1/OrganizationSettings/{id}:
    get:
      tags:
      - OrganizationSettings
      summary: Gets an organization settings by organization ID
      operationId: GetOrganizationSettings
      parameters:
      - name: id
        description: Organization ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
    put:
      tags:
      - OrganizationSettings
      summary: Updates an existing organization settings, using a given organization
        ID
      operationId: PutOrganizationSettings
      parameters:
      - name: id
        description: Organization ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: OrganizationSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
      x-codegen-request-body-name: organizationSettings
  /api/v1/Groups/{groupid}/PerformanceSettings:
    get:
      tags:
      - PerformanceSettings
      summary: Gets the performance settings for a given group, if available
      operationId: GetPerformanceSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
    put:
      tags:
      - PerformanceSettings
      summary: Adds or updates performance settings for a given group
      operationId: PutPerformanceSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: PerformanceSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformanceSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/PerformanceSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/PerformanceSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/PerformanceSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PerformanceSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/PerformanceSettings'
      x-codegen-request-body-name: performanceSettings
    delete:
      tags:
      - PerformanceSettings
      summary: Deletes performance settings for a given group
      operationId: DeletePerformanceSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/PerformanceSettings:
    get:
      tags:
      - PerformanceSettings
      summary: Gets all performance settings for all groups in the organization
      operationId: GetAllPerformanceSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerformanceSettings'
  /api/v1/ProductKeys:
    get:
      tags:
      - ProductKeys
      summary: Gets all product keys for the organization
      operationId: GetAllProductKeys
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKey'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKey'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKey'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKey'
    post:
      tags:
      - ProductKeys
      summary: Adds a new product key for the organization
      operationId: PostProductKeys
      requestBody:
        description: ProductKey data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductKey'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductKey'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProductKey'
          text/xml:
            schema:
              $ref: '#/components/schemas/ProductKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductKey'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductKey'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductKey'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProductKey'
            text/xml:
              schema:
                $ref: '#/components/schemas/ProductKey'
      x-codegen-request-body-name: productKey
  /api/v1/Groups/{groupid}/RemoteAccessSettings:
    get:
      tags:
      - RemoteAccessSettings
      summary: Gets the remote access settings for a given group, if available
      operationId: GetRemoteAccessSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
    put:
      tags:
      - RemoteAccessSettings
      summary: Adds or updates remote access settings for a given group
      operationId: PutRemoteAccessSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: RemoteAccessSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteAccessSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoteAccessSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteAccessSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoteAccessSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoteAccessSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoteAccessSettings'
      x-codegen-request-body-name: remoteAccessSettings
    delete:
      tags:
      - RemoteAccessSettings
      summary: Deletes existing remote access settings for a given group
      operationId: DeleteRemoteAccessSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/RemoteAccessSettings:
    get:
      tags:
      - RemoteAccessSettings
      summary: Gets all remote access settings for all groups in the organization
      operationId: GetAllRemoteAccessSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAccessSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAccessSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAccessSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAccessSettings'
  /api/v1/RemoteAssistanceRequests:
    get:
      tags:
      - RemoteAssistanceRequests
      summary: Gets all remoteAssistanceRequests in the organization
      operationId: GetAllRemoteAssistanceRequests
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAssistanceRequest'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteAssistanceRequest'
    post:
      tags:
      - RemoteAssistanceRequests
      summary: Adds a new RemoteAssistanceRequest
      operationId: PostRemoteAssistanceRequests
      requestBody:
        description: RemoteAssistanceRequest data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
      x-codegen-request-body-name: remoteAssistanceRequest
  /api/v1/RemoteAssistanceRequests/{id}:
    get:
      tags:
      - RemoteAssistanceRequests
      summary: Gets a remoteAssistanceRequest by ID
      operationId: GetRemoteAssistanceRequests
      parameters:
      - name: id
        description: RemoteAssistanceRequest ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
    put:
      tags:
      - RemoteAssistanceRequests
      summary: Updates an existing RemoteAssistanceRequest, using a given ID
      operationId: PutRemoteAssistanceRequests
      parameters:
      - name: id
        description: RemoteAssistanceRequest ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: RemoteAssistanceRequest data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoteAssistanceRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoteAssistanceRequest'
      x-codegen-request-body-name: remoteAssistanceRequest
    delete:
      tags:
      - RemoteAssistanceRequests
      summary: Deletes an existing remote assistance request
      operationId: DeleteRemoteAssistanceRequests
      parameters:
      - name: id
        description: Remote assistance request ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/RemoteConnection:
    get:
      tags:
      - RemoteConnections
      summary: "This will initiate a remote connection to the given computer, and\
        \ return an .OTC file used by the Remote Connect software\r\nwhich will in\
        \ turn connect to the remote computer.  Note that if the computer in question\
        \ is not connected to OptiTune,\r\nit will not work, so it is suggested that\
        \ the caller check the computer's connection status before making this request."
      operationId: GetRemoteConnections
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/RemoteConnectionUri:
    get:
      tags:
      - RemoteConnections
      summary: "This will initiate a remote connection to the given computer, and\
        \ return an URI with a custom url scheme (otcfile://) used by the Remote Connect\
        \ software\r\nwhich will in turn connect to the remote computer.  Note that\
        \ if the computer in question is not connected to OptiTune,\r\nit will not\
        \ work, so it is suggested that the caller check the computer's connection\
        \ status before making this request."
      operationId: GetUriRemoteConnections
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
  /api/v1/RepairTasks:
    get:
      tags:
      - RepairTasks
      summary: Gets all repair tasks in the organization
      operationId: GetAllRepairTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairTask'
    post:
      tags:
      - RepairTasks
      summary: Adds a new repair task
      operationId: PostRepairTasks
      requestBody:
        description: RepairTask data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairTask'
          text/json:
            schema:
              $ref: '#/components/schemas/RepairTask'
          application/xml:
            schema:
              $ref: '#/components/schemas/RepairTask'
          text/xml:
            schema:
              $ref: '#/components/schemas/RepairTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepairTask'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTask'
            text/json:
              schema:
                $ref: '#/components/schemas/RepairTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/RepairTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/RepairTask'
      x-codegen-request-body-name: repairTask
  /api/v1/RepairTasks/{id}:
    get:
      tags:
      - RepairTasks
      summary: Gets a repair task by ID
      operationId: GetRepairTasks
      parameters:
      - name: id
        description: Repair task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairTask'
            text/json:
              schema:
                $ref: '#/components/schemas/RepairTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/RepairTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/RepairTask'
    delete:
      tags:
      - RepairTasks
      summary: Deletes an existing repair task, and all of its associated deployments
      operationId: DeleteRepairTasks
      parameters:
      - name: id
        description: Repair task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/RetiredComputers:
    get:
      tags:
      - RetiredComputers
      summary: Gets all retired computers in the organization
      operationId: GetAllRetiredComputers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetiredComputer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetiredComputer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetiredComputer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetiredComputer'
  /api/v1/RetiredComputers/{id}:
    get:
      tags:
      - RetiredComputers
      summary: Gets a retired computer by computer ID
      operationId: GetRetiredComputers
      parameters:
      - name: id
        description: Retired computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetiredComputer'
            text/json:
              schema:
                $ref: '#/components/schemas/RetiredComputer'
            application/xml:
              schema:
                $ref: '#/components/schemas/RetiredComputer'
            text/xml:
              schema:
                $ref: '#/components/schemas/RetiredComputer'
    delete:
      tags:
      - RetiredComputers
      summary: Removes an existing retired computer, allowing to access OptiTune again
      operationId: DeleteRetiredComputers
      parameters:
      - name: id
        description: Retired computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/ScriptTasks:
    get:
      tags:
      - ScriptTasks
      summary: Gets all script tasks in the organization
      operationId: GetAllScriptTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptTask'
    post:
      tags:
      - ScriptTasks
      summary: Adds a new script task
      operationId: PostScriptTasks
      requestBody:
        description: ScriptTask data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptTask'
          text/json:
            schema:
              $ref: '#/components/schemas/ScriptTask'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptTask'
          text/xml:
            schema:
              $ref: '#/components/schemas/ScriptTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScriptTask'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptTask'
            text/json:
              schema:
                $ref: '#/components/schemas/ScriptTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScriptTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/ScriptTask'
      x-codegen-request-body-name: scriptTask
  /api/v1/ScriptTasks/{id}:
    get:
      tags:
      - ScriptTasks
      summary: Gets a script task by task ID
      operationId: GetScriptTasks
      parameters:
      - name: id
        description: Script task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptTask'
            text/json:
              schema:
                $ref: '#/components/schemas/ScriptTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScriptTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/ScriptTask'
    delete:
      tags:
      - ScriptTasks
      summary: Deletes an existing script task, and all of its associated deployments
      operationId: DeleteScriptTasks
      parameters:
      - name: id
        description: Script task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/SingletonGroup:
    get:
      tags:
      - SingletonGroups
      summary: Gets the ID of the singleton group for a given computer ID.  The singleton
        group is used when creating settings or deploying tasks to a single computer.
      operationId: GetSingletonGroups
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
                example: 00000000-0000-0000-0000-000000000000
            text/json:
              schema:
                type: string
                format: uuid
                example: 00000000-0000-0000-0000-000000000000
            application/xml:
              schema:
                type: string
                format: uuid
                example: 00000000-0000-0000-0000-000000000000
            text/xml:
              schema:
                type: string
                format: uuid
                example: 00000000-0000-0000-0000-000000000000
  /api/v1/SystemTasks:
    get:
      tags:
      - SystemTasks
      summary: Gets all system tasks in the organization
      operationId: GetAllSystemTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemTask'
  /api/v1/SystemTasks/{id}:
    get:
      tags:
      - SystemTasks
      summary: Gets a system task by ID
      operationId: GetSystemTasks
      parameters:
      - name: id
        description: System task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTask'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/SystemTask'
  /api/v1/Groups/{groupid}/TrayIconSettings:
    get:
      tags:
      - TrayIconSettings
      summary: Gets the tray icon settings for a given group, if available
      operationId: GetTrayIconSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
    put:
      tags:
      - TrayIconSettings
      summary: Adds or updates tray icon settings for a given group
      operationId: PutTrayIconSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: TrayIconSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrayIconSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/TrayIconSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/TrayIconSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/TrayIconSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrayIconSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/TrayIconSettings'
      x-codegen-request-body-name: trayIconSettings
    delete:
      tags:
      - TrayIconSettings
      summary: Deletes existing tray icon settings for a given group
      operationId: DeleteTrayIconSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/TrayIconSettings:
    get:
      tags:
      - TrayIconSettings
      summary: Gets all tray icon settings for all groups in the organization
      operationId: GetAllTrayIconSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrayIconSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrayIconSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrayIconSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrayIconSettings'
  /api/v1/UninstallTasks:
    get:
      tags:
      - UninstallTasks
      summary: Gets all uninstall tasks in the organization
      operationId: GetAllUninstallTasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UninstallTask'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UninstallTask'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UninstallTask'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UninstallTask'
    post:
      tags:
      - UninstallTasks
      summary: Adds a new uninstall task
      operationId: PostUninstallTasks
      requestBody:
        description: UninstallTask data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UninstallTask'
          text/json:
            schema:
              $ref: '#/components/schemas/UninstallTask'
          application/xml:
            schema:
              $ref: '#/components/schemas/UninstallTask'
          text/xml:
            schema:
              $ref: '#/components/schemas/UninstallTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UninstallTask'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninstallTask'
            text/json:
              schema:
                $ref: '#/components/schemas/UninstallTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/UninstallTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/UninstallTask'
      x-codegen-request-body-name: uninstallTask
  /api/v1/UninstallTasks/{id}:
    get:
      tags:
      - UninstallTasks
      summary: Gets a uninstall task by ID
      operationId: GetUninstallTasks
      parameters:
      - name: id
        description: Uninstall task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninstallTask'
            text/json:
              schema:
                $ref: '#/components/schemas/UninstallTask'
            application/xml:
              schema:
                $ref: '#/components/schemas/UninstallTask'
            text/xml:
              schema:
                $ref: '#/components/schemas/UninstallTask'
    delete:
      tags:
      - UninstallTasks
      summary: Deletes an existing uninstall task, and all of its associated deployments
      operationId: DeleteUninstallTasks
      parameters:
      - name: id
        description: Uninstall task ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Webhooks:
    get:
      tags:
      - Webhooks
      summary: Gets all webhooks in the organization
      operationId: GetAllWebhooks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
    post:
      tags:
      - Webhooks
      summary: Adds a new Webhook
      operationId: PostWebhooks
      requestBody:
        description: Webhook data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          text/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
          text/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
      x-codegen-request-body-name: webhook
  /api/v1/Webhooks/{id}:
    get:
      tags:
      - Webhooks
      summary: Gets a webhook by ID
      operationId: GetWebhooks
      parameters:
      - name: id
        description: Webhook ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      tags:
      - Webhooks
      summary: Updates an existing Webhook, using a given ID
      operationId: PutWebhooks
      parameters:
      - name: id
        description: Webhook ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Webhook data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          text/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
          text/xml:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/json:
              schema:
                $ref: '#/components/schemas/Webhook'
            application/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
            text/xml:
              schema:
                $ref: '#/components/schemas/Webhook'
      x-codegen-request-body-name: webhook
    delete:
      tags:
      - Webhooks
      summary: Deletes an existing Webhook
      operationId: DeleteWebhooks
      parameters:
      - name: id
        description: Webhook ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/Computers/{computerid}/WindowsEventLog:
    get:
      tags:
      - WindowsEventLog
      summary: Gets windows event log entries on a given computer
      operationId: GetWindowsEventLog
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: startDateTime
        description: Start Date Time
        in: query
        schema:
          type: string
          format: date-time
      - name: endDateTime
        description: End Date Time
        in: query
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
  /api/v1/Computers/{computerid}/WindowsEventLog/{logNameId}:
    get:
      tags:
      - WindowsEventLog
      summary: Gets windows event log entries for a given log on a given computer
      operationId: GetWindowsEventLogByLogNameId
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: logNameId
        description: Log name ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: startDateTime
        description: Start Date Time
        in: query
        schema:
          type: string
          format: date-time
      - name: endDateTime
        description: End Date Time
        in: query
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogEntry'
  /api/v1/WindowsEventLogNames:
    get:
      tags:
      - WindowsEventLog
      summary: Gets the names and IDs of all windows event logs for the organization.  The
        log IDs are needed to query event log entries for a given computer.
      operationId: GetWindowsEventLogNames
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogName'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogName'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogName'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogName'
  /api/v1/Groups/{groupid}/WindowsEventLogSettings:
    get:
      tags:
      - WindowsEventLogSettings
      summary: Gets the windows event log settings for a given group, if available
      operationId: GetWindowsEventLogSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
    put:
      tags:
      - WindowsEventLogSettings
      summary: Adds or updates windows event log settings for a given group
      operationId: PutWindowsEventLogSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: WindowsEventLogSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WindowsEventLogSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/WindowsEventLogSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/WindowsEventLogSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/WindowsEventLogSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WindowsEventLogSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/WindowsEventLogSettings'
      x-codegen-request-body-name: eventLogSettings
    delete:
      tags:
      - WindowsEventLogSettings
      summary: Deletes existing windows event log settings for a given group
      operationId: DeleteWindowsEventLogSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/WindowsEventLogSettings:
    get:
      tags:
      - WindowsEventLogSettings
      summary: Gets all windows event log settings for all groups in the organization
      operationId: GetAllWindowsEventLogSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventLogSettings'
  /api/v1/api/v1/WindowsUpdateCategory/{categoryid}/Members:
    get:
      tags:
      - WindowsUpdateCategories
      summary: Gets all windows updates that belong to a given windows update category
      operationId: GetMembersWindowsUpdateCategories
      parameters:
      - name: categoryid
        description: Category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
  /api/v1/WindowsUpdateCategories:
    get:
      tags:
      - WindowsUpdateCategories
      summary: Gets all windows update categories in the organization
      operationId: GetAllWindowsUpdateCategories
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateCategory'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateCategory'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateCategory'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateCategory'
  /api/v1/WindowsUpdateCategories/{id}:
    get:
      tags:
      - WindowsUpdateCategories
      summary: Gets a windows update category by ID
      operationId: GetWindowsUpdateCategories
      parameters:
      - name: id
        description: Category ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdateCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdateCategory'
  /api/v1/Computers/{computerid}/UpdateState:
    get:
      tags:
      - WindowsUpdateComputerState
      summary: Gets the state of all windows updates on a given computer
      operationId: GetWindowsUpdateComputerState
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateComputerState'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateComputerState'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateComputerState'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateComputerState'
  /api/v1/Computers/{computerid}/WindowsUpdateHistory:
    get:
      tags:
      - WindowsUpdateHistory
      summary: Gets the entire windows update history for a given computer
      operationId: GetWindowsUpdateHistory
      parameters:
      - name: computerid
        description: Computer ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateHistoryEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateHistoryEntry'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateHistoryEntry'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateHistoryEntry'
  /api/v1/WindowsUpdates:
    get:
      tags:
      - WindowsUpdates
      summary: Gets all windows updates in the organization
      operationId: GetAllWindowsUpdates
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdate'
  /api/v1/WindowsUpdates/{id}:
    get:
      tags:
      - WindowsUpdates
      summary: Gets a windows update by its ID
      operationId: GetWindowsUpdates
      parameters:
      - name: id
        description: Windows update ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdate'
            text/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdate'
  /api/v1/Groups/{groupid}/WindowsUpdateSettings:
    get:
      tags:
      - WindowsUpdateSettings
      summary: Gets the windows update settings for a given group, if available
      operationId: GetWindowsUpdateSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
    put:
      tags:
      - WindowsUpdateSettings
      summary: Adds or updates windows update settings for a given group
      operationId: PutWindowsUpdateSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: WindowsUpdateSettings data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WindowsUpdateSettings'
          text/json:
            schema:
              $ref: '#/components/schemas/WindowsUpdateSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/WindowsUpdateSettings'
          text/xml:
            schema:
              $ref: '#/components/schemas/WindowsUpdateSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WindowsUpdateSettings'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
            text/xml:
              schema:
                $ref: '#/components/schemas/WindowsUpdateSettings'
      x-codegen-request-body-name: windowsUpdateSettings
    delete:
      tags:
      - WindowsUpdateSettings
      summary: Deletes windows update settings for a given group
      operationId: DeleteWindowsUpdateSettings
      parameters:
      - name: groupid
        description: Group ID
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /api/v1/WindowsUpdateSettings:
    get:
      tags:
      - WindowsUpdateSettings
      summary: Gets all windows update settings for all groups in the organization
      operationId: GetAllWindowsUpdateSettings
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateSettings'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateSettings'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsUpdateSettings'
components:
  schemas:
    Account:
      required:
      - AuthenticationMode
      - Email
      - FirstName
      - LastName
      - Roles
      - SavePageSize
      - TimeZoneCode
      - UserName
      type: object
      properties:
        ID:
          type: string
          description: The id of the account
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Roles:
          type: string
          description: "The roles assigned to the account, only certain combinations\
            \ of these flags are allowed, which include:\r\n\r\nAdmin\r\nAdmin | GroupRestricted\r\
            \nReportReader\r\nReportReader | GroupRestricted\r\nReportReader | RemoteAssistance\r\
            \nReportReader | RemoteAssistance | GroupRestricted"
          enum:
          - None
          - ReportReader
          - Admin
          - RemoteAssistance
          - GroupRestricted
          - RemoteAccess
          - MasterAdmin
        FirstName:
          maxLength: 255
          minLength: 1
          type: string
          description: The first name for the account
        LastName:
          maxLength: 255
          minLength: 1
          type: string
          description: The last name for the account
        UserName:
          maxLength: 20
          minLength: 4
          pattern: ^[a-zA-Z0-9]{4,20}$
          type: string
          description: The user name for the account
        Password:
          maxLength: 255
          minLength: 1
          pattern: ^.*(?=.{6,1000})(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).*$
          type: string
          description: The password for the account
        Email:
          maxLength: 255
          minLength: 1
          type: string
          description: The email for the account
        SMSNumber:
          maxLength: 255
          minLength: 1
          type: string
          description: The mobile number for the account, used to send SMS text messages
        AuthenticationMode:
          type: string
          description: The authentication mode for the account, which determines how
            the user will login
          enum:
          - Password
          - Two_Factor_Email
          - Two_Factor_Email_Everytime
          - Two_Factor_SMS
          - Two_Factor_SMS_Everytime
        TimeZoneCode:
          maxLength: 255
          minLength: 1
          type: string
          description: "The timezone ID for the account\r\n\r\nValid values include:\r\
            \n\r\nValue: 'Dateline Standard Time'             Offset: '-12:00:00'\r\
            \nValue: 'UTC-11'\t\t\t\t\t\t\t    Offset: '-11:00:00'\r\nValue: 'Aleutian\
            \ Standard Time'             Offset: '-10:00:00'\r\nValue: 'Hawaiian Standard\
            \ Time'             Offset: '-10:00:00'\r\nValue: 'Marquesas Standard\
            \ Time'            Offset: '-09:30:00'\r\nValue: 'Alaskan Standard Time'\
            \              Offset: '-09:00:00'\r\nValue: 'UTC-09'\t\t\t\t\t\t\t  \
            \  Offset: '-09:00:00'\r\nValue: 'Pacific Standard Time (Mexico)'    \
            \ Offset: '-08:00:00'\r\nValue: 'UTC-08'\t\t\t\t\t\t\t    Offset: '-08:00:00'\r\
            \nValue: 'Pacific Standard Time'              Offset: '-08:00:00'\r\n\
            Value: 'US Mountain Standard Time'          Offset: '-07:00:00'\r\nValue:\
            \ 'Mountain Standard Time (Mexico)'    Offset: '-07:00:00'\r\nValue: 'Mountain\
            \ Standard Time'             Offset: '-07:00:00'\r\nValue: 'Central America\
            \ Standard Time'      Offset: '-06:00:00'\r\nValue: 'Central Standard\
            \ Time'              Offset: '-06:00:00'\r\nValue: 'Easter Island Standard\
            \ Time'        Offset: '-06:00:00'\r\nValue: 'Central Standard Time (Mexico)'\
            \     Offset: '-06:00:00'\r\nValue: 'Canada Central Standard Time'   \
            \    Offset: '-06:00:00'\r\nValue: 'SA Pacific Standard Time'        \
            \   Offset: '-05:00:00'\r\nValue: 'Eastern Standard Time (Mexico)'   \
            \  Offset: '-05:00:00'\r\nValue: 'Eastern Standard Time'             \
            \ Offset: '-05:00:00'\r\nValue: 'Haiti Standard Time'                Offset:\
            \ '-05:00:00'\r\nValue: 'Cuba Standard Time'                 Offset: '-05:00:00'\r\
            \nValue: 'US Eastern Standard Time'           Offset: '-05:00:00'\r\n\
            Value: 'Turks And Caicos Standard Time'     Offset: '-05:00:00'\r\nValue:\
            \ 'Paraguay Standard Time'             Offset: '-04:00:00'\r\nValue: 'Atlantic\
            \ Standard Time'             Offset: '-04:00:00'\r\nValue: 'Venezuela\
            \ Standard Time'            Offset: '-04:00:00'\r\nValue: 'Central Brazilian\
            \ Standard Time'    Offset: '-04:00:00'\r\nValue: 'SA Western Standard\
            \ Time'           Offset: '-04:00:00'\r\nValue: 'Pacific SA Standard Time'\
            \           Offset: '-04:00:00'\r\nValue: 'Newfoundland Standard Time'\
            \         Offset: '-03:30:00'\r\nValue: 'Tocantins Standard Time'    \
            \        Offset: '-03:00:00'\r\nValue: 'E. South America Standard Time'\
            \     Offset: '-03:00:00'\r\nValue: 'SA Eastern Standard Time'       \
            \    Offset: '-03:00:00'\r\nValue: 'Argentina Standard Time'         \
            \   Offset: '-03:00:00'\r\nValue: 'Greenland Standard Time'          \
            \  Offset: '-03:00:00'\r\nValue: 'Montevideo Standard Time'          \
            \ Offset: '-03:00:00'\r\nValue: 'Magallanes Standard Time'           Offset:\
            \ '-03:00:00'\r\nValue: 'Saint Pierre Standard Time'         Offset: '-03:00:00'\r\
            \nValue: 'Bahia Standard Time'                Offset: '-03:00:00'\r\n\
            Value: 'UTC-02'\t\t\t\t\t\t\t    Offset: '-02:00:00'\r\nValue: 'Mid-Atlantic\
            \ Standard Time'         Offset: '-02:00:00'\r\nValue: 'Azores Standard\
            \ Time'               Offset: '-01:00:00'\r\nValue: 'Cape Verde Standard\
            \ Time'           Offset: '-01:00:00'\r\nValue: 'UTC'\t\t\t\t\t\t\t\t\
            Offset: '00:00:00'\r\nValue: 'GMT Standard Time'\t\t\t\t\tOffset: '00:00:00'\r\
            \nValue: 'Greenwich Standard Time'            Offset: '00:00:00'\r\nValue:\
            \ 'Sao Tome Standard Time'             Offset: '00:00:00'\r\nValue: 'Morocco\
            \ Standard Time'              Offset: '00:00:00'\r\nValue: 'W. Europe\
            \ Standard Time'            Offset: '01:00:00'\r\nValue: 'Central Europe\
            \ Standard Time'       Offset: '01:00:00'\r\nValue: 'Romance Standard\
            \ Time'              Offset: '01:00:00'\r\nValue: 'Central European Standard\
            \ Time'     Offset: '01:00:00'\r\nValue: 'W. Central Africa Standard Time'\
            \    Offset: '01:00:00'\r\nValue: 'Jordan Standard Time'             \
            \  Offset: '02:00:00'\r\nValue: 'GTB Standard Time'\t\t\t\t\tOffset: '02:00:00'\r\
            \nValue: 'Middle East Standard Time'          Offset: '02:00:00'\r\nValue:\
            \ 'Egypt Standard Time'                Offset: '02:00:00'\r\nValue: 'E.\
            \ Europe Standard Time'            Offset: '02:00:00'\r\nValue: 'Syria\
            \ Standard Time'                Offset: '02:00:00'\r\nValue: 'West Bank\
            \ Standard Time'            Offset: '02:00:00'\r\nValue: 'South Africa\
            \ Standard Time'         Offset: '02:00:00'\r\nValue: 'FLE Standard Time'\t\
            \t\t\t\tOffset: '02:00:00'\r\nValue: 'Israel Standard Time'          \
            \     Offset: '02:00:00'\r\nValue: 'Kaliningrad Standard Time'       \
            \   Offset: '02:00:00'\r\nValue: 'Sudan Standard Time'               \
            \ Offset: '02:00:00'\r\nValue: 'Libya Standard Time'                Offset:\
            \ '02:00:00'\r\nValue: 'Namibia Standard Time'              Offset: '02:00:00'\r\
            \nValue: 'Arabic Standard Time'               Offset: '03:00:00'\r\nValue:\
            \ 'Turkey Standard Time'               Offset: '03:00:00'\r\nValue: 'Arab\
            \ Standard Time'                 Offset: '03:00:00'\r\nValue: 'Belarus\
            \ Standard Time'              Offset: '03:00:00'\r\nValue: 'Russian Standard\
            \ Time'              Offset: '03:00:00'\r\nValue: 'E. Africa Standard\
            \ Time'            Offset: '03:00:00'\r\nValue: 'Iran Standard Time' \
            \                Offset: '03:30:00'\r\nValue: 'Arabian Standard Time'\
            \              Offset: '04:00:00'\r\nValue: 'Astrakhan Standard Time'\
            \            Offset: '04:00:00'\r\nValue: 'Azerbaijan Standard Time' \
            \          Offset: '04:00:00'\r\nValue: 'Russia Time Zone 3'         \
            \        Offset: '04:00:00'\r\nValue: 'Mauritius Standard Time'      \
            \      Offset: '04:00:00'\r\nValue: 'Saratov Standard Time'          \
            \    Offset: '04:00:00'\r\nValue: 'Georgian Standard Time'           \
            \  Offset: '04:00:00'\r\nValue: 'Volgograd Standard Time'            Offset:\
            \ '04:00:00'\r\nValue: 'Caucasus Standard Time'             Offset: '04:00:00'\r\
            \nValue: 'Afghanistan Standard Time'          Offset: '04:30:00'\r\nValue:\
            \ 'West Asia Standard Time'            Offset: '05:00:00'\r\nValue: 'Ekaterinburg\
            \ Standard Time'         Offset: '05:00:00'\r\nValue: 'Pakistan Standard\
            \ Time'             Offset: '05:00:00'\r\nValue: 'Qyzylorda Standard Time'\
            \            Offset: '05:00:00'\r\nValue: 'India Standard Time'      \
            \          Offset: '05:30:00'\r\nValue: 'Sri Lanka Standard Time'    \
            \        Offset: '05:30:00'\r\nValue: 'Nepal Standard Time'          \
            \      Offset: '05:45:00'\r\nValue: 'Central Asia Standard Time'     \
            \    Offset: '06:00:00'\r\nValue: 'Bangladesh Standard Time'         \
            \  Offset: '06:00:00'\r\nValue: 'Omsk Standard Time'                 Offset:\
            \ '06:00:00'\r\nValue: 'Myanmar Standard Time'              Offset: '06:30:00'\r\
            \nValue: 'SE Asia Standard Time'              Offset: '07:00:00'\r\nValue:\
            \ 'Altai Standard Time'                Offset: '07:00:00'\r\nValue: 'W.\
            \ Mongolia Standard Time'          Offset: '07:00:00'\r\nValue: 'North\
            \ Asia Standard Time'           Offset: '07:00:00'\r\nValue: 'N. Central\
            \ Asia Standard Time'      Offset: '07:00:00'\r\nValue: 'Tomsk Standard\
            \ Time'                Offset: '07:00:00'\r\nValue: 'China Standard Time'\
            \                Offset: '08:00:00'\r\nValue: 'North Asia East Standard\
            \ Time'      Offset: '08:00:00'\r\nValue: 'Singapore Standard Time'  \
            \          Offset: '08:00:00'\r\nValue: 'W. Australia Standard Time' \
            \        Offset: '08:00:00'\r\nValue: 'Taipei Standard Time'         \
            \      Offset: '08:00:00'\r\nValue: 'Ulaanbaatar Standard Time'      \
            \    Offset: '08:00:00'\r\nValue: 'Aus Central W. Standard Time'     \
            \  Offset: '08:45:00'\r\nValue: 'Transbaikal Standard Time'          Offset:\
            \ '09:00:00'\r\nValue: 'Tokyo Standard Time'                Offset: '09:00:00'\r\
            \nValue: 'North Korea Standard Time'          Offset: '09:00:00'\r\nValue:\
            \ 'Korea Standard Time'                Offset: '09:00:00'\r\nValue: 'Yakutsk\
            \ Standard Time'              Offset: '09:00:00'\r\nValue: 'Cen. Australia\
            \ Standard Time'       Offset: '09:30:00'\r\nValue: 'AUS Central Standard\
            \ Time'          Offset: '09:30:00'\r\nValue: 'E. Australia Standard Time'\
            \         Offset: '10:00:00'\r\nValue: 'AUS Eastern Standard Time'   \
            \       Offset: '10:00:00'\r\nValue: 'West Pacific Standard Time'    \
            \     Offset: '10:00:00'\r\nValue: 'Tasmania Standard Time'          \
            \   Offset: '10:00:00'\r\nValue: 'Vladivostok Standard Time'         \
            \ Offset: '10:00:00'\r\nValue: 'Lord Howe Standard Time'            Offset:\
            \ '10:30:00'\r\nValue: 'Bougainville Standard Time'         Offset: '11:00:00'\r\
            \nValue: 'Russia Time Zone 10'                Offset: '11:00:00'\r\nValue:\
            \ 'Magadan Standard Time'              Offset: '11:00:00'\r\nValue: 'Norfolk\
            \ Standard Time'              Offset: '11:00:00'\r\nValue: 'Sakhalin Standard\
            \ Time'             Offset: '11:00:00'\r\nValue: 'Central Pacific Standard\
            \ Time'      Offset: '11:00:00'\r\nValue: 'Russia Time Zone 11'      \
            \          Offset: '12:00:00'\r\nValue: 'New Zealand Standard Time'  \
            \        Offset: '12:00:00'\r\nValue: 'UTC+12'\t\t\t\t\t\t\t    Offset:\
            \ '12:00:00'\r\nValue: 'Fiji Standard Time'                 Offset: '12:00:00'\r\
            \nValue: 'Kamchatka Standard Time'            Offset: '12:00:00'\r\nValue:\
            \ 'Chatham Islands Standard Time'      Offset: '12:45:00'\r\nValue: 'UTC+13'\t\
            \t\t\t\t\t\t    Offset: '13:00:00'\r\nValue: 'Tonga Standard Time'   \
            \             Offset: '13:00:00'\r\nValue: 'Samoa Standard Time'     \
            \           Offset: '13:00:00'\r\nValue: 'Line Islands Standard Time'\
            \         Offset: '14:00:00'"
        SavePageSize:
          type: boolean
          description: Whether or not the page size will be remembered when the user
            views various pages in OptiTune
        GroupRestriction:
          type: string
          description: If provided, restrict the account to only accessing computers
            in the given group, or any of its sub groups
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      description: The account is an OptiTune user account
      xml:
        name: AccountDTO
    AdvancedSettings:
      required:
      - ComputerMetadataPrototype
      - MinUpdateAge
      - ReportingUrl
      type: object
      properties:
        ReportingUrl:
          maxLength: 255
          minLength: 5
          pattern: ^http(s)?://[\w-\./]+$
          type: string
          description: The reporting url, where OptiTune agents send their reports.
        MinUpdateAge:
          maximum: 1E+3
          minimum: 0
          type: integer
          description: "Specifies the minimum number of days that a Windows Update\
            \ is available, before it is taken into account for Windows Update reporting.\r\
            \nFor example, if you specify 5, then updates that have been released\
            \ for less than 5 days won't affect the counts for number of computers\
            \ needing important updates, recommended updates, or optional updates."
          format: int32
        ComputerMetadataPrototype:
          $ref: '#/components/schemas/SimpleParameterList'
      description: Advanced settings for an organization
      xml:
        name: AdvancedSettingsDTO
    SimpleParameterList:
      type: object
      properties:
        StringParameters:
          type: array
          xml:
            name: StringParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/StringParameter'
        IntParameters:
          type: array
          xml:
            name: IntParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/IntParameter'
        LongParameters:
          type: array
          xml:
            name: LongParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/LongParameter'
        DoubleParameters:
          type: array
          xml:
            name: DoubleParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/DoubleParameter'
        GuidParameters:
          type: array
          xml:
            name: GuidParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/GuidParameter'
        DateParameters:
          type: array
          xml:
            name: DateParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/DateParameter'
        EnumParameters:
          type: array
          xml:
            name: EnumParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/EnumParameter'
        MaskParameters:
          type: array
          xml:
            name: EnumParameterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/EnumParameter'
      xml:
        name: SimpleParameterListDTO
    StringParameter:
      required:
      - Name
      type: object
      properties:
        MinLength:
          type: integer
          format: int32
        MaxLength:
          type: integer
          format: int32
        Value:
          maxLength: 1024
          type: string
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: StringParameterDTO
    IntParameter:
      required:
      - Name
      type: object
      properties:
        MinValue:
          type: integer
          format: int32
        MaxValue:
          type: integer
          format: int32
        Value:
          type: integer
          format: int32
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: IntParameterDTO
    LongParameter:
      required:
      - Name
      type: object
      properties:
        MinValue:
          type: integer
          format: int64
        MaxValue:
          type: integer
          format: int64
        Value:
          type: integer
          format: int64
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: LongParameterDTO
    DoubleParameter:
      required:
      - Name
      type: object
      properties:
        MinValue:
          type: number
          format: double
        MaxValue:
          type: number
          format: double
        Value:
          type: number
          format: double
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: DoubleParameterDTO
    GuidParameter:
      required:
      - Name
      type: object
      properties:
        Value:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: GuidParameterDTO
    DateParameter:
      required:
      - Name
      type: object
      properties:
        Value:
          type: string
          format: date-time
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: DateParameterDTO
    EnumParameter:
      required:
      - AllowedValues
      - Name
      type: object
      properties:
        Value:
          type: integer
          format: int32
        AllowedValues:
          type: array
          xml:
            name: NameValuePairDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/NameValuePair'
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        Type:
          type: string
          enum:
          - TypeInvalid
          - TypeInt
          - TypeLong
          - TypeDouble
          - TypeString
          - TypeGuid
          - TypeEnum
          - TypeMask
          - TypeDate
        ListOrder:
          type: integer
          format: int32
      xml:
        name: EnumParameterDTO
    NameValuePair:
      required:
      - Name
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Value:
          type: integer
          format: int32
      xml:
        name: NameValuePairDTO
    AgentInstaller:
      required:
      - Description
      - Name
      type: object
      properties:
        ID:
          type: string
          description: The ID of the agent installer
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        GroupID:
          type: string
          description: "The group ID the agent installer is associated with.  Normally\
            \ when setting this you also\r\nset the ClientIdentifier to match the\
            \ group"
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DateModified:
          type: string
          description: The date and time this agent installer was last modified
          format: date-time
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: An internal only name for the agent installer
        Description:
          maxLength: 1024
          minLength: 1
          type: string
          description: An internal only description for the agent installer
        PublisherName:
          maxLength: 255
          type: string
          description: Optional Publisher Name
        ApplicationName:
          maxLength: 255
          type: string
          description: Optional Application Name
        ClientIdentifier:
          maxLength: 255
          type: string
          description: Optional Client Identifier to use when installing the OptiTune
            agent
        PublicDownload:
          type: boolean
          description: "Specifies whether or not the agent can be downloaded by anyone\
            \ who has the agent installer URL (true), or if the\r\nuser needs to be\
            \ logged in to OptiTune to download the agent installer (false)"
        InstallerIconFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        InstallerBackgroundImageFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        EulaFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        PostInstallExeFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        PostInstallCmdParameters:
          maxLength: 255
          type: string
        PostInstallUrlDisplayName:
          maxLength: 255
          type: string
        PostInstallUrl:
          maxLength: 255
          type: string
        InstallerFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        LastBuildErrorMessage:
          type: string
          description: "If there was a problem building the installer, the description\
            \ is saved\r\nhere, to be displayed to the user"
      description: An OptiTune agent installer
      xml:
        name: AgentInstallerDTO
    AgentState:
      type: object
      properties:
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        OrganizationID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ClientVersion:
          type: integer
          format: int32
        ClientDisplayVersion:
          type: string
        ClientApp:
          type: string
        ClientTime:
          type: string
          format: date-time
        LastUpdated:
          type: string
          format: date-time
        AutoUpdateCount:
          type: integer
          format: int64
        LogMessages:
          type: array
          readOnly: true
          xml:
            name: LogMessage
            wrapped: true
          items:
            $ref: '#/components/schemas/LogMessage'
        LastStatus:
          $ref: '#/components/schemas/AgentStatus'
        Queues:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AgentQueue'
          description: Maps from queue name to AgentQueue, in a case insensitive manner
          readOnly: true
      xml:
        name: AgentState
    LogMessage:
      type: object
      properties:
        Text:
          type: string
          readOnly: true
        Time:
          type: string
          format: date-time
          readOnly: true
        MessageType:
          type: string
          readOnly: true
          enum:
          - MT_NORMAL
          - MT_STATUS
          - MT_PROGRESS
          - MT_WARNING
          - MT_ERROR
          - MT_SUCCESS
      xml:
        name: LogMessage
    AgentStatus:
      type: object
      properties:
        Status:
          type: string
          readOnly: true
          enum:
          - OAS_NONE
          - OAS_IDLE
          - OAS_STARTED
          - OAS_STOPPED
          - OAS_SHUTTING_DOWN
          - OAS_POWER_SUSPENDED
          - OAS_POWER_RESUMED
          - OAS_RUNNING_TASK
          - OAS_DISCONNECTED
        DisplayText:
          type: string
          readOnly: true
        Time:
          type: string
          format: date-time
          readOnly: true
      xml:
        name: AgentStatus
    AgentQueue:
      type: object
      properties:
        QueueName:
          type: string
          readOnly: true
        QueueItems:
          type: array
          readOnly: true
          xml:
            name: AgentQueueItem
            wrapped: true
          items:
            $ref: '#/components/schemas/AgentQueueItem'
      xml:
        name: AgentQueue
    AgentQueueItem:
      type: object
      properties:
        DisplayName:
          type: string
          readOnly: true
        ID:
          type: string
          readOnly: true
        Started:
          type: string
          format: date-time
          readOnly: true
        RunTime:
          type: integer
          format: int32
          readOnly: true
        Stage:
          type: string
          readOnly: true
          enum:
          - QIS_NONE
          - QIS_QUEUED
          - QIS_RUNNING
          - QIS_SUCCEEDED
          - QIS_FAILED
      xml:
        name: AgentQueueItem
    ConnectionStatusInfo:
      type: object
      properties:
        Status:
          type: string
          enum:
          - Error
          - Unknown
          - Connected
          - Not_Connected
        LastPollUtc:
          type: string
          format: date-time
        PollingInterval:
          type: integer
          format: int32
      xml:
        name: ConnectionStatusInfo
    AlertInstance:
      type: object
      properties:
        ID:
          type: string
          description: The ID for the deployment
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Status:
          type: string
          enum:
          - Active
          - Resolved
          - Ignored
        GroupID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        EventSourceID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        Time:
          type: string
          format: date-time
          readOnly: true
        ReportedTime:
          type: string
          format: date-time
          readOnly: true
        Details:
          type: string
          readOnly: true
      description: An alert instance
      xml:
        name: AlertInstanceDTO
    Page:
      type: object
      properties:
        Number:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        Size:
          maximum: 1E+3
          minimum: 1
          type: integer
          format: int32
      description: Summary description for PageDTO
      xml:
        name: PageDTO
    AlertSubscription:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        GroupID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        NotificationGroupID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MailTemplateID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        State:
          type: string
          enum:
          - Enabled
          - Disabled
        EventCategoryIDs:
          type: array
          description: Optional, a list of event categories to match, or null for
            no event categories
          items:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000000
        SeverityMask:
          type: string
          enum:
          - Trace
          - Diagnostic
          - Informational
          - Warning
          - Error
          - Critical
          - Fatal
        Times:
          $ref: '#/components/schemas/WeeklySchedule'
      description: An alert subscription
      xml:
        name: AlertSubscriptionDTO
    WeeklySchedule:
      type: object
      properties:
        TimezoneID:
          maxLength: 255
          type: string
        AnyTimeWeeklyScheduleItems:
          type: array
          xml:
            name: AnyTimeWeeklyScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/AnyTimeWeeklyScheduleItem'
        SelectDaysWeeklyScheduleItems:
          type: array
          xml:
            name: SelectDaysWeeklyScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/SelectDaysWeeklyScheduleItem'
        SelectTimesWeeklyScheduleItems:
          type: array
          xml:
            name: SelectTimesWeeklyScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/SelectTimesWeeklyScheduleItem'
      xml:
        name: WeeklyScheduleDTO
    AnyTimeWeeklyScheduleItem:
      type: object
      properties:
        ListOrder:
          type: integer
          format: int32
      xml:
        name: AnyTimeWeeklyScheduleItemDTO
    SelectDaysWeeklyScheduleItem:
      type: object
      properties:
        Days:
          type: string
          enum:
          - Sun
          - Mon
          - Tue
          - Wed
          - Thu
          - Fri
          - Sat
        ListOrder:
          type: integer
          format: int32
      xml:
        name: SelectDaysWeeklyScheduleItemDTO
    SelectTimesWeeklyScheduleItem:
      type: object
      properties:
        Days:
          type: string
          enum:
          - Sun
          - Mon
          - Tue
          - Wed
          - Thu
          - Fri
          - Sat
        StartTime:
          type: string
          format: date-time
        EndTime:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: SelectTimesWeeklyScheduleItemDTO
    Announcement:
      type: object
      properties:
        Title:
          type: string
        ContentHtml:
          type: string
        DateDisplay:
          type: string
          format: date-time
        DateExpires:
          type: string
          format: date-time
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      description: This class represents an Announcement on the management server,
        visible to all organizations
      xml:
        name: AnnouncementData
    Application:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        UninstallSubKeyName:
          type: string
          readOnly: true
        MsiProductID:
          type: string
          readOnly: true
        DisplayName:
          type: string
          readOnly: true
        UserName:
          type: string
          readOnly: true
        Comments:
          type: string
          readOnly: true
        Contact:
          type: string
          readOnly: true
        HelpTelephone:
          type: string
          readOnly: true
        HelpUrl:
          type: string
          readOnly: true
        PublisherName:
          type: string
          readOnly: true
        UpdateInfoUrl:
          type: string
          readOnly: true
        Version:
          type: string
          readOnly: true
        InstallerActions:
          type: integer
          format: int32
          readOnly: true
        DateInstalled:
          type: string
          format: date-time
          readOnly: true
        InstallSize:
          type: integer
          format: int64
          readOnly: true
        InstallSource:
          type: string
          readOnly: true
        ModifyCmd:
          type: string
          readOnly: true
        Location:
          type: string
          readOnly: true
        UninstallCmd:
          type: string
          readOnly: true
      description: Summary description for Application
      xml:
        name: Application
    AuditLogEntry:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        OrganizationID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        AccountID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        UserName:
          type: string
          readOnly: true
        SourceType:
          type: string
          readOnly: true
          enum:
          - None
          - Web
          - API
          - Internal
        TargetID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        TargetType:
          type: string
          readOnly: true
          enum:
          - None
          - Computer
          - Group
        TargetName:
          type: string
          readOnly: true
        Date:
          type: string
          format: date-time
          readOnly: true
        IPAddress:
          type: string
          readOnly: true
        WebBrowser:
          type: string
          readOnly: true
        PagePath:
          type: string
          readOnly: true
        Result:
          type: integer
          format: int32
          readOnly: true
        Importance:
          type: string
          readOnly: true
          enum:
          - Default_Importance
          - Importance_0
          - Importance_1
          - Importance_2
          - Importance_3
          - Importance_4
          - Importance_5
          - Importance_6
          - Importance_7
          - Importance_8
          - Importance_9
        Area:
          type: string
          readOnly: true
          enum:
          - Unknown
          - Applications
          - Auditing
          - Automation
          - Computers_And_Groups
          - Endpoint_Protection
          - Login
          - Monitoring
          - Organization
          - Overview
          - Performance
          - Remote_Support
          - Reporting
          - Server_Settings
          - Windows_Update
          - Files
          - Administration
          - Realtime
          - Backup
          - Branding
          - Optimization
          - Event_Log
        MessageType:
          type: string
          readOnly: true
          enum:
          - None
          - Login_Succeeded
          - Login_Failed
          - Visited_Page
          - Selection_Changed
          - Status_Message
          - Settings
          - Retired_Computer
          - Computer
          - Group
          - Group_Member
          - Account
          - Account_Group_Restriction
          - Registration_Code
          - Deployment
          - Install_Task
          - Repair_Task
          - Uninstall_Task
          - Favorite_Task
          - Script_Task
          - System_Task
          - Script_File
          - Package_File
          - Agent_Source_File
          - Agent_Setup
          - Agent_Custom_Installer
          - Remote_Assistance_Request
          - Organization
          - Organization_Certificate
          - Business_Entity
          - Alert
          - Alert_Subscription
          - Event
          - Event_Category
          - Event_Source
          - Mail_Template
          - Notification_Group
          - Computer_Group_Memberships_Cleared
          - Audit_Log_Cleared
          - Alerts_Cleared
          - Factory_Reset_Monitoring
          - Data_Exported
          - Remote_Connection_Initiated
          - Remote_Assistance_Connection_Initiated
          - Task_Metadata
          - Command_Prompt_Started
          - PowerShell_Started
          - Task_Manager_Started
          - System_Services_Started
          - Viewed_Computer_Details
          - Computer_Metadata
          - Announcement
          - Brand_Domain
          - Brand
          - Event_Category_Membership
          - Notification_Group_Member
          - Notification_Group_Member_Account
          - Organization_Settings
          - Webhook
          - Computer_Display_Name
        MessageTypeDetail:
          type: string
          readOnly: true
          enum:
          - None
          - Added
          - Deleted
          - Changed
          - Downloaded
        Message:
          type: string
          readOnly: true
        Data:
          $ref: '#/components/schemas/AuditLogCustom'
      description: Summary description for AuditLogEntry
      xml:
        name: AuditLogEntry
    AuditLogCustom:
      type: object
      properties:
        Entries:
          type: array
          xml:
            name: AuditLogCustomDataEntry
            wrapped: true
          items:
            $ref: '#/components/schemas/AuditLogCustomDataEntry'
      xml:
        name: AuditLogCustomData
    AuditLogCustomDataEntry:
      type: object
      properties:
        Name:
          type: string
        Format:
          type: string
          enum:
          - PlainText
          - Json
        Value:
          type: string
      xml:
        name: AuditLogCustomDataEntry
    BackupCloudberryComputerConfig:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        EngineVersion:
          type: string
          readOnly: true
        Edition:
          type: string
          readOnly: true
          enum:
          - none
          - desktop
          - baremetal
          - mssql
          - msexchange
          - mssqlexchange
          - ultimate
          - vmware
        BackupUserEmail:
          type: string
          readOnly: true
        License:
          type: array
          readOnly: true
          items:
            type: object
            properties: {}
        EngineSettings:
          type: array
          readOnly: true
          items:
            type: object
            properties: {}
      description: Summary description for Application
      xml:
        name: BackupCloudberryComputerConfig
    BackupCloudberryComputerPlan:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        PlanId:
          type: string
          description: A cloudberry backup plan id, which may not be unique on a given
            computer
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        PlanType:
          type: string
          readOnly: true
          enum:
          - Unknown
          - ConsistencyCheckPlan
          - Plan
          - RestorePlan
          - BackupDiskImagePlan
          - RestoreDiskImagePlan
          - BackupDatabasePlan
          - RestoreDatabasePlan
          - RestoreDatabaseFilesPlan
          - BackupExchangePlan
          - BackupPostgreSQLPlan
          - BackupSystemImagePlan
          - BackupVirtualMachinesESXiPlan
          - RestoreVirtualMachinesESXiPlan
          - BackupVirtualMachinesHyperVPlan
          - RestoreVirtualMachinesToCloudPlan
          - VmFileLevelRestorePlan
          - Cloud2CloudBackupPlan
          - CloudBackupPlan
          - OracleDatabaseBackupPlan
          - AllBackupPlans
          - AllRestorePlans
          - OtherBackupPlans
          - OtherRestorePlans
        Name:
          type: string
          readOnly: true
        DateModified:
          type: string
          format: date-time
          readOnly: true
        PlanContent:
          type: array
          readOnly: true
          items:
            type: object
            properties: {}
      description: Summary description for Application
      xml:
        name: BackupCloudberryComputerPlan
    BackupCloudberryComputerPlanHistory:
      type: object
      properties:
        PlanID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DateStarted:
          type: string
          format: date-time
        Duration:
          type: integer
          format: int32
        Result:
          type: integer
          format: int32
        ErrorMessage:
          type: string
        FailedCount:
          type: integer
          format: int32
        PeakMemoryUsage:
          type: integer
          format: int64
        ProcessorTime:
          type: integer
          format: int32
        PurgedCount:
          type: integer
          format: int32
        ScannedCount:
          type: integer
          format: int32
        ScannedSize:
          type: integer
          format: int64
        TotalCount:
          type: integer
          format: int32
        TotalSize:
          type: integer
          format: int64
        UploadedCount:
          type: integer
          format: int32
        UploadedSize:
          type: integer
          format: int64
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      xml:
        name: BackupCloudberryComputerPlanHistoryData
    BenchmarkDataPoint:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        BenchmarkID:
          type: integer
          format: int32
        DataSetID:
          type: integer
          format: int32
        Date:
          type: string
          format: date-time
        Value:
          type: number
          format: double
        Flags:
          type: integer
          format: int32
      xml:
        name: BenchmarkDataPointData
    BenchmarkDataSet:
      type: object
      properties:
        ID:
          type: integer
          format: int32
        OrganizationID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
      xml:
        name: BenchmarkDataSetData
    Benchmark:
      type: object
      properties:
        ID:
          type: integer
          format: int32
        OrganizationID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
      xml:
        name: BenchmarkNameData
    BillingLicenseUsage:
      type: object
      properties:
        OrganizationID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Time:
          type: string
          format: date-time
        TotalComputers:
          type: integer
          format: int32
        Desktops:
          type: integer
          format: int32
        Laptops:
          type: integer
          format: int32
        Servers:
          type: integer
          format: int32
        StaticLicenses:
          type: integer
          format: int32
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      xml:
        name: BillingLicenseUsageData
    BillingSettings:
      type: object
      properties:
        BillingToken:
          maxLength: 255
          type: string
          description: An optional billing token to associate with the organization,
            if monthly billing is to be used in addition or instead of product keys
      description: "The billing settings for an organization.  Provide a billing token\
        \ from the Bravura Software Billing Portal\r\nto setup monthly billing for\
        \ the organization."
      xml:
        name: BillingSettingsDTO
    BrandDomain:
      type: object
      properties:
        Domain:
          type: string
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      xml:
        name: BrandDomainData
    Brand:
      required:
      - ButtonColor
      - ContentHeaderColor
      - HeadingColor
      - HighlightColor
      - HostName
      - LinkColor
      - PageBackgroundColor
      - SidebarBackgroundColor
      - TabColor
      - Title
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        BrandDomainID:
          type: string
          description: The ID of the brand root domain to use.  Use the BrandDomains
            resource to get all available root domains installed on the management
            server
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        HostName:
          maxLength: 255
          minLength: 1
          type: string
          description: "A host name for accessing the branded site.  The fully qualified\
            \ domain name will be \"hostname.rootdomain\", for example, \"mycompany.rmmportal.com\"\
            ,\r\nwhere \"mycompany\" is the host name, and \"rmmportal.com\" is the\
            \ root domain"
        Title:
          maxLength: 255
          minLength: 1
          type: string
          description: The title is used (optionally) when rendering the logo, and
            showing the HTML page title in the browser.
        Subtitle:
          maxLength: 255
          type: string
          description: The subtitle is used (optionally) when rendering the logo
        Description:
          maxLength: 1024
          type: string
          description: A description for the brand.  This is for internal, informational
            purposes, and is not shown anywhere.
        FaviconFileID:
          type: string
          description: A file ID for the icon the browser uses to represent the site.  It
            will be displayed in the browser tab, next to the title, and often as
            a bookmark icon for the site.  Must be .png
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        FrontpageLogoFileID:
          type: string
          description: A file ID for a logo image to use in the login page, and other
            front pages of the site.  Must be .png, .jpg, .gif, .svg, or .webp
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        FrontpageCssFileID:
          type: string
          description: A file ID for a custom .CSS file for further customizing the
            appearance of the login page, and other front pages of the site.  This
            is for advanced users only.
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        FrontpageBackgroundFileID:
          type: string
          description: A file ID for a custom .CSS file for further customizing the
            appearance of the main site, after successfully logging in.  This is for
            advanced users only.
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MainpageLogoFileID:
          type: string
          description: A file ID for a logo image to use in the main site, after successfully
            logging in.  Must be .png, .jpg, .gif, .svg, or .webp
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MainpageCssFileID:
          type: string
          description: A file ID for a custom .CSS file for further customizing the
            appearance of the main site, after successfully logging in.  This is for
            advanced users only.
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Flags:
          type: string
          description: These flags determine how the logo is displayed on the front
            page and main page.  Note that if you add a .css file, it can further
            alter this behavior.
          enum:
          - None
          - ShowTitle
          - ShowSubtitle
          - ShowLogo
        TabColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for the tabs in the sidebar
        ButtonColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for the website buttons
        LinkColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for the website page links
        HeadingColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for text headings
        HighlightColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for highlights, used as a lighter background
            color for small item lists
        PageBackgroundColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for drawing the background of the page
        ContentHeaderColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for drawing the background of each content
            box's header
        SidebarBackgroundColor:
          maxLength: 7
          minLength: 7
          pattern: ^#([A-Fa-f0-9]{6})$
          type: string
          description: Specify a color for drawing the background of the sidebar
        TitleFontSize:
          maximum: 1E+2
          minimum: 2
          type: number
          description: The font size in points (pt) used to display the logo title.  It
            can be a decimal number.
          format: double
        SubtitleFontSize:
          maximum: 1E+2
          minimum: 2
          type: number
          description: The font size in points (pt) used to display the logo subtitle.  It
            can be a decimal number.
          format: double
      description: "This class represents a brand that you can configure for your\
        \ organization.  Each organization supports having 0, 1 or multiple brands,\
        \ each of which\r\nhas a unique title, domain name, colors, styles, and other\
        \ assets that you can configure.  When you access the brand's domain name,\
        \ you will be presented\r\nwith the branded (white labeled) experience, instead\
        \ of the default management portal."
      xml:
        name: BrandDTO
    BusinessEntity:
      required:
      - Name
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ParentID:
          type: string
          description: The ID of the business entity's parent business entity
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        GroupID:
          type: string
          description: The ID of the group associated with this business entity
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        Type:
          type: string
          description: "The type of the business entity.  Depending on the type, not\
            \ all of the data fields\r\nwill be shown in the UI when displaying the\
            \ business entity"
          enum:
          - None
          - Customer
          - Company
          - Department
          - Site
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the business entity
        Description:
          maxLength: 1024
          type: string
          description: The description of the business entity
        Notes:
          maxLength: 4000
          type: string
          description: Any notes you wish to keep about the business entity
        DateModified:
          type: string
          description: The date and time the business entity was last modified
          format: date-time
          readOnly: true
        ContactFirstName:
          maxLength: 255
          type: string
          description: The first name of the person to contact for the business entity
        ContactLastName:
          maxLength: 255
          type: string
          description: The last name of the person to contact for the business entity
        ContactEmail:
          maxLength: 255
          type: string
          description: The email address of the person to contact for the business
            entity
        ContactPhone:
          maxLength: 50
          type: string
          description: The phone number of the person to contact for the business
            entity
        Website:
          maxLength: 255
          type: string
          description: The website of the business entity
        MailingAddress:
          maxLength: 1024
          type: string
          description: The mailing address of the business entity
        PhysicalAddress:
          maxLength: 1024
          type: string
          description: The physical address of the business entity
        AccountNumber:
          maxLength: 50
          type: string
          description: The account number of the business entity
        RelationshipManagerFirstName:
          maxLength: 255
          type: string
          description: The first name of the sales person who handles the business
            entity
        RelationshipManagerLastName:
          maxLength: 255
          type: string
          description: The last name of the sales person who handles the business
            entity
        RelationshipManagerEmail:
          maxLength: 255
          type: string
          description: The email of the sales person who handles the business entity
        RelationshipManagerPhone:
          maxLength: 50
          type: string
          description: The phone number of the sales person who handles the business
            entity
      description: "A business entity, which will always have an associated group.\
        \  You can think of the business entity as extra fields or metadata to associate\
        \ with a group, such\r\nas addresses, contact information, websites, etc...\
        \  Every business entity will have an associated group, but not every group\
        \ will have an associated business entity.\r\nThe tree of business entities\
        \ will also be a subset of the tree of groups."
      xml:
        name: BusinessEntityDTO
    ComputerDetails:
      type: object
      properties:
        Details:
          $ref: '#/components/schemas/ComputerDetailsData'
        DiskDrives:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsDiskDriveData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsDiskDrive'
        DiskShares:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsDiskSharesData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsDiskShares'
        DiskVolumes:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsDiskVolumesData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsDiskVolumes'
        NetworkAdapters:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsNetworkAdaptersData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsNetworkAdapters'
        PhysicalMemory:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsPhysicalMemoryData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsPhysicalMemory'
        PortableBatteries:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsPortableBatteryData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsPortableBattery'
        Printers:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsPrinterData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsPrinter'
        Processors:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsProcessorsData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsProcessors'
        SoundDevices:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsSoundDevicesData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsSoundDevices'
        VideoCards:
          type: array
          readOnly: true
          xml:
            name: ComputerDetailsVideoCardsData
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerDetailsVideoCards'
      xml:
        name: ComputerDetails
    ComputerDetailsData:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DateGenerated:
          type: string
          format: date-time
        ComputerSystem_ComputerName:
          type: string
        ComputerSystem_DomainName:
          type: string
        ComputerSystem_DomainRole:
          type: integer
          format: int32
        ComputerSystem_PartOfDomain:
          type: integer
          format: int32
        ComputerSystem_BootupState:
          type: string
        ComputerSystem_Manufacturer:
          type: string
        ComputerSystem_Model:
          type: string
        ComputerSystem_NumberOfLogicalProcessors:
          type: integer
          format: int32
        ComputerSystem_NumberOfProcessors:
          type: integer
          format: int32
        ComputerSystem_PCSystemType:
          type: integer
          format: int32
        ComputerSystem_PowerState:
          type: integer
          format: int32
        ComputerSystem_PowerSupplyState:
          type: integer
          format: int32
        ComputerSystem_SystemType:
          type: string
        ComputerSystem_ThermalState:
          type: integer
          format: int32
        ComputerSystem_TotalPhysicalMemory:
          type: integer
          format: int64
        ComputerSystem_UserName:
          type: string
        ComputerSystemProduct_Caption:
          type: string
        ComputerSystemProduct_IdentifyingNumber:
          type: string
        ComputerSystemProduct_Name:
          type: string
        ComputerSystemProduct_SKUNumber:
          type: string
        ComputerSystemProduct_Vendor:
          type: string
        SystemEnclosure_Manufacturer:
          type: string
        SystemEnclosure_OtherIdentifyingInfo:
          type: string
        SystemEnclosure_PartNumber:
          type: string
        SystemEnclosure_Name:
          type: string
        SystemEnclosure_SerialNumber:
          type: string
        SystemEnclosure_SMBIOSAssetTag:
          type: string
        OperatingSystem_Name:
          type: string
        OperatingSystem_BootDevice:
          type: string
        OperatingSystem_BuildNumber:
          type: integer
          format: int32
        OperatingSystem_BuildType:
          type: string
        OperatingSystem_Caption:
          type: string
        OperatingSystem_CodeSet:
          type: string
        OperatingSystem_CountryCode:
          type: string
        OperatingSystem_CSDVersion:
          type: string
        OperatingSystem_CurrentTimeZone:
          type: integer
          format: int32
        OperatingSystem_Debug:
          type: integer
          format: int32
        OperatingSystem_FreePhysicalMemory:
          type: integer
          format: int64
        OperatingSystem_InstallDate:
          type: string
          format: date-time
        OperatingSystem_LastBootUpTime:
          type: string
          format: date-time
        OperatingSystem_Manufacturer:
          type: string
        OperatingSystem_MUILanguages:
          type: string
        OperatingSystem_OperatingSystemSKU:
          type: integer
          format: int32
        OperatingSystem_Organization:
          type: string
        OperatingSystem_OSArchitecture:
          type: string
        OperatingSystem_OSLanguage:
          type: integer
          format: int32
        OperatingSystem_OSProductSuite:
          type: integer
          format: int32
        OperatingSystem_OSType:
          type: integer
          format: int32
        OperatingSystem_OtherTypeDescription:
          type: string
        OperatingSystem_PAEEnabled:
          type: integer
          format: int32
        OperatingSystem_ProductType:
          type: integer
          format: int32
        OperatingSystem_SerialNumber:
          type: string
        OperatingSystem_ServicePackMajorVersion:
          type: integer
          format: int32
        OperatingSystem_ServicePackMinorVersion:
          type: integer
          format: int32
        OperatingSystem_SuiteMask:
          type: integer
          format: int32
        OperatingSystem_SystemDevice:
          type: string
        OperatingSystem_SystemDirectory:
          type: string
        OperatingSystem_Version:
          type: string
        Motherboard_Manufacturer:
          type: string
        Motherboard_Product:
          type: string
        Motherboard_SerialNumber:
          type: string
        Motherboard_Version:
          type: string
        Bios_Caption:
          type: string
        Bios_Manufacturer:
          type: string
        Bios_Name:
          type: string
        Bios_ReleaseDate:
          type: string
          format: date-time
        Bios_SMBIOSBIOSVersion:
          type: string
        Bios_SMBIOSMajorVersion:
          type: integer
          format: int32
        Bios_SMBIOSMinorVersion:
          type: integer
          format: int32
        Bios_Status:
          type: string
        Bios_Version:
          type: string
        WinSAT_CPUScore:
          type: number
          format: double
        WinSAT_D3DScore:
          type: number
          format: double
        WinSAT_DiskScore:
          type: number
          format: double
        WinSAT_GraphicsScore:
          type: number
          format: double
        WinSAT_MemoryScore:
          type: number
          format: double
        WinSAT_WinSPRLevel:
          type: number
          format: double
        Details_TotalRam:
          type: integer
          format: int64
        Details_TotalDiskSize:
          type: integer
          format: int64
        Details_TotalDiskFreeSpace:
          type: integer
          format: int64
        Details_PrimaryCPU:
          type: string
        Details_PCType:
          type: integer
          format: int32
      xml:
        name: ComputerDetailsData
    ComputerDetailsDiskDrive:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        ConfigManagerErrorCode:
          type: integer
          format: int32
        FirmwareRevision:
          type: string
        InterfaceType:
          type: string
        Manufacturer:
          type: string
        Model:
          type: string
        SerialNumber:
          type: string
        Size:
          type: integer
          format: int64
        Status:
          type: string
      xml:
        name: ComputerDetailsDiskDriveData
    ComputerDetailsDiskShares:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        Caption:
          type: string
        Path:
          type: string
        Status:
          type: string
      xml:
        name: ComputerDetailsDiskSharesData
    ComputerDetailsDiskVolumes:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        BootVolume:
          type: integer
          format: int32
        Capacity:
          type: integer
          format: int64
        Compressed:
          type: integer
          format: int32
        DriveLetter:
          type: string
        DriveType:
          type: integer
          format: int32
        FileSystem:
          type: string
        FreeSpace:
          type: integer
          format: int64
        IndexingEnabled:
          type: integer
          format: int32
        PageFilePresent:
          type: integer
          format: int32
        QuotasEnabled:
          type: integer
          format: int32
        SystemVolume:
          type: integer
          format: int32
      xml:
        name: ComputerDetailsDiskVolumesData
    ComputerDetailsNetworkAdapters:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        ConfigManagerErrorCode:
          type: integer
          format: int32
        Description:
          type: string
        Manufacturer:
          type: string
        AdapterType:
          type: string
        NetConnectionID:
          type: string
        NetConnectionStatus:
          type: integer
          format: int32
        NetEnabled:
          type: integer
          format: int32
        MACAddress:
          type: string
        Speed:
          type: integer
          format: int64
        Status:
          type: string
      xml:
        name: ComputerDetailsNetworkAdaptersData
    ComputerDetailsPhysicalMemory:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        BankLabel:
          type: string
        Capacity:
          type: integer
          format: int64
        DeviceLocator:
          type: string
        FormFactor:
          type: integer
          format: int32
        Manufacturer:
          type: string
        MemoryType:
          type: integer
          format: int32
        PartNumber:
          type: string
        SerialNumber:
          type: string
        Speed:
          type: integer
          format: int32
      xml:
        name: ComputerDetailsPhysicalMemoryData
    ComputerDetailsPortableBattery:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        Manufacturer:
          type: string
        Location:
          type: string
        Chemistry:
          type: integer
          format: int32
        DesignCapacity:
          type: integer
          format: int32
        DesignVoltage:
          type: integer
          format: int32
        Status:
          type: string
      xml:
        name: ComputerDetailsPortableBatteryData
    ComputerDetailsPrinter:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        DriverName:
          type: string
        Location:
          type: string
        Attributes:
          type: integer
          format: int32
        IsDefault:
          type: integer
          format: int32
        DetectedErrorState:
          type: integer
          format: int32
        ExtendedDetectedErrorState:
          type: integer
          format: int32
        ExtendedPrinterStatus:
          type: integer
          format: int32
        Status:
          type: string
      xml:
        name: ComputerDetailsPrinterData
    ComputerDetailsProcessors:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        Manufacturer:
          type: string
        ProcessorId:
          type: string
        NumberOfCores:
          type: integer
          format: int32
        NumberOfLogicalProcessors:
          type: integer
          format: int32
        Socket:
          type: string
        L2CacheSize:
          type: integer
          format: int32
        L3CacheSize:
          type: integer
          format: int32
        Revision:
          type: integer
          format: int32
      xml:
        name: ComputerDetailsProcessorsData
    ComputerDetailsSoundDevices:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        ConfigManagerErrorCode:
          type: integer
          format: int32
        Manufacturer:
          type: string
        Status:
          type: string
      xml:
        name: ComputerDetailsSoundDevicesData
    ComputerDetailsVideoCards:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerDetailsID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        AdapterCompatibility:
          type: string
        AdapterDACType:
          type: string
        AdapterRAM:
          type: integer
          format: int64
        ConfigManagerErrorCode:
          type: integer
          format: int32
        CurrentBitsPerPixel:
          type: integer
          format: int32
        CurrentHorizontalResolution:
          type: integer
          format: int32
        CurrentNumberOfColors:
          type: integer
          format: int64
        CurrentRefreshRate:
          type: integer
          format: int32
        CurrentVerticalResolution:
          type: integer
          format: int32
        DriverDate:
          type: string
          format: date-time
        DriverVersion:
          type: string
        Status:
          type: string
        VideoArchitecture:
          type: integer
          format: int32
        VideoMemoryType:
          type: integer
          format: int32
        VideoModeDescription:
          type: string
        VideoProcessor:
          type: string
      xml:
        name: ComputerDetailsVideoCardsData
    ComputerMetadata:
      required:
      - Parameters
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/SimpleParameterList'
        ComputerID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      description: Metadata for one computer
      xml:
        name: ComputerMetadataDTO
    Computer:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        OrganizationID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerName:
          type: string
          readOnly: true
        DomainName:
          type: string
          readOnly: true
        OSMajorVersion:
          type: integer
          format: int32
          readOnly: true
        OSMinorVersion:
          type: integer
          format: int32
          readOnly: true
        OSBuildNumber:
          type: integer
          format: int32
          readOnly: true
        OSVersion:
          type: string
          readOnly: true
          enum:
          - OSV_NONE
          - OSV_WIN95
          - OSV_WIN98
          - OSV_WINME
          - OSV_WINNT4
          - OSV_WIN2k
          - OSV_WINXP
          - OSV_WINXPx64
          - OSV_SERVER2003
          - OSV_SERVER2003R2
          - OSV_VISTA
          - OSV_SERVER2008
          - OSV_SERVER2008R2
          - OSV_WIN7
          - OSV_WIN8
          - OSV_SERVER2012
          - OSV_WIN81
          - OSV_SERVER2012R2
          - OSV_WIN10
          - OSV_SERVER2016
          - OSV_FUTURE_CLIENT
          - OSV_FUTURE_SERVER
        OSServicePack:
          type: integer
          format: int32
          readOnly: true
        OSArchitecture:
          type: string
          readOnly: true
          enum:
          - OSA_NONE
          - OSA_X86
          - OSA_X64
        OSProductKey:
          type: string
          readOnly: true
        ComputerType:
          type: string
          enum:
          - None
          - Desktop
          - Laptop
          - Server
        MachineGuid:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ClientID:
          type: string
          readOnly: true
        LocalIP:
          type: string
          readOnly: true
        PublicIP:
          type: string
          readOnly: true
        PublicIPNumber:
          type: integer
          format: int64
          readOnly: true
        ClientVersion:
          type: string
          readOnly: true
        LastReportDate:
          type: string
          format: date-time
          readOnly: true
        FirstReportDate:
          type: string
          format: date-time
        ComputerFullName:
          type: string
          description: Gets the fully qualified name of the computer, e.g. "Bravura\BRAVO2"
          readOnly: true
        ComputerDisplayName:
          type: string
          description: Gets the display name for the computer, if one is set, otherwise
            returns ComputerName
          readOnly: true
      xml:
        name: Computer
    DeploymentResult:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        DeploymentID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        Date:
          type: string
          format: date-time
          readOnly: true
        Result:
          type: boolean
          readOnly: true
        DetailedResult:
          type: integer
          format: int64
          readOnly: true
        SubStatus:
          type: integer
          format: int64
          readOnly: true
        ErrorCode:
          type: integer
          format: int64
          readOnly: true
        ExitCode:
          type: integer
          format: int64
          readOnly: true
        Message:
          type: string
          readOnly: true
        Output:
          type: string
          readOnly: true
      xml:
        name: DeploymentResult
    Deployment:
      required:
      - Schedule
      type: object
      properties:
        ID:
          type: string
          description: The ID for the deployment
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        TaskID:
          type: string
          description: The ID of the deployed task
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        GroupID:
          type: string
          description: The ID of the group the task is deployed to
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Schedule:
          $ref: '#/components/schemas/Schedule'
        DateModified:
          type: string
          description: The date and time the deployment was last modified
          format: date-time
        State:
          type: string
          description: Whether or not the deployment is enabled/disabled
          enum:
          - Disabled
          - Enabled
      description: A Deployment of an OptiTune Task to a Group of computers (or the
        singleton group for an individual computer)
      xml:
        name: DeploymentDTO
    Schedule:
      type: object
      properties:
        StartupScheduleItems:
          type: array
          xml:
            name: StartupScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/StartupScheduleItem'
        PeriodicScheduleItems:
          type: array
          xml:
            name: PeriodicScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/PeriodicScheduleItem'
        OneTimeScheduleItems:
          type: array
          xml:
            name: OneTimeScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/OneTimeScheduleItem'
        OnceBeforeScheduleItems:
          type: array
          xml:
            name: OnceBeforeScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/OnceBeforeScheduleItem'
        OnceAfterScheduleItems:
          type: array
          xml:
            name: OnceAfterScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/OnceAfterScheduleItem'
        UpdatedScheduleItems:
          type: array
          xml:
            name: UpdatedScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/UpdatedScheduleItem'
        DailyScheduleItems:
          type: array
          xml:
            name: DailyScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/DailyScheduleItem'
        WeeklyScheduleItems:
          type: array
          xml:
            name: WeeklyScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/WeeklyScheduleItem'
        MonthlyScheduleItems:
          type: array
          xml:
            name: MonthlyScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/MonthlyScheduleItem'
        MonthlyByWeekdayScheduleItems:
          type: array
          xml:
            name: MonthlyByWeekdayScheduleItemDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/MonthlyByWeekdayScheduleItem'
      xml:
        name: ScheduleDTO
    StartupScheduleItem:
      type: object
      properties:
        ListOrder:
          type: integer
          format: int32
      xml:
        name: StartupScheduleItemDTO
    PeriodicScheduleItem:
      type: object
      properties:
        Days:
          type: integer
          format: int32
        Hours:
          type: integer
          format: int32
        Minutes:
          type: integer
          format: int32
        Seconds:
          type: integer
          format: int32
        ListOrder:
          type: integer
          format: int32
      xml:
        name: PeriodicScheduleItemDTO
    OneTimeScheduleItem:
      type: object
      properties:
        DateAndTime:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: OneTimeScheduleItemDTO
    OnceBeforeScheduleItem:
      type: object
      properties:
        DateAndTimeUTC:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: OnceBeforeScheduleItemDTO
    OnceAfterScheduleItem:
      type: object
      properties:
        DateAndTimeUTC:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: OnceAfterScheduleItemDTO
    UpdatedScheduleItem:
      type: object
      properties:
        DateAndTimeUTC:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: UpdatedScheduleItemDTO
    DailyScheduleItem:
      type: object
      properties:
        Time:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: DailyScheduleItemDTO
    WeeklyScheduleItem:
      type: object
      properties:
        DayOfWeek:
          type: string
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
        Time:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: WeeklyScheduleItemDTO
    MonthlyScheduleItem:
      type: object
      properties:
        Day:
          maximum: 31
          minimum: 1
          type: integer
          format: int32
        Time:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: MonthlyScheduleItemDTO
    MonthlyByWeekdayScheduleItem:
      type: object
      properties:
        WeekOrder:
          maximum: 5
          minimum: 1
          type: integer
          format: int32
        DayOfWeek:
          type: string
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
        Time:
          type: string
          format: date-time
        ListOrder:
          type: integer
          format: int32
      xml:
        name: MonthlyByWeekdayScheduleItemDTO
    EndpointProtection:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ProductName:
          type: string
          readOnly: true
        ProductVersion:
          type: string
          readOnly: true
        ProductID:
          type: string
          readOnly: true
        ProductSupported:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - Full_Support
          - Basic_Support
          - Limited_Support
          - Not_Supported
        InstalledDate:
          type: string
          format: date-time
          readOnly: true
        ModifiedDate:
          type: string
          format: date-time
          readOnly: true
        LocalPath:
          type: string
          readOnly: true
        SignatureVersion:
          type: string
          readOnly: true
        SignatureDate:
          type: string
          format: date-time
          readOnly: true
        EngineVersion:
          type: string
          readOnly: true
        LastQuickScanDate:
          type: string
          format: date-time
          readOnly: true
        LastFullScanDate:
          type: string
          format: date-time
          readOnly: true
        RealtimeAntivirusState:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - Unknown
          - Disabled
          - Enabled
          - Snoozed
          - Expired
        RealtimeAntispywareState:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - Unknown
          - Disabled
          - Enabled
          - Snoozed
          - Expired
        AntivirusSignatureState:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - Unknown
          - Out_Of_Date
          - Up_To_Date
        DetectionMethod:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - WMI_XP
          - WMI
          - Security_Center
          - Forefront
          - Microsoft_AV
          - Windows_Defender
        AntivirusScanSubstatus:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - No_Action
          - Action_Recommended
          - Action_Needed
        AntivirusSettingsSubstatus:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - No_Action
          - Action_Recommended
          - Action_Needed
        AntivirusProtectionUpdateSubstatus:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - No_Action
          - Action_Recommended
          - Action_Needed
        AntivirusDaysUntilExpired:
          type: integer
          format: int64
          readOnly: true
        ActionRequired:
          type: string
          readOnly: true
          enum:
          - Not_Available
          - No_Issues
          - Antivirus_Scan_Action_Recommended
          - Antivirus_Scan_Action_Needed
          - Antivirus_Settings_Action_Recommended
          - Antivirus_Settings_Action_Needed
          - Antivirus_Updates_Action_Recommended
          - Antivirus_Updates_Action_Needed
          - Realtime_Antivirus_Disabled
          - Realtime_Antivirus_Snoozed
          - Realtime_Antivirus_Expired
          - Realtime_Antispyware_Disabled
          - Realtime_Antispyware_Snoozed
          - Realtime_Antispyware_Expired
          - Antivirus_Signatures_Out_Of_Date
      xml:
        name: MalwareProtection
    EndpointProtectionSettings:
      type: object
      properties:
        GroupID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MonitoringState:
          type: string
          enum:
          - Not_Set
          - Disabled
          - Enabled
        QuickScanState:
          type: string
          enum:
          - Not_Set
          - Disabled
          - Enabled
        QuickScanSchedule:
          $ref: '#/components/schemas/Schedule'
        FullScanState:
          type: string
          enum:
          - Not_Set
          - Disabled
          - Enabled
        FullScanSchedule:
          $ref: '#/components/schemas/Schedule'
        SignatureUpdateState:
          type: string
          enum:
          - Not_Set
          - Disabled
          - Enabled
        SignatureUpdateSchedule:
          $ref: '#/components/schemas/Schedule'
      description: Endpoint protection settings for a group of computers
      xml:
        name: EndpointProtectionSettingsDTO
    EventCategory:
      required:
      - Description
      - Name
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          minLength: 1
          type: string
      description: An event category
      xml:
        name: EventCategoryDTO
    EventCategoryMembership:
      type: object
      properties:
        EventCategoryID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        EventSourceID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      description: An event category membership entry.  This defines which event sources
        belong to which event categories.
      xml:
        name: EventCategoryMembershipDTO
    EventDescriptor:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/SimpleParameterList'
        Type:
          type: string
          description: The type of event
          enum:
          - None
          - Remote_Assistance_Requested
          - Protection_Detected_Malware
          - Protection_Monitoring_Status
          - Protection_Definitions_Out_Of_Date
          - Protection_Realtime_Antivirus_Status
          - Protection_Realtime_Antispyware_Status
          - Hardware_System_Details_Changed
          - Hardware_Disk_Drive_Added
          - Hardware_Disk_Drive_Removed
          - Hardware_Disk_Drive_Updated
          - Hardware_Disk_Share_Added
          - Hardware_Disk_Share_Removed
          - Hardware_Disk_Share_Updated
          - Hardware_Disk_Volume_Added
          - Hardware_Disk_Volume_Removed
          - Hardware_Disk_Volume_Updated
          - Hardware_Network_Adapter_Added
          - Hardware_Network_Adapter_Removed
          - Hardware_Network_Adapter_Updated
          - Hardware_Physical_Memory_Added
          - Hardware_Physical_Memory_Removed
          - Hardware_Portable_Battery_Added
          - Hardware_Portable_Battery_Removed
          - Hardware_Printer_Added
          - Hardware_Printer_Removed
          - Hardware_Printer_Updated
          - Hardware_Processor_Added
          - Hardware_Processor_Removed
          - Hardware_Soundcard_Added
          - Hardware_Soundcard_Removed
          - Hardware_Soundcard_Updated
          - Hardware_Videocard_Added
          - Hardware_Videocard_Removed
          - Hardware_Videocard_Updated
          - Application_Installed
          - Application_Uninstalled
          - Application_Updated
          - Lost_Contact_With_Computer
          - Lost_Contact_With_Group
          - OptiTune_License_Overuse
          - OptiTune_Licenses_Remaining
          - Admin_Logged_In
          - Report_Viewer_Logged_In
          - Windows_Update_Status
          - Install_Task_Status
          - Uninstall_Task_Status
          - Repair_Task_Status
          - System_Task_Status
          - Script_Task_Status
          - Script_Task_Result
          - Remote_Connect_Started
          - Remote_Tool_Started
          - Windows_Service_Added
          - Windows_Service_Removed
          - Windows_Service_Status_Changed
          - Windows_Service_Startup_Type_Set
          - Process_Started
          - Process_Stopped
          - Process_Cpu_Usage
          - Process_Memory_Usage
          - Cpu_Usage
          - Memory_Usage
          - Disk_Active_Time
          - Disk_Latency
          - Disk_Queue_Length
          - Disk_Transfer_Rate
          - Network_Transfer_Rate
          - System_Uptime
          - Performance_Counter
          - Event_Log_Entry
          - Monitoring_Script_Result
          - Disk_Space_Free
          - Disk_Space_Used
          - Battery_Level
          - User_Logon
          - System_Startup
          - System_Shutdown
          - System_Sleep
          - System_Resume
          - Protection_Action_Required
        Scope:
          type: string
          description: The scope of the event type
          readOnly: true
          enum:
          - None
          - Computer
          - Group
          - Organization
        Scenario:
          type: string
          description: The scenario of the event type
          readOnly: true
          enum:
          - None
          - ClientReport
          - Periodic
          - Realtime
          - ClientDetected
        Explanation:
          type: string
          description: The explanation of the event type
          readOnly: true
      xml:
        name: EventDescriptorDTO
    EventSource:
      required:
      - Description
      - Descriptor
      - MinPeriod
      - Name
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          minLength: 1
          type: string
        Notes:
          maxLength: 4000
          type: string
        Severity:
          type: string
          enum:
          - Trace
          - Diagnostic
          - Informational
          - Warning
          - Error
          - Critical
          - Fatal
        State:
          type: string
          enum:
          - Enabled
          - Disabled
        MinPeriod:
          $ref: '#/components/schemas/TimePeriod'
        Scope:
          type: string
          readOnly: true
          enum:
          - None
          - Computer
          - Group
          - Organization
        Scenario:
          type: string
          readOnly: true
          enum:
          - None
          - ClientReport
          - Periodic
          - Realtime
          - ClientDetected
        Descriptor:
          $ref: '#/components/schemas/EventDescriptor'
      description: An event source
      xml:
        name: EventSourceDTO
    TimePeriod:
      type: object
      properties:
        Days:
          type: integer
          format: int32
        Hours:
          type: integer
          format: int32
        Minutes:
          type: integer
          format: int32
        Seconds:
          type: integer
          format: int32
        ListOrder:
          type: integer
          format: int32
      xml:
        name: TimePeriodDTO
    FavoriteTask:
      type: object
      properties:
        TaskID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
          readOnly: true
      description: A favorite task is an organization wide task that is frequently
        used, and can be quickly deployed from the computer details page
      xml:
        name: FavoriteTaskDTO
    File:
      type: object
      properties:
        ID:
          type: string
          description: The file's ID, used to reference the file in other resources
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        FileName:
          maxLength: 255
          type: string
          description: The file's filename
          readOnly: true
        MimeType:
          maxLength: 255
          type: string
          description: The file's mime type
          readOnly: true
        DownloadUrl:
          type: string
          description: The url from which the file can be downloaded
          readOnly: true
        DateCreated:
          type: string
          description: The date the file was created
          format: date-time
          readOnly: true
        DateModified:
          type: string
          description: The date the file was last modified
          format: date-time
          readOnly: true
        Size:
          type: integer
          description: The size of the file, in bytes
          format: int64
          readOnly: true
        Flags:
          type: string
          description: The flags associated with the file
          readOnly: true
          enum:
          - None
          - Temporary
          - Uploading
          - CloudHosted
          - ValidateCss
        ScriptTaskID:
          type: string
          description: If the file is associated with a script task, the ID of the
            script task
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        InstallTaskID:
          type: string
          description: If the file is associated with a install task, the ID of the
            install task
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        TrayIconSettingsGroupID:
          type: string
          description: If the file is associated with tray icon settings, the tray
            icon settings ID
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        AgentInstallerID:
          type: string
          description: If the file is associated with an agent installer, the ID of
            the agent installer
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        TaskMetadataID:
          type: string
          description: If the file is associated with task metadata, the ID of the
            task metadata
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        BrandID:
          type: string
          description: If the file is associated with a brand, the ID of the brand
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        RelatedItemName:
          type: string
          description: If one of the associated ID fields is present, the name of
            the associated entity
          readOnly: true
      description: A file that has been uploaded to OptiTune
      xml:
        name: FileDTO
    GroupMembership:
      type: object
      properties:
        GroupID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MembershipType:
          type: string
          enum:
          - None
          - System
          - Static
          - Dynamic
          - Any
      description: A group membership entry
      xml:
        name: GroupMembershipDTO
    OptiTuneGroup:
      required:
      - Name
      type: object
      properties:
        ID:
          type: string
          description: The ID of the group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ParentID:
          type: string
          description: The ID of the parent group, if the group has a parent group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the group
        Notes:
          maxLength: 4000
          type: string
          description: Any notes you wish to keep about the group
        Segment:
          maxLength: 255
          pattern: ^[a-z0-9\-]*$
          type: string
          description: "The segment is a user readable string that identifies this\
            \ group in a path of groups, for example,\r\n\"groupa\" in groupa.groupb.root\
            \  \r\n\r\nIt should only contain lower case letters, digits, and '-'\
            \ for spaces.  No punctuation or whitespace is allowed.\r\n\r\nIf left\
            \ out or blank, it will be calculated based on the group name."
        IsSystemGroup:
          type: boolean
          description: "True if the group's members are managed by the system, otherwise\
            \ false.\r\nFor example, All Computers is a system group"
        IsSingletonGroup:
          type: boolean
          description: "True if the group represents one computer, and should be hidden\
            \ from the user's view.\r\nThis allows the admin to make settings changes\
            \ for a single computer, since the singleton group is used."
        Flags:
          type: string
          description: Currently, flags are used to determine what type of system
            group this group represents
          enum:
          - None
          - AllComputers
          - AllDesktopComputers
          - AllMobileComputers
          - AllServerComputers
        Priority:
          maximum: 1E+3
          minimum: 0
          type: integer
          description: "The priority indicates the relative importance of the group.\
            \  Lower numbers indicate a higher priority,\r\nand groups with lower\
            \ numbers will win when conflicting settings are created for a computer\
            \ that belongs to\r\nmultiple groups."
          format: int32
        MembershipRules:
          $ref: '#/components/schemas/GroupMembershipRules'
      description: A group of computers
      xml:
        name: OptiTuneGroupDTO
    GroupMembershipRules:
      required:
      - Logic
      type: object
      properties:
        Logic:
          type: string
          enum:
          - AllExist
          - AnyExist
          - NoneExist
        ValueMatchesRules:
          type: array
          xml:
            name: GroupMembershipValueMatchesRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/GroupMembershipValueMatchesRule'
        ComputerTypeRules:
          type: array
          xml:
            name: ComputerTypeGroupMembershipRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/ComputerTypeGroupMembershipRule'
        WindowsInstallDateRules:
          type: array
          xml:
            name: WindowsInstallDateGroupMembershipRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/WindowsInstallDateGroupMembershipRule'
        PhysicalMemoryRules:
          type: array
          xml:
            name: PhysicalMemoryGroupMembershipRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/PhysicalMemoryGroupMembershipRule'
        MalwareProtectionStateRules:
          type: array
          xml:
            name: MalwareProtectionStateGroupMembershipRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/MalwareProtectionStateGroupMembershipRule'
        MalwareThreatExistsRules:
          type: array
          xml:
            name: MalwareThreatExistsGroupMembershipRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/MalwareThreatExistsGroupMembershipRule'
        OSRules:
          type: array
          xml:
            name: OSGroupMembershipRuleDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/OSGroupMembershipRule'
      xml:
        name: GroupMembershipRulesDTO
    GroupMembershipValueMatchesRule:
      required:
      - Value
      - ValueType
      type: object
      properties:
        ValueType:
          type: string
          enum:
          - ClientID
          - ClientIDPrefix
          - ClientIDPattern
          - Domain
          - ComputerName
          - SystemManufacturer
          - SystemModel
          - Motherboard
          - Processor
          - HardDrive
          - VideoCard
          - AppName
          - MalwareProtectionName
        Value:
          maxLength: 1024
          type: string
          description: "Note that this can be the empty string in certain cases, depending\
            \ on the value of ValueType.  BadRequest will be returned\r\nif this value\
            \ is invalid"
        ListOrder:
          type: integer
          format: int32
      xml:
        name: GroupMembershipValueMatchesRuleDTO
    ComputerTypeGroupMembershipRule:
      required:
      - PCType
      type: object
      properties:
        PCType:
          type: string
          enum:
          - None
          - Desktop
          - Laptop
          - Server
        ListOrder:
          type: integer
          format: int32
      xml:
        name: ComputerTypeGroupMembershipRuleDTO
    WindowsInstallDateGroupMembershipRule:
      required:
      - BeforeOrAfter
      - InstallTimeUTC
      type: object
      properties:
        InstallTimeUTC:
          type: string
          format: date-time
        BeforeOrAfter:
          type: string
          enum:
          - Before
          - After
        ListOrder:
          type: integer
          format: int32
      xml:
        name: WindowsInstallDateGroupMembershipRuleDTO
    PhysicalMemoryGroupMembershipRule:
      required:
      - BelowOrAbove
      - TotalMemoryBytes
      type: object
      properties:
        TotalMemoryBytes:
          type: integer
          format: int64
        BelowOrAbove:
          type: string
          enum:
          - Below
          - Above
        ListOrder:
          type: integer
          format: int32
      xml:
        name: PhysicalMemoryGroupMembershipRuleDTO
    MalwareProtectionStateGroupMembershipRule:
      required:
      - Value
      type: object
      properties:
        Value:
          type: string
          enum:
          - Not_Available
          - Unknown
          - Disabled
          - Enabled
          - Snoozed
          - Expired
        ListOrder:
          type: integer
          format: int32
      xml:
        name: MalwareProtectionStateGroupMembershipRuleDTO
    MalwareThreatExistsGroupMembershipRule:
      required:
      - Value
      type: object
      properties:
        Value:
          type: string
          enum:
          - None
          - Error
          - Detected
          - Suspended
          - Quarantined
          - Removed
          - Dismissed
          - NotRelevant
        ListOrder:
          type: integer
          format: int32
      xml:
        name: MalwareThreatExistsGroupMembershipRuleDTO
    OSGroupMembershipRule:
      required:
      - Items
      type: object
      properties:
        Items:
          type: array
          xml:
            name: OSConditionItem
            wrapped: true
          items:
            $ref: '#/components/schemas/OSConditionItem'
        ListOrder:
          type: integer
          format: int32
      xml:
        name: OSGroupMembershipRuleDTO
    OSConditionItem:
      type: object
      properties:
        Version:
          type: string
          enum:
          - OSV_NONE
          - OSV_WIN95
          - OSV_WIN98
          - OSV_WINME
          - OSV_WINNT4
          - OSV_WIN2k
          - OSV_WINXP
          - OSV_WINXPx64
          - OSV_SERVER2003
          - OSV_SERVER2003R2
          - OSV_VISTA
          - OSV_SERVER2008
          - OSV_SERVER2008R2
          - OSV_WIN7
          - OSV_WIN8
          - OSV_SERVER2012
          - OSV_WIN81
          - OSV_SERVER2012R2
          - OSV_WIN10
          - OSV_SERVER2016
          - OSV_FUTURE_CLIENT
          - OSV_FUTURE_SERVER
        Architecture:
          type: string
          enum:
          - OSA_NONE
          - OSA_X86
          - OSA_X64
        MinServicePack:
          type: integer
          format: int32
      xml:
        name: OSConditionItem
    InstallTask:
      required:
      - Description
      - Name
      - SetupRelativePath
      type: object
      properties:
        PackageFileID:
          type: string
          description: The ID of the uploaded package file for the install task.  It
            may refer to an .exe, .msi, or .bvx file which contains the installer
            for the application
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Locations:
          type: array
          description: "Enter any other locations where the installation file is available,\
            \ one per line.  If you have also specified a packaged file id, the name\
            \ \r\nof the uploaded file must be the same as the filename in each additional\
            \ location.\r\n\r\nThe client computer will try to download the file in\
            \ the order specified, finally trying the file specified in PackageFileID,\
            \ if any.\r\n            \r\nFor example:\r\n\\\\myserver\\share\\test1.bvx\r\
            \nhttps://www.mywebsite.com/packages/test1.bvx\r\nhttps://mycompany.s3.amazonaws.com/packages/test1.bvx"
          items:
            type: string
        PreInstallConditions:
          $ref: '#/components/schemas/SystemConditions'
        InstalledConditions:
          $ref: '#/components/schemas/SystemConditions'
        SetupRelativePath:
          maxLength: 255
          minLength: 1
          type: string
          description: "If the installer file specified in PackageFileID or Locations\
            \ is an .exe or .msi, this must be identical to that filename\r\n\r\n\
            If the installer file specified is a .bvx package file, this refers to\
            \ the filename inside the .bvx package to run when installing the application"
        CommandLineArgs:
          maxLength: 255
          type: string
          description: Any command line arguments to pass to the installer file
        KeepInstallerFiles:
          type: boolean
          description: Whether or not to keep the installer files (.exe, .msi, or
            extracted files from the .bvx package) after the install completes
        ID:
          type: string
          description: The ID for the task in the database
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the task
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: A description of the task
        Notes:
          maxLength: 4000
          type: string
          description: Notes about the task
        DateModified:
          type: string
          description: The date/time in UTC that the task was modified
          format: date-time
          readOnly: true
        Timeout:
          maximum: 2E+4
          minimum: 5
          type: integer
          description: The time to wait for the task to complete, in minutes
          format: int32
        TaskType:
          type: string
          description: The type of task
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      description: An install task
      xml:
        name: InstallTaskDTO
    SystemConditions:
      required:
      - Logic
      type: object
      properties:
        Logic:
          type: string
          enum:
          - AllExist
          - AnyExist
          - NoneExist
        FileConditions:
          type: array
          xml:
            name: FileConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/FileCondition'
        DirectoryConditions:
          type: array
          xml:
            name: DirectoryConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/DirectoryCondition'
        RegistryKeyConditions:
          type: array
          xml:
            name: RegistryKeyConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/RegistryKeyCondition'
        RegistryValueConditions:
          type: array
          xml:
            name: RegistryValueConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/RegistryValueCondition'
        UninstallKeyConditions:
          type: array
          xml:
            name: UninstallKeyConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/UninstallKeyCondition'
        MSIProductConditions:
          type: array
          xml:
            name: MSIProductConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/MSIProductCondition'
        OSConditions:
          type: array
          xml:
            name: OSConditionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/OSCondition'
      xml:
        name: SystemConditionsDTO
    FileCondition:
      required:
      - Name
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: FileConditionDTO
    DirectoryCondition:
      required:
      - Name
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: DirectoryConditionDTO
    RegistryKeyCondition:
      required:
      - Key
      type: object
      properties:
        Key:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: RegistryKeyConditionDTO
    RegistryValueCondition:
      required:
      - Key
      - ValueName
      type: object
      properties:
        Key:
          maxLength: 255
          minLength: 1
          type: string
        ValueName:
          maxLength: 255
          minLength: 1
          type: string
          description: We don't support ValueName of length 0, use a RegistryKeyCondition
            instead
        ValueType:
          type: string
          enum:
          - Any
          - String
          - Dword
        StringValue:
          maxLength: 255
          type: string
        DwordValue:
          type: integer
          format: int32
        ListOrder:
          type: integer
          format: int32
      xml:
        name: RegistryValueConditionDTO
    UninstallKeyCondition:
      required:
      - SubKey
      type: object
      properties:
        SubKey:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: UninstallKeyConditionDTO
    MSIProductCondition:
      required:
      - ID
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ListOrder:
          type: integer
          format: int32
      xml:
        name: MSIProductConditionDTO
    OSCondition:
      required:
      - Items
      type: object
      properties:
        Items:
          type: array
          xml:
            name: OSConditionItem
            wrapped: true
          items:
            $ref: '#/components/schemas/OSConditionItem'
        ListOrder:
          type: integer
          format: int32
      xml:
        name: OSConditionDTO
    LocalUser:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        UserName:
          type: string
          readOnly: true
        DomainName:
          type: string
          readOnly: true
        FullName:
          type: string
          readOnly: true
        Comment:
          type: string
          readOnly: true
        Sid:
          type: string
          readOnly: true
        ProfilePath:
          type: string
          readOnly: true
        HasAllDetails:
          type: boolean
          readOnly: true
        PrivilegesMask:
          type: string
          readOnly: true
          enum:
          - Guest
          - User
          - Administrator
        Flags:
          type: string
          readOnly: true
          enum:
          - UF_SCRIPT
          - UF_ACCOUNTDISABLE
          - UF_HOMEDIR_REQUIRED
          - UF_LOCKOUT
          - UF_PASSWD_NOTREQD
          - UF_PASSWD_CANT_CHANGE
          - UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED
          - UF_TEMP_DUPLICATE_ACCOUNT
          - UF_NORMAL_ACCOUNT
          - UF_INTERDOMAIN_TRUST_ACCOUNT
          - UF_WORKSTATION_TRUST_ACCOUNT
          - UF_SERVER_TRUST_ACCOUNT
          - UF_DONT_EXPIRE_PASSWD
          - UF_MNS_LOGON_ACCOUNT
          - UF_SMARTCARD_REQUIRED
          - UF_TRUSTED_FOR_DELEGATION
          - UF_NOT_DELEGATED
          - UF_USE_DES_KEY_ONLY
          - UF_DONT_REQUIRE_PREAUTH
          - UF_PASSWORD_EXPIRED
          - UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION
          - UF_NO_AUTH_DATA_REQUIRED
          - UF_PARTIAL_SECRETS_ACCOUNT
          - UF_USE_AES_KEYS
        LastLogonTime:
          type: string
          format: date-time
          readOnly: true
      description: Summary description for LocalUser
      xml:
        name: LocalUser
    MailTemplate:
      required:
      - Body
      - FromAddress
      - Name
      - Subject
      type: object
      properties:
        ID:
          type: string
          description: The ID of the mail template
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the mail template
        FromAddress:
          maxLength: 255
          minLength: 1
          type: string
          description: The FROM email address to use when sending the email
        Subject:
          maxLength: 255
          minLength: 1
          type: string
          description: The template for the subject of the email.  This can contain
            variables, see the OptiTune help documentation for more details.
        Body:
          maxLength: 1048576
          minLength: 1
          type: string
          description: The template for the body of the email.  This can contain variables,
            see the OptiTune help documentation for more details.
        BodyType:
          type: string
          description: The format of the body, either plain text or html
          enum:
          - Plaintext
          - Html
        SMSBody:
          maxLength: 160
          type: string
          description: The template for the body of the SMS message.  This can contain
            variables, see the OptiTune help documentation for more details.
      description: A mail template for sending alert notification emails and SMS messages
      xml:
        name: MailTemplateDTO
    MalwareThreat:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        Date:
          type: string
          format: date-time
          readOnly: true
        ThreatName:
          type: string
          readOnly: true
        ThreatNumber:
          type: integer
          format: int64
          readOnly: true
        Severity:
          type: string
          readOnly: true
        Category:
          type: string
          readOnly: true
        Action:
          type: string
          readOnly: true
        Detection:
          type: string
          readOnly: true
        InfoUrl:
          type: string
          readOnly: true
        Processes:
          $ref: '#/components/schemas/PathsList'
        UserName:
          type: string
          readOnly: true
        ErrorCode:
          type: integer
          format: int32
          readOnly: true
        LocalPaths:
          $ref: '#/components/schemas/PathsList'
        Message:
          type: string
          readOnly: true
        RecordNumber:
          type: integer
          format: int32
          readOnly: true
        EventNumber:
          type: integer
          format: int32
          readOnly: true
        State:
          type: string
          enum:
          - None
          - Error
          - Detected
          - Suspended
          - Quarantined
          - Removed
          - Dismissed
          - NotRelevant
      xml:
        name: MalwareThreat
    PathsList:
      type: object
      properties:
        Paths:
          type: array
          readOnly: true
          items:
            type: string
      xml:
        name: PathsList
    NotificationGroupMemberAccount:
      type: object
      properties:
        NotificationGroupID:
          type: string
          description: The ID of the notification group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        AccountID:
          type: string
          description: The ID of the account to associate with the notification group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        NotificationMethods:
          type: string
          description: The methods to use to notify the account, either SMS, Email
            or both
          enum:
          - None
          - Email
          - SMS
      description: A notification group member account entry, associating an account
        with a notification group
      xml:
        name: NotificationGroupMemberAccountDTO
    NotificationGroupMember:
      required:
      - FirstName
      - LastName
      type: object
      properties:
        ID:
          type: string
          description: The ID of the notification group member
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        NotificationGroupID:
          type: string
          description: The ID of the notification group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        FirstName:
          maxLength: 255
          minLength: 1
          type: string
          description: The first name of the user
        LastName:
          maxLength: 255
          minLength: 1
          type: string
          description: The last name of the user
        Email:
          type: string
          description: The email address of the user
        SMSNumber:
          type: string
          description: The phone number of the user, for sending SMS messages
      description: A notification group member, for sending emails or SMS messages
        to users who don't have an OptiTune account.
      xml:
        name: NotificationGroupMemberDTO
    NotificationGroup:
      required:
      - Description
      - Name
      type: object
      properties:
        ID:
          type: string
          description: The ID of the notification group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the notification group
        Description:
          maxLength: 1024
          minLength: 1
          type: string
          description: A description for the notification group
        Notes:
          maxLength: 4000
          type: string
          description: Any notes you wish to keep about the notification group
      description: A notification group for sending alert notification emails and
        SMS messages to
      xml:
        name: NotificationGroupDTO
    OptiTuneTask:
      required:
      - Description
      - Name
      type: object
      properties:
        ID:
          type: string
          description: The ID for the task in the database
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the task
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: A description of the task
        Notes:
          maxLength: 4000
          type: string
          description: Notes about the task
        DateModified:
          type: string
          description: The date/time in UTC that the task was modified
          format: date-time
          readOnly: true
        Timeout:
          maximum: 2E+4
          minimum: 5
          type: integer
          description: The time to wait for the task to complete, in minutes
          format: int32
        TaskType:
          type: string
          description: The type of task
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      xml:
        name: OptiTuneTaskDTO
    Organization:
      required:
      - ContactEmail
      - ContactFirstName
      - ContactLastName
      - Name
      type: object
      properties:
        ID:
          type: string
          description: The unique ID of the organization on this management server
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        DateAdded:
          type: string
          description: The date and time the organization was added to this management
            server, in UTC
          format: date-time
          readOnly: true
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the organization
        Website:
          maxLength: 255
          type: string
          description: An optional website for the organization
        ContactFirstName:
          maxLength: 255
          minLength: 1
          type: string
          description: The first name of a contact person at the organization
        ContactLastName:
          maxLength: 255
          minLength: 1
          type: string
          description: The last name of a contact person at the organization
        ContactEmail:
          maxLength: 255
          minLength: 1
          type: string
          description: The contact person's email address
        ContactPhone:
          maxLength: 255
          type: string
          description: The contact person's phone number
        GeneratedApiUserName:
          maxLength: 255
          type: string
          description: If GenerateApiCredentials is true when adding an organization,
            this will hold the API User Name
          readOnly: true
        GeneratedApiPassword:
          maxLength: 255
          type: string
          description: If GenerateApiCredentials is true when adding an organization,
            this will hold the API Password
          readOnly: true
      description: An organization on this management server
      xml:
        name: OrganizationDTO
    OrganizationRegistration:
      required:
      - ContactEmail
      - ContactFirstName
      - ContactLastName
      - Name
      - Password
      - UserName
      type: object
      properties:
        UserName:
          maxLength: 20
          minLength: 4
          pattern: ^[a-zA-Z0-9]{4,20}$
          type: string
          description: The user name of the administrator of the organization
        Password:
          maxLength: 255
          minLength: 1
          pattern: ^.*(?=.{6,1000})(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).*$
          type: string
          description: The password for the administrator of the organization.  This
            is only used when setting up a new organization
        RegistrationCode:
          maxLength: 255
          type: string
          description: An optional registration code to use when registering a new
            organization
        TimeZoneCode:
          maxLength: 255
          type: string
          description: An optional timezone code for the new account
        ID:
          type: string
          description: The unique ID of the organization on this management server
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        DateAdded:
          type: string
          description: The date and time the organization was added to this management
            server, in UTC
          format: date-time
          readOnly: true
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the organization
        Website:
          maxLength: 255
          type: string
          description: An optional website for the organization
        ContactFirstName:
          maxLength: 255
          minLength: 1
          type: string
          description: The first name of a contact person at the organization
        ContactLastName:
          maxLength: 255
          minLength: 1
          type: string
          description: The last name of a contact person at the organization
        ContactEmail:
          maxLength: 255
          minLength: 1
          type: string
          description: The contact person's email address
        ContactPhone:
          maxLength: 255
          type: string
          description: The contact person's phone number
        GeneratedApiUserName:
          maxLength: 255
          type: string
          description: If GenerateApiCredentials is true when adding an organization,
            this will hold the API User Name
          readOnly: true
        GeneratedApiPassword:
          maxLength: 255
          type: string
          description: If GenerateApiCredentials is true when adding an organization,
            this will hold the API Password
          readOnly: true
      xml:
        name: OrganizationRegistrationDTO
    OrganizationSettings:
      type: object
      properties:
        OrganizationID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        StorageQuota:
          maximum: 2.74877906944E+13
          minimum: 1.048576E+8
          type: integer
          description: The storage quota (in bytes) assigned to the organization,
            from 100MB to 25TB
          format: int64
        BillingToken:
          maxLength: 255
          type: string
          description: An optional billing token to associate with the organization,
            if monthly billing is to be used in addition or instead of product keys
        BillingLocked:
          type: boolean
          description: "Specifies whether or not the billing token is locked.  If\
            \ true, the user cannot edit the billing token, otherwise they can edit\
            \ the billing\r\ntoken for the organization."
      description: An OrganizationSettings object
      xml:
        name: OrganizationSettingsDTO
    PerformanceSettings:
      type: object
      properties:
        GroupID:
          type: string
          description: The ID of the group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MonitoringEnabled:
          type: boolean
          description: Is performance monitoring enabled?
        ReportingInterval:
          maximum: 6.048E+5
          minimum: 9E+2
          type: integer
          description: The reporting interval, in seconds at which the agent should
            send performance data.  The default is 1 hour.
          format: int32
        SampleInterval:
          maximum: 1.20006E+6
          minimum: 2
          type: integer
          description: The sample interval, at which the agent should sample performance
            data.  The default is 30 seconds.
          format: int32
        MaxDataPoints:
          maximum: 5E+3
          minimum: 1E+3
          type: integer
          description: The number of data points to store per computer.  The default
            is 5000.
          format: int32
      description: Performance settings for a group of computers
      xml:
        name: PerformanceSettingsDTO
    ProductKey:
      required:
      - RegistrationCode
      type: object
      properties:
        ExpirationDate:
          type: string
          format: date-time
          readOnly: true
        NumLicenses:
          type: integer
          format: int32
          readOnly: true
        IsTrialLicense:
          type: boolean
          readOnly: true
        RegistrationCode:
          maxLength: 255
          minLength: 32
          type: string
      description: An OptiTune product key (registration code)
      xml:
        name: ProductKeyDTO
    RemoteAccessSettings:
      type: object
      properties:
        GroupID:
          type: string
          description: The ID of the group that these settings apply to
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DateModified:
          type: string
          description: The date and time these settings were last modified
          format: date-time
          readOnly: true
        RelayServerState:
          type: string
          description: Whether or not the relay server is enabled
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RelayServerSelectionMethod:
          type: string
          description: If the relay server is enabled, how is it chosen?
          enum:
          - Automatic
          - Manual
        RelayServers:
          type: array
          description: If the relay server is enabled, and the selection method is
            Manual, provide a list of relay servers to use (fully qualified DNS names),
            e.g. "relay.opti-tune.com"
          items:
            type: string
        RemoteAssistanceFirewallState:
          type: string
          description: Whether or not the remote assistance application should have
            a firewall exception
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RemoteServiceFirewallState:
          type: string
          description: Whether or not the remote service application should have a
            firewall exception
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RemoteConnectState:
          type: string
          description: Enables/Disables the remote connect tool
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RemoteConnectNotifyState:
          type: string
          description: If enabled, show a message to the end user when the remote
            connect tool is activated
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RemoteConnectNotifyMessage:
          maxLength: 1024
          type: string
          description: If RemoteConnectNotifyState is Enabled, provide the message
            to display to the user when remote connect is activated on their machine
        RemoteToolsState:
          type: string
          description: Enables/Disables the other remote tools, such as the command
            prompt, task manager, powershell, etc...
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RemoteToolsNotifyState:
          type: string
          description: If enabled, show a message to the end user when the other remote
            tools are activated
          enum:
          - Not_Set
          - Disabled
          - Enabled
        RemoteToolsNotifyMessage:
          maxLength: 1024
          type: string
          description: If RemoteToolsNotifyState is Enabled, provide the message to
            display to the user when any of the other remote tools are activated
      description: Remote access settings for a group of computers
      xml:
        name: RemoteAccessSettingsDTO
    RemoteAssistanceRequest:
      required:
      - Email
      - FullName
      - UserName
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        UserName:
          maxLength: 255
          minLength: 1
          type: string
        FullName:
          maxLength: 255
          minLength: 1
          type: string
        Email:
          maxLength: 255
          minLength: 1
          type: string
        Phone:
          maxLength: 255
          type: string
        UserMessage:
          maxLength: 1024
          type: string
        LocalIPAddresses:
          maxLength: 255
          type: string
        DateCreated:
          type: string
          format: date-time
      description: A remote assistance request, created when an end user requests
        remote assistance
      xml:
        name: RemoteAssistanceRequestDTO
    RepairTask:
      required:
      - Description
      - Name
      type: object
      properties:
        InstalledConditions:
          $ref: '#/components/schemas/SystemConditions'
        MsiProduct:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ID:
          type: string
          description: The ID for the task in the database
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the task
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: A description of the task
        Notes:
          maxLength: 4000
          type: string
          description: Notes about the task
        DateModified:
          type: string
          description: The date/time in UTC that the task was modified
          format: date-time
          readOnly: true
        Timeout:
          maximum: 2E+4
          minimum: 5
          type: integer
          description: The time to wait for the task to complete, in minutes
          format: int32
        TaskType:
          type: string
          description: The type of task
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      description: A repair task, for repairing an installed MSI application
      xml:
        name: RepairTaskDTO
    RetiredComputer:
      type: object
      properties:
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerName:
          type: string
          readOnly: true
        DomainName:
          type: string
          readOnly: true
      description: A retired computer describes a previously managed computer that
        is retired, and not allowed to access OptiTune
      xml:
        name: RetiredComputerDTO
    ScriptTask:
      required:
      - Description
      - Name
      type: object
      properties:
        RunConditions:
          $ref: '#/components/schemas/SystemConditions'
        ScriptFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        PackageFileID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ScriptType:
          type: string
          enum:
          - None
          - Batch
          - Powershell
          - VB_Script
          - Java_Script
          - Windows_Script
          - Python
          - Perl
          - Ruby
          - Bravura_Script
        CommandLineArgs:
          maxLength: 255
          type: string
        ID:
          type: string
          description: The ID for the task in the database
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the task
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: A description of the task
        Notes:
          maxLength: 4000
          type: string
          description: Notes about the task
        DateModified:
          type: string
          description: The date/time in UTC that the task was modified
          format: date-time
          readOnly: true
        Timeout:
          maximum: 2E+4
          minimum: 5
          type: integer
          description: The time to wait for the task to complete, in minutes
          format: int32
        TaskType:
          type: string
          description: The type of task
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      description: A script task executes a script on a computer or group of computers,
        and uploads the output of the script to the management server
      xml:
        name: ScriptTaskDTO
    SystemTask:
      required:
      - Description
      - Name
      type: object
      properties:
        SystemTaskType:
          type: string
          enum:
          - None
          - Shutdown
          - Restart
          - Sleep
          - Hibernate
          - Disk_Check
          - Defragment
          - Start_Service
          - Stop_Service
          - Restart_Service
          - Set_Service_Startup
          - Terminate_Process
          - Check_For_Windows_Updates
          - Install_Windows_Updates
          - Endpoint_Protection_Quick_Scan
          - Endpoint_Protection_Full_Scan
          - Endpoint_Protection_Signature_Update
          - Refresh_Computer_Details
          - Run_CCleaner
          - Notify_User
          - Refresh_Endpoint_Protection_Details
        ID:
          type: string
          description: The ID for the task in the database
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the task
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: A description of the task
        Notes:
          maxLength: 4000
          type: string
          description: Notes about the task
        DateModified:
          type: string
          description: The date/time in UTC that the task was modified
          format: date-time
          readOnly: true
        Timeout:
          maximum: 2E+4
          minimum: 5
          type: integer
          description: The time to wait for the task to complete, in minutes
          format: int32
        TaskType:
          type: string
          description: The type of task
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      description: A system task, for performing simple operations, like restarting
        or shutting down a computer
      xml:
        name: SystemTaskDTO
    TrayIconSettings:
      required:
      - Description
      - Email
      - SupportedBy
      - Title
      type: object
      properties:
        GroupID:
          type: string
          description: The ID of the group that the settings apply to
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DateModified:
          type: string
          description: The date and time the settings were last modified
          format: date-time
          readOnly: true
        TrayIconState:
          type: string
          description: Whether or not the tray icon application is enabled/disabled
            on each computer in the group
          enum:
          - Not_Set
          - Disabled
          - Enabled
        Title:
          maxLength: 255
          minLength: 1
          type: string
          description: The title in the Support Center Overview screen. You can customize
            this to include your own company's branding.
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: The description in the Support Center Overview screen. You
            can customize this to provide an overview for the Support Center.
        SupportedBy:
          maxLength: 255
          minLength: 1
          type: string
          description: The organization or person who provides technical support.
        Website:
          maxLength: 255
          type: string
          description: The main support website (optional).
        Email:
          maxLength: 255
          minLength: 1
          type: string
          description: The main support email address.
        Phone:
          maxLength: 255
          type: string
          description: The main support phone number (optional).
        Notes:
          maxLength: 4000
          type: string
          description: Any notes or information you wish to provide to the end user.  For
            example, you could include hours of operation.
        SupportActions:
          $ref: '#/components/schemas/SupportActionsList'
        CustomIconFileID:
          type: string
          description: A File ID for a icon (.ico) file to use in the support center
            application's main window, the tray section of the windows task bar, and
            the desktop shortcut as well
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DesktopShortcutName:
          maxLength: 255
          type: string
          description: If specified, this will create a desktop shortcut using the
            given name to provide easier access to the support center application
            for end users
      description: Tray icon settings for a group of computers
      xml:
        name: TrayIconSettingsDTO
    SupportActionsList:
      type: object
      properties:
        RemoteAssistSupportActions:
          type: array
          xml:
            name: RemoteAssistSupportActionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/RemoteAssistSupportAction'
        UrlSupportActions:
          type: array
          xml:
            name: UrlSupportActionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/UrlSupportAction'
        EmailSupportActions:
          type: array
          xml:
            name: EmailSupportActionDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/EmailSupportAction'
      xml:
        name: SupportActionsListDTO
    RemoteAssistSupportAction:
      required:
      - Name
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Icon:
          type: string
          enum:
          - None
          - Url
          - Email
          - RemoteAssist
          - HelpTicket
          - Screenshot
          - LifeSaver
        ListOrder:
          type: integer
          format: int32
      xml:
        name: RemoteAssistSupportActionDTO
    UrlSupportAction:
      required:
      - Name
      - UrlLink
      type: object
      properties:
        UrlLink:
          maxLength: 255
          minLength: 1
          type: string
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Icon:
          type: string
          enum:
          - None
          - Url
          - Email
          - RemoteAssist
          - HelpTicket
          - Screenshot
          - LifeSaver
        ListOrder:
          type: integer
          format: int32
      xml:
        name: UrlSupportActionDTO
    EmailSupportAction:
      required:
      - Name
      - To
      type: object
      properties:
        To:
          maxLength: 255
          minLength: 1
          type: string
        Subject:
          maxLength: 255
          type: string
        Body:
          maxLength: 1024
          type: string
        AttachScreenshot:
          type: boolean
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Icon:
          type: string
          enum:
          - None
          - Url
          - Email
          - RemoteAssist
          - HelpTicket
          - Screenshot
          - LifeSaver
        ListOrder:
          type: integer
          format: int32
      xml:
        name: EmailSupportActionDTO
    UninstallTask:
      required:
      - Description
      - Name
      type: object
      properties:
        InstalledConditions:
          $ref: '#/components/schemas/SystemConditions'
        CommandLine:
          maxLength: 255
          type: string
          description: "Enter the full command line to uninstall the application\r\
            \nYou may use environment variables in the string as well.\r\n       \
            \     \r\nFor example:\r\n%programfiles%\\myapp32\\bin\\uinstall.exe /s\
            \ /r\r\n%programfiles64%\\myapp64\\bin\\uinstall.exe /s /r"
        MsiProduct:
          type: string
          description: "Enter the product ID (in Guid format) for the msi application\
            \ you wish to uninstall\r\n            \r\nFor example:\r\n837FEC39-0181-4EB3-BCB5-CFFC425B2345"
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        UninstallSubkeyName:
          maxLength: 255
          type: string
          description: "Enter the name of the uninstall subkey for the application.\r\
            \nThe OptiTune client will use the UninstallString registry value\r\n\
            contained in the key to uninstall the application\r\n            \r\n\
            For example:\r\nmyapp \r\n{2012098D-EEE9-4769-8DD3-B038050854D4}"
        UninstallSubkeyExtraCommandLineArgs:
          maxLength: 255
          type: string
          description: "Enter any extra command line arguments you wish to pass to\
            \ the uninstaller, when using the UninstallSubkeyName parameter\r\nThis\
            \ allows you to specify the uninstall command using the uninstall registry\
            \ key name, but add additional parameters such \r\nas a \"quiet\" or \"\
            silent\" switch to the uninstaller\r\n\r\nFor example:\r\n/s /q"
        UninstallMethod:
          type: string
          readOnly: true
          enum:
          - None
          - CommandLine
          - MsiProduct
          - UninstallSubkey
        ID:
          type: string
          description: The ID for the task in the database
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the task
        Description:
          maxLength: 255
          minLength: 1
          type: string
          description: A description of the task
        Notes:
          maxLength: 4000
          type: string
          description: Notes about the task
        DateModified:
          type: string
          description: The date/time in UTC that the task was modified
          format: date-time
          readOnly: true
        Timeout:
          maximum: 2E+4
          minimum: 5
          type: integer
          description: The time to wait for the task to complete, in minutes
          format: int32
        TaskType:
          type: string
          description: The type of task
          enum:
          - None
          - Install_App
          - Repair_App
          - Uninstall_App
          - Auto_Update
          - Configure_Support_Center
          - Run_Script
          - System
          - Remote_Connect
          - Realtime_Connect
          - Notify_User
          - Firewall_Rule
          - AllDeployable
          - AllUserDeployable
          - AllTasks
      description: An uninstall task, for uninstalling a regular or MSI installed
        application
      xml:
        name: UninstallTaskDTO
    Webhook:
      required:
      - Name
      - Url
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        GroupID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          maxLength: 255
          minLength: 1
          type: string
        Description:
          maxLength: 1024
          type: string
        State:
          type: string
          enum:
          - Enabled
          - Disabled
        WebhookEventType:
          type: string
          enum:
          - None
          - Account
          - Agent_Report
          - Alert
          - Audit_Log_Entry
          - Computer
          - Deployment_Result
          - Group
          - Business_Entity
          - Malware_Protection
          - Malware_Threat
          - Remote_Assistance_Request
          - Computer_Display_Name
        WebhookEventSubType:
          type: string
          enum:
          - None
          - Added
          - Changed
          - Deleted
          - All
        Url:
          maxLength: 1024
          minLength: 1
          type: string
      description: A Webhook for receiving a notification via HTTP POST
      xml:
        name: WebhookDTO
    WindowsEventLogEntry:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        LogNameID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ProviderName:
          type: string
          readOnly: true
        ProviderGuid:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        Keywords:
          type: string
          readOnly: true
          enum:
          - WDI_Context
          - WDI_Diag
          - SQM
          - Audit_Failure
          - Audit_Success
          - Correlation_Hint
          - Classic
        EventID:
          type: integer
          format: int32
          readOnly: true
        EventLevel:
          type: string
          enum:
          - None
          - Critical
          - Error
          - Warning
          - Informational
          - Verbose
          - Log_Always
        Message:
          type: string
          readOnly: true
        TimeCreated:
          type: string
          format: date-time
          readOnly: true
        Sid:
          type: string
          readOnly: true
      description: Summary description for LocalUser
      xml:
        name: WindowsEventLogEntry
    WindowsEventLogName:
      type: object
      properties:
        OrganizationID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
      xml:
        name: WindowsEventLogNameData
    WindowsEventLogSettings:
      type: object
      properties:
        GroupID:
          type: string
          description: The ID of the group that these settings apply to
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        CollectionState:
          type: string
          description: Whether or not the collection of windows event log entries
            is enabled/disabled on each computer in the group
          enum:
          - Not_Set
          - Disabled
          - Enabled
        CollectionSchedule:
          $ref: '#/components/schemas/Schedule'
        EventLogsMask:
          type: string
          description: Defines which system event logs to collect from
          enum:
          - Application
          - Security
          - Setup
          - System
        OtherEventLogNames:
          type: array
          description: Any other custom event logs to collect from, for example 'Microsoft-Windows-Windows
            Defender/Operational'
          items:
            type: string
        EventLogLevels:
          type: string
          description: The levels of windows event log entries to include, a bitmask
          enum:
          - Critical
          - Error
          - Warning
          - Informational
          - Verbose
          - Log_Always
          - All
        MaxEntries:
          maximum: 5E+3
          minimum: 1E+2
          type: integer
          description: The maximum number of event log entries to collect for each
            event log on each computer
          format: int32
      description: Windows Event Log settings for a group of computers
      xml:
        name: WindowsEventLogSettingsDTO
    WindowsUpdate:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        OrganizationID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        UpdateNumber:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        RevisionNumber:
          type: integer
          format: int32
          readOnly: true
        Title:
          type: string
          readOnly: true
        Description:
          type: string
          readOnly: true
        KBs:
          type: array
          readOnly: true
          items:
            type: string
        PublishedDate:
          type: string
          format: date-time
          readOnly: true
        MoreInfoUrls:
          type: array
          readOnly: true
          items:
            type: string
        SupportUrl:
          type: string
          readOnly: true
        Languages:
          type: array
          readOnly: true
          items:
            type: string
        MsrcSeverity:
          type: string
          readOnly: true
        MsrcNumbers:
          type: array
          readOnly: true
          items:
            type: string
        Type:
          type: string
          readOnly: true
          enum:
          - None
          - utSoftware
          - utDriver
        UninstallNote:
          type: string
          readOnly: true
        UninstallSteps:
          type: array
          readOnly: true
          items:
            type: string
        Flags:
          type: string
          enum:
          - None
          - UserInteractionNeeded
          - Beta
          - Hidden
          - Installed
          - RebootNeeded
          - RequiresNetwork
          - Exclusive
          - Mandatory
          - Uninstallable
          - Recommended
          - Optional
          - Important
      xml:
        name: WindowsUpdate
    WindowsUpdateCategory:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        OrganizationID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ParentID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        CategoryNumber:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ParentCategoryNumber:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        Name:
          type: string
          readOnly: true
        Description:
          type: string
          readOnly: true
        Type:
          type: string
          readOnly: true
        DisplayOrder:
          type: integer
          format: int32
          readOnly: true
      xml:
        name: WindowsUpdateCategory
    WindowsUpdateComputerState:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        UpdateID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        State:
          type: string
          readOnly: true
          enum:
          - None
          - NotAvailable
          - Available
          - Installed
          - InstallFailed
          - InstallAborted
          - Uninstalled
          - UninstallFailed
          - UninstallAborted
        StateDate:
          type: string
          format: date-time
          readOnly: true
        ErrorCode:
          type: integer
          format: int32
          readOnly: true
      xml:
        name: WindowsUpdateComputerState
    WindowsUpdateHistoryEntry:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        ComputerID:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        UpdateNumber:
          type: string
          format: uuid
          readOnly: true
          example: 00000000-0000-0000-0000-000000000000
        RevisionNumber:
          type: integer
          format: int32
          readOnly: true
        Title:
          type: string
          readOnly: true
        Description:
          type: string
          readOnly: true
        ClientApplication:
          type: string
          readOnly: true
        Date:
          type: string
          format: date-time
          readOnly: true
        ErrorCode:
          type: integer
          format: int32
          readOnly: true
        Operation:
          type: string
          readOnly: true
          enum:
          - Installation
          - Uninstallation
        OperationResult:
          type: string
          readOnly: true
          enum:
          - NotStarted
          - InProgress
          - Succeeded
          - SucceededWithErrors
          - Failed
          - Aborted
        SelectedServer:
          type: integer
          format: int32
          readOnly: true
        SupportUrl:
          type: string
          readOnly: true
        UninstallNotes:
          type: string
          readOnly: true
        UninstallSteps:
          type: array
          readOnly: true
          items:
            type: string
      xml:
        name: WindowsUpdateHistoryEntry
    WindowsUpdateSettings:
      type: object
      properties:
        GroupID:
          type: string
          description: The ID of the group
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        MonitoringState:
          type: string
          description: The state for whether or not the OptiTune agent should upload
            update information to the management server
          enum:
          - Not_Set
          - Disabled
          - Enabled
        AutomaticInstallState:
          type: string
          description: Whether or not the OptiTune agent should install windows updates
            according to the AutomaticInstallSchedule, and the include/exclude filters
          enum:
          - Not_Set
          - Disabled
          - Enabled
        AutomaticInstallSchedule:
          $ref: '#/components/schemas/Schedule'
        AutomaticInstallRebootBehavior:
          type: string
          description: If AutomaticInstallState = Enabled, use this variable to control
            the reboot behavior for updates that require a system reboot
          enum:
          - Never
          - IfNeeded
          - IfNeededForce
        AutomaticInstallIncludeFilter:
          $ref: '#/components/schemas/UpdateFilters'
        AutomaticInstallExcludeFilter:
          $ref: '#/components/schemas/UpdateFilters'
        WindowsUpdateGroupPolicy:
          $ref: '#/components/schemas/WindowsUpdateGroupPolicy'
      description: Windows update settings for a group of computers
      xml:
        name: WindowsUpdateSettingsDTO
    UpdateFilters:
      type: object
      properties:
        AllUpdateFilters:
          type: array
          xml:
            name: AllUpdateFilterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/AllUpdateFilter'
        NameUpdateFilters:
          type: array
          xml:
            name: NameUpdateFilterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/NameUpdateFilter'
        NameContainsUpdateFilters:
          type: array
          xml:
            name: NameContainsUpdateFilterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/NameContainsUpdateFilter'
        KBArticleUpdateFilters:
          type: array
          xml:
            name: KBArticleUpdateFilterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/KBArticleUpdateFilter'
        IDUpdateFilters:
          type: array
          xml:
            name: IDUpdateFilterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/IDUpdateFilter'
        CustomUpdateFilters:
          type: array
          xml:
            name: CustomUpdateFilterDTO
            wrapped: true
          items:
            $ref: '#/components/schemas/CustomUpdateFilter'
      xml:
        name: UpdateFiltersDTO
    WindowsUpdateGroupPolicy:
      type: object
      properties:
        ConfigureAutomaticUpdatesState:
          type: string
          description: "Controls the state of the Windows Update Automatic Update\
            \ agent, i.e. you can turn off automatic updates or enable them\r\non\
            \ supported versions of Windows (usually the enterprise versions of Windows\
            \ 10 for example)."
          enum:
          - Not_Set
          - Disabled
          - Enabled
        AutomaticUpdates:
          maximum: 5
          minimum: 2
          type: integer
          description: "Use the following values to control how windows itself automatically\
            \ installs windows updates\r\n\r\n2 - Notify for download and auto install\r\
            \nWhen Windows finds updates that apply to this computer, users will be\
            \ notified that updates are ready to be downloaded.After going to Windows\
            \ Update, users can download and install any available updates.\r\n\r\n\
            3 - Auto download and notify for install\r\nWindows finds updates that\
            \ apply to the computer and downloads them in the background (the user\
            \ is not notified or interrupted during this process). When the downloads\
            \ are complete, users will be notified that they are ready to install.\
            \ After going to Windows Update, users can install them.\r\n\r\n4 - Auto\
            \ download and schedule the install\r\nThe default schedule for all installations\
            \ will be every day at 3:00 AM. If any updates require a restart to complete\
            \ the installation, Windows will restart the computer automatically. (If\
            \ a user is signed in to the computer when Windows is ready to restart,\
            \ the user will be notified and given the option to delay the restart.)\r\
            \n\r\n5 - Allow local admin to choose setting\r\nWith this option, local\
            \ administrators will be allowed to use the Windows Update control panel\
            \ to select a configuration option of their choice. Local administrators\
            \ will not be allowed to disable the configuration for Automatic Updates."
          format: int32
        ConfigureDownloadModeState:
          type: string
          description: "This setting lets you configure the download method used by\
            \ Delivery Optimization, in Windows 10 computers or above.\r\nSpecifies\
            \ the download method that Delivery Optimization can use in downloads\
            \ of Windows Updates, Apps and App updates."
          enum:
          - Not_Set
          - Disabled
          - Enabled
        DownloadMode:
          maximum: 1E+2
          minimum: 0
          type: integer
          description: "0 - HTTP only\r\nHTTP only, no peering\r\n\r\n1 - LAN\r\n\
            HTTP blended with peering behind the same NAT.\r\n\r\n2 - Group\r\nHTTP\
            \ blended with peering across a private group.Peering occurs on devices\
            \ in the same Active Directory Site(if exist) or the same domain by default.\
            \ When this option is selected, peering will cross NATs. To create a custom\
            \ group use Group ID in combination with Mode 2.\r\n\r\n3 - Internet\r\
            \nHTTP blended with Internet Peering.\r\n\r\n99 - Simple\r\nSimple download\
            \ mode with no peering. Delivery Optimization downloads using HTTP only\
            \ and does not attempt to contact the Delivery Optimization cloud services.\r\
            \n\r\n100 - Bypass\r\nBypass mode. Do not use Delivery Optimization and\
            \ use BITS instead."
          format: int32
        UseWUServer:
          type: string
          description: CorpWuURL - Specify intranet Microsoft update service location
          enum:
          - Not_Set
          - Disabled
          - Enabled
        WUServer:
          maxLength: 255
          type: string
          description: 'CorpWUURL_Name - Set the intranet update service for detecting
            updates:'
        WUStatusServer:
          maxLength: 255
          type: string
          description: 'CorpWUStatusURL_Name - Set the intranet statistics server:'
        UpdateServiceUrlAlternate:
          maxLength: 255
          type: string
          description: 'CorpWUContentHost_Name - Set the alternate download server:'
        FillEmptyContentUrls:
          type: boolean
          description: "CorpWUFillEmptyContentUrls - Download files with no Url in\
            \ the metadata if alternate download server is set.\r\n\r\nAdded in the\
            \ April service release of Windows 10, version 1607. Allows Windows Update\
            \ Agent to determine the download URL when it is missing from the metadata.\
            \ This scenario will occur when intranet update service stores the metadata\
            \ files but the download contents are stored in the ISV file cache (specified\
            \ as the alternate download URL)."
        EnableWUTargetGroup:
          type: string
          description: TargetGroup_Title - Enable client-side targeting
          enum:
          - Not_Set
          - Disabled
          - Enabled
        TargetGroup:
          maxLength: 255
          type: string
          description: TargetGroup_Name - Target group name for this computer
      description: Windows update group policy settings for a group of computers
      xml:
        name: WindowsUpdateGroupPolicyDTO
    AllUpdateFilter:
      type: object
      properties:
        ListOrder:
          type: integer
          format: int32
      xml:
        name: AllUpdateFilterDTO
    NameUpdateFilter:
      required:
      - Name
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: NameUpdateFilterDTO
    NameContainsUpdateFilter:
      required:
      - NameContains
      type: object
      properties:
        NameContains:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: NameContainsUpdateFilterDTO
    KBArticleUpdateFilter:
      required:
      - KBArticle
      type: object
      properties:
        KBArticle:
          maxLength: 255
          minLength: 1
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: KBArticleUpdateFilterDTO
    IDUpdateFilter:
      required:
      - UpdateNumber
      type: object
      properties:
        UpdateNumber:
          maxLength: 255
          minLength: 1
          type: string
        UpdateRevision:
          maxLength: 255
          type: string
        ListOrder:
          type: integer
          format: int32
      xml:
        name: IDUpdateFilterDTO
    CustomUpdateFilter:
      type: object
      properties:
        PublishedDaysGreaterThan:
          type: integer
          format: int32
        PublishedDaysLessThan:
          type: integer
          format: int32
        Product:
          maxLength: 255
          type: string
        Classification:
          maxLength: 255
          type: string
        Importance:
          maxLength: 255
          type: string
        Flags:
          type: integer
          format: int32
        ListOrder:
          type: integer
          format: int32
      xml:
        name: CustomUpdateFilterDTO
  securitySchemes:
    basic:
      type: http
      description: Basic HTTP Authentication
      scheme: basic
