openapi: 3.0.2
info:
  title: Calling API
  version: 1.0.0
  # contact:
  #   name: Support
  #   url: www.sinch.com
  #   email: support@sinch.com
  description: >
    This is a generated connector for [Sinch Voice API v1.0.0](https://www.sinch.com/) OpenAPI specification. 

    The Calling API exposes calling- and conference-related functionality in the Sinch Voice Platform.
  x-ballerina-init-description: 
    The connector initialization requires setting the API credentials.

    Create a [Sinch account](https://www.sinch.com/) and obtain tokens by following [this guide](https://developers.sinch.com/docs/voice/api-reference/authentication/#basic-authorization).
  x-ballerina-display:
    label: Sinch Voice
    iconPath: "icon.png"
servers:
  - url: https://calling.api.sinch.com
    description: redirected by Sinch to an appropriate region
  - url: https://calling-use1.api.sinch.com
    description: United States
  - url: https://calling-euc1.api.sinch.com
    description: Europe
  - url: https://calling-sae1.api.sinch.com
    description: South America
  - url: https://calling-apse1.api.sinch.com
    description: Southeast Asia 1
  - url: https://calling-apse2.api.sinch.com
    description: Southeast Asia 2
security:
  - Basic: []
paths:
  /calling/v1/callouts/:
    post:
      tags:
        - Callouts
        - Conferences
      description: >
        Makes a call out to a phone number. The types of callouts currently
        supported are conference callouts, text-to-speech callouts, and custom
        callouts. The custom callout is the most flexible, but text-to-speech
        and conference callouts are more convenient.
      summary: Callout Request
      operationId: Callouts
      requestBody:
        $ref: '#/components/requestBodies/calloutRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCalloutResponseObj'
              example:
                callid: adf92089-df2a-4f14-a377-1e975f588fe4
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '402':
          description: Not enough credit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 402 Payment Required
                    errorCode: '40200'
                    message: Payment required
  /calling/v1/calls/id/{callid}:
    parameters:
      - $ref: '#/components/parameters/callid'
    patch:
      tags:
        - Calls
      summary: Update a call in progress
      description: >
        This method is used to manage ongoing, connected calls. This method uses
        SVAML in the request body to perform various tasks related to the call.
        For more information about SVAML, see the [Callback
        API](/docs/voice/api-reference/callback-api/) documentation.


        This method can only be used for calls that originate from or terminate
        to PSTN or SIP networks.
      operationId: Calling_UpdateCall
      requestBody:
        $ref: '#/components/requestBodies/updateCall'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                content: 200 Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '404':
          description: Call not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    code: '40400'
                    message: Call not found
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
    get:
      tags:
        - Calls
      summary: Get information about a call
      description: >
        You can retrieve information about an ongoing or completed call using a
        call ID. You can find the call ID of an ongoing call by viewing the
        response object from a callout request. You can find the call ID of a
        completed call by looking at your call logs in your Sinch
        [Dashboard](https://dashboard.sinch.com/voice/logs).
      operationId: Calling_GetCallResult
      responses:
        '200':
          description: GetCallResultResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallResponseObj'
        '404':
          description: Call not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    code: '40400'
                    message: Call not found
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
  /calling/v1/calls/id/{callid}/leg/{callLeg}:
    parameters:
      - $ref: '#/components/parameters/callid'
      - $ref: '#/components/parameters/callLeg'
    patch:
      tags:
        - Calls
      summary: Manage Call with `callLeg`
      description: >
        This method is used to manage ongoing, connected calls. This method is
        only used when using the `PlayFiles` and `Say` instructions in the
        request body. This method uses SVAML in the request body to perform
        various tasks related to the call. For more information about SVAML, see
        the [Callback API](/docs/voice/api-reference/callback-api/)
        documentation.


        This method can only be used for calls that originate from or terminate
        to PSTN or SIP networks.
      operationId: Calling_ManageCallWithCallLeg
      requestBody:
        description: Manage Call with call leg payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SVAMLRequestBody'
            examples:
              hangupExample:
                value:
                  instructions:
                    - name: say
                      text: Hello, the call is over, hanging up now.  Goodbye
                      locale: en-US
                  action:
                    name: hangup
              ivrExample:
                value:
                  instructions:
                    - name: playFiles
                      ids:
                        - welcome
                      locale: en-US
                  action:
                    name: hangup
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                content: 200 Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '404':
          description: Call not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    code: '40400'
                    message: Call not found
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
  /calling/v1/conferences/id/{conferenceid}:
    parameters:
      - $ref: '#/components/parameters/conferenceid'
    get:
      tags:
        - Conferences
      summary: Get Conference Info
      description: >
        Returns information about a conference that matches the provided
        conference ID.
      operationId: Calling_GetConferenceInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConferenceInfoResponse'
              example:
                ConferenceInfoResponse:
                  participants:
                    - cli: '+46708168731'
                      id: myConfId1
                      duration: 14
                      muted: false
                    - cli: myUserName
                      id: myConfId2
                      duration: 12
                      muted: false
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    errorCode: '40400'
                    message: >
                      No such ongoing conference '{conferenceid}' in the
                      application's context
                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
    delete:
      tags:
        - Conferences
      summary: Kick Conference All (cloud)
      description: Removes all participants from a conference.
      operationId: Calling_KickConferenceAll
      responses:
        '204':
          description: No content
          content:
            application/json:
              example:
                content: no content
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    errorCode: '40400'
                    message: >
                      No such ongoing conference '{conferenceid}' in the
                      application's context
                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
  /calling/v1/conferences/id/{conferenceid}/{callid}:
    parameters:
      - $ref: '#/components/parameters/callid'
      - $ref: '#/components/parameters/conferenceid'
    patch:
      tags:
        - Conferences
      summary: Mute / Unmute Conference participant (cloud)
      description: Mutes or unmutes a conference participant in a specified conference.
      operationId: Mute Unmute Conference Participant
      requestBody:
        description: Mute conference participant payload
        content:
          application/json:
            schema:
              type: object
              properties:
                {}
              example:
                command: unmute
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                content: Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    errorCode: '40400'
                    message: >
                      No such ongoing conference '{conferenceid}' in the
                      application's context
                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
    delete:
      tags:
        - Conferences
      summary: Kick Conference Participant (cloud)
      description: Remove a specified conference participant from a specified conference.
      operationId: Calling_KickConferenceParticipant
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                content: 200 Successful response
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 400 Invalid Request
                    errorCode: '40003'
                    message: Invalid request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 404 Not Found
                    errorCode: '40400'
                    message: >
                      No such ongoing conference '{conferenceid}' in the
                      application's context
                    reference: ef86c213-7a93-4bf4-8e5e-b34349c77c47
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
  /v1/configuration/numbers/:
    servers:
      - url: https://callingapi.sinch.com
    get:
      tags:
        - Applications
      summary: Get Numbers
      description: >
        Get information about your numbers. It returns a list of numbers that
        you own, as well as their capability (voice or SMS). For the ones that
        are assigned to an app, it returns the application key of the app.
      operationId: Configuration_GetNumbers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNumbersResponseObj'
              example:
                numbers:
                  - number: +141511122233334"
                    capability: voice
                  - number: '+14151112223333'
                    applicationkey: 2457b630-45ef-4939-be88-93ffaebf4346
                    capability: voice
                  - number: '+141511122233332'
                    applicationkey: 2457b656-45ed-4934-be77-88feaebe4238
                    capability: voice
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
    post:
      tags:
        - Applications
      summary: Update Numbers
      description: Assign a number or a list of numbers to an application.
      operationId: Configuration_UpdateNumbers
      requestBody:
        description: Update numbers payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNumbers'
      responses:
        '204':
          description: Successful response
          content:
            application/json:
              example:
                content: no content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
    delete:
      tags:
        - Applications
      summary: Un-assign number
      description: Un-assign a number from an application.
      operationId: Configuration_UnassignNumber
      # requestBody:
      #   description: Unassign numbers payload.
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/unassignNumbers'
      responses:
        '204':
          description: No content
          content:
            application/json:
              example:
                content: no content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
  /v1/configuration/callbacks/applications/{applicationkey}:
    servers:
      - url: https://callingapi.sinch.com
    parameters:
      - $ref: '#/components/parameters/applicationkey'
    get:
      tags:
        - Applications
      summary: Get Callback URLs
      description: Returns any callback URLs configured for the specified application.
      operationId: Configuration_GetCallbackURLs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCallbacks'
              example:
                url:
                  - primary: http://primarycallback.com
                    fallback: http://fallbackcallback.com
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
    post:
      tags:
        - Applications
      summary: Update Callbacks
      description: Update the configured callback URLs for the specified application.
      operationId: Configuration_UpdateCallbackURLs
      requestBody:
        description: Update callbacks payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCallbacks'
            example:
              url:
                - primary: http://primarycallback.com
                  fallback: http://fallbackcallback.com
      responses:
        '204':
          description: No content
          content:
            application/json:
              example:
                content: no content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
  /v1/calling/query/number/{number}:
    servers:
      - url: https://callingapi.sinch.com
    parameters:
      - $ref: '#/components/parameters/number'
    get:
      tags:
        - Applications
      summary: Query number
      description: Returns information about the requested number.
      operationId: Calling_QueryNumber
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getQueryNumber'
              example:
                method: numberItem
                numberItem:
                  countryId: SE
                  numberType: Mobile
                  normalizednumber: '+14151112223333'
                  restricted: false
                  rate:
                    currencyId: USD
                    amount: 0.368
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 401 Unauthorized
                    errorCode: '40100'
                    message: Authorization required
                    reference: 8b439f77-9825-47ea-87e0-1b3a22b431c8
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                response:
                  error:
                    status: 500 Server Error
                    code: '50000'
                    message: Internal server error
components:
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      description: >
        For more information about basic authentication, see [Basic
        Authentication](newdocs/docs/voice/api-reference/authentication.md#basic-authentication).
  examples:
    hangupExample:
      summary: Hang up a call
      value:
        instructions:
          - name: sendDtmf
            value: 1234#
        action:
          name: hangup
    parkCallExample:
      summary: Put a call on hold
      value:
        instructions:
          - name: sendDtmf
            value: 1234#
        action:
          name: Park
          introPrompt: '#tts[Welcome]'
          holdPrompt: '#tts[Please wait, you are on hold]'
          maxDuration: 180
    confCalloutRequest:
      summary: Add a participant to a conference
      value:
        method: conferenceCallout
        conferenceCallout:
          cli: '+14045001000'
          destination:
            type: number
            number: '+14045005000'
          locale: en-US
          greeting: Welcome to my conference
          conferenceId: MyConfId
    ttsCalloutRequest:
      summary: Make a phone call
      description: Place a phone call and use text to speech to convey a message.
      value:
        method: ttsCallout
        ttsCallout:
          cli: '+14045001000'
          destination:
            type: number
            endpoint: '+14045005000'
          locale: en-US
          text: Hello, this is a call from Sinch.
    customCalloutRequest:
      summary: Make a custom callout
      description: An example of a custom callout to invoke an ICE and ACE request
      value:
        method: customCallout
        pop: eu-central
        customCallout:
          ice:
            instructions:
              - name: say
                text: Hello Message one!
              - name: say
                text: Hello Message two!
            action:
              name: ConnectPSTN
              number: 12233445566
              cli: 12234325234
          ace:
            action:
              name: continue
  requestBodies:
    updateCall:
      description: Update call request payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SVAMLRequestBody'
          examples:
            hangupExample:
              $ref: '#/components/examples/hangupExample'
            parkCallExample:
              $ref: '#/components/examples/parkCallExample'
    calloutRequest:
      description: Callout request payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalloutRequest'
          examples:
            ttsCalloutRequest:
              $ref: '#/components/examples/ttsCalloutRequest'
            confCalloutRequest:
              $ref: '#/components/examples/confCalloutRequest'
            customCalloutRequest:
              $ref: '#/components/examples/customCalloutRequest'
  parameters:
    number:
      in: path
      name: number
      schema:
        type: string
      required: true
      description: The phone number you want to query.
      example: '+46730170101'
    callid:
      in: path
      name: callid
      schema:
        type: string
      required: true
      description: >
        The unique identifier of the call. This value is generated by the
        system.
      example: 4398599d1ba84ef3bde0a82dfb61abed
    conferenceid:
      in: path
      name: conferenceid
      schema:
        type: string
      required: true
      description: The unique identifier of the conference. The user sets this value.
      example: MyConfId
    applicationkey:
      name: applicationkey
      in: path
      schema:
        type: string
      required: true
      description: The unique identifying key of the application.
      example: 94983f76-1161-6655-9515-4785c7b67dd8
    callLeg:
      name: callLeg
      in: path
      schema:
        type: string
        enum:
          - caller
          - callee
          - both
      required: true
      description: >
        Specifies which part of the call will be managed. This option is used
        only by the `PlayFiles` and `Say` instructions to indicate which channel
        the sound will be played on. Valid options are `caller`, `callee` or
        `both`. If not specified, the default value is
        `caller`.</br><Warning>The `callLeg` identifier is ignored for calls
        that are part of a conference and calls initiated using the Callout
        API.</Warning>
      example: caller
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          description: A summary of the HTTP error code and error type.
          example: 404 Not Found
        errorCode:
          type: string
          description: The HTTP error code.
          example: '40400'
        message:
          type: string
          description: A simple description of the cause of the error.
          example: Call not found
        reference:
          type: string
          description: >
            If applicable, a reference ID for support to use with diagnosing the
            error.
          example: a2028355-5164-41b6-aae9-2b8a546e0784
    destination:
      type: object
      description: The type of device and number or endpoint to call.
      required:
        - type
        - endpoint
      properties:
        type:
          type: string
          description: >
            Can be of `number` for PSTN endpoints or of `username` for data
            endpoints.
          enum:
            - number
            - username
          example: number
        endpoint:
          type: string
          description: >
            If the type is `number` the value of the endpoint is a phone number.
            If the type is `username` the value is the username for a data
            endpoint.
          format: e164
          example: 12125550123
    updateNumbers:
      type: object
      example:
        numbers: '+14151112223333'
        applicationkey: 11983f76-12c8-1111-9515-4785c7b67ca8
        capability: voice
      properties:
        numbers:
          type: array
          description: The phone number or list of numbers in E.164 format.
          items:
            type: string
          minItems: 1
          maxItems: 100
          example:
            - '+14151112223333'
            - '+14151112223333'
        applicationkey:
          description: >
            indicates the application where the number(s) will be assigned. If
            empty, the application key that is used to sign the request will be
            used.
          type: string
          example: 11983f76-12c8-1111-9515-4785c7b67ca8
        capability:
          type: string
          enum:
            - voice
            - sms
          description: >
            indicates the DID capability that needs to be assigned to the chosen
            application. Valid values are 'voice' and 'sms'. Please note that
            the DID needs to support the selected capability.
          example: voice
    unassignNumbers:
      type: object
      example:
        numbers: '+14151112223333'
        applicationkey: 11983f76-12c8-1111-9515-4785c7b67ca8
        capability: voice
      properties:
        number:
          type: string
          description: >
            The phone number in E.164 format
            (https://en.wikipedia.org/wiki/E.164)
          example:
            - '+14151112223333'
            - '+14151112223334'
        applicationkey:
          description: >
            Indicates the application where the number(s) was assigned. dIf
            empty, the application key that is used to sign the request will be
            used.
          type: string
          example: 11983f76-12c8-1111-9515-4785c7b67ca8
        capability:
          type: string
          enum:
            - voice
            - sms
          description: >
            (optional) indicates the DID capability that was assigned to the
            chosen application. Please note that the DID needs to support the
            selected capability.
          example: voice
    getCallResponseObj:
      type: object
      properties:
        from:
          type: string
          description: Contains the caller information.
          example: null
        to:
          type: string
          description: Contains the callee information.
          example: null
        domain:
          type: string
          enum:
            - pstn
            - mxp
          description: >
            Can be either `pstn` for PSTN endpoint or `mxp` for data (app or
            web) clients.
          example: pstn
        callid:
          type: string
          description: The unique identifier of the call.
          example: null
        duration:
          type: integer
          description: The duration of the call in seconds.
        status:
          type: string
          enum:
            - ONGOING
            - FINAL
          description: The status of the call. Either `ONGOING` or `FINAL`
          example: ONGOING
        result:
          type: string
          enum:
            - N/A
            - ANSWERED
            - BUSY
            - NOANSWER
            - FAILED
          description: Contains the result of a call.
          example: ANSWERED
        reason:
          type: string
          enum:
            - N/A
            - TIMEOUT
            - CALLERHANGUP
            - CALLEEHANGUP
            - BLOCKED
            - NOCREDITPARTNER
            - MANAGERHANGUP
            - CANCEL
            - GENERALERROR
          description: Contains the reason why a call ended.
        timestamp:
          type: string
          format: date-time
          description: The date and time of the call.
        custom:
          type: object
        userRate:
          type: string
          format: currency
        debit:
          type: string
          format: currency
    getCallbacks:
      type: object
      properties:
        url:
          description: Gets primary and if configured fallback callback URLs
          type: array
          items:
            type: object
            properties:
              primary:
                type: string
                description: Your primary callback URL
                example: http://primary.yourcallback.com/
              fallback:
                type: string
                description: >
                  Your fallback callback URL (returned if configured). It is
                  used only if Sinch platform gets a timeout or error from your
                  primary callback URL.
                example: http://fallback.yourcallback.com/
    updateCallbacks:
      type: object
      properties:
        url:
          description: Contains primary and or fallback callback URLs
          type: array
          items:
            type: object
            properties:
              primary:
                type: string
                description: Your primary callback URL
                example: http://primary.yourcallback.com/
              fallback:
                type: string
                description: Your fallback callback URL
                example: http://fallback.yourcallback.com/
    getQueryNumber:
      type: object
      properties:
        countryId:
          type: string
          description: The ISO 3166-1 formatted country code.
          example: SE
        numberType:
          type: string
          enum:
            - Unknown
            - Fixed
            - Mobile
            - Other
          description: The type of the number.
          example: Fixed
        normalizedNumber:
          type: string
          description: The number in E.164 format.
          example: '+46730170101'
        restricted:
          type: boolean
          description: Concerns whether the call is restricted or not.
          example: false
        rate:
          type: object
          description: The cost per minute to call the destination number.
          properties:
            currencyId:
              type: string
              description: The currency in which the call is charged.
              example: USD
            amount:
              type: number
              description: The amount.
              example: 0.0368
    getRecordingFileInfo:
      type: object
      properties:
        key:
          type: string
        url:
          type: string
        createdOn:
          type: string
          format: timestamp
        expiresOn:
          type: string
          format: timestamp
        headers:
          type: object
    getNumbersResponseObj:
      type: object
      properties:
        numbers:
          type: array
          #default: numbers
          description: >
            The object type. Will always be list of numbers, associated
            applicationkeys and capabilities
          items:
            type: object
            properties:
              number:
                type: string
                description: Numbers that you own in E.164 format.
                example: '+11400000000'
              applicationkey:
                type: string
                description: >
                  Indicates the application where the number(s) will be
                  assigned. If no number is assigned the applicationkey will not
                  be returned.
              capability:
                type: string
                enum:
                  - voice
                  - sms
                description: >
                  indicates the DID capability that needs to be assigned to the
                  chosen application. Valid values are 'voice' and 'sms'. Please
                  note that the DID needs to support the selected capability.
                example: voice
    getConferenceInfoResponse:
      type: object
      description: >
        Information about the participants in the conference.
      properties:
        participants:
          description: >
            Array containing information about the participants in the conference.
          type: array
          items:
            type: object
            properties:
              cli:
                type: string
                description: >
                  The phone number of the PSTN participant that was connected in
                  the conference, or whatever was passed as CLI for data
                  originated/terminated calls.
                example: '+46708168731'
              id:
                type: string
                description: >
                  The callId of the call leg that the participant joined the
                  conference.
                example: abcabcabcabca
              duration:
                type: integer
                description: >
                  The number of seconds that the participant has been connected
                  to the conference.
              muted:
                type: boolean
    CalloutRequest:
      type: object
      description: >
        Currently three types of callouts are supported: conference callouts,
        text-to-speech callouts and custom callouts. The custom callout is the
        most flexible, but text-to-speech and conferece callouts are more
        convenient.
      required:
        - method
      properties:
        method:
          type: string
          description: Sets the type of callout.
          enum:
            - conferenceCallout
            - ttsCallout
            - customCallout
          example: conferenceCallout
        conferenceCallout:
          $ref: '#/components/schemas/conferenceCalloutRequest'
        ttsCallout:
          $ref: '#/components/schemas/ttsCalloutRequest'
        customCallout:
          $ref: '#/components/schemas/customCalloutRequest'
    conferenceCalloutRequest:
      type: object
      description: >
        The conference callout calls a phone number or a user. When the call is
        answered, it's connected to a conference room.
      required:
        - destination
        - conferenceId
      properties:
        cli:
          type: string
          format: e.164
          description: >
            The number that will be displayed as caller, must be in
            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)
            format.
          example: '14151112223333'
        destination:
          $ref: '#/components/schemas/destination'
        conferenceId:
          type: string
          description: >
            The conferenceId of the conference to which you want the callee to
            join. If the conferenceId doesn't exist a conference room will be
            created.
        dtmf:
          type: string
          description: >
            When the destination picks up, this DTMF tones will be played to the
            callee. Valid characters in the string are "0"-"9", "#" and "w". A
            "w" will render a 500 ms pause. Example: "ww1234#w#" will render a
            1s pause, the DTMF tones "1", "2", "3", "4" and "#" followed by a
            0.5s pause and finally the DTMF tone for "#". This can be used if
            the callout destination for instance require a conference PIN code
            or an extension to be entered.
        maxDuration:
          type: string
          description: >
            Maximum duration.
        enableAce:
          type: boolean
          description: >
            If `enableAce` is set to true and the application has a callback URL
            specified, you will receive an ACE callback when the call is
            answered. When the callback is received, your platform must respond
            with a svamlet, containing the connectcon action in order to add the
            call to a conference or create the conference if itâ€™s the first
            call. If it's set to false, no ACE event will be sent to your
            backend.
          default: false
          example: false
        enableDice:
          type: boolean
          description: >
            If enableDice is set to true and the application has a callback URL
            specified, you will receive a DiCE callback when the call is
            disconnected. If it's set to false, no DiCE event will be sent to
            your backend.
          default: false
          example: false
        enablePie:
          type: boolean
          description: >
            If enablePie is set to true and the application has a callback URL
            specified, you will receive a PIE callback after a runMenu action,
            with the information of the action that the user took. If it's set
            to false, no PIE event will be sent to your backend.
          default: false
          example: false
        locale:
          type: string
          format: ISO 639
          description: >
            Language of the prompts as defined in [ISO 639](locales.md) for
            supported languages.
          default: en-US
          example: en-US
        greeting:
          type: string
          description: The text that will be spoken as a greeting.
          example: Welcome to the conference
        mohClass:
          type: string
          description: >
            Means "music-on-hold." It's an optional parameter that specifies
            what the first participant should listen to while they're alone in
            the conference, waiting for other participants to join. It can take
            one of these pre-defined values:<ul><li>`ring` (progress
            tone)</li><li>`music1` (music file)</li><li>`music2` (music
            file)</li><li>`music3` (music file)</li></ul></br>If no
            music-on-hold is specified, the user will only hear silence.
          example: ring
        custom:
          type: string
          description: Used to input custom data.
        domain:
          type: string
          description: >
            can be either pstn for PSTN endpoint or mxp for data (app or web)
            clients.
    ttsCalloutRequest:
      type: object
      description: >
        The text-to-speech callout calls a phone number and plays a synthesized
        text messages or pre-recorded sound files.
      required:
        - destination
      properties:
        cli:
          type: string
          format: e.164
          description: >
            The number that will be displayed as caller, must be in
            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)
            format.
          example: '+14155552223333'
        destination:
          $ref: '#/components/schemas/destination'
        dtmf:
          type: string
          description: >
            When the destination picks up, this DTMF tones will be played to the
            callee. Valid characters in the string are "0"-"9", "#", and "w". A
            "w" will render a 500 ms pause. For example, "ww1234#w#" will render
            a 1s pause, the DTMF tones "1", "2", "3", "4" and "#" followed by a
            0.5s pause and finally the DTMF tone for "#". This can be used if
            the callout destination for instance require a conference PIN code
            or an extension to be entered.
          example: ww1234#w#
        domain:
          type: string
          enum:
            - pstn
            - mxp
          description: >
            Can be either `pstn` for PSTN endpoint or `mxp` for data (app or
            web) clients.
          example: pstn
        custom:
          type: string
          description: Can be used to input custom data.
        locale:
          type: string
          format: ISO 639
          description: >
            Language of the prompts as defined in [ISO 639](locales.md) for
            supported languages
          default: en-US
          example: en-US
        text:
          type: string
          description: >
            The text that will be spoken in the text-to-speech message. Every
            application's default maximum characters allowed in text-to-speech
            is 600 characters. Contact support if you wish this limit to be
            changed.
        prompts:
          type: string
          description: >
            An advanced alternative to using text. You can then supply a ,
            -separated list of prompts. Either prompt can be the name of a
            pre-recorded file or a text-to-speech string specified as â€œ#tts[my
            text]. To upload and use pre-recorded files, you need to contact
            Sinch for support. Every application's default maximum characters
            allowed per 'prompts'-command text-to-speech is 600 characters.
            Contact support if you wish this limit to be changed.
        enableAce:
          type: boolean
          description: >
            If enableAce is set to true and the application has a callback URL
            specified, you will receive an ACE callback when the call is
            answered. When the callback is received, your platform must respond
            with a svamlet, containing the connectcon action in order to add the
            call to a conference or create the conference if itâ€™s the first
            call. If it's set to false, no ACE event will be sent to your
            backend.
          default: false
          example: false
        enableDice:
          type: boolean
          description: >
            If enableDice is set to true and the application has a callback URL
            specified, you will receive a DiCE callback when the call is
            disconnected. If it's set to false, no DiCE event will be sent to
            your backend.
          default: false
          example: false
    customCalloutRequest:
      type: object
      description: >
        The custom callout, the server initiates a call from the servers that
        can be controlled by specifying how the call should progress at each
        call event.
      properties:
        cli:
          type: string
          format: e.164
          description: >
            The number that will be displayed as caller, must be in
            [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)
            format.
          example: '+14155552223333'
        destination:
          $ref: '#/components/schemas/destination'
        dtmf:
          type: string
          description: >
            When the destination picks up, this DTMF tones will be played to the
            callee. Valid characters in the string are "0"-"9", "#", and "w". A
            "w" will render a 500 ms pause. For example, "ww1234#w#" will render
            a 1s pause, the DTMF tones "1", "2", "3", "4" and "#" followed by a
            0.5s pause and finally the DTMF tone for "#". This can be used if
            the callout destination for instance require a conference PIN code
            or an extension to be entered.
          example: ww1234#w#
        maxDuration:
          type: integer
          description: The maximum amount of time in seconds that the call will last.
          example: 600
        ice:
          type: string
          description: Incoming Call Event (ICE) is when a call is placed / made.
        ace:
          type: string
          description: Answered Call Event (ACE) is when a call is answered.
        pie:
          type: string
          description: Input Event Callback (PIE) triggered from either a user pressing a number of DTMF digits, or by the “return” command.
        dice:
          description: Disconnected Call Event (DiCE) is when a call is disconnected.
          type: string
    getCalloutResponseObj:
      type: object
      description: The returned call ID.
      properties:
        callid:
          type: string
          description: The returned call identifier.
          example: adf92089-d9e8-4f14-a377-1e975f588fe4
    SVAMLRequestBody:
      type: object
      description: >
        SVAML is a call control markup language. When a server receives a
        callback event from the Sinch platform, it can respond with a SVAML
        object to control the voice call. The following is an example of a SVAML
        object type and its contents.
      properties:
        instructions:
          type: array
          description: >
            The collection of instructions that can perform various tasks during
            the call. You can include as many instructions as necessary.
          items:
            type: object
            properties:
              instruction:
                type: object
                description: >
                  Instructions allow an application to play a message or file,
                  start recording, and various other tasks. For more information
                  about instructions, see the
                  [SVAML](/docs/voice/api-reference/svaml/) documentation.
        action:
          type: object
          description: >
            The action that will control the call. Each SVAML object can only
            include one action.
tags:
  - name: Callouts
    description: A callout is a call made to a phone number or app using the API.
  - name: Calls
    description: >
      Using the Calls endpoint, you can manage on-going calls or retrieve
      information about a call.
  - name: Conferences
    description: >
      Using the Conferences endpoint, you can perform tasks like retrieving
      information about an on-going conference, muting or unmuting participants,
      or removing participants from a conference.
  - name: Applications
    description: You can use the API to manage features of applications in your project.
