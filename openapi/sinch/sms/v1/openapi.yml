openapi: 3.0.0
info:
  title: API Overview
  version: "v1"
  description: 
    This is a generated connector for [Sinch SMS API v1](https://www.sinch.com/) OpenAPI specification. 

    Sinch SMS API is the one of the easiest APIs we offer and enables you to add fast and reliable global SMS to your applications. It allows for sending single messages, scheduled batch sending, message templates and "Only list messages sent from this sender number. Multiple originating numbers can be comma separated.
  x-ballerina-init-description:
    The connector initialization requires setting the API credentials.

    Create a [Sinch account](https://www.sinch.com/) and obtain tokens by following [this guide](https://developers.sinch.com/docs/sms/api-reference/#authentication).
  x-ballerina-display:
    label: Sinch SMS
    iconPath: "icon.png"
  # contact:
  #   name: Support
  #   url: www.sinch.com
  #   email: Support@sinch.com
  license:
    name: MIT
    url: "https://www.sinch.com/toc"
servers:
  - url: "https://us.sms.api.sinch.com"
    description: Global API
security:
  - BearerAuth: []
x-webhooks:
  incomingSMS:
    operationId: incomingSMS
    summary: Incoming SMS
    post:
      security: []
      tags:
        - Webhooks
        - Inbounds
      summary: Incoming SMS
      description: >
        An inbound message is a message sent to one of your shortcodes or long numbers from a mobile phone.

        To receive inbound message callbacks, a URL needs to be added to your REST API. This URL can be specified in your [Dashboard](https://dashboard.sinch.com/sms/api).
      requestBody:
        description: The incoming Message to your sinch number
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/inboundsObject"
            example:
              $ref: "#/components/examples/Inbounds"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  deliveryReport:
    operationId: deliveryReport
    summary: Delivery Report
    post:
      security: []
      tags:
        - Webhooks
        - Delivery reports
      summary: Delivery Report
      description: >
        A delivery report contains the status and status code for each recipient of a batch. To get a delivery report callback for a message or batch of messages you need to set the `delivery_report` field accordingly when creating a batch. The formats of the different types of delivery reports are described in [Retrieve a delivery report](/docs/sms/api-reference/sms/tag/Delivery-reports/#tag/Delivery-reports/operation/GetDeliveryReportByBatchId) and in [Retrieve a recipient delivery report](/docs/sms/api-reference/sms/tag/Delivery-reports/#tag/Delivery-reports/operation/GetDeliveryReportByPhoneNumber).

        The callback URL can either be provided for each batch in the [Send a batch message](/docs/sms/api-reference/sms/tag/Batches/#tag/Batches/operation/SendSMS) operation or provisioned globally for your account in your [Dashboard](https://dashboard.sinch.com/sms/api/rest).
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/retrieveDeliveryResponseObj"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully

paths:
  "/xms/v1/{service_plan_id}/batches":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
    post:
      tags:
        - Batches
      summary: Send

      operationId: SendSMS
      description: >
        Sends a message or a batch of messages.
        Depending on the length of the body one message might be split into [multiple parts](/docs/sms/api-reference/#long-messages) and charged accordingly.
        Any groups targeted in a scheduled batch will be evaluated at the time of sending. If a group is deleted between batch creation and scheduled date it will be considered empty.
      requestBody:
        description: Send batch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sendBatchObject"
            examples:
              request:
                $ref: "#/components/examples/SendSMS"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sendBatchCreated"
              # examples:
              #   response:
              #     value:
              #       id: "string"
              #       from: "12345"
              #       to: ["+15551231212"]
              #       body: "Hello how are you"
              #       created_at: "2020-02-25T23:01:01Z"
              #       modified_at: "2020-02-25T23:01:01Z"
              #       canceled: false

        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                text: "The format of parameter 'to[0]' is invalid; value '+1' is not a valid MSISDN or group ID."
        "403":
          description: "Forbidden."
          
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: missing_callback_url
                text: "Requesting delivery report without any callback URL."
    get:
      summary: List Batches
      operationId: ListBatches
      description: With the list operation you can list batch messages created in the last 14 days that you have created. This operation supports pagination.
      tags:
        - Batches
      security:
        - BearerAuth: []
      parameters:
        - name: page
          description: The page number starting from 0.
          schema:
            type: integer
          in: query
          example: 4
        - name: page_size
          schema:
            type: integer
            default: 30
            maximum: 100
          example: 50
          in: query
          description: >
            Determines the size of a page.
            Default: 30
            Constraints: max 100
        - name: from
          in: query
          schema:
            type: string
          example: 44345, 45607
          description: "Only list messages sent from this sender number. Multiple originating numbers can be comma separated."
        - name: start_date
          in: query
          schema:
            type: string
          description: >
            Only list messages received at or after this date time formatted as [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)

            Default:
            Now-24
        - name: end_date
          in: query
          schema:
            type: string
          description: "Only list messages received before this date time formatted as [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)"
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: The requested page.
                    example: 1
                  count:
                    type: integer
                    description: The total number of batches matching the given filters.
                    example: 2000
                  page_size:
                    type: integer
                    description: The number of batches returned in this request
                    example: 50
                  batches:
                    type: array
                    items:
                      $ref: "#/components/schemas/sendBatchObject"
                    description: "The page of batches matching the given filters"
  "/xms/v1/{service_plan_id}/inbounds":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
    get:
      summary: List incoming messages
      tags:
        - Inbounds
      security:
        - BearerAuth: []
      operationId: ListInboundMessages
      description: With the list operation, you can list all inbound messages that you have received. This operation supports pagination. Inbounds are returned in reverse chronological order.
      parameters:
        - $ref: "#/components/parameters/page"
        - schema:
            type: integer
            maximum: 100
            default: 30
          in: query
          name: page_size
          description: >
            Determines the size of a page

            Constraints:
            Max 100

            Default:
            30
        - schema:
            type: string
            example: +14155553421, +13435552671, +14325552677
          in: query
          name: to
          description: "Only list messages sent to this destination. Multiple phone numbers formatted as either [e164](https://en.wikipedia.org/wiki/E.164) or shortcodes can be comma separated."
        - schema:
            type: string
            default: Now-24
            format: ISO-8601
          in: query
          name: start_date
          description: >
            Only list messages received at or after this date time formatted as [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)

            Default:
            Now-24
        - schema:
            type: string
            format: ISO-8601
            example: "2016-10-02T09:34:18.542Z"
          in: query
          name: end_date
          description: "Only list messages received before this date time formatted as [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)"
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inboundResponseObject"
  "/xms/v1/{service_plan_id}/inbounds/{inbound_id}":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
      - $ref: "#/components/parameters/inbound_id"
    get:
      summary: Retrieve inbound message
      description: This operation retrieves a specific inbound message with the provided inbound ID.
      operationId: RetrieveInboundMessage
      tags:
        - Inbounds
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inboundResponseObject"
        "404":
          description: Not found. The inbound ID is unknown to the system.
  "/xms/v1/{service_plan_id}/batches/dry_run":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
    post:
      security:
        - BearerAuth: []
      summary: Dry run
      description: This operation will perform a dry run of a batch which calculates the bodies and number of parts for all messages in the batch without actually sending any messages.
      operationId: Dry_Run
      tags:
        - Batches
      requestBody:
        description: Send batch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sendBatchObject"
      parameters:
        - schema:
            type: boolean
            example: true
          in: query
          name: per_recipient
          description: Whether to include per recipient details in the response
        - schema:
            type: integer
            maximum: 1000
            default: 100
            example: 500
          in: query
          name: number_of_recipients
          description: Max number of recipients to include per recipient details for in the response
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  number_of_recipients:
                    type: integer
                    description: The number of recipients in the batch
                  number_of_messages:
                    type: integer
                    description: The total number of SMS message parts to be sent in the batch
                  per_recipient:
                    type: array
                    description: "The recipient, the number of message parts to this recipient, the body of the message, and the encoding type of each message"
                    items:
                      type: object
                      properties:
                        recipient:
                          type: string
                        message_part:
                          type: string
                        body:
                          type: string
                        encoding:
                          type: string
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                description: "'tru' is not a valid boolean"
  "/xms/v1/{service_plan_id}/batches/{batch_id}":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
      - $ref: "#/components/parameters/batch_id"
    get:
      summary: Get a batch message
      operationId: GetBatchMessage
      description: This operation returns a specific batch that matches the provided batch ID.
      tags:
        - Batches
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sendBatchCreated"
              examples:
                response:
                  value:
                    id: "9dfn32n423kljklj234"
                    from: "12345"
                    to: ["+15551231212"]
                    body: "Hello how are you"
                    created_at: "2020-02-25T23:01:01Z"
                    modified_at: "2020-02-25T23:01:01Z"
                    canceled: false
        "404":
          description: Not found. The batch ID is unknown to the system.
    post:
      summary: Update a Batch message
      operationId: UpdateBatchMessage
      description: This operation updates all specified parameters of a batch that matches the provided batch ID.
      tags:
        - Batches
      security:
        - BearerAuth: []
      requestBody:
        description: Update batch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateBatchReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sendBatchCreated"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                text: "The format of parameter 'to[0]' is invalid; value '+1' is not a valid MSISDN or group ID."
        "403":
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: missing_callback_url
                text: Requesting delivery report without any callback URL.
    put:
      summary: Replace a batch
      operationId: ReplaceBatch
      description: This operation will replace all the parameters of a batch with the provided values. Effectively the same as cancelling a batch and sending a new one instead.
      tags:
        - Batches
      security:
        - BearerAuth: []
      requestBody:
        description: Send batch object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sendBatchObject"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sendBatchCreated"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                text: "The format of parameter 'to[0]' is invalid; value '+1' is not a valid MSISDN or group ID."
    delete:
      summary: Cancel a batch message
      operationId: CancelBatchMessage
      description: >
        A batch can be canceled at any point. If a batch is canceled while it's currently being delivered some messages currently being processed might still be delivered. The delivery report will indicate which messages were canceled and which weren't.

        Canceling a batch scheduled in the future will result in an empty delivery report while canceling an already sent batch would result in no change to the completed delivery report.
      tags:
        - Batches
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Batch deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sendBatchObject"
  "/xms/v1/{service_plan_id}/batches/{batch_id}/delivery_report":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
      - $ref: "#/components/parameters/batch_id"
    get:
      summary: Retrieve a delivery report
      description: "Delivery reports can be retrieved even if no callback was requested. The difference between a summary and a full report is only that the full report contains the phone numbers in [E164 format](https://en.wikipedia.org/wiki/E.164) for each status code. [callback information](/docs/sms/guide/#callbacks)"
      security:
        - BearerAuth: []
      tags:
        - Delivery reports
      operationId: GetDeliveryReportByBatchId
      parameters:
        - schema:
            type: string
            enum: [summary, full]
            default: summary
          in: query
          name: type
          description: >
            The type of delivery report.
            Constraints:
            Must be summary or full

            Default:
            summary
        - schema:
            type: string
            example: "Queued, Dispatched, Delivered"
          in: query
          name: status
          description: Comma separated list of delivery_report_statuses to include
        - schema:
            type: string
            example: "400, 405"
          in: query
          name: code
          description: "\tComma separated list of delivery_receipt_error_codes to include"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/retrieveDeliveryResponseObj"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                description: "'report' is not a valid report type"
        "404":
          description: Not found. The batch ID is not known to the system.
  "/xms/v1/{service_plan_id}/batches/{batch_id}/delivery_report/{recipient_msisdn}":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
      - $ref: "#/components/parameters/batch_id"
      - $ref: "#/components/parameters/recipient_msisdn"
    get:
      summary: Retrieve a recipient delivery report
      security:
        - BearerAuth: []
      tags:
        - Delivery reports
      operationId: GetDeliveryReportByPhoneNumber
      description: A recipient delivery report contains the message status for a single recipient phone number.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveRecipientDeliveryResponseObj'
              example:
                type: "recipient_delivery_report_sms"
                batch_id: "01FC66621VHDBN119Z8PMV1QPQ"
                recipient: "+44231235674"
                code: 401
                status: "Dispatched"
                at: "2021-08-30T08:16:08.930Z"
        "404":
          description: Not found. The batch ID is not known to the system or the recipient is not a target of this batch.
  "/xms/v1/{service_plan_id}/groups":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
    get:
      summary: List Groups
      operationId: ListGroups
      description: >
        With the list operation you can list all groups that you have created. This operation supports pagination.

        Groups are returned in reverse chronological order.
      security:
        - BearerAuth: []
      tags:
        - Groups
      parameters:
        - schema:
            type: integer
            minimum: 0
            default: 0
          in: query
          name: page
          description: >
            The page number starting from 0

            Constraints:
            0 or larger

            Default:
            0
          example: 50
        - schema:
            type: integer
            maximum: 100
            minimum: 0
            default: 30
          in: query
          name: page_size
          description: >
            Determines the size of a page

            Constraints:
            Max 100

            Default:
            30
          example: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  count:
                    type: integer
                  groups:
                    type: array
                    items:
                      $ref: "#/components/schemas/groupObject"
    post:
      summary: Create group
      operationId: CreateGroup
      description: A group is a set of MSISDNs that can be used as a target in the send_batch_msg operation. An MSISDN can only occur once in a group and any attempts to add a duplicate would be ignored but not rejected.
      security:
        - BearerAuth: []
      tags:
        - Groups
      requestBody:
        description: Group object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/groupObject"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createGroupResponse"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                text: "The format of parameter 'members[0]' is invalid; value '+1' is not a valid MSISDN or group ID."
        "403":
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: unknown_group
                description: "Group '01FC66621VHDBN119Z8PMV1QPU' is unknown or deleted"
  "/xms/v1/{service_plan_id}/groups/{group_id}":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
      - $ref: "#/components/parameters/group_id"
    get:
      summary: Retrieve a group
      description: This operation retrieves a specific group with the provided group ID.
      operationId: RetrieveGroup
      tags:
        - Groups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createGroupResponse"
        "404":
          description: Not Found. The group ID is unknown to the system.
    post:
      summary: Update a group
      description: >
        With the update group operation you can add and remove members to an existing group as well as rename the group.

        The request will not be rejected for duplicate adds or unknown removes.

        The adds will be done before the deletes so if an MSISDN is in both lists then it will not be part of the resulting group.

        To remove an existing name set name explicitly to the JSON value null. Omitting name from the JSON body will leave the name unchanged.

        Updating a group targeted by a batch message scheduled in the future is allowed and changes will be reflected until the batch is sent.
      operationId: UpdateGroup
      security:
        - BearerAuth: []
      tags:
        - Groups
      requestBody:
        description: Group information
        content:
          application/json:
            schema:
              type: object
              properties:
                add:
                  type: array
                  maxItems: 10000
                  description: >
                    phone numbers to add as members.

                    Constraints:
                    Elements must be phone numbers.
                     Max 10 000 elements.
                  items:
                    $ref: "#/components/schemas/msisdn"
                remove:
                  type: array
                  maxItems: 10000
                  description: >
                    phone numbers to remove from group.

                    Constraints:
                    Elements must be phone numbers.
                    Max 10 000 elements.
                  items:
                    $ref: "#/components/schemas/msisdn"
                name:
                  type: string
                  maxLength: 20
                  description: "Name of group.\n\t\nConstraints:\nMax 20 characters"
                add_from_group:
                  type: string
                  description: >
                    Copy the members from the given group into this group.

                    Constraints:
                    Must be valid group ID
                remove_from_group:
                  type: string
                  description: >
                    Remove members in the given group from group.

                    Constraints:
                    Must be valid group ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createGroupResponse"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                text: "The format of parameter 'members[0]' is invalid; value '+1' is not a valid MSISDN or group ID."
        "403":
          description: Forbidden. One or more groups referenced in your request could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: unknown_group
                description: "Group '01FC66621VHDBN119Z8PMV1QPU' is unknown or deleted"
        "404":
          description: Not found. If the group ID is unknown to the system.
    put:
      security:
        - BearerAuth: []
      summary: Replace a group
      operationId: ReplaceGroup
      description: >
        The replace operation will replace all parameters, including members, of an existing group with new values.

        Replacing a group targeted by a batch message scheduled in the future is allowed and changes will be reflected when the batch is sent.
      tags:
        - Groups
      requestBody:
        description: Group information
        content:
          application/json:
            schema:
              type: object
              required:
                - members
              properties:
                name:
                  type: string
                  description: >
                    Name of group.

                    Constraints:
                    Max 20 characters
                members:
                  type: array
                  maxItems: 10000
                  description: >
                    The initial members of the group.

                    Constraints:
                    Elements must be phone numbers in [e164](https://en.wikipedia.org/wiki/E.164) format MSISDNs.
                    Max 10 000 elements.
                  items:
                    $ref: "#/components/schemas/msisdn"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createGroupResponse"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: syntax_invalid_parameter_format
                text: "The format of parameter 'members[0]' is invalid; value '+1' is not a valid MSISDN or group ID."
        "403":
          description: Forbidden. One or more groups referenced in your request could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseObj"
              example:
                code: unknown_group
                description: "Group 'my_group' is unknown or deleted"
        "404":
          description: Not found. If the group ID is unknown to the system.
  "/xms/v1/{service_plan_id}/groups/{group_id}/members":
    parameters:
      - $ref: "#/components/parameters/service_plan_id"
      - $ref: "#/components/parameters/group_id"
    get:
      summary: Get phone numbers for a group
      description: >
        This operation retrieves the members of the group with the provided group ID.
      security:
        - BearerAuth: []
      operationId: GetMembers
      tags:
        - Groups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/msisdn"
        "404":
          description: Not found. If the group ID is unknown to the system.
components:
  examples:
    SendSMS:
      value:
        from: "12345"
        to: ["+15551231212"]
        body: "Hello how are you"
    Inbounds:
      value:
        type: mo_text
        id: 01FC66621VHDBN119Z8PMV1QPA
        from: "+11203494390"
        to: "+11203453453"
        body: This is a test message
        operator_id:
        sent_at:
        received_at:
  schemas:
    errorResponseObj:
      type: object
      properties:
        code:
          type: string
          description: The error code. See [error codes](/docs/sms/api-reference/#error-codes).
        text:
          type: string
          description: The human readable description of the error.
    createGroupResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID used to reference this group
          example: 01FC66621VHDBN119Z8PMV1QPU
        name:
          type: string
          description: Name of group if set
          example: New customers
        size:
          type: integer
          description: The number of members currently in the group
          example: 3000
        created_at:
          type: string
          format: date-time
          description: >
            Timestamp for when the group was created.

            ISO-8601 format
        modified_at:
          type: string
          format: date-time
          description: >
            Timestamp for when the group was last modified.

            ISO-8601 format
    retrieveRecipientDeliveryResponseObj:
      required:
      - at
      - batch_id
      - code
      - recipient
      - status
      type: object
      properties:
        applied_originator:
          type: string
          description: "The default originator used for the recipient this delivery\
            \ report belongs to, if default originator pool configured and no originator\
            \ set when submitting batch."
        at:
          type: string
          description: A timestamp of when the Delivery Report was created in the
            Sinch service.
          format: date-time
        batch_id:
          type: string
          description: The ID of the batch this delivery report belongs to
          readOnly: true
          example: 01FC66621VHDBN119Z8PMV1QPQ
        client_reference:
          type: string
          description: "The client identifier of the batch this delivery report belongs\
            \ to, if set when submitting batch."
        code:
          type: integer
          description: The detailed status code.
          format: int32
        number_of_message_parts:
          type: integer
          description: The number of parts the message was split into. Present only
            if _max_number_of_message_parts_ parameter was set.
          format: int32
          example: 1
        operator:
          type: string
          description: "The operator that was used for delivering the message to this\
            \ recipient, if configured for the account."
          example: "35000"
        operator_status_at:
          type: string
          description: A timestamp extracted from the Delivery Receipt from the originating
            SMSC.
          format: date-time
        recipient:
          type: string
          description: Phone number that was queried for.
          example: "15551231234"
        status:
          type: string
          description: The simplified status as described in _Delivery Report Statuses_.
          example: Delivered
          enum:
          - "Queued, Dispatched, Aborted, Failed, Delivered, Expired, Rejected, Deleted,\
            \ Unknown"
        type:
          type: string
          description: The object type. Will always be _recipient_delivery_report_sms_.
          enum:
          - recipient_delivery_report_sms
    retrieveDeliveryResponseObj:
      type: object
      properties:
        type:
          type: string
          default: delivery_report_sms
          description: The object type. Will always be _delivery_report_sms_
        batch_id:
          type: string
          description: The ID of the batch this delivery report belongs to
        total_message_count:
          type: string
          description: The total number of messages for the batch
        statuses:
          type: array
          description: Array with status objects. Only status codes with at least one recipient will be listed.
          items:
            type: object
            properties:
              code:
                description: The detailed status code.
                type: integer
              status:
                type: string
                enum: [Queued, Dispatched, Aborted, Failed, Delivered, Expired, Rejected, Deleted, Unknown]
                description: The simplified status as described in _Delivery Report Statuses_
              count:
                description: The number of messages that currently has this code. Will always be at least 1
                type: integer
              recipients:
                type: array
                description: Only for _full_ report. A list of the phone number recipients which messages has this status code.
                items:
                  type: string
        client_reference:
          type: string
          description: The client identifier of the batch this delivery report belongs to, if set when submitting batch.
      example:
        type: delivery_report_sms
        batch_id: 01FC66621VHDBN119Z8PMV1QPQ
        total_message_count: "20000"
        statuses:
          [
            { code: 0, status: "Delivered", count: 19999 },
            { code: 401, status: "Dispatched", count: 1 },
          ]
    updateBatchReq:
      type: object
      properties:
        toAdd:
          type: array
          description: >
            List of phone numbers and group IDs to add to the batch.

            Constraints:
            1 to 100 elements.
          items:
            type: string
          minItems: 1
          maxItems: 100
          example: ["+44531234233", "34234445434"]
        toRemove:
          description: "List of phone numbers and group IDs to remove from the batch.\t\n\nconstraints:\n1 to 100 elements."
          type: array
          items:
            type: string
          example: ["+4453868734", "3423423432"]
        from:
          type: string
          description: >
            Sender number.

            Default:
            Must be valid phone number, short code or alphanumeric.
          example: "+46342324894"
        body:
          type: string
          maxLength: 1600
          description: >
            The message content. Normal text string for mt_text and Base64 encoded for mt_binary.

            Constraints:
            Max 1600 chars for mt_text and max 140 bytes together with udh for mt_binary
          example: "A text message!"
        delivery_report:
          type: string
          enum:
            - none
            - summary
            - full
            - per_recipient
          description: >
            Request delivery report callback. Note that delivery reports can be fetched from the API regardless of this setting.

            Constraints:
            Valid types are none, summary, full and per_recipient
        send_at:
          type: string
          format: date-time
          description: >
            If set in the future the message will be delayed until send_at occurs. ISO-8601 format.

            Constraints:
            Must be before expire_at. If set in the past messages will be sent immediately.
        expire_at:
          type: string
          format: date-time
          description: >
            If set the system will stop trying to deliver the message at this point.

            Constraints:
            Must be after send_at

            Default:
            3 days after send_at
        callback_url:
          type: string
          maxLength: 2048
          description: >
            Override the default callback URL for this batch.

            Constraints:
            Must be valid URL. Max 2048 characters long.
          example: "example.callback.com"
    inboundResponseObject:
      type: object
      properties:
        page:
          type: integer
          description: The requested page.
          example: 1
        page_size:
          type: integer
          description: The number of inbounds returned in this request.
          example: 50
        count:
          type: integer
          description: The total number of inbounds matching the given filters
          example: 100
        inbounds:
          type: array
          description: The page of inbounds matching the given filters
          items:
            $ref: "#/components/schemas/inboundsObject"
    inboundsObject:
      type: object
      description: "The response object of an inbound message. They can be retrieved and listed or sent via a callback."
      properties:
        type:
          type: string
          description: The object type. Either mo_text or mo_binary.
          example: mo_text
        id:
          type: string
          description: The ID of this inbound message.
          example: 01FC66621VHDBN119Z8PMV1QPA
        from:
          type: string
          description: The phone number that sent the message.
          example: +11203494390
        to:
          type: string
          description: The Sinch phone number or short code to which the message was sent.
          example: +11203453453
        body:
          type: string
          description: "The message body. Base64 encoded if type is `mo_binary`."
          example: This is a test message
        operator_id:
          type: string
          description: The MCCMNC of the sender's operator if known.
        sent_at:
          type: string
          format: date-time
          description: >
            When the message left the originating device. Only available if provided by operator.

            Formatted as ISO-8601.
        received_at:
          type: string
          format: date-time
          description: >
            When the system received the message.

            Formatted as ISO-8601.
    sendBatchCreated:
      type: object
      properties:
        to:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: "#/components/schemas/msisdn"
          description: >
            List of Phone numbers and group IDs that will receive the batch. [More info](https://community.sinch.com/t5/Glossary/MSISDN/ta-p/7628)
            Constraints: 1 to 1000 elements
          example: ["+15551231234", "+15551256344"]
        from:
          type: string
          description: |
            Sender number.

            Required if Automatic Default Originator not configured.
          example: "+15551231234"
        type:
          type: string
          default: mt_text
          enum:
            - mt_text
            - mt_binary
          description: >
            Identifies the type of batch message.
            Default:
            mt_text is regular SMS, mt_binary is a binary format.
          example: mt_text
        body:
          type: string
          description: >
            The message content. Normal text string for mt_text and Base64 encoded for mt_binary.

            Max 1600 chars for mt_text and max 140 bytes together with udh for mt_binary.
          example: "This is a message to be sent!"
        udh:
          type: string
          description: >
            The UDH header of a binary message. Max 140 bytes together with body.

            Required if type is mt_binary.
        delivery_report:
          type: string
          enum:
            - none
            - summary
            - full
            - per_recipient
          description: "Request delivery report callback. \n\nNote that delivery reports can be fetched from the API regardless of this setting. \n\nValid types are none, summary, full and per_recipient\t"
        send_at:
          type: string
          format: date-time
          description: "If set in the future the message will be delayed until send_at occurs.\n\nMust be before expire_at. \n \nIf set in the past messages will be sent immediately.\t"
        expire_at:
          type: string
          format: date-time
          description: >
            If set the system will stop trying to deliver the message at this point.

             Must be after send_at. Default is 3 days after send_at.
        callback_url:
          type: string
          maxLength: 2048
          description: >
            Override the default callback URL for this batch.

            Must be valid URL.

            Max 2048 characters long.
        flash_message:
          type: boolean
          default: false
          description: >
            Shows message on screen without user interaction while not saving the message to the inbox.

            true or false.
        # parameters:
        #   type: object
        #   description: >
        #     Contains the parameters that will be used for customizing the message for each recipient.

        #     Not applicable to if type is mt_binary

        #     [Click here to learn more about parameters](/docs/sms/api-reference/#parameterization)

          # properties:
          #   "{parameter_key}":
          #     type: string
          #     maxLength: 16
          #     pattern: '^[A-Za-z0-9_\-.]+$'
          #     description: >
          #       The name of the parameter that will be replaced in the message body.

          #       Letters A-Z and a-z, digits 0-9 and .-_ allowed. Max 16 characters long
          #   "{parameter_key}.{msisdn}":
          #     type: string
          #     maxLength: 160
          #     description: >
          #       The recipient that should get this value

          #       Max 160 characters long
          #   "{parameter_key}.default":
          #     type: string
          #     maxLength: 160
          #     description: >
          #       The fall back value for omitted recipient phone numbers ([MSISDNs](https://community.sinch.com/t5/Glossary/MSISDN/ta-p/7628))

          #       Max 160 characters long
        client_reference:
          type: string
          maxLength: 128
          description: >
            The client identifier of batch message. If set, it will be added in the delivery report/callback of this batch

            Max 128 characters long
        max_number_of_message_parts:
          type: integer
          minimum: 1
          description: >
            Message will be dispatched only if it is not split to more parts than Max Number of Message Parts

            Must be higher or equal 1
        id:
          type: string
          description: Unique identifier for batch
        created_at:
          type: string
          format: date-time
          description: >
            Timestamp for when batch was created.

            ISO-8601 format
        modified_at:
          type: string
          format: date-time
          description: >
            Timestamp for when batch was last updated.

            ISO-8601 format
        canceled:
          type: boolean
          description: Indicates if the batch has been canceled or not.
    sendBatchObject:
      type: object
      required:
        - to
        - body
      properties:
        to:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: "#/components/schemas/msisdn"
          description: >
            List of Phone numbers and group IDs that will receive the batch.
            Constraints: 1 to 1000 elements [More info](https://community.sinch.com/t5/Glossary/MSISDN/ta-p/7628)
          example: ["+15551231234", "+15551256344"]
        from:
          type: string
          description: |
            Sender number.

            Required if Automatic Default Originator not configured.
          example: "+15551231234"
        type:
          type: string
          default: mt_text
          enum:
            - mt_text
            - mt_binary
          description: >
            Identifies the type of batch message.
            Default:
            mt_text
          example: mt_text
        body:
          type: string
          description: >
            The message content. Normal text string for mt_text and Base64 encoded for mt_binary.

            Max 1600 chars for mt_text and max 140 bytes together with udh for mt_binary.
          example: "This is a message to be sent!"
        udh:
          type: string
          description: >
            The UDH header of a binary message. Max 140 bytes together with body.

            Required if type is mt_binary.
        delivery_report:
          type: string
          enum:
            - none
            - summary
            - full
            - per_recipient
          description: "Request delivery report callback. \n\nNote that delivery reports can be fetched from the API regardless of this setting. \n\nValid types are none, summary, full and per_recipient\t"
          example: summary
        send_at:
          type: string
          format: date-time
          description: "If set in the future the message will be delayed until send_at occurs.\n\nMust be before expire_at. \n \nIf set in the past messages will be sent immediately.\t"
        expire_at:
          type: string
          format: date-time
          description: >
            If set the system will stop trying to deliver the message at this point.

             Must be after send_at. Default is 3 days after send_at.
        callback_url:
          type: string
          format: uri
          example: https://yourdomain.com/sms/deliveryreports
          maxLength: 2048
          description: >
            Override the default callback URL for this batch.

            Must be valid URL.

            Max 2048 characters long.
        flash_message:
          type: boolean
          default: false
          description: >
            Shows message on screen without user interaction while not saving the message to the inbox.

            true or false.
        # parameters:
        #   type: object
        #   description: >
        #     Contains the parameters that will be used for customizing the message for each recipient.

        #     Not applicable to if type is mt_binary
        #     'example :  "parameters: [{"name": {
        #         "123456789": "Joe",
        #         "default": "there"}]'
        #     [Click here to learn more about parameters](/docs/sms/api-reference/#parameterization)
          # properties:
          #   "{parameter_key}":
          #     type: object
          #     maxLength: 16
          #     pattern: '^[A-Za-z0-9_\-.]+$'
          #     description: >
          #       The name of the parameter that will be replaced in the message body.

          #       Letters A-Z and a-z, digits 0-9 and .-_ allowed. Max 16 characters long.

          #     properties:
          #       "{msisdn}":
          #         type: string
          #         maxLength: 160
          #         example: '{"15551231212":"Joe"}'
          #         description: >
          #           The recipient that should get this value
          #           Max 160 characters long
          #       "default":
          #         type: string
          #         maxLength: 160
          #         example: '{"default":"Customer"}'
          #         description: >
          #           The fall back value for omitted recipient MSISDNs
          #           Max 160 characters long.
        client_reference:
          type: string
          maxLength: 128
          description: >
            The client identifier of batch message. If set, it will be added in the delivery report/callback of this batch

            Max 128 characters long
        max_number_of_message_parts:
          type: integer
          minimum: 1
          description: >
            Message will be dispatched only if it is not split to more parts than Max Number of Message Parts

            Must be higher or equal 1
    groupObject:
      type: object
      properties:
        name:
          type: string
          maxLength: 20
          description: "Name of the group"
        members:
          type: array
          maxItems: 10000
          items:
            $ref: "#/components/schemas/msisdn"
          description: "Initial list of phone numbers in [E.164 format](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537) [MSISDNs](https://community.sinch.com/t5/Glossary/MSISDN/ta-p/7628) for the group."
        child_groups:
          type: array
          description: >
            MSISDNs of child group will be included in this group. If present then this group will be auto populated.

            Constraints:
            Elements must be group IDs.
          maxItems: 10
          items:
            type: string
            description: Group ID
        auto_update:
          type: object
          properties:
            to:
              type: string
              description: >
                Short code or long number addressed in MO.

                Constraints:
                Must be valid MSISDN or short code.
            add:
              type: object
              properties:
                first_word:
                  type: string
                  pattern: '^\w+$'
                  description: >
                    Keyword to be sent in MO to add MSISDN to a group Opt-in keyword like "JOIN" If auto_update.to is dedicated long/short number or unique brand keyword like "Sinch" if it is a shared short code.

                    Constraints:

                    Max length: 15 characters
                    Must be one word.
                  maxLength: 15
                second_word:
                  type: string
                  pattern: '^\w+$'
                  description: >
                    Opt-in keyword like "JOIN" if auto_update.to is shared short code.

                    Constraints:

                    Max length: 15 characters
                    Must be one word.
                  maxLength: 15
            remove:
              type: object
              description: Keyword to be sent in MO to remove from a group.
              properties:
                first_word:
                  type: string
                  pattern: '^\w+$'
                  description: >
                    Opt-out keyword like "LEAVE" If auto_update.to is dedicated long/short number or unique brand keyword like "Sinch" if it is a shared short code.

                    Constraints:

                    Max length: 15 characters
                    Must be one word.
                  maxLength: 15
                second_word:
                  type: string
                  pattern: '^\w+$'
                  description: >
                    Opt-out keyword like "LEAVE" if auto_update.to is shared short code.

                    Constraints:
                    Max length: 15 characters
                    Must be one word.
                  maxLength: 15
    msisdn:
      type: string
      format: e.164
      description: "A phone number in [E.164 format](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537)."
      example: "+453234457784"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: |
        The token is sent in the `Authorization` header preceded by `Bearer`. It's required for all requests made to the REST API.
        You can find your `serviceplan_id` and token in the [Dashboard](https://dashboard.sinch.com/sms/api/rest)
  parameters:
    inbound_id:
      in: path
      required: true
      name: inbound_id
      schema:
        type: string
      description: The inbound ID found when listing inbound messages.
      example: 01FC66621VHDBN119Z8PMV1QPA
    batch_id:
      in: path
      required: true
      name: batch_id
      schema:
        type: string
      description: The batch ID you received from sending a message.
      example: 01FC66621VHDBN119Z8PMV1QPQ
    service_plan_id:
      in: path
      required: true
      name: service_plan_id
      schema:
        type: string
      description: Your service plan ID. You can find this on your [Dashboard](https://dashboard.sinch.com/sms/api/rest).
      example: jd63jf88477ll
    group_id:
      name: group_id
      in: path
      required: true
      schema:
        type: string
      description: ID of a group that you are interested in
    recipient_msisdn:
      name: recipient_msisdn
      in: path
      required: true
      schema:
        type: string
        example: "+134848393506"
      description: Phone number for which you to want to search.
    page:
      name: page
      in: query
      description: The page number starting from 0.
      schema:
        type: integer
        minimum: 0
        default: 0
      example: 2


tags:
  - name: Batches
    description: >
      Batches are sets of SMS messages. You can send a single message or many. Batches are queued and sent at the rate limit in First-In-First-Out order.

      If you want more in-depth knowledge about SMS in general please read the [API Overview](/docs/sms/api-reference/).
  - name: Inbounds
    description: Inbounds, or Mobile Originated messages, are incoming messages. Inbound messages can be listed and retrieved like batch messages and they can also be delivered by callback requests like delivery reports.
  - name: Groups
    description: A group is a set of phone numbers (or [MSISDNs](https://community.sinch.com/t5/Glossary/MSISDN/ta-p/7628)) that can be used as a target in the [`SendSMS`](/docs/sms/api-reference/sms/tag/Batches/#tag/Batches/operation/SendSMS/) operation. An MSISDN can only occur once in a group and any attempts to add a duplicate are ignored but not rejected.
  - name: Delivery reports
    description: >
      The REST API uses message statuses and error codes in delivery reports, which refer to the state of the SMS batch and can be present in either [Retrieve a delivery report](/docs/sms/api-reference/sms/tag/Delivery-reports/#tag/Delivery-reports/operation/GetDeliveryReportByBatchId) or sent to a [callback](/docs/sms/api-reference/sms/tag/Delivery-reports/#tag/Delivery-reports/paths/deliveryReport/post).

      ### Delivery Report Statuses

      The status field describes which state a particular message is in. Note that statuses of type Intermediate will only be reported if you request a status per recipient ([Retrieve a recipient delivery report](/docs/sms/api-reference/sms/tag/Delivery-reports/#tag/Delivery-reports/operation/GetDeliveryReportByPhoneNumber)), no callback will be made to report them.

      The following statuses are available when using the REST API:

      | Status     | Type         | Description                                                                                                                                   |
      | ---------- | ------------ | --------------------------------------------------------------------------------------------------------------------------------------------- |
      | Queued     | Intermediate | Message is queued within REST API system and will be dispatched according to the rate of the account.                                         |
      | Dispatched | Intermediate | Message has been dispatched and accepted for delivery by the SMSC.                                                                            |
      | Aborted    | Final        | Message was aborted before reaching the SMSC.                                                                                                 |
      | Rejected   | Final        | Message was rejected by the SMSC.                                                                                                             |
      | Deleted    | Final        | Message has been deleted. Message was deleted by a remote SMSC. This may happen if the destination is an invalid MSISDN or opted out subscriber.                                                                        |
      | Delivered  | Final        | Message has been delivered.                                                                                                                   |
      | Failed     | Final        | Message failed to be delivered.                                                                                                               |
      | Expired    | Final        | Message expired before delivery to the SMSC. This may happen if the expiry time for the message was very short.                               |
      | Unknown    | Final        | Message was delivered to the SMSC but no Delivery Receipt has been received or a Delivery Receipt that couldn't be interpreted was received. |

      ### Delivery Report Error Codes

      The delivery report status code provides a more detailed view of what happened with a message. The REST API shares most of its error codes with other SMS services.

      In addition to these standard error codes, the REST API provides an additional set of error codes, all within the 4xx range (vendor specific errors in the range of 0x400 to 0x4FF as referenced in the SMPP specification). These are listed below:

      | Status Code (Hex) | Name                         | Status     | Description                                                                                                             |
      | ----------------- | ---------------------------- | ---------- | ----------------------------------------------------------------------------------------------------------------------- |
      | 400               | Queued                       | Queued     | Message is queued within REST API system and will be dispatched according to the rate of the account.                   |
      | 401               | Dispatched                   | Dispatched | Message has been dispatched to SMSC.                                                                                    |
      | 402               | Message unroutable           | Aborted    | SMSC rejected message. Retrying is likely to cause the same error.                                                      |
      | 403               | Internal error               | Aborted    | An unexpected error caused the message to fail.                                                                         |
      | 404               | Temporary delivery failure   | Aborted    | Message failed because of temporary delivery failure. Message can be retried.                                           |
      | 405               | Unmatched Parameter          | Aborted    | One or more parameters in the message body has no mapping for this recipient. See [Parameterization](#parameterization) |
      | 406               | Internal Expiry              | Aborted    | Message was expired before reaching SMSC. This may happen if the expiry time for the message was very short.            |
      | 407               | Canceled                     | Aborted    | Message was canceled by user before reaching SMSC.                                                                      |
      | 408               | Internal Reject              | Aborted    | SMSC rejected the message. Retrying is likely to cause the same error.                                                  |
      | 410               | Unmatched default originator | Aborted    | No default originator exists/configured for this recipient when sending message without originator.                     |
      | 411               | Exceeded parts limit         | Aborted    | Message failed as the number of message parts exceeds the defined max number of message parts.                          |
      | 412               | Unprovisioned region         | Aborted    | SMSC rejected the message. The account hasn't been provisioned for this region.                                         |
      | 413               | Blocked                      | Aborted    | The account is blocked. Reach out to support for help. Potentially out of credits.                                         |

  - name: Webhooks
    description: >
      ## Callbacks
       A callback is an HTTP POST request with a notification made by the Sinch SMS REST API to a URI of your choosing. The REST API expects the receiving server to respond with a response code within the `2xx` Success range. If no successful response is received, the REST API will either schedule a retry if the error is expected to be temporary or discard the callback if the error seems permanent. The first initial retry will happen 5 seconds after the first try. The next attempt is after 10 seconds, then after 20 seconds, after 40 seconds, after 80 seconds, doubling on every attempt. The last retry will be at 81920 seconds (or 22 hours 45 minutes) after the initial failed attempt.

       The REST API offers the following callback options which can be configured for your account upon request to your account manager.

       - Callback with mutual authentication over TLS (HTTPS) connection by provisioning the callback URL with client keystore and password.
       - Callback with basic authentication by provisioning the callback URL with username and password.
       - Callback with OAuth 2.0 by provisioning the callback URL with username, password and the URL to fetch OAuth access token.
       - Callback using AWS SNS by provisioning the callback URL with an Access Key ID, Secret Key and Region.
