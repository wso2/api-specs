openapi: 3.0.1
info:
  title: Optimizely API
  version: '2.0'
  description: 
    Connects to [Optimizely API v2](https://www.optimizely.com/) from Ballerina

    Optimizely Agent is a stand-alone, open-source microservice that provides major benefits over using Optimizely SDKs in certain use cases. Its REST API offers consolidated and simplified endpoints for accessing all the functionality of Optimizely Full Stack SDKs. Use this API the control experiments (such as a feature tests).
  x-ballerina-init-description: 
    The connector initialization requires setting the API credentials.

    Create a [Optimizely account](https://www.optimizely.com/) and obtain tokens by following [this guide](https://docs.developers.optimizely.com/web/docs/rest-api-getting-started#section-2-generate-a-token).
  x-ballerina-display:
    label: Optimizely
    iconPath: "icon.png" 
servers:
  - url: https://api.optimizely.com/v2
tags:
  - name: Projects
    description: Group Campaigns and Experiments in a single javascript file
  - name: Campaigns
    description: Group Experiments that share aggregated metrics
  - name: Experiments
    description: Build user experiences and measure their effects
  - name: Audiences
    description: Define who can be included in your Experiments
  - name: Pages
    description: Define where your Experiments can run
  - name: Events
    description: Define Events that you want to track
  - name: Attributes
    description: >-
      Define characteristics of audiences that decide the experiences they will
      be included in
  - name: Groups
    description: >-
      Make experiments and campaigns mutually exclusive from each other using
      Exclusion Groups
  - name: Extensions
    description: Define reusable templates for making changes in the visual editor
  - name: Plan
    description: Plan & Usage information for current account
  - name: Scheduled Jobs
    description: Define Scheduled Jobs to be executed on a regular, recurring basis
  - name: User
    description: User related information for the current account
  - name: Collaborators
    description: >-
      Manage the users on your account. For more information, see <a
      href="https://help.optimizely.com/Set_Up_Optimizely/Manage_collaborators_in_Optimizely_X">managing
      collaborators in Optimizely X</a>
  - name: List Attributes
    description: >-
      A List Attribute is a set of user identifiers that you have uploaded to
      Optimizely. Membership in a list can be used to define an Optimizely
      audience, so you can target experiments and campaigns only to a particular
      set of users.
  - name: Sections
    description: Each Section represents a different variable in a Multivariate Test.
  - name: Features
    description: >-
      Create Features and parameterize them using Variables for parts of your
      application you'd like to toggle, roll out, or experiment on.
  - name: Subject Access Requests
    description: Manage information about Subject Access Requests (includes GDPR)
  - name: Environments
    description: Run experiments on environment-specific datafiles
  - name: Search
    description: Search across multiple entities
  - name: Change History
    description: Get a list of changes by project.
  - name: Attribution
    description: Get a list of bucketing decisions for a visitor.
  - name: Export Credentials
    description: Get aws credentials to access & export enriched events dataset (EEE)
paths:
  /attributes:
    get:
      tags:
        - Attributes
      summary: List Attributes
      description: List Attributes under a Project
      operationId: list_attributes
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: The ID of the Project you would like to list all Attributes for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all Attributes in the specified Project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access to the Attributes in the
            specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Attributes not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Attributes
      summary: Create an Attribute
      description: Create an Attribue
      operationId: create_attribute
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a new
          Attribute
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        required: true
      responses:
        '201':
          description: Successfully created the Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /attributes/{attribute_id}:
    get:
      tags:
        - Attributes
      summary: Read an Attribute
      description: Get Attribute by ID
      operationId: get_attribute
      parameters:
        - name: attribute_id
          in: path
          description: The Attribute ID of the Attribute you want to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Successfully retrieved Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access specified Attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Attributes
      summary: Delete an Attribute
      description: Delete Attribute by ID
      operationId: delete_attribute
      parameters:
        - name: attribute_id
          in: path
          description: The ID of the Attribute you'd like to delete
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully deleted Attribute
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to delete the specified Attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Attributes
      summary: Update an Attribute
      description: Update an Attribute by ID
      operationId: update_attribute
      parameters:
        - name: attribute_id
          in: path
          description: The ID of the Attribute you'd like to update
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an Attribute
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated the Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update the specified Attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /audiences:
    get:
      tags:
        - Audiences
      summary: List Audiences
      description: List Audiences for a Project
      operationId: list_audiences
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: >-
            The Project ID of the Project you would like to list all Audiences
            for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all Audiences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Audience'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to Audiences under the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Audiences
      summary: Create an Audience
      description: Create an Audience for a Project
      operationId: create_audience
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create an
          Audience
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audience'
        required: true
      responses:
        '201':
          description: Return the created Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /audiences/{audience_id}:
    get:
      tags:
        - Audiences
      summary: Read an Audience
      description: Get metadata for a single Audience
      operationId: get_audience
      parameters:
        - name: audience_id
          in: path
          description: The Audience ID of the Audience you want to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Audience info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Audience not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Audiences
      summary: Update an Audience
      description: Update an Audience for a Project
      operationId: update_audience
      parameters:
        - name: audience_id
          in: path
          description: The Audience ID of the Audience you want to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an Audience
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceUpdate'
        required: true
      responses:
        '200':
          description: Return the created Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to edit the specified Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Audience not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /billing/usage/{account_id}:
    get:
      tags:
        - Impressions Usage
      summary: Get Impressions Usage
      description: (BETA) Get Impressions Usage by account id
      operationId: get_impressions_usage_request
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: account_id
          in: path
          description: The account ID of the customer
          required: true
          schema:
            type: integer
            # format: int32
        - name: usage_date_from
          in: query
          description: Start date of date range
          required: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
        - name: usage_date_to
          in: query
          description: End date of date range
          required: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
        - name: platforms
          in: query
          description: The platform of the Project
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - edge
                - fullstack
                - web
            default: ["edge","fullstack","web"]
        - name: query
          in: query
          description: Search by experiment_id, project_id.
          schema:
            type: string
        - name: sort
          in: query
          description: The property to sort by.
          schema:
            type: string
            default: impression_count
        - name: order
          in: query
          description: The property to sort by.
          schema:
            type: string
            default: desc
      responses:
        '200':
          description: Return Impression Usage info for account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImpressionsUsage'
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Impression Usage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
  /billing/usage/{account_id}/summary:
    get:
      tags:
        - Impressions Usage
      summary: Get Impressions Usage Summary
      description: (BETA) Get Impressions Usage Summary by account id
      operationId: get_impressions_usage_summary_request
      parameters:
        - name: account_id
          in: path
          description: The account ID of the customer
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Impression Usage Summary for account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpressionsUsageSummary'
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Impression Usage Summary not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
  /campaigns:
    get:
      tags:
        - Campaigns
      summary: List Campaigns
      description: Get a list of all the Campaigns in a Project
      operationId: list_campaigns
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: >-
            The Project ID of the Project you would like to list all Campaigns
            for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all Campaigns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to Campaigns under the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Campaigns
      summary: Create a Campaign
      description: Create a new Campaign in your account
      operationId: create_campaign
      parameters:
        - name: action
          in: query
          description: >-
            Action to change the state of the Campaign. 'publish' publishes your
            campaign, making any changes live to the world. Status will be
            'paused'. 'start' publishes your campaign, making any changes live
            to the world. Status will be 'running'.
          schema:
            type: string
            enum:
              - publish
              - start
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a
          Project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        '201':
          description: Return the created Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}:
    get:
      tags:
        - Campaigns
      summary: Read a Campaign
      description: Get metadata for a single Campaign
      operationId: get_campaign
      parameters:
        - name: campaign_id
          in: path
          description: The Campaign ID of the Campaign you want to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Campaign info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Campaigns
      summary: Delete a Campaign
      description: Delete Campaign by ID
      operationId: delete_campaign
      parameters:
        - name: campaign_id
          in: path
          description: The Campaign ID of the Campaign you want to delete
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Deleted Campaign successfully
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Campaign not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Campaign already deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Campaigns
      summary: Update a Campaign
      description: Update a Campaign
      operationId: update_campaign
      parameters:
        - name: campaign_id
          in: path
          description: The Campaign ID of the Campaign you want to change
          required: true
          schema:
            type: integer
            # format: int32
        - name: action
          in: query
          description: >-
            Action to change the state of the Campaign. 'publish' publishes your
            campaign, making any changes live to the world without changing the
            status of the campaign. 'start' publishes your campaign, making any
            changes live to the world. Status will be 'running'. 'pause' stops
            the campaign. Status will be 'paused'. No new visitors will see the
            campaign until it is resumed. 'resume' resumes the campaign from a
            paused status without publishing any new changes. Status will be
            'running'. 'unarchive' unarchives an archived campaign. Status will
            be 'paused'.
          schema:
            type: string
            enum:
              - publish
              - start
              - pause
              - resume
              - unarchive
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for a Campaign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignUpdate'
        required: true
      responses:
        '200':
          description: Return the updated Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to edit the specified Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Campaign not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/results:
    get:
      tags:
        - Campaigns
      summary: Get Campaign results
      description: Get results for a Campaign
      operationId: get_campaign_results
      parameters:
        - name: campaign_id
          in: path
          description: The ID for the Campaign you want results for
          required: true
          schema:
            type: integer
            # format: int32
        - name: start_time
          in: query
          description: >-
            The start time of the time interval (beginning time included) used
            to calculate the results over. If unspecified, defaults to the time
            that the Campaign was first activated. The start time will be
            rounded the smallest time modulo 5 minutes larger or equal to
            start_time.
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: >-
            The end of the time interval (end time excluded) used to calculate
            results over. If unspecified, defaults to the current time if the
            Experiment is still running, otherwise defaults to the time the
            experiment was last active. The end time will be rounded to the
            largest time modulo 5 minutes smaller or equal to end_time. The
            end_time in the response may be earlier than requested if fresher
            results are not available yet. In this case, the results will
            continue to calculate in the background and subsequent requests will
            eventually return the full results.
          schema:
            type: string
            format: date-time
        - name: browser
          in: query
          description: >-
            Browser to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [device,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - firefox
              - chrome
              - internet_explorer
              - opera
              - safari
        - name: device
          in: query
          description: >-
            Device to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - desktop
              - ipad
              - iphone
              - mobile
              - tablet
        - name: source
          in: query
          description: >
            Source to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            device, attribute_id, attribute_value].

            Campaign: Contains users that arrive on a URL containing a
            'utm_campaign,' 'utm_source,' 'gclid,' or 'otm_source' query
            parameter. If the URL contains one of these parameters, the visitor
            will count as "Campaign" traffic even if they arrived through
            search.

            Direct:  Includes all users who do not have any external referrer in
            their URL.

            Referral: Includes all users that come from another URL that doesn't
            count as Campaign.
          schema:
            type: string
            enum:
              - campaign
              - direct
              - referral
              - search
        - name: attribute_id
          in: query
          description: >
            ID of the attribute to segment results by. Requests containing
            attribute_id will return the results for all visitors that have
            attribute_value for the attribute represented by attribute_id. If
            present, the attribute_value parameter must also be present, and it
            cannot be sent with any other segmentation parameters, i.e. any
            parameters in [browser, device, source].
          schema:
            type: integer
            # format: int32
        - name: attribute_value
          in: query
          description: >
            UTF-8 encoded value correlating to attribute_id. If present, the
            attribute_id parameter must also be present. This parameter also
            requires attribute_id to be set, and cannot be sent with any other
            segmentation parameters, i.e. any parameters in [browser, device,
            source].
          schema:
            type: string
        - name: segment_conditions
          in: query
          description: >
            (BETA) A string representation of a JSON Segment Conditions
            Expression. This parameter can be either URL-escaped stringified
            JSON or Base64-encoded stringified JSON using URL-safe alphabet
            (preferred).

            Segment Conditions Expressions consist of Logical Expressions and
            Match Expressions.

            Logical Expressions are represented as an array of the format
            [<operator>, <expression>...], where the supported operators are
            "and", "or" and "not".

            Match Expressions are represented as an object of the format
            {"attribute_id": <attribute_id>, "attribute_value": <value>[,
            "match_type": <match_type>]}, where supported values for match_type
            are "exact" match type will match only an exact string match between
            "value" string and the attribute value. "substring" match type will
            match if "value" is a substring of the attribute value. "prefix"
            match type will match if "value" is a string prefix of the attribute
            value. "regex" match type will match if "value" is a regular
            expression match for the attribute value. The default match_type is
            "exact".
          schema:
            type: string
      responses:
        '200':
          description: Return Campaign results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResults'
        '204':
          description: >-
            There are no results data for this Campaign yet. Make sure the
            Campaign is started and try again later
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /changes:
    get:
      tags:
        - Change History
      summary: Retrieve changes for a project.
      description: Get a list of changes for a given project using optional filters.
      operationId: list_change_history
      parameters:
        - name: project_id
          in: query
          description: ID of the Project you want to list changes for.
          required: true
          schema:
            type: integer
            # format: int32
        - name: id
          in: query
          description: >-
            A specific Change ID to filter by. Can be specified multiple times
            to include multiple specific changes.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              # format: int32
        - name: start_time
          in: query
          description: >-
            Start of the time interval (inclusive) to list changes. The time is
            formatted in ISO 8601.
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: >-
            End of the time interval (exclusive) to look for changes. The time
            is formatted in ISO 8601.
          schema:
            type: string
            format: date-time
        - name: user
          in: query
          description: >-
            Email of the user who made the change. Can be specified multiple
            times to include changes from multiple users.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: entity_type
          in: query
          description: >-
            The type of the entity (with optional subtype delimited by a :
            (colon) you want to list changes for) e.g. experiment or
            experiment:feature. Can be specified multiple times to include
            changes for multiple entity types.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: entity
          in: query
          description: >-
            Colon (:) delimited string containing the entity_type and entity_id
            of the entity wanted. e.g. experiment:123. Can be specified multiple
            times to filter changes to a specific set of entities.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Returns changes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeHistoryChange'
  /collaborators: {}
  /environments:
    get:
      tags:
        - Environments
      summary: Get Environments by Project
      description: >-
        (BETA) Get all of the Environments that have been created in a given
        Project
      operationId: list_environments
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: The ID of the project for which you would like to get Environments
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all Environments in a specified Project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access to the Environments in the
            specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
    post:
      tags:
        - Environments
      summary: Create an Environment
      description: (BETA) Create an Environment in a provided Project
      operationId: create_environment
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create an
          Environment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        '201':
          description: Return the created Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to create an Environment in the specified
            Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
      x-codegen-request-body-name: body
  /environments/{environment_id}:
    get:
      tags:
        - Environments
      summary: Read an Environment
      description: (BETA) Get all the properties of a single Environment
      operationId: get_environment
      parameters:
        - name: environment_id
          in: path
          description: The unique identifier for the Environment
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Successfully retrieved the Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access specified Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
    delete:
      tags:
        - Environments
      summary: Archive an Environment
      description: (BETA) Archive an Environment
      operationId: delete_environment
      parameters:
        - name: environment_id
          in: path
          description: The ID of the Environment you'd like to archive
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully archived the Environment
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to archive this Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Invalid Environment ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
    patch:
      tags:
        - Environments
      summary: Update an Environment
      description: (BETA) Update an Environment by ID
      operationId: update_environment
      parameters:
        - name: environment_id
          in: path
          description: The unique identifier for the Environment
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an Environment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated the Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update specified Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
      x-codegen-request-body-name: body
  /environments/{environment_id}/datafile:
    get:
      tags:
        - Environments
      summary: Read the datafile of an Environment
      description: >
        Get the datafile for an Environment.

        The <a
        href="https://docs.developers.optimizely.com/full-stack/docs/example-datafile">Datafile</a>
        is a JSON

        string that describes to the Full Stack SDK all the experiments and
        features running in a given environment and

        dependent entities like audiences and attributes. Normally, you won't
        need to interact

        with the datafile directly. The SDK exposes methods that operate on it
        internally.
      operationId: get_datafile
      parameters:
        - name: environment_id
          in: path
          description: The Environment ID for the datafile you want to get.
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Datafile for the Environment specified
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access specified Environment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events:
    get:
      tags:
        - Events
      summary: List all Events
      description: >-
        Get all Events for a Project. This endpoint lists all types of Events
        including Pageview Events which are stored as Pages. You can also get
        Goal objects from Optimizely Classic by setting the include_classic
        parameter to true.
      operationId: list_events
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: The ID of the Project you would like to list all Events for
          required: true
          schema:
            type: integer
            # format: int32
        - name: include_classic
          in: query
          description: >-
            Whether or not to include classic Events in the list of Events. If
            this parameter is not provided it will default to false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of Events for the supplied Project ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to Events in the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events/{event_id}:
    get:
      tags:
        - Events
      summary: Get Event by ID
      description: Get Event by ID
      operationId: get_event
      parameters:
        - name: event_id
          in: path
          description: The Event ID of the Event you want to get
          required: true
          schema:
            type: integer
            # format: int32
        - name: include_classic
          in: query
          description: >-
            Whether or not to return a classic Event if the specified event_id
            belongs to a classic Event. If this parameter is not provided it
            will default to false
          schema:
            type: boolean
      responses:
        '200':
          description: Return Event specified by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access specified Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /experiment_summaries: {}
  /experiments:
    get:
      tags:
        - Experiments
      summary: List Experiments
      description: >-
        Get a list of all the Experiments by Project or Campaign. Either the
        <code>project_id</code> or <code>campaign_id</code> query parameter is
        required.
      operationId: list_experiments
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: >-
            The Project ID of the Project you would like to list all Experiments
            for. You have to either use this argument or the campaign_id
            argument
          schema:
            type: integer
            # format: int32
        - name: campaign_id
          in: query
          description: >-
            The Campaign ID of the Campaign you would like to list all
            Experiments for. You have to either use this argument or the
            project_id argument
          schema:
            type: integer
            # format: int32
        - name: include_classic
          in: query
          description: >-
            Whether or not to include classic Experiments in the list of
            Experiments. If this parameter is not provided it will default to
            false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Return all Experiments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experiment'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have access to Experiments under the specified Project or
            Campaign
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Experiments
      summary: Create an Experiment
      description: Create an Experiment in a Project
      operationId: create_experiment
      parameters:
        - name: action
          in: query
          description: >-
            Action to change the state of the experiment. `publish` saves and
            stages your experiment. If you have not started your experiment or
            the experiment is paused, your changes will not be visible to
            visitors when you publish. `start` makes your experiment live to all
            visitors who are in your targeted audience and changes the status to
            `running`. `pause` stops the experiment and changes the status to
            `paused`. No new visitors will see a `paused` experiment until you
            restart it. See [Differences among publish, start, and
            pause](https://help.optimizely.com/Get_Started/Differences_among_publish%2C_start%2C_and_pause)
            for details.
          schema:
            type: string
            enum:
              - publish
              - start
              - pause
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create an
          Experiment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        '201':
          description: Return the created Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /experiments/{experiment_id}:
    get:
      tags:
        - Experiments
      summary: Read an Experiment
      description: Get metadata for a single Experiment
      operationId: get_experiment
      parameters:
        - name: experiment_id
          in: path
          description: The Experiment ID of the Experiment you want to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Experiment info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Experiments
      summary: Delete an Experiment
      description: Delete Experiment by ID
      operationId: delete_experiment
      parameters:
        - name: experiment_id
          in: path
          description: The Experiment ID of the Experiment you want to delete
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Deleted Experiment successfully
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to delete the specified Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Experiment already deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Experiments
      summary: Update an Experiment
      description: Update an Experiment by ID
      operationId: update_experiment
      parameters:
        - name: experiment_id
          in: path
          description: The Experiment ID of the Experiment you want to change
          required: true
          schema:
            type: integer
            # format: int32
        - name: action
          in: query
          description: >-
            Action to change the state of the experiment. `publish` saves and
            stages your experiment. If you have not started your experiment or
            the experiment is paused, your changes will not be visible to
            visitors when you publish. `start` makes your experiment live to all
            visitors who are in your targeted audience and changes the status to
            `running`. `pause` stops the experiment and changes the status to
            `paused`. No new visitors will see a `paused` experiment until you
            restart it. See [Differences among publish, start, and
            pause](https://help.optimizely.com/Get_Started/Differences_among_publish%2C_start%2C_and_pause)
            for details. `resume` resumes the experiment from a paused status
            without publishing any new changes. Status will be `running`.
            `unarchive` unarchives an archived experiment. Status will be
            `paused`.
          schema:
            type: string
            enum:
              - publish
              - start
              - pause
              - resume
              - unarchive
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an Experiment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update the specified Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: >-
            Experiment edit conflict: there are changes currently drafted on the
            Experiment. Provide "override_changes" parameter to force an update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /experiments/{experiment_id}/results:
    get:
      tags:
        - Experiments
      summary: Get Experiment results
      description: Get results for a single Experiment
      operationId: get_experiment_results
      parameters:
        - name: experiment_id
          in: path
          description: The ID for the Experiment you want results for
          required: true
          schema:
            type: integer
            # format: int32
        - name: baseline_variation_id
          in: query
          description: >-
            The ID of the variation to use as the baseline to compare against
            other variations. Defaults to the first variation if not provided.
            For an experience in a personalization campaign, the value can also
            be the string 'holdback'.
          schema:
            type: string
            # format: int32
        - name: start_time
          in: query
          description: >-
            The start time of the time interval (beginning time included) used
            to calculate the results over. If unspecified, defaults to the time
            that the Experiment was first activated. The start time will be
            rounded the smallest time modulo 5 minutes larger or equal to
            start_time.
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: >-
            The end of the time interval (end time excluded) used to calculate
            results over. If unspecified, defaults to the current time if the
            Experiment is still running, otherwise defaults to the time the
            experiment was last active. The end time will be rounded to the
            largest time modulo 5 minutes smaller or equal to end_time. The
            end_time in the response may be earlier than requested if fresher
            results are not available yet. In this case, the results will
            continue to calculate in the background and subsequent requests will
            eventually return the full results.
          schema:
            type: string
            format: date-time
        - name: browser
          in: query
          description: >-
            Browser to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [device,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - firefox
              - chrome
              - internet_explorer
              - opera
              - safari
        - name: device
          in: query
          description: >-
            Device to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - desktop
              - ipad
              - iphone
              - mobile
              - tablet
        - name: source
          in: query
          description: >
            Source to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            device, attribute_id, attribute_value].

            Campaign: Contains users that arrive on a URL containing a
            'utm_campaign,' 'utm_source,' 'gclid,' or 'otm_source' query
            parameter. If the URL contains one of these parameters, the visitor
            will count as "Campaign" traffic even if they arrived through
            search.

            Direct:  Includes all users who do not have any external referrer in
            their URL.

            Referral: Includes all users that come from another URL that doesn't
            count as Campaign.
          schema:
            type: string
            enum:
              - campaign
              - direct
              - referral
              - search
        - name: attribute_id
          in: query
          description: >
            ID of the attribute to segment results by. Requests containing
            attribute_id will return the results for all visitors that have
            attribute_value for the attribute represented by attribute_id. If
            present, the attribute_value parameter must also be present, and it
            cannot be sent with any other segmentation parameters, i.e. any
            parameters in [browser, device, source].
          schema:
            type: integer
            # format: int32
        - name: attribute_value
          in: query
          description: >
            UTF-8 encoded value correlating to attribute_id. If present, the
            attribute_id parameter must also be present. This parameter also
            requires attribute_id to be set, and cannot be sent with any other
            segmentation parameters, i.e. any parameters in [browser, device,
            source].
          schema:
            type: string
        - name: segment_conditions
          in: query
          description: >
            (BETA) A string representation of a JSON Segment Conditions
            Expression. This parameter can be either URL-escaped stringified
            JSON or Base64-encoded stringified JSON using URL-safe alphabet
            (preferred).

            Segment Conditions Expressions consist of Logical Expressions and
            Match Expressions.

            Logical Expressions are represented as an array of the format
            [<operator>, <expression>...], where the supported operators are
            "and", "or" and "not".

            Match Expressions are represented as an object of the format
            {"attribute_id": <attribute_id>, "attribute_value": <value>[,
            "match_type": <match_type>]}, where supported values for match_type
            are "exact" match type will match only an exact string match between
            "value" string and the attribute value. "substring" match type will
            match if "value" is a substring of the attribute value. "prefix"
            match type will match if "value" is a string prefix of the attribute
            value. "regex" match type will match if "value" is a regular
            expression match for the attribute value. The default match_type is
            "exact".
          schema:
            type: string
      responses:
        '200':
          description: Return Experiment results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResults'
        '204':
          description: >-
            There are no results data for this Experiment yet. Make sure the
            Experiment is started and try again later
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /experiments/{experiment_id}/sections:
    get:
      tags:
        - Sections
      summary: Read all the Sections in a Multivariate Test
      description: (BETA) Get a list of all Sections in a Multivariate Test
      operationId: get_experiment_sections
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: experiment_id
          in: path
          description: >-
            The Experiment ID of the Multivariate Test you want to get Sections
            for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Sections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
    post:
      tags:
        - Sections
      summary: Create a new Section in a Multivariate Test
      description: >-
        (BETA) Add a new Section to the Multivariate Test specified by
        `experiment_id`
      operationId: create_section
      parameters:
        - name: experiment_id
          in: path
          description: >-
            The Experiment ID of the Multivariate Test you want to create a
            Section in
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a
          Section
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      responses:
        '201':
          description: Section Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to create a Section in the specified
            Experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
      x-codegen-request-body-name: body
  /experiments/{experiment_id}/sections/{section_id}:
    get:
      tags:
        - Sections
      summary: Read a Section of a Multivariate Test
      description: (BETA) Get metadata for a single Multivariate Test Section
      operationId: get_section
      parameters:
        - name: section_id
          in: path
          description: The ID of the Section you want to read
          required: true
          schema:
            type: integer
            # format: int32
        - name: experiment_id
          in: path
          description: The ID of the Multivariate Test the requested Section is part of
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return Section info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Section or Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
    delete:
      tags:
        - Sections
      summary: Archive a Section by ID
      description: (BETA) Archive a Section by ID within the specified Multivariate Test
      operationId: delete_section
      parameters:
        - name: section_id
          in: path
          description: >-
            The ID of the Section you want to archive within the given
            Experiment
          required: true
          schema:
            type: integer
            # format: int32
        - name: experiment_id
          in: path
          description: The ID of the Multivariate Test the requested Section is part of
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successfully archived Section
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
    patch:
      tags:
        - Sections
      summary: Update a Section by ID
      description: (BETA) Update a Section by ID within the specified Multivariate Test
      operationId: update_section
      parameters:
        - name: section_id
          in: path
          description: The ID of the Section you want to update
          required: true
          schema:
            type: integer
            # format: int32
        - name: experiment_id
          in: path
          description: The ID of the Multivariate Test the requested Section is part of
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a
          Section
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated Section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Section or Experiment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
      x-codegen-request-body-name: body
  /experiments/{experiment_id}/timeseries:
    get:
      tags:
        - Experiments
      summary: Get Experiment results time series
      description: (BETA) Get results time series for a single Experiment
      operationId: get_experiment_timeseries
      parameters:
        - name: experiment_id
          in: path
          description: The ID for the Experiment you want results for
          required: true
          schema:
            type: integer
            # format: int32
        - name: baseline_variation_id
          in: query
          description: >-
            The ID of the variation to use as the baseline to compare against
            other variations. Defaults to the first variation if not provided.
            For an experience in a personalization campaign, the value can also
            be the string 'holdback'.
          schema:
            type: string
            # format: int32
        - name: start_time
          in: query
          description: >-
            The start time of the time interval (beginning time included) used
            to calculate the results over. If unspecified, defaults to the time
            that the Experiment was first activated. The start time will be
            rounded the smallest time modulo 5 minutes larger or equal to
            start_time.
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: >-
            The end of the time interval (end time excluded) used to calculate
            results over. If unspecified, defaults to the current time if the
            Experiment is still running, otherwise defaults to the time the
            experiment was last active. The end time will be rounded to the
            largest time modulo 5 minutes smaller or equal to end_time. The
            end_time in the response may be earlier than requested if fresher
            results are not available yet. In this case, the results will
            continue to calculate in the background and subsequent requests will
            eventually return the full results.
          schema:
            type: string
            format: date-time
        - name: browser
          in: query
          description: >-
            Browser to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [device,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - firefox
              - chrome
              - internet_explorer
              - opera
              - safari
        - name: device
          in: query
          description: >-
            Device to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - desktop
              - ipad
              - iphone
              - mobile
              - tablet
        - name: source
          in: query
          description: >
            Source to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            device, attribute_id, attribute_value].

            Campaign: Contains users that arrive on a URL containing a
            'utm_campaign,' 'utm_source,' 'gclid,' or 'otm_source' query
            parameter. If the URL contains one of these parameters, the visitor
            will count as "Campaign" traffic even if they arrived through
            search.

            Direct:  Includes all users who do not have any external referrer in
            their URL.

            Referral: Includes all users that come from another URL that doesn't
            count as Campaign.
          schema:
            type: string
            enum:
              - campaign
              - direct
              - referral
              - search
        - name: attribute_id
          in: query
          description: >
            ID of the attribute to segment results by. Requests containing
            attribute_id will return the results for all visitors that have
            attribute_value for the attribute represented by attribute_id. If
            present, the attribute_value parameter must also be present, and it
            cannot be sent with any other segmentation parameters, i.e. any
            parameters in [browser, device, source].
          schema:
            type: integer
            # format: int32
        - name: attribute_value
          in: query
          description: >
            UTF-8 encoded value correlating to attribute_id. If present, the
            attribute_id parameter must also be present. This parameter also
            requires attribute_id to be set, and cannot be sent with any other
            segmentation parameters, i.e. any parameters in [browser, device,
            source].
          schema:
            type: string
        - name: segment_conditions
          in: query
          description: >
            (BETA) A string representation of a JSON Segment Conditions
            Expression. This parameter can be either URL-escaped stringified
            JSON or Base64-encoded stringified JSON using URL-safe alphabet
            (preferred).

            Segment Conditions Expressions consist of Logical Expressions and
            Match Expressions.

            Logical Expressions are represented as an array of the format
            [<operator>, <expression>...], where the supported operators are
            "and", "or" and "not".

            Match Expressions are represented as an object of the format
            {"attribute_id": <attribute_id>, "attribute_value": <value>[,
            "match_type": <match_type>]}, where supported values for match_type
            are "exact" match type will match only an exact string match between
            "value" string and the attribute value. "substring" match type will
            match if "value" is a substring of the attribute value. "prefix"
            match type will match if "value" is a string prefix of the attribute
            value. "regex" match type will match if "value" is a regular
            expression match for the attribute value. The default match_type is
            "exact".
          schema:
            type: string
      responses:
        '200':
          description: Return Experiment results time series
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentTimeseries'
        '204':
          description: >-
            There are no results data for this Experiment yet. Make sure the
            Experiment is started and try again later
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
  /export/campaigns/{campaign_id}/results/csv:
    get:
      tags:
        - Campaigns
      summary: Get Campaign results as a CSV
      description: (BETA) Get results for a Campaign as a CSV
      operationId: get_campaign_results_csv
      parameters:
        - name: campaign_id
          in: path
          description: The ID for the Campaign you want results for
          required: true
          schema:
            type: integer
            # format: int32
        - name: start_time
          in: query
          description: >-
            The start time of the time interval (beginning time included) used
            to calculate the results over. If unspecified, defaults to the time
            that the Campaign was first activated. The start time will be
            rounded the smallest time modulo 5 minutes larger or equal to
            start_time.
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: >-
            The end of the time interval (end time excluded) used to calculate
            results over. If unspecified, defaults to the current time if the
            Experiment is still running, otherwise defaults to the time the
            experiment was last active. The end time will be rounded to the
            largest time modulo 5 minutes smaller or equal to end_time. The
            end_time in the response may be earlier than requested if fresher
            results are not available yet. In this case, the results will
            continue to calculate in the background and subsequent requests will
            eventually return the full results.
          schema:
            type: string
            format: date-time
        - name: browser
          in: query
          description: >-
            Browser to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [device,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - firefox
              - chrome
              - internet_explorer
              - opera
              - safari
        - name: device
          in: query
          description: >-
            Device to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - desktop
              - ipad
              - iphone
              - mobile
              - tablet
        - name: source
          in: query
          description: >
            Source to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            device, attribute_id, attribute_value].

            Campaign: Contains users that arrive on a URL containing a
            'utm_campaign,' 'utm_source,' 'gclid,' or 'otm_source' query
            parameter. If the URL contains one of these parameters, the visitor
            will count as "Campaign" traffic even if they arrived through
            search.

            Direct:  Includes all users who do not have any external referrer in
            their URL.

            Referral: Includes all users that come from another URL that doesn't
            count as Campaign.
          schema:
            type: string
            enum:
              - campaign
              - direct
              - referral
              - search
        - name: attribute_id
          in: query
          description: >
            ID of the attribute to segment results by. Requests containing
            attribute_id will return the results for all visitors that have
            attribute_value for the attribute represented by attribute_id. If
            present, the attribute_value parameter must also be present, and it
            cannot be sent with any other segmentation parameters, i.e. any
            parameters in [browser, device, source].
          schema:
            type: integer
            # format: int32
        - name: attribute_value
          in: query
          description: >
            UTF-8 encoded value correlating to attribute_id. If present, the
            attribute_id parameter must also be present. This parameter also
            requires attribute_id to be set, and cannot be sent with any other
            segmentation parameters, i.e. any parameters in [browser, device,
            source].
          schema:
            type: string
        - name: segment_conditions
          in: query
          description: >
            (BETA) A string representation of a JSON Segment Conditions
            Expression. This parameter can be either URL-escaped stringified
            JSON or Base64-encoded stringified JSON using URL-safe alphabet
            (preferred).

            Segment Conditions Expressions consist of Logical Expressions and
            Match Expressions.

            Logical Expressions are represented as an array of the format
            [<operator>, <expression>...], where the supported operators are
            "and", "or" and "not".

            Match Expressions are represented as an object of the format
            {"attribute_id": <attribute_id>, "attribute_value": <value>[,
            "match_type": <match_type>]}, where supported values for match_type
            are "exact" match type will match only an exact string match between
            "value" string and the attribute value. "substring" match type will
            match if "value" is a substring of the attribute value. "prefix"
            match type will match if "value" is a string prefix of the attribute
            value. "regex" match type will match if "value" is a regular
            expression match for the attribute value. The default match_type is
            "exact".
          schema:
            type: string
      responses:
        '200':
          description: >-
            <p>Return Campaign results in CSV format</p> <p>Name of the columns
            returned: 'Start Time (UTC)', 'End Time (UTC)', 'Is Baseline
            Variation', 'Metric Event Name', 'Metric Event ID', 'Metric
            Numerator Type', 'Metric Denominator Type', 'Metric Winning
            Direction', 'Numerator Value', 'Denominator Value', 'Metric Value',
            'Improvement Status from Baseline', 'Improvement Value from
            Baseline', 'Statistical Significance', 'Is Improvement Significant',
            'Confidence Interval - Low', 'Confidence Interval - High', 'Samples
            Remaining to Significance'</p> <p>(<a
            href="https://help.optimizely.com/Export_to_CSV_column_reference_for_campaigns_and_experiments">Column
            reference guide for CSV export</a>)</p>
          content: {}
        '204':
          description: >-
            There are no results data for this Campaign yet. Make sure the
            Campaign is started and try again later.
          content: {}
        default:
          description: Unexpected error
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
  /export/credentials:
    get:
      tags:
        - Export Credentials
      summary: Get aws credentials to access enriched events dataset
      description: Get aws credentials to access & export enriched events dataset
      operationId: get_enriched_events_export_credentials
      parameters:
        - name: duration
          in: query
          description: >-
            Duration of the aws credentials token. Please use [H,h] for hours or
            [M,m] for minutes. Minimum is 15m and Maximum is 1h. Usage 1h.
          schema:
            type: string
            default: 1h
      responses:
        '200':
          description: Return aws credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E3Credentials'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid/Expired credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /export/experiments/{experiment_id}/results/csv:
    get:
      tags:
        - Experiments
      summary: Get Experiment results as a CSV
      description: (BETA) Get results for a single Experiment as a CSV
      operationId: get_experiment_results_csv
      parameters:
        - name: experiment_id
          in: path
          description: The ID for the Experiment you want results for
          required: true
          schema:
            type: integer
            # format: int32
        - name: baseline_variation_id
          in: query
          description: >-
            The ID of the variation to use as the baseline to compare against
            other variations. Defaults to the first variation if not provided.
            For an experience in a personalization campaign, the value can also
            be the string 'holdback'.
          schema:
            type: string
        - name: start_time
          in: query
          description: >-
            The start time of the time interval (beginning time included) used
            to calculate the results over. If unspecified, defaults to the time
            that the Experiment was first activated. The start time will be
            rounded the smallest time modulo 5 minutes larger or equal to
            start_time.
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: >-
            The end of the time interval (end time excluded) used to calculate
            results over. If unspecified, defaults to the current time if the
            Experiment is still running, otherwise defaults to the time the
            experiment was last active. The end time will be rounded to the
            largest time modulo 5 minutes smaller or equal to end_time. The
            end_time in the response may be earlier than requested if fresher
            results are not available yet. In this case, the results will
            continue to calculate in the background and subsequent requests will
            eventually return the full results.
          schema:
            type: string
            format: date-time
        - name: browser
          in: query
          description: >-
            Browser to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [device,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - firefox
              - chrome
              - internet_explorer
              - opera
              - safari
        - name: device
          in: query
          description: >-
            Device to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            source, attribute_id, attribute_value].
          schema:
            type: string
            enum:
              - desktop
              - ipad
              - iphone
              - mobile
              - tablet
        - name: source
          in: query
          description: >
            Source to segment results by. This parameter must not be sent with
            any other segmentation parameters, i.e. any parameters in [browser,
            device, attribute_id, attribute_value].

            Campaign: Contains users that arrive on a URL containing a
            'utm_campaign,' 'utm_source,' 'gclid,' or 'otm_source' query
            parameter. If the URL contains one of these parameters, the visitor
            will count as "Campaign" traffic even if they arrived through
            search.

            Direct:  Includes all users who do not have any external referrer in
            their URL.

            Referral: Includes all users that come from another URL that doesn't
            count as Campaign.
          schema:
            type: string
            enum:
              - campaign
              - direct
              - referral
              - search
        - name: attribute_id
          in: query
          description: >
            ID of the attribute to segment results by. Requests containing
            attribute_id will return the results for all visitors that have
            attribute_value for the attribute represented by attribute_id. If
            present, the attribute_value parameter must also be present, and it
            cannot be sent with any other segmentation parameters, i.e. any
            parameters in [browser, device, source].
          schema:
            type: integer
            # format: int32
        - name: attribute_value
          in: query
          description: >
            UTF-8 encoded value correlating to attribute_id. If present, the
            attribute_id parameter must also be present. This parameter also
            requires attribute_id to be set, and cannot be sent with any other
            segmentation parameters, i.e. any parameters in [browser, device,
            source].
          schema:
            type: string
        - name: segment_conditions
          in: query
          description: >
            (BETA) A string representation of a JSON Segment Conditions
            Expression. This parameter can be either URL-escaped stringified
            JSON or Base64-encoded stringified JSON using URL-safe alphabet
            (preferred).

            Segment Conditions Expressions consist of Logical Expressions and
            Match Expressions.

            Logical Expressions are represented as an array of the format
            [<operator>, <expression>...], where the supported operators are
            "and", "or" and "not".

            Match Expressions are represented as an object of the format
            {"attribute_id": <attribute_id>, "attribute_value": <value>[,
            "match_type": <match_type>]}, where supported values for match_type
            are "exact" match type will match only an exact string match between
            "value" string and the attribute value. "substring" match type will
            match if "value" is a substring of the attribute value. "prefix"
            match type will match if "value" is a string prefix of the attribute
            value. "regex" match type will match if "value" is a regular
            expression match for the attribute value. The default match_type is
            "exact".
          schema:
            type: string
      responses:
        '200':
          description: >-
            <p>Return Experiment results in CSV format</p> <p>Name of the
            columns returned: 'Start time (UTC)', 'End time (UTC)', 'Variation
            Name', 'Variation ID', 'Is Baseline Variation', 'Metric Event Name',
            'Metric Event ID', 'Metric Numerator Type', 'Metric Denominator
            Type', 'Metric Winning Direction', 'Numerator Value', 'Denominator
            Value', 'Metric Value', 'Improvement Status from Baseline',
            'Improvement Value from Baseline', 'Statistical Significance', 'Is
            Improvement Significant', 'Confidence Interval - Low', 'Confidence
            Interval - High', 'Samples Remaining to Significance'</p> <p>(<a
            href="https://help.optimizely.com/Export_to_CSV_column_reference_for_campaigns_and_experiments">Column
            reference guide for CSV export</a>)</p>
          content: {}
        '204':
          description: >-
            There are no results data for this Experiment yet. Make sure the
            Experiment is started and try again later
          content: {}
        default:
          description: Unexpected error
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
  /extensions:
    get:
      tags:
        - Extensions
      summary: List Extensions
      description: List Extensions under a project
      operationId: list_extensions
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: The ID of the project you would like to list all extensions for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all extensions in the specified project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Extension'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access the extensions in the specified
            project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Extensions not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Extensions
      summary: Create an Extension
      description: Create a new Extension in a provided project
      operationId: create_extension
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create an
          extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extension'
        required: true
      responses:
        '201':
          description: Return the created extension
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to create an extension under the
            specified project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /extensions/{extension_id}:
    get:
      tags:
        - Extensions
      summary: Get an Extension
      description: Get an Extension by ID
      operationId: get_extension
      parameters:
        - name: extension_id
          in: path
          description: The ID of the extension you'd like to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return extension info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Extension
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Extension not found or invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Extensions
      summary: Archive an Extension
      description: Archive an Extension by ID
      operationId: delete_extension
      parameters:
        - name: extension_id
          in: path
          description: The ID of the extension you'd like to archive
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully archived extension
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to archive the specified extension
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Extension not found
          content: {}
    patch:
      tags:
        - Extensions
      summary: Update an Extension
      description: Update an Extension
      operationId: update_extension
      parameters:
        - name: extension_id
          in: path
          description: The extension ID of the extension you want to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionUpdate'
        required: true
      responses:
        '200':
          description: Return the updated extension
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to edit the specified extension
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Extension not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /features:
    get:
      tags:
        - Features
      summary: Get Features by Project
      description: >
        Get all of the Features that have been created in a given Project. Note
        this endpoint is incompatible with Full Stack Targeted Rollouts
        projects 

        (default in accounts created after July 2020) and with non-legacy Full
        Stack projects (default in projects created after February 2021).

        See the compatible API at
        https://library.optimizely.com/docs/api/flags/v1/index.html#tag/Flags.
      operationId: list_features
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: The ID of the project for which you would like to get Features
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all Features in a specified Project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access to the Features in the
            specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Features
      summary: Create a Feature
      description: Create a Feature
      operationId: create_feature
      requestBody:
        description: >
          A string in JSON format that includes all the fields to create a new
          Feature. Note this endpoint is incompatible with Full Stack Targeted
          Rollouts projects 

          (default in accounts created after July 2020) and with non-legacy Full
          Stack projects (default in projects created after February 2021).

          See the compatible API at
          https://library.optimizely.com/docs/api/flags/v1/index.html#tag/Flags.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      responses:
        '201':
          description: Successfully created the Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /features/{feature_id}:
    get:
      tags:
        - Features
      summary: Read a Feature
      description: >
        Get metadata for a single Feature. Note this endpoint is incompatible
        with Full Stack Targeted Rollouts projects 

        (default in accounts created after July 2020) and with non-legacy Full
        Stack projects (default in projects created after February 2021).

        See the compatible API at
        https://library.optimizely.com/docs/api/flags/v1/index.html#tag/Flags.      
      operationId: get_feature
      parameters:
        - name: feature_id
          in: path
          description: The unique identifier for the Feature
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Successfully retrieved the Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access specified Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Features
      summary: Archive a Feature
      description: Archive a Feature
      operationId: delete_feature
      parameters:
        - name: feature_id
          in: path
          description: The ID of the Feature you'd like to archive
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully archived the Feature
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to archive this Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Invalid Feature ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Features
      summary: Update a Feature
      description: Update a Feature by ID
      operationId: update_feature
      parameters:
        - name: feature_id
          in: path
          description: The unique identifier for the Feature
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for a Feature
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated the Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update specified Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Feature not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /groups:
    get:
      tags:
        - Groups
      summary: List Exclusion Groups
      description: List Exclusion Groups under a Project
      operationId: list_groups
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: >-
            The ID of the Project you would like to list all Exclusion Groups
            for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all Exclusion Groups in the specified Project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access the Exclusion Groups in the
            specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Exclusion Groups not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Groups
      summary: Create an Exclusion Group
      description: Create a new Exclusion Group in a provided project
      operationId: create_group
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create an
          Exclusion Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '201':
          description: Return the created Exclusion Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to create an Exclusion Group under the
            specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /groups/{group_id}:
    get:
      tags:
        - Groups
      summary: Get an Exclusion Group
      description: Get an Exclusion Group by ID
      operationId: get_group
      parameters:
        - name: group_id
          in: path
          description: The ID of the Exclusion Group you'd like to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Exclusion Group info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Exclusion Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Exclusion Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Groups
      summary: Archive an Exclusion Group
      description: Archive an Exclusion Group by ID
      operationId: delete_group
      parameters:
        - name: group_id
          in: path
          description: The ID of the Exclusion Group you'd like to archive
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully archived Exclusion Group
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to archive the specified Exclusion Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Exclusion Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Groups
      summary: Update an Exclusion Group
      description: Update an Exclusion Group
      operationId: update_group
      parameters:
        - name: group_id
          in: path
          description: The group ID of the Exclusion Group you want to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an Exclusion Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
        required: true
      responses:
        '200':
          description: Return the updated Exclusion Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Invalid ID or request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to edit the specified Exclusion Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Experimentation Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /list_attributes:
    get:
      tags:
        - List Attributes
      summary: Get list attributes by project
      description: >-
        Get all of the List Attributes that have been created in a given
        project.
      operationId: list_list_attributes
      parameters:
        - name: project_id
          in: query
          description: >-
            The ID of the project for which you would like to get List
            Attributes
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return all List Attributes in the specified Project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListAttribute'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access to the List Attributes in the
            specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: List Attributes not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - List Attributes
      summary: Create a List Attribute
      description: >-
        Create a List Attribue with provided `name`, `list_type` and
        `key_field`. Fields `description` and `list_content` are optional.
      operationId: create_list_attribute
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a new
          List Attribute
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAttribute'
        required: true
      responses:
        '201':
          description: Successfully created the List Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttribute'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /list_attributes/{list_attribute_id}:
    get:
      tags:
        - List Attributes
      summary: Read a List Attribute
      description: Get metadata for a single List Attribute.
      operationId: get_list_attribute
      parameters:
        - name: list_attribute_id
          in: path
          description: the unique identifier for the List Attribute
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Successfully retrieved List Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttribute'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access specified List Attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: List Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - List Attributes
      summary: Archive a List Attribute
      description: Archive List Attribute by ID
      operationId: archive_list_attribute
      parameters:
        - name: list_attribute_id
          in: path
          description: The ID of the List Attribute you'd like to archive
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully archived List Attribute
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to archive the specified List Attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: List Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - List Attributes
      summary: Update a List Attribute
      description: >-
        Overwrite the List Attribute with the provided id. Required arguments
        are identical to creating a new List Attribute.
      operationId: update_list_attribute
      parameters:
        - name: list_attribute_id
          in: path
          description: The ID of the List Attribute you'd like to update
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for a List Attribute
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAttributeUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated the List Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttribute'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update the specified List Attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: List Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /me: {}
  /pages:
    get:
      tags:
        - Pages
      summary: List Pages
      description: List all Pages for a Project
      operationId: list_pages
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
        - name: project_id
          in: query
          description: The Project ID of the Project you would like to list all Pages for
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Project Pages info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified pages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Pages not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Pages
      summary: Create a Page
      description: Create a new Page in a provided Project
      operationId: create_page
      requestBody:
        description: A string in JSON format that includes all the fields to create a Page
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
        required: true
      responses:
        '201':
          description: Return the created Page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /pages/{page_id}:
    get:
      tags:
        - Pages
      summary: Read a page
      description: Get metadata for a single Page.
      operationId: get_page
      parameters:
        - name: page_id
          in: path
          description: The Page ID of the Page you want to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Page info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Pages
      summary: Delete a Page
      description: Delete a Page within a Project by ID
      operationId: delete_page
      parameters:
        - name: page_id
          in: path
          description: The Page ID of the Page you want to delete
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully deleted the Page
          content: {}
        '400':
          description: Invalid Page ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to delete the specified Page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Page already deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Pages
      summary: Update a Page
      description: Update a Page in a provided Project
      operationId: update_page
      parameters:
        - name: page_id
          in: path
          description: The Page ID of the Page you want to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for a Page
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageUpdate'
        required: true
      responses:
        '200':
          description: Return the updated Page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          description: Invalid Page ID or request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update the specified Page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /pages/{page_id}/events:
    post:
      tags:
        - Events
      summary: Create an In-Page Event
      description: >-
        Create an Event that occurs in the context of a Page, such as measuring
        clicks
      operationId: create_in_page_event
      parameters:
        - name: page_id
          in: path
          description: The Page ID of the Page you want to create an In-Page Event for
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create an
          In-Page Event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPageEvent'
        required: true
      responses:
        '201':
          description: Return the created In-Page event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InPageEvent'
        '400':
          description: Invalid Page ID or request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to add an In-Page event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /pages/{page_id}/events/{event_id}:
    delete:
      tags:
        - Events
      summary: Delete an In-Page Event
      description: Delete an In-Page Event
      operationId: delete_in_page_event
      parameters:
        - name: page_id
          in: path
          description: The Page ID of the In-Page Event you want to delete
          required: true
          schema:
            type: integer
            # format: int32
        - name: event_id
          in: path
          description: The In-Page Event ID of the In-Page Event you want to delete
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully deleted In-Page event
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to delete this In-Page event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Invalid Page ID or Event ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Events
      summary: Update an In-Page Event
      description: >-
        Update an Event that occurs in the context of a Page, such as measuring
        clicks
      operationId: update_in_page_event
      parameters:
        - name: page_id
          in: path
          description: The Page ID of the In-Page Event you want to change
          required: true
          schema:
            type: integer
            # format: int32
        - name: event_id
          in: path
          description: The In-Page Event ID of the In-Page Event you want to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for an In-Page Event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPageEventUpdate'
        required: true
      responses:
        '200':
          description: Successfully updated the In-Page event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InPageEvent'
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to the specified Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /plan:
    get:
      tags:
        - Plan
      summary: Get Plan & Usage information for all products
      description: >-
        (BETA) Get Plan & Usage information for all products, only accessible
        for Administrators on the account
      operationId: get_plan
      responses:
        '200':
          description: Return Plan & Usage information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access Plan & Usage information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-release-state: beta
  /projects:
    get:
      tags:
        - Projects
      summary: List Projects
      description: Get a list of all the Projects in your account, with associated metadata
      operationId: list_projects
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Return all Projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Projects
      summary: Create a Project
      description: Create a new Project in your account
      operationId: create_project
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a
          Project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '201':
          description: Return the created Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /projects/{project_id}:
    get:
      tags:
        - Projects
      summary: Read a Project
      description: Get all the properties of a single Project
      operationId: get_project
      parameters:
        - name: project_id
          in: path
          description: The Project ID of the Project you want to get
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Project info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid Project ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Projects
      summary: Update a Project
      description: Update a Project
      operationId: update_project
      parameters:
        - name: project_id
          in: path
          description: The Project ID of the Project you want to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for a Project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      responses:
        '200':
          description: Return the updated Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid Project ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to update the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /projects/{project_id}/custom_events:
    post:
      tags:
        - Events
      summary: Create a Custom Event
      description: Create a Custom Event in a provided Project
      operationId: create_custom_event
      parameters:
        - name: project_id
          in: path
          description: The Project ID of the Project you want to create an Custom Event in
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields to create a
          Custom Event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEvent'
        required: true
      responses:
        '201':
          description: Return the created Custom Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEvent'
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /projects/{project_id}/custom_events/{event_id}:
    delete:
      tags:
        - Events
      summary: Delete a Custom Event
      description: Delete a Custom Event
      operationId: delete_custom_event
      parameters:
        - name: project_id
          in: path
          description: The project ID of the Project the Custom Event is stored in
          required: true
          schema:
            type: integer
            # format: int32
        - name: event_id
          in: path
          description: The Event ID of the Custom Event you'd like to delete
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '204':
          description: Successfully deleted Custom Event
          content: {}
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to delete this Custom Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Invalid Project ID or Event ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Events
      summary: Update a Custom Event
      description: Update a Custom Event
      operationId: update_custom_event
      parameters:
        - name: project_id
          in: path
          description: The project ID of the Project the Custom Event is stored in
          required: true
          schema:
            type: integer
            # format: int32
        - name: event_id
          in: path
          description: The Event ID of the Custom Event you'd like to change
          required: true
          schema:
            type: integer
            # format: int32
      requestBody:
        description: >-
          A string in JSON format that includes all the fields you'd like to
          change for a Custom Event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEventUpdate'
        required: true
      responses:
        '200':
          description: Return the updated Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEvent'
        '400':
          description: Invalid Project ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have permission to access the specified Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /recommendations/catalogs/{catalog_id}/catalog/{date}:
    get:
      tags:
        - Recommendations
      summary: Download a CSV with all current catalog data
      description: Download a CSV with all current catalog data
      operationId: get_recs_catalog_csv
      parameters:
        - name: date
          in: path
          description: >-
            A string in JSON format that includes all the fields to create a
            Custom Event
          required: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
        - name: catalog_id
          in: path
          description: The Catalog ID of the Catalog you want to download
          required: true
          schema:
            pattern: ^\d+$
            type: string
      responses:
        '200':
          description: Return the CSV with correct headers to force download
          content: {}
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /recommendations/catalogs/{catalog_id}/recommenders/{recommender_id}/{date}:
    get:
      tags:
        - Recommendations
      summary: Download a CSV with all computed recommendations output data
      description: Download a CSV with all computed recommendations output data
      operationId: get_recs_output_csv
      parameters:
        - name: date
          in: path
          description: >-
            A string in JSON format that includes all the fields to create a
            Custom Event
          required: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
        - name: catalog_id
          in: path
          description: The Catalog ID of the Catalog which contains the Recommender
          required: true
          schema:
            pattern: ^\d+$
            type: string
        - name: recommender_id
          in: path
          description: The Recommender ID of the Recommender you want to get output from
          required: true
          schema:
            pattern: ^\d+$
            type: string
      responses:
        '200':
          description: Return the CSV with correct headers to force download
          content: {}
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /recommendations/catalogs/{catalog_id}/stats/{date}:
    get:
      tags:
        - Recommendations
      summary: Download a CSV with summary stats data
      description: Download a CSV with summary stats data
      operationId: get_recs_stats_csv
      parameters:
        - name: date
          in: path
          description: >-
            A string in JSON format that includes all the fields to create a
            Custom Event
          required: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
        - name: catalog_id
          in: path
          description: The Catalog ID of the Catalog you want to download stats for
          required: true
          schema:
            pattern: ^\d+$
            type: string
      responses:
        '200':
          description: Return the CSV with correct headers to force download
          content: {}
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: You do not have access to the specified Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subject-access-requests:
    get:
      tags:
        - Subject Access Requests
      summary: List Subject Access Requests
      description: Fetch Subject Access Requests submitted from your account
      operationId: list_sar_requests_by_account
      parameters:
        - name: per_page
          in: query
          description: >-
            Optional pagination argument that specifies the maximum number of
            objects to return per request
          schema:
            maximum: 100
            type: integer
            default: 25
        - name: page
          in: query
          description: >
            Optional pagination argument that specifies the page to return. If
            you have 140 objects and you choose to return 100 objects per page
            you will be able to access the last 40 objects on page 2. The
            default value is 1.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Return Subject Access Request info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectAccessRequest'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access the specified subject access
            request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subject Access Request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Subject Access Requests
      summary: Create a Subject Access Request
      description: Create a Subject Access Request
      operationId: create_sar_request
      requestBody:
        description: >-
          A JSON string containing the fields needed to create a subject access
          request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectAccessRequest'
        required: true
      responses:
        '201':
          description: Return the created SubjectAccessRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectAccessRequest'
        '400':
          description: Invalid request body content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to create a Subject Access Request for
            the specified account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
  /subject-access-requests/{request_id}:
    get:
      tags:
        - Subject Access Requests
      summary: Get Subject Access Request
      description: Get Subject Access Requests by request id
      operationId: get_sar_request
      parameters:
        - name: request_id
          in: path
          description: The ID of the Subject Access Request
          required: true
          schema:
            type: integer
            # format: int32
      responses:
        '200':
          description: Return Subject Access Request info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectAccessRequest'
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: >-
            You do not have permission to access the specified subject access
            request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subject Access Request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the Account
          # format: int32
          readOnly: true
        name:
          type: string
          description: The name of the Account
          readOnly: true
      x-model: Account
    AccountFeature:
      type: object
      properties:
        feature_id:
          type: string
        sources:
          type: array
          items:
            $ref: '#/components/schemas/AccountFeatureSource'
      x-model: AccountFeature
    AccountFeatureSource:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      x-model: AccountFeatureSource
    Action:
      required:
        - page_id
      type: object
      properties:
        changes:
          type: array
          description: >-
            The list of changes to apply to the Page. If 'dependencies' is
            supplied in a Change within 'changes', each ID in 'dependencies'
            must also be in 'changes'.
          items:
            $ref: '#/components/schemas/Change'
        page_id:
          type: integer
          description: The ID of the Page to apply changes to
          # format: int32
        share_link:
          type: string
          description: The share link for the provided Variation and Page combination
          format: url
          readOnly: true
      x-model: Action
    Attribute:
      required:
        - key
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the Attribute has been archived
          default: false
        condition_type:
          type: string
          description: >-
            Whether this Attribute is a custom dimension or custom attribute. If
            this is a custom dimension, it belongs to an Optimizely Classic
            experiment and is read-only.
          readOnly: true
          default: custom_attribute
          enum:
            - custom_attribute
            - custom_dimension
        description:
          type: string
          description: A short description of the Attribute
        id:
          type: integer
          description: The unique identifier for the Attribute
          # format: int32
          readOnly: true
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\- .]+$
          type: string
          description: Unique string identifier for this Attribute within the project
          example: subscriber_status
        last_modified:
          type: string
          description: The last time the Attribute was modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: >-
            The name of the Attribute. For Full Stack projects, the name will be
            set to the value of the key.
          example: Subscriber Status
        project_id:
          type: integer
          description: The ID of the project the Attribute belongs to
          # format: int32
          example: 17738411154
      x-model: Attribute
    AttributeUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the Attribute has been archived
          default: false
        description:
          type: string
          description: A short description of the Attribute
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\- .]+$
          type: string
          description: Unique string identifier for this Attribute within the project
          example: subscriber_status
        name:
          type: string
          description: The name of the Attribute
          example: Subscriber Status
      x-model: AttributeUpdate
    Audience:
      required:
        - project_id
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the Audience has been archived
          default: false
        conditions:
          type: string
          description: A string defining the targeting rules for an Audience
          example: >-
            ["and", {"type": "language", "value": "es"}, {"type": "location",
            "value": "US-CA-SANFRANCISCO"}]
        created:
          type: string
          description: The time the Audience was initially created
          format: date-time
          readOnly: true
        description:
          type: string
          description: A short description of the Audience
          example: People that speak spanish and are in San Francisco
        id:
          type: integer
          description: The unique identifier for the Audience
          # format: int32
          readOnly: true
          example: 5000
        is_classic:
          type: boolean
          description: >-
            Whether or not Audience is a classic Audience. If true, the Audience
            is only compatible with classic Experiments. Otherwise, the Audience
            may be used in Optimizely X Campaigns.
        last_modified:
          type: string
          description: The last time the Audience was modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: The name of the Audience
          example: Spanish speaking San Franciscans
        project_id:
          type: integer
          description: The ID of the Project the Audience was created in
          # format: int32
          example: 1000
        segmentation:
          type: boolean
          description: >-
            True if the Audience is available for segmentation on the results
            page (Audiences can only be used for segmentation in Optimizely
            Classic). Set to False if you intend to use this Audience only in
            Optimizely X. Note that a maximum of 10 Audiences can have
            segmentation set to True in any given Optimizely Classic project.
          default: false
      x-model: Audience
    AudienceUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: True if the Audience has been archived
        conditions:
          type: string
          description: A string defining the targeting rules for an Audience
        description:
          type: string
          description: A short description of the Audience
        name:
          type: string
          description: The name of the Audience
          example: Spanish speaking San Franciscans
        segmentation:
          type: boolean
          description: >-
            True if the Audience is available for segmentation on the results
            page (Enterprise plans only)
      x-model: AudienceUpdate
    BucketingInformation:
      type: object
      properties:
        account_id:
          type: integer
          description: ID of the Account
          # format: int32
          example: 1000
        bucketing_history:
          type: array
          description: Array of bucketing information items
          items:
            $ref: '#/components/schemas/BucketingInformationItem'
        visitor_id:
          type: string
          description: The unique identifier of the visitor
          format: uuid
          readOnly: true
          example: fa74a14b-1f3a-463d-aa98-2f7124ee6fc3
      x-model: BucketingInformation
    BucketingInformationItem:
      type: object
      properties:
        campaign_id:
          type: integer
          description: The unique identifier of the Campaign
          # format: int32
          example: 2056053765
        experiment_id:
          type: integer
          description: The unique identifier of the Experiment
          # format: int32
          example: 9387397797
        is_holdback:
          type: boolean
          description: Is the visitor bucketed into a variation or a holdback
        timestamp:
          type: integer
          description: The timestamp of the bucketing decision on the client side
          # format: int32
          example: 1545871675000
        variation_id:
          type: integer
          description: The unique identifier of the Variation
          # format: int32
          example: 5042153527
      x-model: BucketingInformationItem
    CSSAttribute:
      type: object
      properties:
        background-color:
          type: string
        background-image:
          type: string
        border-color:
          type: string
        border-style:
          type: string
        border-width:
          type: string
        color:
          type: string
        font-size:
          type: string
        font-weight:
          type: string
        height:
          type: string
        position:
          type: string
        width:
          type: string
      x-model: CSSAttribute
    Campaign:
      required:
        - project_id
      type: object
      properties:
        changes:
          type: array
          description: >-
            A list of changes to apply to the Campaign.  This corresponds to the
            Campaign's Shared Code in the application.  Only supports
            'custom_css' or 'custom_code' type changes.
          items:
            $ref: '#/components/schemas/SharedCodeChange'
        created:
          type: string
          description: The time the Campaign was initially created
          format: date-time
          readOnly: true
        description:
          type: string
          description: The description or goal for a Campaign
          example: Tailor the landing page hero element for specific audiences
        earliest:
          type: string
          description: The first time the Campaign was activated
          format: date-time
          readOnly: true
        experiment_priorities:
          type: array
          description: >-
            A list of lists of Experiment IDs that indicate the relative
            priority of how to show those Experiments in the context of the
            Campaign. Each list inside of the list represents a group of
            Experiments of equal priority where groups that appear earlier in
            the list are of higher priority to be shown.
          items:
            type: array
            items:
              type: integer
              # format: int32
        holdback:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            Percentage of visitors to exclude from personalization, measured in
            basis points. 100 basis points = 1% traffic. For example, a value of
            500 would mean that 95% of visitors will see a personalized
            experience and 5% will see the holdback.
          example: 500
        id:
          type: integer
          description: The unique identifier for the Campaign
          # format: int32
          readOnly: true
          example: 2000
        last_modified:
          type: string
          description: The last time the Campaign was modified
          format: date-time
          readOnly: true
        latest:
          type: string
          description: >-
            The last time the Campaign was paused (not present if the Campaign
            still running)
          format: date-time
          readOnly: true
        metrics:
          type: array
          description: An ordered list of metrics to track for the Campaign
          items:
            $ref: '#/components/schemas/Metric'
        name:
          type: string
          description: The name of the Campaign
          example: Landing Page Optimization
        page_ids:
          type: array
          description: A list of Page IDs used in the Campaign
          items:
            type: integer
            # format: int32
        project_id:
          type: integer
          description: The Project ID the Campaign is in
          # format: int32
          example: 1000
        status:
          type: string
          description: >-
            Current state of the Campaign. not_started means the Campaign has
            never been published to the world. running means the Campaign is
            currently live to the world. paused means the Campaign has been
            published, but is currently not running. archived means the Campaign
            is paused and not visible in the web UI.
          readOnly: true
          enum:
            - not_started
            - running
            - paused
            - archived
        type:
          type: string
          description: >-
            Indicates the type of this campaign. Campaigns created or fetched
            via the API should currently all have a type of `personalization`,
            but if you get a campaign_id for an experiment and look it up, you
            may get an `other` value.
          default: personalization
          enum:
            - personalization
            - other
        url_targeting:
          $ref: '#/components/schemas/URLTargeting'
      x-model: Campaign
    CampaignMetricResults:
      type: object
      properties:
        aggregator:
          type: string
          description: >-
            The aggregation function for the numerator of the metric. 'unique'
            measures the number of unique visitors/sessions that include the
            specified Event. 'count' measures the total number of occurrences of
            Event for the scope (visitor/session). 'sum' is the sum of the
            'field' value
          enum:
            - unique
            - count
            - sum
        event_id:
          type: integer
          description: >-
            The ID for the Event to select data from. Omitted for global metrics
            that are not relative to a specific Event, i.e. "overall revenue"
          # format: int32
        field:
          type: string
          description: >-
            The field to aggregate for the numerator of the metric. Required
            when 'aggregator' = 'sum', otherwise omitted
          enum:
            - revenue
            - value
        name:
          type: string
          description: The name of the Metric
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariantResults'
          description: >-
            A map of results for the variants affected by the Campaign. Variants
            may represent aggregated results scoped to the Campaign and/or
            individual Experiment results scoped to just that Experiment. The
            special variant 'baseline' represents visitors that have been held
            back from any change in experience across all Experiments in the
            Campaign. The special variant 'campaign' represents the aggregated
            effect of all Experiments included in the Campaign.
          x-map-key:
            description: The name of the group or ID of the Experiment
            example: campaign
            type: string
        scope:
          type: string
          description: >-
            Specifies how Events should be grouped together. Can also be thought
            of as the denonimator of the metric. 'session' divides by the number
            of sessions. "Influenced sessions", or sessions that do not contain
            a decision Event but carry a decision from a previous session are
            not included in counts for numerator or denominator. 'visitor'
            divides by the number of visitors. 'event' divides by the total
            occurrences (impressions) of the specified Event
          enum:
            - session
            - visitor
            - event
        winning_direction:
          type: string
          description: The winning direction of this metric
          enum:
            - increasing
            - decreasing
      description: Results specific to an Event
      x-model: CampaignMetricResults
    CampaignResults:
      type: object
      properties:
        campaign_id:
          type: integer
          description: The unique identifier for the Campaign
          # format: int32
        confidence_threshold:
          type: number
          description: >-
            The significance level at which you would like to declare winning
            and losing variations. A lower number minimizes the time needed to
            declare a winning or losing variation, but increases the risk that
            your results aren't true winners and losers.
          format: double
        end_time:
          type: string
          description: >-
            End of the time interval (exclusive) used to calculate the results.
            The time is formatted in ISO 8601.
          format: date-time
        metrics:
          type: array
          description: >-
            The breakdown of Campaign results by metric. CampaignMetricResults
            object ordering in the array is consistent with the order that
            metrics are attached to the Experiment in the Optimizely UI and REST
            API (i.e. index 0 is the primary metric, indices 1-4 are secondary
            metrics, indices 5+ are monitoring metrics). See here for an
            explantion of the impact of metric ordering on results calculations.
          items:
            $ref: '#/components/schemas/CampaignMetricResults'
        start_time:
          type: string
          description: >-
            Start of the time interval (inclusive) used to calculate the
            results. The time is formatted in ISO 8601.
          format: date-time
      x-model: CampaignResults
    CampaignUpdate:
      type: object
      properties:
        changes:
          type: array
          description: A list of changes to apply to the Campaign
          items:
            $ref: '#/components/schemas/SharedCodeChange'
        description:
          type: string
          description: The description or goal for a Campaign
          example: Tailor the landing page hero element for specific audiences
        experiment_priorities:
          type: array
          description: >-
            A list of lists of Experiment IDs that indicate the relative
            priority of how to show those Experiments in the context of the
            Campaign. Each list inside of the list represents a group of
            Experiments of equal priority where groups that appear earlier in
            the list are of higher priority to be shown.
          items:
            type: array
            items:
              type: integer
              # format: int32
        holdback:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            Percentage of visitors to exclude from personalization, measured in
            basis points. 100 basis points = 1% traffic. For example, a value of
            500 would mean that 95% of visitors will see a personalized
            experience and 5% will see the holdback.
          example: 500
        metrics:
          type: array
          description: An ordered list of metrics to track for the Campaign
          items:
            $ref: '#/components/schemas/Metric'
        name:
          type: string
          description: The name of the Campaign
          example: Landing Page Optimization
        page_ids:
          type: array
          description: >-
            A list of Page IDs used in the Campaign.  Only `url_targeting` or
            `page_ids` can be used when updating a Campaign, but not both.
          items:
            type: integer
            # format: int32
        url_targeting:
          $ref: '#/components/schemas/URLTargeting'
      x-model: CampaignUpdate
    Change:
      required:
        - type
      type: object
      properties:
        allow_additional_redirect:
          type: boolean
          description: >-
            Whether or not to allow additional redirects after redirecting to
            destination. Required for changes of type 'redirect'
        async:
          type: boolean
          description: >-
            Indicates whether or not to execute the change asyncronously. If
            true, src will be returned in the response. Otherwise, it will be
            not included.
        attributes:
          $ref: '#/components/schemas/ChangeAttribute'
        config:
          type: object
          properties: {}
          description: Configuration properties for the extension
          example: '{"name": "Flash Sale Today!", "color": "blue"}'
        css:
          $ref: '#/components/schemas/CSSAttribute'
        dependencies:
          type: array
          description: A list of dependent change IDs that must happen before this change
          example:
            - ad1f6acb-78f2-4653-b955-913abd777e16
            - ad20a6dd-2083-4964-8ed2-f0dc7baef687
          items:
            type: string
            format: uuid
        destination:
          type: string
          description: >-
            URL to redirect to. Required for changes of type 'redirect'.
            `destination` and `destination_function` cannot be used at the same
            time
          example: https://app.optimizely.com/
        destination_function:
          type: string
          description: >-
            A function string to redirect to. Required for changes of type
            'redirect'. `destination` and `destination_function` cannot be used
            at the same time
          example: https://app.optimizely.com/
        extension_id:
          type: string
          description: >-
            ID of the extension to insert. Required for changes of type
            'extension'
          readOnly: true
        id:
          type: string
          description: The ID of the change
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the change
          example: Setting button text
        operator:
          type: string
          description: >-
            Where to instert HTML or image for types 'insert_html' and
            'insert_image' with respect to the element(s) matched by 'selector'
          example: after
        preserve_parameters:
          type: boolean
          description: >-
            Whether or not to preserve parameters from original request when
            redirecting to new destination URL. Required for changes of type
            'redirect'. For redirects using `destination_function`,
            `preserve_parameters` must be false.
        rearrange:
          type: object
          properties: {}
          description: >-
            A directive to place the DOM element(s) matched by 'selector' to the
            position of the element matched by 'insertSelector', with the
            relation specified by 'operator'. The supplied example moves element
            matched by 'selector' above the element of class .greyBox
          example: '{"insertSelector": ".greyBox", "operator": "before"}'
        selector:
          type: string
          description: >-
            CSS selector to determine where changes are applied. Required for
            changes of type 'attribute', 'insert_html', and 'insert_image'
          example: a[href*="optimizely"]
        src:
          type: string
          description: >-
            The path to the change payload on the CDN. Only present if 'async'
            is True.
          readOnly: true
        type:
          type: string
          description: >
            The type of this change.

            - Changes of type 'attribute' have required fields 'selector' and
            'attributes'

            - Changes of type 'custom_code' have required field 'value'

            - Changes of type 'custom_css' have required field 'value'

            - Changes of type 'extension' have required field 'extension_id'

            - Changes of type 'insert_html' have required field 'selector'

            - Changes of type 'insert_image' have required field 'selector'

            - Changes of type 'redirect' have required fields 'destination',
            'preserve_parameters', and 'allow_additional_redirect'
          enum:
            - attribute
            - custom_code
            - custom_css
            - extension
            - insert_html
            - insert_image
            - redirect
        value:
          type: string
          description: >-
            The value for the change can be custom Javascript or CSS as a
            string. Required for changes of type 'custom_css' and 'custom_code'
          example: window.someGlobalFunction();
      x-model: Change
    ChangeAttribute:
      type: object
      properties:
        class:
          type: string
          description: Name of the class to set the element(s) matched by a selector to
          example: intro
        hide:
          type: boolean
          description: Whether or not to hide the element(s) matched by a selector
        href:
          type: string
          description: Value of href attribute to add to element(s) matched by a selector
          example: example.com
        html:
          type: string
          description: Value of HTML attribute to add to element(s) matched by a selector
          example: New Title
        remove:
          type: boolean
          description: Whether or not to remove the element(s) matched by a selector
        src:
          type: string
          description: Value of src attribute to add to element(s) matched by a selector
          example: song.mp3
        style:
          type: string
          description: Value of style attribute to add to element(s) matched by a selector
          example: background-color:blue;
        text:
          type: string
          description: >-
            Value of text attribute to add to the element(s) matched by a
            selector
          example: Some nice message
      x-model: ChangeAttribute
    ChangeDetail:
      type: object
      properties:
        after:
          type: object
          description: Value of the property after modification.
        before:
          type: object
          description: Value of the property before modification.
        description:
          type: string
          description: Human readable description of the change.
        property:
          type: string
          description: The name of the property modified.
      x-model: ChangeDetail
    ChangeHistoryChange:
      required:
        - project_id
      type: object
      properties:
        change_type:
          type: string
          description: Action performed on the entity.
          enum:
            - archive
            - create
            - update
            - delete
            - publish
        changes:
          type: array
          description: List of change details.
          items:
            $ref: '#/components/schemas/ChangeDetail'
        created:
          type: string
          description: Created time of the current revision. Format is ISO 8601.
          format: date-time
        entity:
          $ref: '#/components/schemas/Entity'
        id:
          type: integer
          description: ID of the change.
          # format: int32
        project_id:
          type: integer
          description: ID of the project related to the entity.
          # format: int32
        revisions:
          $ref: '#/components/schemas/ChangeRevision'
        source:
          type: string
          description: Origin of the current revision.
          enum:
            - ui
            - api
        summary:
          type: string
          description: Short human readable description of the change.
        user:
          $ref: '#/components/schemas/User'
      x-model: ChangeHistoryChange
    ChangeRevision:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/Revision'
        previous:
          $ref: '#/components/schemas/Revision'
      x-model: ChangeRevision
    Choices:
      type: object
      properties:
        label:
          type: string
          description: label of the choice
        value:
          type: string
          description: value of the choice
      x-model: Choices
    CollaboratorEntry:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the user
          format: uuid
          readOnly: true
          example: fa74a14b-1f3a-463d-aa98-2f7124ee6fc3
        profile:
          $ref: '#/components/schemas/UserProfile'
        project_roles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRole'
      x-model: CollaboratorEntry
    CredentialsItem:
      type: object
      properties:
        accessKeyId:
          type: string
          description: AWS access key
          example: ASIA5QMPA3WZQJNOABC
        expiration:
          type: integer
          description: expiration time of the token in epoch time
          # format: int32
          example: 1591026407394
        secretAccessKey:
          type: string
          description: AWS secret access key
          example: 1234567qzerHJDWdIDGixoTYfqC1dZp
        sessionToken:
          type: string
          description: AWS session token
          example: FwoGZXIvYXdzEOT//////////wEaDH6J
      description: Credentials item containing information on access key and secrets
      x-model: CredentialsItem
    CurrentAccount:
      type: object
      properties:
        features:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccountFeature'
          description: The available features for the Account
          readOnly: true
        id:
          type: integer
          description: The unique identifier of the Account
          # format: int32
          readOnly: true
      x-model: CurrentAccount
    CustomEvent:
      required:
        - key
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not to archive this Event
        category:
          $ref: '#/components/schemas/EventCategories'
        created:
          type: string
          description: Creation date for this Event
          format: date-time
          readOnly: true
        description:
          type: string
          description: A description of this Event
        event_type:
          type: string
          description: The type of this Event
          enum:
            - custom
        id:
          type: integer
          description: The unique identifier of the Event
          # format: int32
          readOnly: true
        is_classic:
          type: boolean
          description: >-
            Whether or not this Event is a classic Event. If true, this Event is
            read-only
          readOnly: true
          default: false
        is_editable:
          type: boolean
          description: Whether or not this Event may be edited
          readOnly: true
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\- .]+$
          type: string
          description: Unique string identifier for this Event within the Project
          example: loaded_new_app
        name:
          type: string
          description: >-
            A human readable name for this Event. If unspecified, defaults to
            the key
          example: Loaded New App
        project_id:
          type: integer
          description: The ID of this Event's parent Project
          # format: int32
          readOnly: true
          example: 1000
      x-model: CustomEvent
    CustomEventUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not to archive this Event
        category:
          $ref: '#/components/schemas/EventCategories'
        description:
          type: string
          description: A description of this Event
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\- .]+$
          type: string
          description: Unique string identifier for this Event within the Project
          example: loaded_new_app
        name:
          type: string
          description: A human readable name for this Event
          example: Loaded New App
      x-model: CustomEventUpdate
    Datafile:
      type: object
      properties:
        id:
          type: integer
          description: ID of Datafile.
          readOnly: true
        latest_file_size:
          type: integer
          description: The current size in bytes of the Datafile.
          readOnly: true
        other_urls:
          type: array
          description: List of other URLs where this Datafile is also available.
          readOnly: true
          items:
            type: string
            format: url
        revision:
          type: integer
          description: Current revision number.
          readOnly: true
        sdk_key:
          type: string
          description: >-
            Unique key to identify this specific Environment and Datafile
            programmatically in our SDKs.
          readOnly: true
        url:
          type: string
          description: URL where this Datafile is available.
          format: url
          readOnly: true
      x-model: Datafile
    Datapoint:
      type: object
      properties:
        confidence_interval:
          maxItems: 2
          minItems: 2
          type: array
          description: >-
            The confidence interval measures the uncertainty around improvement.
            It starts out wide and shrinks as more data comes in. Significance
            means that the confidence interval is completely above or completely
            below 0. If the result is significant and positive, the confidence
            interval will be above 0. If the result is significant and negative,
            confidence interval will be below 0. If the result is inconclusive,
            confidence interval includes 0
          example:
            - 0.010399560300730457
            - 0.0850821459929161
          items:
            type: number
            format: double
        confidence_interval_scaled:
          maxItems: 2
          minItems: 2
          type: array
          description: >-
            The confidence interval with bounds that are scaled by the baseline
            conversion rate.
          items:
            type: number
            format: double
        end_of_epoch:
          type: boolean
          description: >- 
            End of epoch
        is_most_conclusive:
          type: boolean
          description: >-
            Indicates that this is the best performing variant for this metric.
            Also referred to as the 'Winner'
        is_significant:
          type: boolean
          description: Indicates if significance is above your confidence threshold
        lift_status:
          type: string
          description: >-
            Indicates whether a variation is doing better/worse than the
            baseline after taking the metric's winning direction into account.
          enum:
            - equal
            - better
            - worse
        significance:
          type: number
          description: >-
            The likelihood that the observed difference in conversion rate is
            not due to chance
          format: double
        value:
          type: number
          description: The estimated improvement for this variant compared to the baseline
          format: double
        value_scaled:
          type: number
          description: The estimated improvement scaled by the baseline conversion rate.
          format: double
        visitors_remaining:
          type: integer
          description: >-
            The number of estimated visitors remaining before result becomes
            statistically significant. A value of 9223372036854775807 means the
            value is not available.
          # format: int32
      description: A value with statistical context
      x-model: Datapoint
    E3Credentials:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsItem'
        s3Path:
          type: string
          description: s3 path of the enriched events dataset of the account
          example: s3://optimizely-events-data/v1/account_id=123123123
      x-model: E3Credentials
    Entity:
      type: object
      properties:
        api_url:
          type: string
          description: Generated URL to access the entity by using the public API.
          format: url
        id:
          type: integer
          description: ID of the entity.
          # format: int32
        name:
          type: string
          description: Name of the entity.
        sub_type:
          type: string
          description: >-
            Optional field for entities that have sub_types (projects,
            experiments, extensions, pages, etc)
        type:
          type: string
          description: Type of the entity as defined by the public API.
        ui_url:
          type: string
          description: Generated URL to access the entity using Optimizely UI.
          format: url
      x-model: Entity
    Environment:
      required:
        - key
        - name
        - project_id
      type: object
      properties:
        archived:
          type: boolean
          description: Boolean representing whether the Environment is archived.
          example: false
        created:
          type: string
          description: Created time.
          readOnly: true
        datafile:
          $ref: '#/components/schemas/Datafile'
        description:
          type: string
          description: A short description of the Environment.
          example: For testing purposes before deploying to Production
        has_restricted_permissions:
          type: boolean
          description: >-
            Boolean representing whether starting experiments should be
            restricted to publishers and above in this Environment.
          default: false
        id:
          type: integer
          description: ID of this Environment.
          readOnly: true
        is_primary:
          type: boolean
          description: Boolean representing if this is the primary (default) Environment.
          readOnly: true
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: Unique string identifier for this Environment within the Project.
        last_modified:
          type: string
          description: Last modification time.
          readOnly: true
        name:
          type: string
          description: Name of the Environment.
          example: Staging
        priority:
          type: integer
          description: >-
            Integer representing the priority of the Environment. This is used
            for ordering in the UI.
          example: 3
        project_id:
          type: integer
          description: ID of the project of the Environment.
      x-model: Environment
    EnvironmentUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Boolean representing whether the Environment is archived.
          example: false
        description:
          type: string
          description: Text description of the Environment.
          example: For testing purposes before deploying to Production
        has_restricted_permissions:
          type: boolean
          description: >-
            Boolean representing whether starting experiments should be
            restricted to publishers and above in this Environment.
          default: false
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: Unique string identifier for this Environment within the Project.
        name:
          type: string
          description: Name of the Environment.
          example: Staging
        priority:
          type: integer
          description: >-
            Integer representing the priority of the Environment. This is used
            for ordering in the UI.
          example: 3
      x-model: EnvironmentUpdate
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        messages:
          type: object
          properties: {}
        uuid:
          type: string
          format: uuid
      x-model: Error
    Event:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not this Event is archived
        category:
          $ref: '#/components/schemas/EventCategories'
        config:
          $ref: '#/components/schemas/InPageEventConfig'
        created:
          type: string
          description: Creation date for this Event
          format: date-time
          readOnly: true
        description:
          type: string
          description: A description for this Event
          example: Item added to cart
        event_type:
          type: string
          description: The type of this Event
          enum:
            - custom
            - click
            - pageview
            - classic_custom
            - classic_click
            - classic_pageview
            - classic_engagement
            - classic_revenue
            - classic_mobile_tap
            - classic_mobile_view
            - classic_mobile_session_length
            - classic_mobile_num_session
        id:
          type: integer
          description: The unique identifier of the Event
          # format: int32
          readOnly: true
        is_classic:
          type: boolean
          description: >-
            Whether or not this Event is a classic Event. If true, this Event is
            read-only
          readOnly: true
          default: false
        is_editable:
          type: boolean
          description: Whether this Event may be edited
          readOnly: true
        key:
          maxLength: 64
          type: string
          description: Unique string identifier for this Event within the Project
          example: add_to_cart
        last_modified:
          type: string
          description: The last time the Event was modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: A human readable name for this Event
          example: Add to Cart
        page_id:
          type: integer
          description: The Page ID associated with this Event
          # format: int32
          example: 5000
        project_id:
          type: integer
          description: The ID of this Event's parent Project
          # format: int32
          example: 1000
      x-model: Event
    EventCategories:
      type: string
      description: Event categories
      properties:
        name:
          type: string
          description: Event name
      enum:
        - add_to_cart
        - save
        - search
        - share
        - purchase
        - convert
        - sign_up
        - subscribe
        - other
    Experiment:
      required:
        - project_id
      type: object
      properties:
        allocation_policy:
          type: string
          description: Traffic allocation policy across variations in this experiment
          readOnly: true
        audience_conditions:
          type: string
          description: >-
            The audiences that should see this experiment. To target everyone,
            use the string "everyone" or omit this field. Multiple audiences can
            be combined with "and" or "or" using the same structure as audience
            conditions
          example: '["and", {"audience_id": 7000}, {"audience_id":7001}]'
          default: everyone
        campaign_id:
          type: integer
          description: >-
            For Personalization experiences, this ID corresponds to the parent
            Campaign. For standalone experiments this campaign_id does not
            correspond to a campaign object.
          # format: int32
          example: 2000
        changes:
          type: array
          description: >-
            Custom CSS or JavaScript that will run before all variations in the
            Experiment (for Experiments in Web Projects only)
          items:
            $ref: '#/components/schemas/SharedCodeChange'
        created:
          type: string
          description: The time when the Experiment was initially created
          format: date-time
          readOnly: true
        description:
          type: string
          description: The description or hypothesis for an Experiment
        earliest:
          type: string
          description: The first time the Experiment was activated
          format: date-time
          readOnly: true
        environments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExperimentEnvironment'
          description: >-
            String identifier for the Experiment's status in each Environment
            based on the environment key.
          x-map-key:
            description: Environment Key
            example: staging
            type: string
        feature_id:
          type: integer
          description: >-
            The ID of a Feature to attach to the Experiment. This turns an
            Experiment into a Feature Test.
          # format: int32
          example: 1000
        feature_key:
          type: string
          description: >-
            The key for the Feature attached to the Experiment. Applies to
            Feature Tests only. Valid keys contain alphanumeric characters,
            hyphens, and underscores, and are limited to 64 characters.
        feature_name:
          type: string
          description: >-
            The feature flag name to display in the Optimizely app. Whitespaces
            and other non-alphanumeric characters allowed. Defaults to feature
            key if left empty.
          example: This is the user search feature
        holdback:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            Percent of traffic to exclude from the experiment, measured in basis
            points. 100 basis points = 1% traffic. For example, a value of 9900
            would mean that 1% of visitors will be eligible for the experiment.
            This is only applicable for Web.
          example: 5000
        id:
          type: integer
          description: The unique identifier for the Experiment
          # format: int32
          readOnly: true
          example: 3000
        is_classic:
          type: boolean
          description: >-
            Whether or not the Experiment is a classic Experiment. If true, the
            Experiment is read-only
          readOnly: true
          default: false
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: >-
            Unique string identifier for this Experiment within the Project.
            Only applicable for Full Stack and Mobile projects.
          example: home_page_experiment
        last_modified:
          type: string
          description: The last time the Experiment was modified
          format: date-time
          readOnly: true
        latest:
          type: string
          description: >-
            The last time the Experiment was paused (not present if the
            Experiment is still running). For campaign experiences, this field
            represents the last time the Campaign was paused.
          format: date-time
          readOnly: true
        metrics:
          type: array
          description: >-
            An ordered list of metrics to track for the Experiment. Required for
            Web, Full Stack, and Mobile Experimentation. Not applicable for Web
            Personalization Experiences.
          items:
            $ref: '#/components/schemas/Metric'
        multivariate_traffic_policy:
          type: string
          description: >-
            For Experiments of  `multivariate` type, this specifies how the
            weights and statuses of combinations will be decided. In
            `full_factorial` mode, | combination weights are read-only, and are
            generated by multiplying together weights of section variations.
          enum:
            - full_factorial
        name:
          type: string
          description: >-
            Name of the Experiment. Required for Web Experimentation. Optional
            for Web Personalization experiences and Full Stack experiments. Not
            applicable for Mobile Experiments.
          example: Blue Button Experiment
        page_ids:
          type: array
          description: >-
            A list of Page IDs used in the Experiment.  `url_targeting` or
            `page_ids`, but not both.
          items:
            type: integer
            # format: int32
        project_id:
          type: integer
          description: The Project the Experiment is in
          # format: int32
          example: 1000
        results_token:
          type: string
          description: >-
            temporary token based on experiment id, used to access data platform
            services from other parts of the product
        schedule:
          $ref: '#/components/schemas/Schedule'
        status:
          type: string
          description: >-
            Current state of the Experiment.<br> In Full Stack, this is the
            Experiment's state in the primary (production) environment.
          readOnly: true
          enum:
            - running
            - paused
            - archived
            - campaign_paused
            - not_started
        traffic_allocation:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            Percent of traffic allocated for the experiment, measured in basis
            points. 100 basis points = 1% traffic. For example, a value of 5500
            would mean that 55% of visitors will be eligible for the experiment.
            This is only applicable for Full Stack.
          example: 5000
        type:
          type: string
          description: >-
            Indicates whether this is an `a/b`, `multivariate`, `feature`, or
            `multiarmed_bandit` test or an experience within a `personalization`
            campaign. Note that the default for this field is `a/b`. If another
            test type is desired, populate this field with the appropriate
            string (from one of the possible values).
          default: a/b
          enum:
            - a/b
            - feature
            - multivariate
            - personalization
            - multiarmed_bandit
        url_targeting:
          $ref: '#/components/schemas/URLTargeting'
        variations:
          type: array
          description: >-
            A list of variations that each define an experience to show in the
            context of the Experiment for the purpose of comparison against each
            other
          items:
            $ref: '#/components/schemas/Variation'
        whitelist:
          type: array
          description: >-
            A list containing the user IDs and variations of users who have been
            whitelisted
          items:
            required:
              - user_id
              - variation_id
            type: object
            properties:
              user_id:
                type: string
                description: The ID of the user being whitelisted
                example: user_1
              variation_id:
                type: integer
                description: The unique identifier for the variation
                # format: int32
                example: 12345
      x-model: Experiment
    ExperimentEnvironment:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: >-
            The Experiment's status in different Environments based on the
            environment key.
          enum:
            - running
            - paused
            - not_started
            - archived
      x-model: ExperimentEnvironment
    ExperimentEnvironmentUpdate:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: >-
            Update the Experiment's status in different Environments based on
            the environment key.
          enum:
            - not_started
            - running
            - paused
      x-model: ExperimentEnvironmentUpdate
    ExperimentMetricConclusion:
      type: object
      description: Experiment metric conclusion.
      properties:
        loser:
          type: string
          description: >-
            ID of the variation that has reached statistical significance and
            has performed worse than all other variations.
          readOnly: true
        winner:
          type: string
          description: >-
            ID of the variation that has reached statistical significance and
            has performed better than all other variations.
          readOnly: true
      x-model: ExperimentMetricConclusion
    ExperimentMetricResults:
      type: object
      properties:
        aggregator:
          type: string
          description: >-
            The aggregation function for the numerator of the metric. 'unique'
            measures the number of unique visitors/sessions that include the
            specified Event. 'count' measures the total number of occurrences of
            Event for the scope (visitor/session). 'sum' is the sum of the
            'field' value. 'exit' measures the ratio of sessions with last
            activation occurring on the target page to the sessions that
            activated the target page at least once during the session. 'bounce'
            measures the ratio of sessions that with first and last activation
            occurring on the target page to the sessions with first activation
            on the target page. For both 'exit' and 'bounce', the eventId must
            be the ID of a Page.
          enum:
            - unique
            - count
            - sum
            - exit
            - bounce
        conclusion:
          $ref: '#/components/schemas/ExperimentMetricConclusion'
        event_id:
          type: integer
          description: >-
            The ID for the Event to select data from. Omitted for global metrics
            that are not relative to a specific Event, i.e. "overall revenue"
          # format: int32
        field:
          type: string
          description: >-
            The field to aggregate for the numerator of the metric. Required
            when 'aggregator' = 'sum', otherwise omitted
          enum:
            - revenue
            - value
        name:
          type: string
          description: The name of the Metric
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariantResults'
          description: >-
            A map of results for each variation in the Experiment keyed by
            variation ID. For Personalization Campaigns, the special variant
            'baseline' represents visitors that have been held back from any
            change in experience for the Experiment
          x-map-key:
            description: The ID for the variation
            example: '9000'
            type: string
        scope:
          type: string
          description: >-
            Specifies how Events should be grouped together. Can also be thought
            of as the denonimator of the metric. 'session' divides by the number
            of sessions. "Influenced sessions", or sessions that do not contain
            a decision Event but carry a decision from a previous session are
            not included in counts for numerator or denominator. 'visitor'
            divides by the number of visitors. 'event' divides by the total
            occurrences (impressions) of the specified Event
          enum:
            - session
            - visitor
            - event
        winning_direction:
          type: string
          description: The winning direction of this metric
          enum:
            - increasing
            - decreasing
      description: Results specific to an Event
      x-model: ExperimentMetricResults
    ExperimentMetricTimeseries:
      type: object
      properties:
        aggregator:
          type: string
          description: >-
            The aggregation function for the numerator of the metric. 'unique'
            measures the number of unique visitors/sessions that include the
            specified Event. 'count' measures the total number of occurrences of
            Event for the scope (visitor/session). 'sum' is the sum of the
            'field' value
          enum:
            - unique
            - count
            - sum
        event_id:
          type: integer
          description: >-
            The ID for the Event to select data from. Omitted for global metrics
            that are not relative to a specific Event, i.e. "overall revenue"
          # format: int32
        field:
          type: string
          description: >-
            The field to aggregate for the numerator of the metric. Required
            when 'aggregator' = 'sum', otherwise omitted
          enum:
            - revenue
            - value
        name:
          type: string
          description: The name of the Metric
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariantTimeseries'
          description: >-
            A map of results for each variation in the Experiment keyed by
            variation ID. For Personalization Campaigns, the special variant
            'baseline' represents visitors that have been held back from any
            change in experience for the Experiment
          x-map-key:
            description: The ID for the variation
            example: '9000'
            type: string
        scope:
          type: string
          description: >-
            Specifies how Events should be grouped together. Can also be thought
            of as the denonimator of the metric. 'session' divides by the number
            of sessions. "Influenced sessions", or sessions that do not contain
            a decision Event but carry a decision from a previous session are
            not included in counts for numerator or denominator. 'visitor'
            divides by the number of visitors. 'event' divides by the total
            occurrences (impressions) of the specified Event
          enum:
            - session
            - visitor
            - event
        winning_direction:
          type: string
          description: The winning direction of this metric
          enum:
            - increasing
            - decreasing
      description: Results time series specific to an Event
      x-model: ExperimentMetricTimeseries
    ExperimentResults:
      type: object
      properties:
        confidence_threshold:
          type: number
          description: >-
            The significance level at which you would like to declare winning
            and losing variations. A lower number minimizes the time needed to
            declare a winning or losing variation, but increases the risk that
            your results aren't true winners and losers.
          format: double
          example: 0.9
        end_time:
          type: string
          description: >-
            End of the time interval (exclusive) used to calculated the results.
            The time is formatted in ISO 8601.
          format: date-time
        experiment_id:
          type: integer
          description: The unique identifier for the Experiment
          # format: int32
          example: 3000
        metrics:
          type: array
          description: >-
            The breakdown of Experiment results by metric.
            ExperimentMetricResults object ordering in the array is consistent
            with the order that metrics are attached to the Experiment in the
            Optimizely UI and REST API (i.e. index 0 is the primary metric,
            indices 1-4 are secondary metrics, indices 5+ are monitoring
            metrics). See here for an explantion of the impact of metric
            ordering on results calculations.
          items:
            $ref: '#/components/schemas/ExperimentMetricResults'
        reach:
          $ref: '#/components/schemas/ExperimentVariationReach'
        start_time:
          type: string
          description: >-
            Start of the time interval (inclusive) used to calculate the
            results. The time is formatted in ISO 8601.
          format: date-time
        stats_config:
          $ref: '#/components/schemas/StatsConfig'
      x-model: ExperimentResults
    ExperimentResultsReport:
      type: object
      properties:
        end_time:
          type: string
          description: >-
            End of the time interval (exclusive) used to generate the report.
            The time is formatted in ISO 8601.
          format: date-time
          readOnly: true
        experiment_id:
          type: integer
          description: >-
            The unique identifier for the Experiment for which the report is to
            be generated.
          # format: int32
          example: 3000
        inferred_outcome:
          type: string
          description: >-
            Outcome of the experiment as inferred by the Optimizely system upon
            the evaluation of variations that may or may not have reached
            statistical significance.
          readOnly: true
          enum:
            - win
            - loss
            - inconclusive
        start_time:
          type: string
          description: >-
            Start of the time interval (inclusive) used to generate the reports.
            The time is formatted in ISO 8601.
          format: date-time
      x-model: ExperimentResultsReport
    ExperimentSummary:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the entity is archived.
          example: false
        created:
          type: string
          description: The time that the entity was created.
          format: date-time
        description:
          type: string
          description: Description for the entity if it has one.
          example: Test out the hero image on the home page
        experiment_type:
          type: string
          description: The type of experiment
          example: a/b
        id:
          type: integer
          description: ID of the entity
          readOnly: true
        last_modified:
          type: string
          description: The time that the entity was last modified.
          format: date-time
        name:
          type: string
          description: >-
            Name of the entity. This value will be the 'key' of the entity if
            there is no name.
          example: Hero Image Test
        project_id:
          type: integer
          description: ID of the project that contains the entity (if applicable)
        project_name:
          type: string
          description: Name of the project that contains the entity (if applicable)
        status:
          type: string
          description: The current status for the entity if it has one.
          example: running
        type:
          type: string
          description: Type of the entity.
          example: experiment
          enum:
            - experiment
            - campaign
      x-model: ExperimentSummary
    ExperimentTimeseries:
      type: object
      properties:
        confidence_threshold:
          type: number
          description: >-
            The significance level at which you would like to declare winning
            and losing variations. A lower number minimizes the time needed to
            declare a winning or losing variation, but increases the risk that
            your results aren't true winners and losers.
          format: double
          example: 0.9
        end_time:
          type: string
          description: >-
            End of the time interval (exclusive) used to calculated the results.
            The time is formatted in ISO 8601.
          format: date-time
        experiment_id:
          type: integer
          description: The unique identifier for the Experiment
          # format: int32
          example: 3000
        metrics:
          type: array
          description: The breakdown of Experiment results time series by metric
          items:
            $ref: '#/components/schemas/ExperimentMetricTimeseries'
        start_time:
          type: string
          description: >-
            Start of the time interval (inclusive) used to calculate the
            results. The time is formatted in ISO 8601.
          format: date-time
        stats_config:
          $ref: '#/components/schemas/StatsConfig'
      x-model: ExperimentTimeseries
    ExperimentUpdate:
      type: object
      properties:
        audience_conditions:
          type: string
          description: >-
            The audiences that should see this experiment. To target everyone,
            use the string "everyone". Multiple audiences can be combined with
            "and" or "or" using the same structure as audience conditions
          example: '["and", {"audience_id": 7000}, {"audience_id": 7001}]'
        changes:
          type: array
          description: >-
            Custom CSS or JavaScript that will run before all variations in the
            Experiment (for Experiments in Web Projects only)
          items:
            $ref: '#/components/schemas/SharedCodeChange'
        description:
          type: string
          description: The description or hypothesis for an Experiment
          example: AB Test to see if the Blue Button converts more visitors
        environments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExperimentEnvironmentUpdate'
          description: >-
            String identifier for the Experiment's status in each Environment
            based on the environment key.
          x-map-key:
            description: Environment Key
            example: staging
            type: string
        feature_id:
          type: integer
          description: >-
            The ID of a Feature to attach to the Experiment. This turns an
            Experiment into a Feature Test.
          # format: int32
          example: 1000
        holdback:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            Percent of traffic to exclude from the experiment, measured in basis
            points. 100 basis points = 1% traffic. For example, a value of 9900
            would mean that 1% of visitors will be eligible for the experiment.
            This is only applicable for Web.
          example: 5000
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: >-
            Unique string identifier for this Experiment within the Project.
            Only applicable for Full Stack and Mobile projects.
          example: home_page_experiment
        metrics:
          type: array
          description: An ordered list of metrics to track for the Experiment
          items:
            $ref: '#/components/schemas/Metric'
        name:
          type: string
          description: Name of the Experiment
          example: Blue Button Experiment
        page_ids:
          type: array
          description: >-
            A list of Page IDs used in the Experiment.  Only `url_targeting` or
            `page_ids` can be used when updating an experiment, but not both.
          items:
            type: integer
            # format: int32
        schedule:
          $ref: '#/components/schemas/ScheduleUpdate'
        traffic_allocation:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            Percent of traffic allocated for the experiment, measured in basis
            points. 100 basis points = 1% traffic. For example, a value of 5500
            would mean that 55% of visitors will be eligible for the experiment.
            This is only applicable for Full Stack.
          example: 5000
        url_targeting:
          $ref: '#/components/schemas/URLTargeting'
        variations:
          type: array
          description: List of IDs of all variations in the Experiment
          items:
            $ref: '#/components/schemas/VariationUpdate'
        whitelist:
          type: array
          description: >-
            A list containing the user IDs and variations of users who have been
            whitelisted
          items:
            required:
              - user_id
              - variation_id
            type: object
            properties:
              user_id:
                type: string
                description: The ID of the user being whitelisted
                example: user_1
              variation_id:
                type: integer
                description: The unique identifier for the variation
                # format: int32
                example: 12345
      x-model: ExperimentUpdate
    ExperimentVariationReach:
      type: object
      properties:
        baseline_count:
          type: integer
          description: Baseline count
          # format: int32
        baseline_reach:
          type: number
          description: Baseline reach
          format: double
        total_count:
          type: integer
          description: Total number of visitors exposed to the Experiment
          # format: int32
        treatment_count:
          type: integer
          description: Treatment count
          # format: int32
        treatment_reach:
          type: number
          description: Treatment reach
          format: double
        variations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VariationReach'
          description: A map of reach for each variation keyed by variation ID
          x-map-key:
            description: The ID for the variation
            example: '9000'
            type: string
      x-model: ExperimentVariationReach
    Extension:
      required:
        - edit_url
        - implementation
        - name
        - project_id
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the extension is archived
          readOnly: true
        created:
          type: string
          description: The time when the extension was initially created
          format: date-time
          readOnly: true
        description:
          type: string
          description: The description for the extension
        edit_url:
          type: string
          description: The URL to load when editing the extension
        enabled:
          type: boolean
          description: >-
            Whether the extension is enabled. A disabled extension won't appear
            in the editor and won't be built into the snippet
        fields:
          type: array
          description: Array of editable fields in the extension
          example:
            - api_name: text
              default_value: My Butterbar
              field_type: text
              label: A text field
          items:
            $ref: '#/components/schemas/Field'
        id:
          type: integer
          description: The unique identifier for the extension
          # format: int32
          readOnly: true
          example: 3000
        implementation:
          $ref: '#/components/schemas/Implementation'
        last_modified:
          type: string
          description: The last time when the extension was modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of the extension
          example: My Extension
        project_id:
          type: integer
          description: The project the extension is in
          # format: int32
          example: 1000
      x-model: Extension
    ExtensionUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the extension is archived
        description:
          type: string
          description: The description for the extension
        edit_url:
          type: string
          description: The URL to load when editing the extension
        enabled:
          type: boolean
          description: Whether the extension is enabled
        fields:
          type: array
          description: Array of editable fields in the extension
          example:
            - api_name: text
              default_value: My Butterbar
              field_type: text
              label: A text field
          items:
            $ref: '#/components/schemas/Field'
        implementation:
          $ref: '#/components/schemas/Implementation'
        name:
          type: string
          description: Name of the extension
          example: My Extension
      x-model: ExtensionUpdate
    Feature:
      required:
        - key
        - project_id
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the Feature has been archived
          default: false
        created:
          type: string
          description: Time when the Feature was created
          format: date-time
          readOnly: true
        description:
          type: string
          description: A short description of this Feature
        environments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FeatureEnvironment'
          description: >-
            The configuration for this Feature's Rollout within each
            Environment, keyed by Environment key
          x-map-key:
            description: The key of the Environment
            example: production
            type: string
        id:
          type: integer
          description: The ID of this Feature
          # format: int32
          readOnly: true
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: Unique string identifier for this Feature within the Project
          example: new_checkout_page
        last_modified:
          type: string
          description: Date last modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of the Feature
          example: the checkout feature
        project_id:
          type: integer
          description: The ID of the Project this Feature belongs to
          # format: int32
        variables:
          type: array
          description: >-
            Variables define the dynamic configuration of a feature, and each
            variable can take on a different value on a per-variation basis
            within a feature test.
          items:
            $ref: '#/components/schemas/FeatureVariable'
      x-model: Feature
    FeatureEnvironment:
      required:
        - rollout_rules
      type: object
      properties:
        id:
          type: integer
          description: The ID of the Environment this set of Rollout Rules applies to
          # format: int32
          readOnly: true
        is_primary:
          type: boolean
          description: >-
            Whether the Environment this set of Rollout Rules applies to is the
            primary Environment
          readOnly: true
        rollout_rules:
          maxItems: 1
          minItems: 1
          type: array
          description: >-
            Rollout Rules allow you to define groups of users and a percentage
            of those users that will see a Feature by default. You are currently
            limited to a single rollout rule. Audience IDs sent in any
            environment must always match that of the primary environment.
          items:
            $ref: '#/components/schemas/RolloutRule'
      x-model: FeatureEnvironment
    FeatureUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the Feature has been archived
        description:
          type: string
          description: A short description of this Feature
        environments:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FeatureEnvironment'
          description: >-
            The configuration for this Feature's Rollout within each
            Environment, keyed by Environment key.
          x-map-key:
            description: The key of the Environment
            example: production
            type: string
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: Unique string identifier for this Feature within the Project
          example: new_checkout_page
        name:
          type: string
          description: Name of the Feature
          example: the checkout feature
        variables:
          type: array
          description: >-
            Variables define the dynamic configuration of a feature, and each
            variable can take on a different value on a per-variation basis
            within a feature test.
          items:
            $ref: '#/components/schemas/FeatureVariableUpdate'
      x-model: FeatureUpdate
    FeatureVariable:
      required:
        - default_value
        - key
        - type
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not this Feature Variable is archived
          default: false
        default_value:
          type: string
          description: >-
            The stringified default value for this Feature Variable. The default
            value is the value Optimizely SDKs will return when this Feature
            Variable is accessed by getFeatureVariableValue unless the Feature
            Variable's value is a part of a feature test variation.
          example: '0.05'
        id:
          type: integer
          description: The ID of this Feature Variable
          # format: int32
          readOnly: true
        key:
          type: string
          description: >-
            Unique string identifier for this Feature Variable within the
            Feature
        type:
          type: string
          description: The datatype for this Feature Variable
          example: double
          enum:
            - boolean
            - string
            - double
            - integer
            - json
      x-model: FeatureVariable
    FeatureVariableUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not this Feature Variable is archived
          default: false
        default_value:
          type: string
          description: >-
            The stringified default value for this Feature Variable. The default
            value is the value Optimizely SDKs will return when this Feature
            Variable is accessed by getFeatureVariableValue unless the Feature
            Variable's value is a part of a feature test variation.
          example: '0.05'
        description:
          type: string
          description: A short description of this Feature Variable
        id:
          type: integer
          description: The ID of this Feature Variable
          # format: int32
        key:
          type: string
          description: >-
            Unique string identifier for this Feature Variable within the
            Feature
        type:
          type: string
          description: The datatype for this Feature Variable
          enum:
            - boolean
            - string
            - double
            - integer
            - json
      x-model: FeatureVariableUpdate
    Field:
      required:
        - api_name
        - default_value
        - field_type
        - label
      type: object
      properties:
        api_name:
          type: string
          description: The API name of the field
        default_value:
          type: string
          description: >-
            A string in JSON format that corresponds to the default_value of the
            field
        field_type:
          type: string
          description: The type of the field
          enum:
            - selector
            - text
            - multi_text
            - rich_text
            - number
            - html
            - css
            - js
            - toggle
            - dropdown
            - multi_select
            - image
            - color
            - slider
        label:
          type: string
          description: The label of the field
        options:
          $ref: '#/components/schemas/Options'
      externalDocs:
        description: Fields
        url: https://developers.optimizely.com/x/extensions/#fields
      x-model: Field
    Group:
      required:
        - name
        - project_id
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the group is archived
        created:
          type: string
          description: The time when the Exclusion Group was initially created
          format: date-time
          readOnly: true
        description:
          type: string
          description: The description for an Exclusion Group
        entities:
          type: array
          description: Array of Group Entities in the Exclusion Group
          example:
            - id: 1234
              kind: Experiment
              weight: 5000
          items:
            $ref: '#/components/schemas/GroupEntity'
        id:
          type: integer
          description: The unique identifier for the Exclusion Group
          # format: int32
          readOnly: true
          example: 3000
        last_modified:
          type: string
          description: The last time the Exclusion Group was modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of the Exclusion Group
          example: Homepage Group
        project_id:
          type: integer
          description: The Project the Exclusion Group is in
          # format: int32
          example: 1000
      x-model: Group
    GroupEntity:
      required:
        - id
        - kind
        - weight
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the Group Entity
          example: 3000
        kind:
          type: string
          description: The kind of the Group Entity
          enum:
            - Campaign
            - Experiment
        weight:
          type: integer
          description: >-
            The weight of the Group Entity. The weight is a value between 0 and
            10000. An entity with weight 5000 will receive 50% of this group's
            traffic
          example: 1000
      x-model: GroupEntity
    GroupUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the Exclusion Group has been archived
          default: false
        description:
          type: string
          description: The updated description of the Exclusion Group
          example: The Exclusion Group is updated!
        entities:
          type: array
          description: >-
            Array of experiments or campaigns in the Exclusion Group,
            represented as a GroupEntity object
          example:
            - id: 1234
              kind: Experiment
              weight: 5000
          items:
            $ref: '#/components/schemas/GroupEntity'
        name:
          type: string
          description: The updated name of the Exclusion Group
          example: Updated Exclusion Group
      x-model: GroupUpdate
    Implementation:
      type: object
      properties:
        apply_js:
          type: string
          description: The Apply JS code is used to inject the extension onto the page
          default: ''
        css:
          type: string
          description: >-
            Some extensions may not need any CSS because they inherit styles
            from the page itself. However, you can add additional styling here.
            This will be injected on the page through a <style> tag
          default: ''
        html:
          type: string
          description: The html implementation of the field
          default: ''
        reset_js:
          type: string
          description: >-
            Reset JS is used to "clean up" after a extension. It's used in the
            editor, when changing field values or removing an existing
            extension. Reset JS should remove the element and any other
            side-effects
          default: ''
      x-model: Implementation
    ImpressionsUsage:
      required:
        - experiment_id
        - experiment_name
        - experiment_status
        - impression_count
        - platform
        - project_id
        - project_name
      type: object
      properties:
        experiment_id:
          type: integer
          description: The ID for the experiment.
          # format: int32
          example: 3239
        experiment_name:
          type: string
          description: >-
            The Experiment name to display in the Optimizely app. Whitespaces
            and other non-alphanumeric characters allowed. Defaults to
            experiment key if left empty.
          example: Renewable energy
        experiment_status:
          type: string
          description: The status of the Experiment.
          example: Running, Not started
        impression_count:
          type: integer
          description: The Impressions count at experiment level.
          # format: int32
          example: 322010712450
        platform:
          type: string
          description: The platform of the Project
          example: web, fullstack, edge
          default: web
        project_id:
          type: integer
          description: The ID for the project.
          # format: int32
          example: 3094
        project_name:
          type: string
          description: The name of the Project.
          example: Landing Page Optimization
      x-model: ImpressionsUsage
    ImpressionsUsageSummary:
      required:
        - allowance
        - end_date
        - last_update_date
        - start_date
        - usage
        - usage_percentage
      type: object
      properties:
        allowance:
          type: integer
          description: Total allowance purchased for the account.
          # format: int32
          example: 25000000
        end_date:
          type: string
          description: Current subscription end date.
          format: date
        last_update_date:
          type: string
          description: Last impressions usage updated date.
          format: date
        start_date:
          type: string
          description: Current subscription start date.
          format: date
        usage:
          type: integer
          description: Usage for the account.
          # format: int32
          example: 16360512
        usage_percentage:
          maximum: 100
          minimum: 0
          type: number
          description: Utilised usage percentage.
          example: 65
      x-model: ImpressionsUsageSummary
    InPageEvent:
      required:
        - event_type
        - name
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not this Event is archived
        category:
          $ref: '#/components/schemas/EventCategories'
        config:
          $ref: '#/components/schemas/InPageEventConfig'
        created:
          type: string
          description: Creation date for this Event
          format: date-time
          readOnly: true
        description:
          type: string
          description: A description of this Event
        event_type:
          type: string
          description: The type of this Event
          enum:
            - click
        id:
          type: integer
          description: The unique identifier of the Event
          # format: int32
          readOnly: true
        is_classic:
          type: boolean
          description: >-
            Whether or not this Event is a classic Event. If true, the Event is
            read-only
          readOnly: true
          default: false
        is_editable:
          type: boolean
          description: Whether or not this Event may be edited
          readOnly: true
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: Unique string identifier for this Event within the Project
          example: add_to_cart
        name:
          type: string
          description: A human readable name for this Event
          example: Add to Cart
        page_id:
          type: integer
          description: The Page ID associated with this Event
          # format: int32
          readOnly: true
        project_id:
          type: integer
          description: The ID of this Event's parent Project
          # format: int32
          readOnly: true
          example: 1000
      description: >-
        An Event that can occur only within the context of a specific Page
        (allowed in Web Projects only)
      x-model: InPageEvent
    InPageEventConfig:
      description: Inpage event config
      required:
        - selector
      type: object
      properties:
        selector:
          type: string
          description: CSS selector for the page element(s) that trigger an Event
          example: .menu-options
      x-model: InPageEventConfig
    InPageEventUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not to archive this Event
        category:
          $ref: '#/components/schemas/EventCategories'
        config:
          $ref: '#/components/schemas/InPageEventConfig'
        description:
          type: string
          description: A description of this Event
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: Unique string identifier for this Event within the Project
          example: add_to_cart
        name:
          type: string
          description: A human readable name for this Event
          example: Add to Cart
        page_id:
          type: integer
          description: The Page ID associated with this Event
          # format: int32
      x-model: InPageEventUpdate
    ListAttribute:
      required:
        - key_field
        - name
        - project_id
      type: object
      properties:
        account_id:
          type: integer
          description: The unique identifier for the Optimizely account
          # format: int32
          readOnly: true
        archived:
          type: boolean
          description: Whether or not the List Attribute has been archived
          default: false
        aws_access_key:
          type: string
          description: AWS access key to upload List Attribute source file to S3
          readOnly: true
        aws_secret_key:
          type: string
          description: AWS secret key to upload List Attribute source file to S3
          readOnly: true
        created:
          type: string
          description: Time when the List Attribute was created
          format: date-time
          readOnly: true
        description:
          type: string
          description: A short description of the List Attribute
        id:
          type: integer
          description: The unique identifier for the List Attribute
          # format: int32
          readOnly: true
        key_field:
          type: string
          description: The name of the object which holds targeting ids on your website
        last_modified:
          type: string
          description: The last time the List Attribute was modified
          format: date-time
          readOnly: true
        list_content:
          type: string
          description: >-
            A comma separated string of IDs or ZIP Codes. Items will be matched
            against the key_field to determine if an active visitor should be
            targeted by the list.  Note that if the list currently contains
            data, providing this value will overwrite the previous data.
        list_type:
          type: string
          description: >-
            The type of data object which holds targeting ids on your website
            (cookies, query parameters, zip codes, Global JS variables)
          enum:
            - cookies
            - query_parameters
            - zip_codes
            - js_variables
        name:
          pattern: ^[-_0-9A-Za-z]+$
          type: string
          description: A unique, human-readable name for the List Attribute
          example: SubscriberStatus
        project_id:
          type: integer
          description: The ID of the project the List Attribute belongs to
          # format: int32
        s3_path:
          type: string
          description: >-
            S3 path containing files used to populate the List Attribute with
            data. Can be used with an S3 client or CLI to upload data.
          readOnly: true
      x-model: ListAttribute
    ListAttributeUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the List Attribute has been archived
        description:
          type: string
          description: A short description of the List Attribute
        key_field:
          type: string
          description: The name of the object which holds targeting ids on your website
        list_content:
          type: string
          description: >-
            A comma separated string of IDs or ZIP Codes. Items will be matched
            against the key_field to determine if an active visitor should be
            targeted by the list.  Note that if the list currently contains
            data, providing this value will overwrite the previous data.
        list_type:
          type: string
          description: >-
            The type of data object which holds targeting ids on your website
            (cookies, query parameters, zip codes, Global JS variables)
          enum:
            - cookies
            - query_parameters
            - zip_codes
            - js_variables
        name:
          pattern: ^[-_0-9A-Za-z]+$
          type: string
          description: A unique, human-readable name for the List Attribute
          example: SubscriberStatus
      x-model: ListAttributeUpdate
    Me:
      type: object
      properties:
        accounts:
          type: array
          description: List of Accounts this user can access
          readOnly: true
          items:
            $ref: '#/components/schemas/Account'
        current_account:
          $ref: '#/components/schemas/CurrentAccount'
        id:
          type: string
          description: The unique identifier of the current User
          format: uuid
          readOnly: true
          example: fa74a14b-1f3a-463d-aa98-2f7124ee6fc3
        profile:
          $ref: '#/components/schemas/UserProfile'
        project_roles:
          type: array
          description: >-
            List of Project IDs in the current Account with the current User's
            role information
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectRole'
      x-model: Me
    Metric:
      type: object
      properties:
        aggregator:
          type: string
          description: >-
            The aggregation function for the numerator of the metric. 'unique'
            measures the number of unique visitors/sessions that include the
            specified Event. 'count' measures the total number of occurrences of
            Event for the scope (visitor/session). 'sum' is the sum of the
            'field' value
          enum:
            - unique
            - count
            - sum
        event_id:
          type: integer
          description: >-
            The ID for the Event to select data from. Omitted for global metrics
            that are not relative to a specific Event, i.e. "overall revenue"
          # format: int32
        field:
          type: string
          description: >-
            The field to aggregate for the numerator of the metric. Required
            when 'aggregator' = 'sum', otherwise omitted
          enum:
            - revenue
            - value
        scope:
          type: string
          description: >-
            Specifies how Events should be grouped together. Can also be thought
            of as the denonimator of the metric. 'session' divides by the number
            of sessions. "Influenced sessions", or sessions that do not contain
            a decision Event but carry a decision from a previous session are
            not included in counts for numerator or denominator. 'visitor'
            divides by the number of visitors. 'event' divides by the total
            occurrences (impressions) of the specified Event
          enum:
            - session
            - visitor
            - event
        winning_direction:
          type: string
          description: The winning direction of this metric
          enum:
            - increasing
            - decreasing
      x-model: Metric
    Options:
      type: object
      properties:
        choices:
          type: array
          description: The choices for a field
          items:
            $ref: '#/components/schemas/Choices'
      x-model: Options
    Page:
      required:
        - edit_url
        - name
        - project_id
      type: object
      properties:
        activation_code:
          type: string
          description: >-
            Stringified Javascript function that determines when the Page is
            activated. Only required when activation_type is 'polling' or
            'callback'.
          example: function callbackFn(activate, options) { activate(); }
        activation_type:
          type: string
          description: >
            Page activation type is a trigger that determines when the page is
            activated. Triggers tell Optimizely when to start checking whether
            certain conditions are true

            'Immediate' activation mode activates the page as soon as the
            snippet loads.

            'Polling' activation mode polls every 50ms until 'activation_code'
            evaluates to True, then activates the page.

            'Callback' activation mode activates the page when the event defined
            by 'activation_code' is triggered.

            'Manual' activation mode requires code within the subject app to
            explicitly trigger page activation.

            'DOM Changed' sets the page to trigger when the DOM changes [Learn
            more](https://help.optimizely.com/Build_Campaigns_and_Experiments/Support_for_dynamic_websites%3A_Use_Optimizely_on_single_page_applications#Triggers).

            'URL Changed' sets the page to trigger when the URL changes [Learn
            more](https://help.optimizely.com/Build_Campaigns_and_Experiments/Support_for_dynamic_websites%3A_Use_Optimizely_on_single_page_applications#Triggers).
          example: callback
          enum:
            - immediate
            - manual
            - polling
            - callback
            - dom_changed
            - url_changed
        archived:
          type: boolean
          description: Whether the Page has been archived
          default: false
        category:
          type: string
          description: The category this Page is grouped under
          default: other
          enum:
            - article
            - cart
            - category
            - checkout
            - home
            - landing_page
            - pricing
            - product_detail
            - search_results
            - other
        conditions:
          type: string
          description: >
            Stringified array of the conditions that activate the Page. The
            array contains Page Condition JSON dicts joined by "and" and "or".

            Each individual Page Condition dict has format {"type": "url",
            "match_type": <match_type>, "value": <value>} where match_types are:

            "simple" match type will match if "value" matches the hostname and
            path of the Page URL.

            "exact" match type will match only an exact string match between
            "value" and the Page URL.

            "substring" match type will match if "value" is a substring of the
            Page URL.

            "regex" match type will match if "value" is a regular expression
            match for the Page URL.
          example: >-
            ["and", {"type": "url", "match_type": "substring", "value":
            "optimize"}]
        created:
          type: string
          description: Date created
          format: date-time
          readOnly: true
        edit_url:
          type: string
          description: URL of the Page
          example: https://www.optimizely.com
        id:
          type: integer
          description: The unique identifier of the Page
          # format: int32
          readOnly: true
          example: 4000
        key:
          maxLength: 500
          pattern: ^[a-zA-Z0-9_]+$
          type: string
          description: Unique string identifier for this Page within the Project
          example: home_page
        last_modified:
          type: string
          description: Date last modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: Name of the Page
          example: Home Page
        page_type:
          type: string
          description: Type of Page
          enum:
            - single_url
            - url_set
            - global
        project_id:
          type: integer
          description: ID of the Page's Project
          # format: int32
          example: 1000
      x-model: Page
    PageUpdate:
      type: object
      properties:
        activation_code:
          type: string
          description: >-
            Stringified Javascript function that determines when the Page is
            activated. Only required when activation_type is 'polling' or
            'callback'.
        activation_type:
          type: string
          description: >
            Page activation type is a trigger that determines when the page is
            activated. Triggers tell Optimizely when to start checking whether
            certain conditions are true

            'Immediate' activation mode activates the page as soon as the
            snippet loads.

            'Polling' activation mode polls every 50ms until 'activation_code'
            evaluates to True, then activates the page.

            'Callback' activation mode activates the page when the event defined
            by 'activation_code' is triggered.

            'Manual' activation mode requires code within the subject app to
            explicitly trigger page activation.

            'DOM Changed' sets the page to trigger when the DOM changes [Learn
            more](https://help.optimizely.com/Build_Campaigns_and_Experiments/Support_for_dynamic_websites%3A_Use_Optimizely_on_single_page_applications#Triggers).

            'URL Changed' sets the page to trigger when the URL changes [Learn
            more](https://help.optimizely.com/Build_Campaigns_and_Experiments/Support_for_dynamic_websites%3A_Use_Optimizely_on_single_page_applications#Triggers).
          enum:
            - immediate
            - manual
            - polling
            - callback
            - dom_changed
            - url_changed
        archived:
          type: boolean
          description: Whether the Page is archived
        category:
          type: string
          description: The category this Page is grouped under
          enum:
            - article
            - cart
            - category
            - checkout
            - home
            - landing_page
            - pricing
            - product_detail
            - search_results
            - other
        conditions:
          type: string
          description: >
            Stringified array of the conditions that activate the Page. The
            array contains Page Condition JSON dicts joined by "and" and "or".

            Each individual Page Condition dict has format {"type": "url",
            "match_type": <match_type>, "value": <value>} where match_types are:

            "simple" match type will match if "value" matches the hostname and
            path of the Page URL.

            "exact" match type will match only an exact string match between
            "value" and the Page URL.

            "substring" match type will match if "value" is a substring of the
            Page URL.

            "regex" match type will match if "value" is a regular expression
            match for the Page URL.
          example: >-
            ["and", {"type": "url", "match_type": "substring", "value":
            "optimize"}]
        edit_url:
          type: string
          description: URL of the Page
        key:
          maxLength: 500
          pattern: ^[a-zA-Z0-9_]+$
          type: string
          description: Unique string identifier for this Page within the Project
          example: home_page
        name:
          type: string
          description: Page Name
          example: Home Page
        page_type:
          type: string
          description: Type of Page
          enum:
            - single_url
            - url_set
            - global
      x-model: PageUpdate
    Plan:
      type: object
      properties:
        account_id:
          type: integer
          description: >-
            The account ID of the account that this Plan & Usage information is
            associated with
          # format: int32
          example: 1234567
        plan_name:
          type: string
          description: The name of the plan for the current account
          example: Enterprise - Premium Optimizely X Web
        product_usages:
          type: array
          description: Array of products under this account
          items:
            $ref: '#/components/schemas/ProductUsage'
        status:
          type: string
          description: The status of the plan for the current account
          enum:
            - trial
            - active
            - inactive
        unit_of_measurement:
          type: string
          description: The unit by which we measure the `usage` of this account
          enum:
            - Monthly Unique Visitors
            - Impressions
      x-model: Plan
    ProductUsage:
      type: object
      properties:
        allocation_term_in_months:
          type: integer
          description: >-
            The current allocation term length in months. The allocation term is
            the time between the `start_time` and the `end_time`. For example
            the `usage` for an account with an `allocation_term_in_months` of 6
            has started accumulating on the `start_time` and will reset to 0 at
            `end_time` (6 months later)
          # format: int32
          example: 6
        end_time:
          type: string
          description: >-
            The end date of the current allocation term period. For monthly
            paying accounts, the current allocation term period means the
            current billing month
          format: date-time
        last_update_time:
          type: string
          description: The last time that the `unit_of_measurement` count was updated
          format: date-time
        overage_cents_per_visitor:
          type: number
          description: >-
            (optional) The cost in cents for every visitor when the number of
            `unit_of_measurement` has exceeded the `usage_allowance`. This value
            is only set for accounts with a limited `usage_allowance`
          format: float
          example: 0.001
        product_name:
          type: string
          description: The product name
          enum:
            - Optimizely X AB Testing
            - Classic AB Testing
            - Personalization
            - Mobile
            - Full Stack
            - Recommendations
            - Over The Top
            - Impressions
        projects:
          type: object
          additionalProperties:
            type: integer
          description: >-
            Key-value map of `usage` per project under this account and this
            product. Keys are project IDs, values are `usage` numbers. Only
            available for the Impressions metrics, otherwise omitted.
        start_time:
          type: string
          description: >-
            The start date of the current allocation term period. For monthly
            paying accounts, the current allocation term period means the
            current billing month
          format: date-time
        usage:
          type: integer
          description: >-
            The total `usage` in the `unit_of_measurement` within the current
            allocation term
          # format: int32
          example: 12345
        usage_allowance:
          type: integer
          description: >-
            (optional) The total `usage` allowed in the `unit_of_measurement`
            for the current allocation term. This value is only set for accounts
            with a limited `usage_allowance`
          # format: int32
          example: 123456
      x-model: ProductUsage
    Project:
      required:
        - name
      type: object
      properties:
        account_id:
          type: integer
          description: The account the Project is associated with
          # format: int32
          readOnly: true
          example: 12345
        confidence_threshold:
          maximum: 1
          minimum: 0.5
          type: number
          description: >
            The significance level at which you would like to declare winning
            and losing variations. A lower number minimizes the time needed to
            declare a winning or losing variation, but increases the risk that
            your results aren't true winners and losers. The precision for this
            number is up to 4 decimal places
          format: double
          example: 0.9
        created:
          type: string
          description: The time that the Project was originally created
          format: date-time
          readOnly: true
        dcp_service_id:
          type: integer
          description: >-
            The ID of a Dynamic Customer Profile Service associated with this
            Project
          # format: int32
          example: 121234
        description:
          type: string
          description: A short description of the Project
          example: Project for user sign up flow
        id:
          type: integer
          description: The unique identifier for the Project
          # format: int32
          readOnly: true
          example: 1000
        is_classic:
          type: boolean
          description: >
            If `is_classic` is true it means that the project doesn't have
            Optimizely X enabled. In other words: this project is Optimizely
            Classic only. The v2 REST API can only be used for Optimizely X
            objects (with the exception of Audiences and Projects, which can be
            shared between Optimizely X and Classic), so when `is_classic` is
            set to true you will need to use the v1 API
          readOnly: true
        is_flags_enabled:
          type: boolean
          description: >-
            If is_flags_enabled is true, this project uses the new Flags-First
            user experience and will use the [Flags
            API](https://library.optimizely.com/docs/api/flags/v1/index.html) to
            make changes to entities.
        last_modified:
          type: string
          description: The time the Project was last modified
          format: date-time
          readOnly: true
        name:
          type: string
          description: The name of the Project
          example: Test Project
        platform:
          type: string
          description: The platform of the Project
          default: web
          enum:
            - web
            - ios
            - android
            - custom
        sdks:
          type: array
          description: >-
            For Full Stack, Mobile, and OTT projects, the language used for the
            SDK
          items:
            type: string
            enum:
              - android
              - android_tv
              - ios
              - java
              - javascript
              - node
              - php
              - python
              - ruby
              - tv_os
        socket_token:
          type: string
          description: >-
            The token used to identify your mobile app to Optimizely (mobile
            only)
          readOnly: true
          example: AABBCCDD~123456789
        status:
          type: string
          description: The current status of the Project
          default: active
          enum:
            - active
            - archived
        third_party_platform:
          type: string
          description: >
            The third party platform with which the project is intended to be
            used. When this is set, a project might have special restrictions.
            This can have a value of "salesforce" but defaults to null. In order
            to set this field, an account must have the third party platforms
            feature and be a fullstack project.
          nullable: true
          enum:
            - salesforce
        web_snippet:
          $ref: '#/components/schemas/WebSnippet'
      x-model: Project
    ProjectRole:
      type: object
      properties:
        invitation_status:
          type: string
          readOnly: true
          enum:
            - pending
        project_id:
          type: integer
          description: The unique identifier of the Project
          # format: int32
          readOnly: true
        role:
          type: string
          readOnly: true
          enum:
            - administrator
            - viewer
            - restricted_editor
            - editor
            - restricted_publisher
            - publisher
            - project_owner
      x-model: ProjectRole
    ProjectUpdate:
      type: object
      properties:
        account_id:
          type: integer
          description: The ID of the account the Project is associated with
          # format: int32
          readOnly: true
          example: 12345
        confidence_threshold:
          maximum: 1
          minimum: 0.5
          type: number
          description: >-
            The significance level at which you would like to declare winning
            and losing variations. A lower number minimizes the time needed to
            declare a winning or losing variation, but increases the risk that
            your results aren't true winners and losers. The precision for this
            number is up to 4 decimal places.
          format: double
          example: 0.9
        dcp_service_id:
          type: integer
          description: >-
            The ID of a Dynamic Customer Profile Service associated with this
            Project
          # format: int32
          example: 121234
        description:
          type: string
          description: A short description of the Project
          example: Project for user sign up flow
        name:
          type: string
          description: The name of the Project
          example: Test Project
        status:
          type: string
          description: The current status of the Project
          enum:
            - active
            - archived
        web_snippet:
          $ref: '#/components/schemas/WebSnippetUpdate'
      x-model: ProjectUpdate
    ResultsShareLink:
      type: object
      properties:
        url:
          type: string
          description: The share link for the results of this Campaign
          format: url
          readOnly: true
      x-model: ResultsShareLink
    Revision:
      type: object
      properties:
        id:
          type: integer
          description: Reference to a revision of the entity.
          nullable: true
      x-model: Revision
    RolloutRule:
      type: object
      properties:
        audience_conditions:
          type: string
          description: >
            The audiences that should see this feature. To target everyone, use
            the string "everyone". Multiple audiences can be combined with "and"
            or "or" using the same structure as audience conditions.
            <code>audience_conditions</code> sent in any environment must always
            match those of the primary environment.
          example: '["and", {"audience_id": 7000}, {"audience_id": 7001}]'
        enabled:
          type: boolean
          description: >-
            Whether or not the Rollout Rule is applied in this Environment. You
            can toggle this on and off by sending True or False.
          default: false
        percentage_included:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            The percentage of the designated audiences that should get this
            Feature, measured in basis points. 100 basis points = 1% traffic.
      x-model: RolloutRule
    Schedule:
      type: object
      properties:
        start_time:
          pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}(:\d{2}(:00(.000)?)?)?((Z)?))?$
          type: string
          description: >-
            The start time for the Experiment, in date-time or date format (as
            defined by ISO 8601), and rounded to the nearest minute. If only
            date is supplied without time, the start time defaults to 00:00 on
            the specified start date.
          example: 2019-02-20T15:00
        stop_time:
          pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}(:\d{2}(:00(.000)?)?)?((Z)?))?$
          type: string
          description: >-
            The stop time for the Experiment, in date-time or full-date format
            (as defined by ISO 8601), and rounded to the nearest minute. If only
            date is supplied without time, the stop time defaults to 00:00 on
            the specified
             stop date.
          example: 2019-02-20T18:00
        time_zone:
          pattern: ^[A-Za-z\-\_\/]+$
          type: string
          description: >-
            The time zone to use for Experiment start and stop times with
            respect to an IANA time zone (ex. "America/New_York"). The time
            zones expressed by GMT (e.g. "GMT-08:00") are no longer supported.
          example: America/New_York
          default: UTC
      x-model: Schedule
    ScheduleUpdate:
      type: object
      properties:
        start_time:
          pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}(:\d{2}(:00(.000)?)?)?((Z)?))?$
          type: string
          description: >-
            The start time for the Experiment, in date-time or date format (as
            defined by ISO 8601), and rounded to the nearest minute. If only
            date is supplied without time, the start time defaults to 00:00 on
            the specified start date.
          example: 2019-02-20T15:00
        stop_time:
          pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}(:\d{2}(:00(.000)?)?)?((Z)?))?$
          type: string
          description: >-
            The stop time for the Experiment, in date-time or full-date format
            (as defined by ISO 8601), and rounded to the nearest minute. If only
            date is supplied without time, the stop time defaults to 00:00 on
            the specified
             stop date.
          example: 2019-02-20T18:00
        time_zone:
          pattern: ^[A-Za-z\-\_\/]+$
          type: string
          description: >-
            The time zone to use for Experiment start and stop times with
            respect to an IANA time zone (ex. "America/New_York"). The time
            zones expressed by GMT (e.g. "GMT-08:00") are no longer supported.
          example: America/New_York
      x-model: ScheduleUpdate
    ScheduledJob:
      required:
        - frequency
        - job_type
        - project_id
      type: object
      properties:
        account_id:
          type: integer
          description: The account that the job is associated with
          # format: int32
          readOnly: true
          example: 456
        archived:
          type: boolean
          description: Whether the Scheduled Job is archived
          readOnly: true
          example: false
          default: false
        campaign_ids:
          type: array
          description: A list of campaign_ids that should be considered during the job
          example:
            - 12
            - 34
          items:
            type: integer
            # format: int32
        experiment_ids:
          type: array
          description: A list of experiment_ids that should be considered during the job
          example:
            - 56
            - 78
            - 90
          items:
            type: integer
            # format: int32
        frequency:
          type: string
          description: How often the job should be performed
          example: weekly
          enum:
            - daily
            - weekly
        id:
          type: integer
          description: The unique identifier of the Scheduled Job
          # format: int32
          readOnly: true
          example: 123
        job_type:
          type: string
          description: The type of job to be performed
          example: project_results
          enum:
            - project_results
        output_channels:
          type: object
          properties: {}
          description: >-
            An object describing how the output of the job should be
            communicated
          example: '{"email": ["test@example.com", "another@example.com"]}'
        project_id:
          type: integer
          description: The project that the job is associated with
          # format: int32
          example: 789
      x-model: ScheduledJob
    ScheduledJobUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether the Scheduled Job is archived
        campaign_ids:
          type: array
          description: A list of campaign_ids that should be considered during the job
          items:
            type: integer
            # format: int32
        experiment_ids:
          type: array
          description: A list of experiment_ids that should be considered during the job
          items:
            type: integer
            # format: int32
        frequency:
          type: string
          enum:
            - daily
            - weekly
        job_type:
          type: string
          description: The type of job to be performed
          enum:
            - project_results
        output_channels:
          type: object
          properties: {}
          description: >-
            An object describing how the output of the job should be
            communicated
        project_id:
          type: integer
          description: The project that the job is associated with
          # format: int32
      x-model: ScheduledJobUpdate
    SearchResult:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the entity is archived.
          example: false
        created:
          type: string
          description: The time that the entity was created.
          format: date-time
        description:
          type: string
          description: Description for the entity if it has one.
          example: Test out the hero image on the home page
        experiment_type:
          type: string
          description: The type of experiment
          example: a/b
        feature_key:
          type: string
          description: The feature flag key
          example: my_feature_flag
        feature_name:
          type: string
          description: >-
            The feature flag name to display in the Optimizely app. Whitespaces
            and other non-alphanumeric characters allowed. Defaults to feature
            key if left empty.
          example: the user search feature
        id:
          type: integer
          description: ID of the entity
          readOnly: true
        key:
          type: string
          description: Key of the entity.
          example: hero_image_test
        last_modified:
          type: string
          description: The time that the entity was last modified.
          format: date-time
        name:
          type: string
          description: >-
            Name of the entity. This value will be the 'key' of the entity if
            there is no name.
          example: Hero Image Test
        project_id:
          type: integer
          description: ID of the project that contains the entity (if applicable)
        project_name:
          type: string
          description: Name of the project that contains the entity (if applicable)
        status:
          type: string
          description: The current status for the entity if it has one.
          example: running
        type:
          type: string
          description: Type of the entity.
          example: experiment
          enum:
            - experiment
            - campaign
            - feature
            - audience
            - page
            - event
      x-model: SearchResult
    Section:
      required:
        - variations
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the Section has been archived
          default: false
        description:
          type: string
          description: A short description of this Section
        experiment_id:
          type: integer
          description: The ID of the Multivariate Test this Section belongs to
        id:
          type: integer
          description: The ID of this Section
        name:
          type: string
          description: The name of this Section
          example: Headline Variations
        project_id:
          type: integer
          description: The ID of the project that this Section belongs to
        variations:
          type: array
          items:
            $ref: '#/components/schemas/Variation'
      x-model: Section
    SectionUpdate:
      type: object
      properties:
        archived:
          type: boolean
          description: Whether or not the Section has been archived
          default: false
        description:
          type: string
          description: A short description of this Section
        name:
          type: string
          description: The name of this Section
          example: Headline Variations
        variations:
          type: array
          items:
            $ref: '#/components/schemas/Variation'
      x-model: SectionUpdate
    SharedCodeChange:
      required:
        - type
        - value
      type: object
      properties:
        async:
          type: boolean
          description: >-
            Indicates whether or not to execute the change asyncronously. If
            true, src will be returned in the response. Otherwise, it will be
            not included.
        dependencies:
          type: array
          description: A list of dependent change IDs that must happen before this change
          example:
            - 993fd09c-b64a-4c13-95a9-13b3ed2c454e
            - 95cf0144-fb63-431d-829b-193fe55ada18
          items:
            type: string
            format: uuid
        id:
          type: string
          description: The ID of the change
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the change
          example: Setting button text
        selector:
          type: string
          description: >-
            CSS selector to determine where changes are applied. Required for
            changes of type 'custom_css'.
          example: head
        src:
          type: string
          description: >-
            The path to the change payload on the CDN. Only present if 'async'
            is True.
          readOnly: true
        type:
          type: string
          description: The type of this change.
          enum:
            - custom_code
            - custom_css
        value:
          type: string
          description: The value for the change can be JavaScript or CSS as a string.
          example: window.someGlobalFunction();
      x-model: SharedCodeChange
    StatsConfig:
      type: object
      properties:
        confidence_level:
          type: number
          description: Confidence level
        difference_type:
          type: string
          description: The type of test to compare the variant to baseline
          enum:
            - absolute
            - relative
        epoch_enabled:
          type: boolean
          description: Indicates if epoch-based statistics were used
      description: Stats Engine configuration settings
      x-model: StatsConfig
    SubjectAccessRequest:
      required:
        - data_type
        - identifier
        - identifier_type
        - request_type
      type: object
      properties:
        account_id:
          type: integer
          description: >-
            The Account ID for the account the Subject Access Request will be
            executed.
          # format: int32
          readOnly: true
          example: 12345
        completed_at_time:
          type: string
          description: The time when the request was completed.
          format: date-time
          nullable: true
          readOnly: true
        data_type:
          type: string
          description: >
            <p>The type of data to be accessed or deleted. The two options
            are:</p>


            <ul>
                <li><code>user</code> - End users (also known as <em>Collaborators</em>) that are added to the accounts of our customers. A user can be a <a href="https://help.optimizely.com/Set_Up_Optimizely/Manage_collaborators_in_Optimizely_X" rel="internal"><u>collaborator</u></a> on multiple accounts.</li>
                <li><code>visitor</code> - Visitors who visit or use our customers’ websites, apps and other digital products. Optimizely stores visitor data to calculate experiment results and to tailor content.</li>
            </ul>
          example: user
          enum:
            - user
            - visitor
        expired_at_time:
          type: string
          description: Time when the url expires (7 days from the completed_at_time)
          format: date-time
          readOnly: true
        export_location:
          type: string
          description: >-
            The location to which the data will be exported. The data will be
            made accessible in a AWS S3 bucket.
          readOnly: true
          example: >-
            https://s3-us-west-2.amazonaws.com/optimizely-sar-prod/{account-id}-{request_id}.zip
        id:
          type: integer
          description: The Subject Access Request ID.
          # format: int32
          readOnly: true
          example: 12345
        identifier:
          maxLength: 355
          type: string
          description: >-
            The identifier value that you would like us to use when searching.
            If <code>user</code> was selected in the previous step, the
            identifier will be the email address for the User.
          example: test@optimizely.com
        identifier_type:
          type: string
          description: >
            <p>User data is identified by the email address used to create the
            end user account. The endpoint only accepts the <code>email</code>
            datatype if you selected <code>user</code> for
            <strong>Datatype</strong>.<br>

            <br>

            If you selected <code>visitor</code> for <strong>data_type</strong>,
            you can select 5 options for personal identifier types:</p>


            <ul>
                <li>
                <p><code>dcp_id</code> - Any ID used to identify targeting records in Optimizely.</p>
                </li>
                <li>
                <p><code>email</code> - The email address of a visitor.</p>
                </li>
                <li>
                <p><code>fullstack_id</code> - The unique identifier used for Full Stack experiments.</p>
                </li>
                <li>
                <p><code>optimizely_end_user_id</code> - An Optimizely generated user cookie.</p>
                </li>
                <li>
                <p><code>other</code> -&nbsp;Any other identifier that was uploaded to Optimizely.</p>
                </li>
            </ul>
          example: email
          enum:
            - email
            - optimizely_end_user_id
            - dcp_id
            - fullstack_id
            - other
        processing_started_time:
          type: string
          description: The time when the processing of the Subject Access Request started.
          format: date-time
          nullable: true
          readOnly: true
        request_type:
          type: string
          description: >
            <code>delete</code> - Removes all data within an account that is
            associated to the identifier defined in the identifier field.

            <br>

            <code>access</code> - Finds all data stored in Optimizely systems
            associated to the identifier defined in the identifier field and
            exports it to an AWS S3 bucket for you to access.
          example: access
          enum:
            - access
            - delete
        requested_at_time:
          type: string
          description: The time when the Subject Access Request was submitted.
          format: date-time
          readOnly: true
        sla_deadline_time:
          type: string
          description: The time by which the Subject Access Request must be completed.
          format: date-time
          nullable: true
          readOnly: true
        status:
          type: string
          description: The status of the Subject Access Request.
          readOnly: true
          example: pending
          enum:
            - pending
            - processing
            - completed
            - failure
      x-model: SubjectAccessRequest
    SubjectAccessRequestInternal:
      required:
        - data_source
        - data_type
        - identifier
        - identifier_type
        - request_type
      type: object
      properties:
        account_id:
          type: integer
          description: Admin account id
          # format: int32
          readOnly: true
        completed_at_time:
          type: string
          description: Time when the request was completed
          format: date-time
          nullable: true
          readOnly: true
        data_source:
          type: string
          description: Subject Access Request Data Source
          example: optimizely
          enum:
            - app_backend
            - app_backend_infra
            - data_platform
            - datawarehouse
            - external_systems
            - optimizely
            - optimizely_on_optimizely
            - program_management
            - security
            - business_systems
            - marketing
            - tse
        data_type:
          type: string
          description: Subject Access Request Data Type
          example: user
          enum:
            - user
            - visitor
        expired_at_time:
          type: string
          description: Time when the url expires (7 days from the completed_at_time)
          format: date-time
          readOnly: true
        export_location:
          type: string
          description: The location to which the data will be exported.
          readOnly: true
          example: s3://{bucket-name}/{account_id}/{parent_sar_id}/{sar_id}
        id:
          type: integer
          description: Subject Access Request ID
          # format: int32
          readOnly: true
          example: 12345
        identifier:
          type: string
          description: Subject Access Request Identifier
          example: test@optimizely.com
        identifier_type:
          type: string
          description: Subject Access Request Identifier Type
          example: email
          enum:
            - email
            - optimizely_end_user_id
            - dcp_id
            - fullstack_id
            - other
        parent_request_id:
          type: integer
          description: Parent Subject Access Request id
          # format: int32
          readOnly: true
          example: 12345
        processing_started_time:
          type: string
          description: Time when the processing of the request started
          format: date-time
          nullable: true
          readOnly: true
        request_type:
          type: string
          description: Subject Access Request Request Type
          example: access
          enum:
            - access
            - delete
        requested_at_time:
          type: string
          description: Time when the request was submitted
          format: date-time
          readOnly: true
        sla_deadline_time:
          type: string
          description: Time by which the request must be deleted
          format: date-time
          readOnly: true
        status:
          type: string
          description: Status of the Subject Access Request
          readOnly: true
          example: pending
          enum:
            - pending
            - processing
            - completed
            - failure
      x-model: SubjectAccessRequestInternal
    SubjectAccessRequestUpdate:
      required:
        - status
      type: object
      properties:
        completed_at_time:
          type: string
          description: Time when the request was completed
          format: date-time
          nullable: true
        export_location:
          type: string
          description: >-
            s3 path to the Subject Access Request's ZIP file in the
            optimizely-sar-prod bucket
          example: s3://optimizely-sar-prod/{admin_account_id}-{parent_request_id}.zip
        processing_started_time:
          type: string
          description: Time when the processing of the request started
          format: date-time
          nullable: true
        status:
          type: string
          description: Status of the Subject Access Request
          example: processing
          enum:
            - pending
            - processing
            - completed
            - failure
      x-model: SubjectAccessRequestUpdate
    TimeseriesDatapoint:
      type: object
      properties:
        lift:
          $ref: '#/components/schemas/Datapoint'
        rate:
          type: number
          description: >-
            The value of the metric after dividing the numerator value over the
            denominator value
          format: double
        samples:
          type: number
          description: The value of the denominator
          # format: int32
        time:
          type: string
          description: Time of this data point formatted in ISO 8601
          format: date-time
        value:
          type: number
          description: The value of the numerator
          # format: int32
        variance:
          type: number
          description: The variance of the metric value
          format: double
      x-model: TimeseriesDatapoint
    URLTargeting:
      required:
        - edit_url
      type: object
      properties:
        activation_code:
          type: string
          description: >-
            Stringified Javascript function that determines when the Page is
            activated. Only required when activation_type is 'polling' or
            'callback'.
          example: function callbackFn(activate, options) { activate(); }
        activation_type:
          type: string
          description: >-
            How this page is activated.  See the full documentation on the Page
            object.
          example: callback
          enum:
            - immediate
            - manual
            - polling
            - callback
            - dom_changed
            - url_changed
        conditions:
          type: string
          description: >-
            Conditions to activate the experiment; our knowledge base article on
            Activation Types is the best guide for how to set up this data.
          example: >-
            ["and", {"type": "url", "match_type": "substring", "value":
            "optimize"}]
        edit_url:
          type: string
          description: URL to load in the editor for this page
          example: https://www.optimizely.com
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_]+$
          type: string
          description: Unique string identifier for this Page within the Project
          example: home_page
        page_id:
          type: integer
          description: >-
            The unique identifier of the Page that represents the experiment or
            campaign's URL Targeting.
          # format: int32
          readOnly: true
          example: 6700
      x-model: URLTargeting
    User:
      required:
        - email
        - id
      type: object
      properties:
        display_name:
          type: string
          description: Display name of the user, most commonly the Optimizely user's email.
          nullable: true
        email:
          type: string
          description: Email of the user.
        first_name:
          type: string
          description: First name of the user.
          nullable: true
        id:
          type: string
          description: ID of the user.
        last_name:
          type: string
          description: Last name of the user.
          nullable: true
        profile_image_url:
          type: string
          description: URL to the user profile image.
          nullable: true
      x-model: User
    UserProfile:
      type: object
      properties:
        email:
          type: string
          description: User's email
          format: email
        first_name:
          type: string
          description: User's first name
          default: ''
        last_name:
          type: string
          description: User's last name
          default: ''
        profile_image:
          type: string
          description: User's profile image URL
          format: url
          default: ''
      x-model: UserProfile
    UserProxy:
      required:
        - id
        - proxy_type
      type: object
      properties:
        email:
          type: string
          description: Email of the user proxy.
        id:
          type: string
          description: ID of the user proxy.
        proxy_type:
          type: string
          description: Type of user proxy.
          enum:
            - emulator
            - system
      x-model: UserProxy
    VariantResults:
      type: object
      properties:
        experiment_id:
          type: integer
          description: >-
            The unique identifier for the Experiment this entity contains
            results for (if applicable)
          # format: int32
        is_baseline:
          type: boolean
          description: >-
            Indicates that this variant is the baseline that all other entities
            will be compared against. Also referred to as the 'Control' or
            'Control Group'
        level:
          type: string
          description: The level of entity that this variant represents
          enum:
            - variation
            - experiment
            - campaign
        lift:
          $ref: '#/components/schemas/Datapoint'
        name:
          type: string
          description: The name of the variant
          example: Blue Button
        rate:
          type: number
          description: >-
            The value of the metric after dividing the numerator value over the
            denominator value
          format: double
        samples:
          type: number
          description: The value of the denominator
          # format: int32
        total_increase:
          $ref: '#/components/schemas/Datapoint'
        value:
          type: number
          description: The value of the numerator
          # format: int32
        variance:
          type: number
          description: The variance of the metric value
          format: double
        variation_id:
          type: string
          description: >-
            The unique identifier for the variation this entity contains results
            for (if applicable)
      x-model: VariantResults
    VariantTimeseries:
      type: object
      properties:
        experiment_id:
          type: integer
          description: >-
            The unique identifier for the Experiment this entity contains
            results for (if applicable)
          # format: int32
        is_baseline:
          type: boolean
          description: >-
            Indicates that this variant is the baseline that all other entities
            will be compared against. Also referred to as the 'Control' or
            'Control Group'
        level:
          type: string
          description: The level of entity that this variant represents
          enum:
            - variation
            - experiment
            - campaign
        name:
          type: string
          description: The name of the variant
          example: Blue Button
        timeseries:
          type: array
          description: The results time series data points
          items:
            $ref: '#/components/schemas/TimeseriesDatapoint'
        variation_id:
          type: string
          description: >-
            The unique identifier for the variation this entity contains results
            for (if applicable)
      x-model: VariantTimeseries
    Variation:
      required:
        - weight
      type: object
      properties:
        actions:
          type: array
          description: >-
            A collection of changes to run for each page in an experiment. Only
            applicable to Optimizely X Web.
          items:
            $ref: '#/components/schemas/Action'
        archived:
          type: boolean
          description: Whether the variation is archived
        description:
          type: string
          description: A description of the variation.
        feature_enabled:
          type: boolean
          description: >-
            For Feature Tests, indicates if the feature should be enabled for
            the variation
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: >-
            Unique string identifier for this variation within the Experiment.
            Only applicable for Full Stack and Mobile projects.
          example: blue_button_variation
        name:
          type: string
          description: >-
            The name of the variation. Required for Web Experiments and
            Personalization experiences. Not required for Full Stack
            Experiments.
          example: Blue Button
        status:
          type: string
          description: Current status of the variation
          enum:
            - active
            - paused
            - archived
        variable_values:
          type: object
          additionalProperties:
            type: string
          description: >-
            For Feature Tests, the variable values for the variation represented
            as a map of Variable keys to their values.
        variation_id:
          type: integer
          description: The unique identifier for the variation
          # format: int32
          readOnly: true
        weight:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            The percentage of your visitors that should see this variation,
            measured in basis points. 100 basis points = 1% traffic. Variation
            weights must add up to 10000.
      x-model: Variation
    VariationReach:
      type: object
      properties:
        count:
          type: integer
          description: Total number of visitors exposed to this particular variation
          # format: int32
        name:
          type: string
          description: The name of the variation
          example: Blue Button
        variation_id:
          type: string
          description: The unique identifier for the variation
        variation_reach:
          type: number
          format: double
      x-model: VariationReach
    VariationUpdate:
      required:
        - weight
      type: object
      properties:
        actions:
          type: array
          description: >-
            A collection of changes to run for each page in an experiment. Only
            applicable to Optimizely X Web.
          items:
            $ref: '#/components/schemas/Action'
        archived:
          type: boolean
          description: Whether the variation is archived
        description:
          type: string
          description: A description for the variation.
          example: Change the CTA button background color from green to blue.
        feature_enabled:
          type: boolean
          description: >-
            For Feature Tests, indicates if the feature should be enabled for
            the variation
        key:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_\-]+$
          type: string
          description: >-
            Unique string identifier for this variation within the Experiment.
            Only applicable for Full Stack and Mobile projects.
          example: blue_button_variation
        name:
          type: string
          description: >-
            The name of the variation. Required for Web Experiments and
            Personalization experiences. Not required for Full Stack
            Experiments.
          example: Blue Button
        status:
          type: string
          description: Current status of the variation
          enum:
            - active
            - paused
            - archived
        variable_values:
          type: object
          additionalProperties:
            type: string
          description: >-
            For Feature Tests, the variable values for the variation represented
            as a map of Variable keys to their values.
        variation_id:
          type: integer
          description: >-
            An immutable unique identifier for the variation. Required to update
            an existing variation.
          # format: int32
        weight:
          maximum: 10000
          minimum: 0
          type: integer
          description: >-
            The percentage of your visitors that should see this variation,
            measured in basis points. 100 basis points = 1% traffic. Variation
            weights must add up to 10000.
      example:
        actions:
          - changes:
              - allow_additional_redirect: true
                async: true
                attributes:
                  class: new_class
                  style: background-color:blue
                  text: Some nice message
                selector: '#my_div'
                type: attribute
            page_id: 5678
        variation_id: 1234
        weight: 5000
      x-model: VariationUpdate
    WebSnippet:
      type: object
      properties:
        code_revision:
          type: integer
          description: The current revision number of the Project snippet
          readOnly: true
        enable_force_variation:
          type: boolean
          description: >-
            Enables the option to force yourself into a specific variation on
            any page
          default: false
        exclude_disabled_experiments:
          type: boolean
          description: Set to true to remove paused and draft Experiment from the snippet
          default: false
        exclude_names:
          type: boolean
          description: Set to true to mask descriptive names
          default: true
        include_jquery:
          type: boolean
          description: Set to true to include jQuery in your snippet
          default: true
        ip_anonymization:
          type: boolean
          description: >-
            Set to true to change the last octet of IP addresses to 0 prior to
            logging
          default: false
        ip_filter:
          type: string
          description: >-
            A regular expression (max 1500 characters) matching ip addresses for
            filtering out visitors. Matching visitors will still see the
            Experiment, but they won't be counted in results.
          example: ^206\.23\.100\.([5-9][0-9]|1([0-4][0-9]|50))$
        js_file_size:
          type: integer
          description: The current size in bytes of the Project snippet
          readOnly: true
          example: 63495
        library:
          type: string
          description: >-
            The prefered jQuery library version you would like to use with your
            snippet. If you do not want to include jQuery, set include_jquery to
            false
          default: jquery-1.11.3-trim
          enum:
            - jquery-1.11.3-trim
            - jquery-1.11.3-full
            - jquery-1.6.4-trim
            - jquery-1.6.4-full
            - none
        project_javascript:
          type: string
          description: >-
            The javascript code which runs before Optimizely on all pages,
            regardless of whether or not there is a running Experiment
          example: alert("Active Experiment")
        visitor_id_locator_name:
          type: string
          description: (BETA) The name of said identifier that locates the visitor id
          nullable: true
          example: cookie_name
        visitor_id_locator_type:
          type: string
          description: >-
            (BETA) The type of identifer where the visitor id is located (e.g.
            cookies, query param)
          nullable: true
          enum:
            - cookie
            - query
            - localStorage
            - js
      x-model: WebSnippet
    WebSnippetUpdate:
      type: object
      properties:
        enable_force_variation:
          type: boolean
          description: >-
            Enables the option to force yourself into a specific variation on
            any page
        exclude_disabled_experiments:
          type: boolean
          description: Set to true to remove paused and draft Experiment from the snippet
        exclude_names:
          type: boolean
          description: Set to true to mask descriptive names
        include_jquery:
          type: boolean
          description: Set to true to include jQuery in your snippet
        ip_anonymization:
          type: boolean
          description: >-
            Set to true to change the last octet of IP addresses to 0 prior to
            logging
        ip_filter:
          type: string
          description: >-
            A regular expression (max 1500 characters) matching ip addresses for
            filtering out visitors. Matching visitors will still see the
            Experiment, but they won't be counted in results.
          example: ^206\.23\.100\.([5-9][0-9]|1([0-4][0-9]|50))$
        library:
          type: string
          description: >-
            The prefered jQuery library version you would like to use with your
            snippet. If you do not want to include jQuery, set include_jquery to
            false
          enum:
            - jquery-1.11.3-trim
            - jquery-1.11.3-full
            - jquery-1.6.4-trim
            - jquery-1.6.4-full
            - none
        project_javascript:
          type: string
          description: >-
            The javascript code which runs before Optimizely on all pages,
            regardless of whether or not there is a running Experiment
          example: alert("Active Experiment")
        visitor_id_locator_name:
          type: string
          description: (BETA) The name of said identifier that locates the visitor id
          nullable: true
          example: cookie_name
        visitor_id_locator_type:
          type: string
          description: >-
            (BETA) The type of identifer where the visitor id is located (e.g.
            cookies, query param)
          nullable: true
          enum:
            - cookie
            - query
            - localStorage
            - js
      x-model: WebSnippetUpdate
  parameters:
    attribute_id_segment:
      name: attribute_id
      in: query
      description: >
        ID of the attribute to segment results by. Requests containing
        attribute_id will return the results for all visitors that have
        attribute_value for the attribute represented by attribute_id. If
        present, the attribute_value parameter must also be present, and it
        cannot be sent with any other segmentation parameters, i.e. any
        parameters in [browser, device, source].
      schema:
        type: integer
        # format: int32
    attribute_value_segment:
      name: attribute_value
      in: query
      description: >
        UTF-8 encoded value correlating to attribute_id. If present, the
        attribute_id parameter must also be present. This parameter also
        requires attribute_id to be set, and cannot be sent with any other
        segmentation parameters, i.e. any parameters in [browser, device,
        source].
      schema:
        type: string
    browser_segment:
      name: browser
      in: query
      description: >-
        Browser to segment results by. This parameter must not be sent with any
        other segmentation parameters, i.e. any parameters in [device, source,
        attribute_id, attribute_value].
      schema:
        type: string
        enum:
          - firefox
          - chrome
          - internet_explorer
          - opera
          - safari
    device_segment:
      name: device
      in: query
      description: >-
        Device to segment results by. This parameter must not be sent with any
        other segmentation parameters, i.e. any parameters in [browser, source,
        attribute_id, attribute_value].
      schema:
        type: string
        enum:
          - desktop
          - ipad
          - iphone
          - mobile
          - tablet
    page:
      name: page
      in: query
      description: >
        Optional pagination argument that specifies the page to return. If you
        have 140 objects and you choose to return 100 objects per page you will
        be able to access the last 40 objects on page 2. The default value is 1.
      schema:
        type: integer
        default: 1
    per_page:
      name: per_page
      in: query
      description: >-
        Optional pagination argument that specifies the maximum number of
        objects to return per request
      schema:
        maximum: 100
        type: integer
        default: 25
    segment_conditions:
      name: segment_conditions
      in: query
      description: >
        (BETA) A string representation of a JSON Segment Conditions Expression.
        This parameter can be either URL-escaped stringified JSON or
        Base64-encoded stringified JSON using URL-safe alphabet (preferred).

        Segment Conditions Expressions consist of Logical Expressions and Match
        Expressions.

        Logical Expressions are represented as an array of the format
        [<operator>, <expression>...], where the supported operators are "and",
        "or" and "not".

        Match Expressions are represented as an object of the format
        {"attribute_id": <attribute_id>, "attribute_value": <value>[,
        "match_type": <match_type>]}, where supported values for match_type are
        "exact" match type will match only an exact string match between "value"
        string and the attribute value. "substring" match type will match if
        "value" is a substring of the attribute value. "prefix" match type will
        match if "value" is a string prefix of the attribute value. "regex"
        match type will match if "value" is a regular expression match for the
        attribute value. The default match_type is "exact".
      schema:
        type: string
    source_segment:
      name: source
      in: query
      description: >
        Source to segment results by. This parameter must not be sent with any
        other segmentation parameters, i.e. any parameters in [browser, device,
        attribute_id, attribute_value].

        Campaign: Contains users that arrive on a URL containing a
        'utm_campaign,' 'utm_source,' 'gclid,' or 'otm_source' query parameter.
        If the URL contains one of these parameters, the visitor will count as
        "Campaign" traffic even if they arrived through search.

        Direct:  Includes all users who do not have any external referrer in
        their URL.

        Referral: Includes all users that come from another URL that doesn't
        count as Campaign.
      schema:
        type: string
        enum:
          - campaign
          - direct
          - referral
          - search
  securitySchemes:
    oauth2:
      type: oauth2
      description: >-
        Write applications that authenticate with the REST API via OAuth 2.0.
        Or, to authenticate using a personal token, see
        https://docs.developers.optimizely.com/web/docs/personal-token
      flows:
        authorizationCode:
          authorizationUrl: https://app.optimizely.com/oauth2/authorize
          tokenUrl: https://app.optimizely.com/oauth2/token
          scopes:
            all: Full access to your account
