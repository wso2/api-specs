openapi: 3.0.1
info:
  title: Shortcut API
  description: |
    This is a generated connector for [Shortcut API v3.0](https://shortcut.com/api/rest/v3) OpenAPI specification.
    The Shortcut API bring the flow to your software team's workflow. Plan, collaborate, build, and measure success with Shortcut.
    The Shortcut API provides a greater amount of control over your organization’s Shortcut data than what is possible using the Shortcut web app. 
    You can use this API to build custom integrations or automate even more of your organization’s workflow.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
  
    Create a [Shortcut account](https://shortcut.com) and obtain tokens by following [this guide](https://shortcut.com/api/rest/v3#Authentication).
  x-ballerina-display:
    label: Shortcut
    iconPath: "icon.png"
  version: "3.0"
servers:
- url: https://api.app.shortcut.com/
security:
- api_token: []
paths:
  /api/v3/categories:
    get:
      summary: List Categories
      description: List Categories returns a list of all Categories and their attributes.
      operationId: listCategories
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Category
      description: Create Category allows you to create a new Category in Shortcut.
      operationId: createCategory
      requestBody:
        description: Create category data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateCategory
  /api/v3/categories/{category-public-id}:
    get:
      summary: Get Category
      description: Get Category returns information about the selected Category.
      operationId: getCategory
      parameters:
      - name: category-public-id
        in: path
        description: The unique ID of the Category.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Category
      description: Update Category allows you to replace a Category name with another
        name. If you try to name a Category something that already exists, you will
        receive a 422 response.
      operationId: updateCategory
      parameters:
      - name: category-public-id
        in: path
        description: The unique ID of the Category you wish to update.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update category data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategory'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateCategory
    delete:
      summary: Delete Category
      description: Delete Category can be used to delete any Category.
      operationId: deleteCategory
      parameters:
      - name: category-public-id
        in: path
        description: The unique ID of the Category.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/categories/{category-public-id}/milestones:
    get:
      summary: List Category Milestones
      description: List Category Milestones returns a list of all Milestones with
        the Category.
      operationId: listCategoryMilestones
      parameters:
      - name: category-public-id
        in: path
        description: The unique ID of the Category.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Milestone'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/entity-templates:
    get:
      summary: List Entity Templates
      description: List all the entity templates for an organization.
      operationId: listEntityTemplates
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityTemplate'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Entity Template
      description: Create a new entity template for your organization.
      operationId: createEntityTemplate
      requestBody:
        description: Request paramaters for creating an entirely new entity template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntityTemplate'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemplate'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateEntityTemplate
  /api/v3/entity-templates/disable:
    put:
      summary: Disable Story Templates
      description: Disables the Story Template feature for the given Organization.
      operationId: disableStoryTemplates
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/entity-templates/enable:
    put:
      summary: Enable Story Templates
      description: Enables the Story Template feature for the given Organization.
      operationId: enableStoryTemplates
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/entity-templates/{entity-template-public-id}:
    get:
      summary: Get Entity Template
      description: Get Entity Template returns information about a given entity template.
      operationId: getEntityTemplate
      parameters:
      - name: entity-template-public-id
        in: path
        description: The unique ID of the entity template.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemplate'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Entity Template
      description: Update an entity template's name or its contents.
      operationId: updateEntityTemplate
      parameters:
      - name: entity-template-public-id
        in: path
        description: The unique ID of the template to be updated.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: |-
          Request parameters for changing either a template's name or any of
            the attributes it is designed to pre-populate.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntityTemplate'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemplate'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateEntityTemplate
    delete:
      summary: Delete Entity Template
      operationId: deleteEntityTemplate
      parameters:
      - name: entity-template-public-id
        in: path
        description: The unique ID of the entity template.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/epic-workflow:
    get:
      summary: Get Epic Workflow
      description: Get Epic Workflow returns the Epic Workflow for the organization.
      operationId: getEpicWorkflow
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpicWorkflow'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/epics:
    get:
      summary: List Epics
      description: List Epics returns a list of all Epics and their attributes.
      operationId: listEpics
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/ListEpics'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpicSlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: ListEpics
    post:
      summary: Create Epic
      description: Create Epic allows you to create a new Epic in Shortcut.
      operationId: createEpic
      requestBody:
        description: Create epic data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEpic'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Epic'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateEpic
  /api/v3/epics/{epic-public-id}:
    get:
      summary: Get Epic
      description: Get Epic returns information about the selected Epic.
      operationId: getEpic
      parameters:
      - name: epic-public-id
        in: path
        description: The unique ID of the Epic.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Epic'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Epic
      description: Update Epic can be used to update numerous fields in the Epic.
        The only required parameter is Epic ID, which can be found in the Shortcut
        UI.
      operationId: updateEpic
      parameters:
      - name: epic-public-id
        in: path
        description: The unique ID of the Epic.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update epic data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEpic'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Epic'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateEpic
    delete:
      summary: Delete Epic
      description: Delete Epic can be used to delete the Epic. The only required parameter
        is Epic ID.
      operationId: deleteEpic
      parameters:
      - name: epic-public-id
        in: path
        description: The unique ID of the Epic.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/epics/{epic-public-id}/comments:
    get:
      summary: List Epic Comments
      description: Get a list of all Comments on an Epic.
      operationId: listEpicComments
      parameters:
      - name: epic-public-id
        in: path
        description: The unique ID of the Epic.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThreadedComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Epic Comment
      description: This endpoint allows you to create a threaded Comment on an Epic.
      operationId: createEpicComment
      parameters:
      - name: epic-public-id
        in: path
        description: The ID of the associated Epic.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Create epic comment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEpicComment'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadedComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateEpicComment
  /api/v3/epics/{epic-public-id}/comments/{comment-public-id}:
    get:
      summary: Get Epic Comment
      description: This endpoint returns information about the selected Epic Comment.
      operationId: getEpicComment
      parameters:
      - name: epic-public-id
        in: path
        description: The ID of the associated Epic.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadedComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Epic Comment
      description: This endpoint allows you to update a threaded Comment on an Epic.
      operationId: updateEpicComment
      parameters:
      - name: epic-public-id
        in: path
        description: The ID of the associated Epic.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update epic comment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComment'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadedComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateComment
    post:
      summary: Create Epic Comment Comment
      description: This endpoint allows you to create a nested Comment reply to an
        existing Epic Comment.
      operationId: createEpicCommentComment
      parameters:
      - name: epic-public-id
        in: path
        description: The ID of the associated Epic.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the parent Epic Comment.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Create epic comment comment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentComment'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadedComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateCommentComment
    delete:
      summary: Delete Epic Comment
      description: This endpoint allows you to delete a Comment from an Epic.
      operationId: deleteEpicComment
      parameters:
      - name: epic-public-id
        in: path
        description: The ID of the associated Epic.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/epics/{epic-public-id}/stories:
    get:
      summary: List Epic Stories
      description: Get a list of all Stories in an Epic.
      operationId: listEpicStories
      parameters:
      - name: epic-public-id
        in: path
        description: The unique ID of the Epic.
        required: true
        schema:
          type: integer
          format: int64
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/GetEpicStories'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: GetEpicStories
  /api/v3/epics/{epic-public-id}/unlink-productboard:
    post:
      summary: Unlink Productboard from Epic
      description: This endpoint allows you to unlink a productboard epic.
      operationId: unlinkProductboardFromEpic
      parameters:
      - name: epic-public-id
        in: path
        description: The unique ID of the Epic.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/external-link/stories:
    get:
      summary: Get External Link Stories
      description: Get Stories which have a given External Link associated with them.
      operationId: getExternalLinkStories
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/GetExternalLinkStoriesParams'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: GetExternalLinkStoriesParams
  /api/v3/files:
    get:
      summary: List Files
      description: List Files returns a list of all UploadedFiles in the workspace.
      operationId: listFiles
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UploadedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    # post:
    #   summary: Upload Files
    #   description: |-
    #     Upload Files uploads one or many files and optionally associates them with a story.
    #        Use the multipart/form-data content-type to upload.
    #        Each `file` key should contain a separate file.
    #        Each UploadedFile's name comes from the Content-Disposition header "filename" directive for that field.
    #   operationId: uploadFiles
    #   requestBody:
    #     content:
    #       multipart/form-data:
    #         schema:
    #           required:
    #           - file0
    #           properties:
    #             story_id:
    #               type: integer
    #               description: The story ID that these files will be associated with.
    #               format: int64
    #             file0:
    #               type: string
    #               description: A file upload. At least one is required.
    #               format: binary
    #             file1:
    #               type: string
    #               description: Optional additional files.
    #               format: binary
    #             file2:
    #               type: string
    #               description: Optional additional files.
    #               format: binary
    #             file3:
    #               type: string
    #               description: Optional additional files.
    #               format: binary
    #     required: true
    #   responses:
    #     201:
    #       description: Resource
    #       content:
    #         application/json:
    #           schema:
    #             type: array
    #             items:
    #               $ref: '#/components/schemas/UploadedFile'
    #     400:
    #       description: Schema mismatch
    #       content: {}
    #     404:
    #       description: Resource does not exist
    #       content: {}
    #     422:
    #       description: Unprocessable
    #       content: {}
  /api/v3/files/{file-public-id}:
    get:
      summary: Get File
      description: Get File returns information about the selected UploadedFile.
      operationId: getFile
      parameters:
      - name: file-public-id
        in: path
        description: The File’s unique ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update File
      description: Update File updates the properties of an UploadedFile (but not
        its content).
      operationId: updateFile
      parameters:
      - name: file-public-id
        in: path
        description: The unique ID assigned to the file in Shortcut.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update file data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFile'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateFile
    delete:
      summary: Delete File
      description: Delete File deletes a previously uploaded file.
      operationId: deleteFile
      parameters:
      - name: file-public-id
        in: path
        description: The File’s unique ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/groups:
    get:
      summary: List Groups
      description: A group in our API maps to a "Team" within the Shortcut Product.
        A Team is a collection of Users that can be associated to Stories, Epics,
        and Iterations within Shortcut.
      operationId: listGroups
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Group
      operationId: createGroup
      requestBody:
        description: Create group data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: Schema mismatch
          content: {}
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnusableEntitlementError'
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateGroup
  /api/v3/groups/disable:
    put:
      summary: Disable Groups
      description: Disables Groups for the current workspace2
      operationId: disableGroups
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/groups/enable:
    put:
      summary: Enable Groups
      description: Enables Groups for the current workspace2
      operationId: enableGroups
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/groups/{group-public-id}:
    get:
      summary: Get Group
      operationId: getGroup
      parameters:
      - name: group-public-id
        in: path
        description: The unique ID of the Group.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Group
      operationId: updateGroup
      parameters:
      - name: group-public-id
        in: path
        description: The unique ID of the Group.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Update group data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroup'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: Schema mismatch
          content: {}
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnusableEntitlementError'
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateGroup
  /api/v3/groups/{group-public-id}/stories:
    get:
      summary: List Group Stories
      description: List the Stories assigned to the Group. (By default, limited to
        1,000).
      operationId: listGroupStories
      parameters:
      - name: group-public-id
        in: path
        description: The unique ID of the Group.
        required: true
        schema:
          type: string
          format: uuid
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/ListGroupStories'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: ListGroupStories
  /api/v3/iterations:
    get:
      summary: List Iterations
      operationId: listIterations
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IterationSlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Iteration
      operationId: createIteration
      requestBody:
        description: Create iteration data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIteration'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateIteration
  /api/v3/iterations/disable:
    put:
      summary: Disable Iterations
      description: Disables Iterations for the current workspace
      operationId: disableIterations
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/iterations/enable:
    put:
      summary: Enable Iterations
      description: Enables Iterations for the current workspace
      operationId: enableIterations
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/iterations/{iteration-public-id}:
    get:
      summary: Get Iteration
      operationId: getIteration
      parameters:
      - name: iteration-public-id
        in: path
        description: The unique ID of the Iteration.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Iteration
      operationId: updateIteration
      parameters:
      - name: iteration-public-id
        in: path
        description: The unique ID of the Iteration.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update iteration data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIteration'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateIteration
    delete:
      summary: Delete Iteration
      operationId: deleteIteration
      parameters:
      - name: iteration-public-id
        in: path
        description: The unique ID of the Iteration.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/iterations/{iteration-public-id}/stories:
    get:
      summary: List Iteration Stories
      description: Get a list of all Stories in an Iteration.
      operationId: listIterationStories
      parameters:
      - name: iteration-public-id
        in: path
        description: The unique ID of the Iteration.
        required: true
        schema:
          type: integer
          format: int64
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/GetIterationStories'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: GetIterationStories
  /api/v3/labels:
    get:
      summary: List Labels
      description: List Labels returns a list of all Labels and their attributes.
      operationId: listLabels
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/ListLabels'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: ListLabels
    post:
      summary: Create Label
      description: Create Label allows you to create a new Label in Shortcut.
      operationId: createLabel
      requestBody:
        description: Request parameters for creating a Label on a Shortcut Story.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelParams'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateLabelParams
  /api/v3/labels/{label-public-id}:
    get:
      summary: Get Label
      description: Get Label returns information about the selected Label.
      operationId: getLabel
      parameters:
      - name: label-public-id
        in: path
        description: The unique ID of the Label.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Label
      description: Update Label allows you to replace a Label name with another name.
        If you try to name a Label something that already exists, you will receive
        a 422 response.
      operationId: updateLabel
      parameters:
      - name: label-public-id
        in: path
        description: The unique ID of the Label you wish to update.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update label data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabel'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateLabel
    delete:
      summary: Delete Label
      description: Delete Label can be used to delete any Label.
      operationId: deleteLabel
      parameters:
      - name: label-public-id
        in: path
        description: The unique ID of the Label.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/labels/{label-public-id}/epics:
    get:
      summary: List Label Epics
      description: List all of the Epics with the Label.
      operationId: listLabelEpics
      parameters:
      - name: label-public-id
        in: path
        description: The unique ID of the Label.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpicSlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/labels/{label-public-id}/stories:
    get:
      summary: List Label Stories
      description: List all of the Stories with the Label.
      operationId: listLabelStories
      parameters:
      - name: label-public-id
        in: path
        description: The unique ID of the Label.
        required: true
        schema:
          type: integer
          format: int64
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/GetLabelStories'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: GetLabelStories
  /api/v3/linked-files:
    get:
      summary: List Linked Files
      description: List Linked Files returns a list of all Linked-Files and their
        attributes.
      operationId: listLinkedFiles
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Linked File
      description: Create Linked File allows you to create a new Linked File in Shortcut.
      operationId: createLinkedFile
      requestBody:
        description: Create linked file data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkedFile'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateLinkedFile
  /api/v3/linked-files/{linked-file-public-id}:
    get:
      summary: Get Linked File
      description: Get File returns information about the selected Linked File.
      operationId: getLinkedFile
      parameters:
      - name: linked-file-public-id
        in: path
        description: The unique identifier of the linked file.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Linked File
      description: Updated Linked File allows you to update properties of a previously
        attached Linked-File.
      operationId: updateLinkedFile
      parameters:
      - name: linked-file-public-id
        in: path
        description: The unique identifier of the linked file.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update linked file data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLinkedFile'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedFile'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateLinkedFile
    delete:
      summary: Delete Linked File
      description: Delete Linked File can be used to delete any previously attached
        Linked-File.
      operationId: deleteLinkedFile
      parameters:
      - name: linked-file-public-id
        in: path
        description: The unique identifier of the linked file.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/member:
    get:
      summary: Get Current Member Info
      description: Returns information about the authenticated member.
      operationId: getCurrentMemberInfo
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberInfo'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/members:
    get:
      summary: List Members
      description: List Members returns information about members of the organization.
      operationId: listMembers
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/ListMembers'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: ListMembers
  /api/v3/members/{member-public-id}:
    get:
      summary: Get Member
      description: Returns information about a Member.
      operationId: getMember
      parameters:
      - name: member-public-id
        in: path
        description: The Member's unique ID.
        required: true
        schema:
          type: string
          format: uuid
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/GetMember'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: GetMember
  /api/v3/milestones:
    get:
      summary: List Milestones
      description: List Milestones returns a list of all Milestones and their attributes.
      operationId: listMilestones
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Milestone'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Milestone
      description: Create Milestone allows you to create a new Milestone in Shortcut.
      operationId: createMilestone
      requestBody:
        description: Create milestone data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMilestone'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
        400:
          description: Schema mismatch
          content: {}
        403:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnusableEntitlementError'
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateMilestone
  /api/v3/milestones/{milestone-public-id}:
    get:
      summary: Get Milestone
      description: Get Milestone returns information about a chosen Milestone.
      operationId: getMilestone
      parameters:
      - name: milestone-public-id
        in: path
        description: The ID of the Milestone.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Milestone
      description: Update Milestone can be used to update Milestone properties.
      operationId: updateMilestone
      parameters:
      - name: milestone-public-id
        in: path
        description: The ID of the Milestone.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update milestone data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMilestone'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateMilestone
    delete:
      summary: Delete Milestone
      description: Delete Milestone can be used to delete any Milestone.
      operationId: deleteMilestone
      parameters:
      - name: milestone-public-id
        in: path
        description: The ID of the Milestone.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/milestones/{milestone-public-id}/epics:
    get:
      summary: List Milestone Epics
      description: List all of the Epics within the Milestone.
      operationId: listMilestoneEpics
      parameters:
      - name: milestone-public-id
        in: path
        description: The ID of the Milestone.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpicSlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/projects:
    get:
      summary: List Projects
      description: List Projects returns a list of all Projects and their attributes.
      operationId: listProjects
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    post:
      summary: Create Project
      description: Create Project is used to create a new Shortcut Project.
      operationId: createProject
      requestBody:
        description: Create project data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProject'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateProject
  /api/v3/projects/{project-public-id}:
    get:
      summary: Get Project
      description: Get Project returns information about the selected Project.
      operationId: getProject
      parameters:
      - name: project-public-id
        in: path
        description: The unique ID of the Project.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Project
      description: Update Project can be used to change properties of a Project.
      operationId: updateProject
      parameters:
      - name: project-public-id
        in: path
        description: The unique ID of the Project.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update project data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateProject
    delete:
      summary: Delete Project
      description: Delete Project can be used to delete a Project. Projects can only
        be deleted if all associated Stories are moved or deleted. In the case that
        the Project cannot be deleted, you will receive a 422 response.
      operationId: deleteProject
      parameters:
      - name: project-public-id
        in: path
        description: The unique ID of the Project.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/projects/{project-public-id}/stories:
    get:
      summary: List Stories
      description: List Stories returns a list of all Stories in a selected Project
        and their attributes.
      operationId: listStories
      parameters:
      - name: project-public-id
        in: path
        description: The unique ID of the Project.
        required: true
        schema:
          type: integer
          format: int64
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/GetProjectStories'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: GetProjectStories
  /api/v3/repositories:
    get:
      summary: List Repositories
      description: List Repositories returns a list of all Repositories and their
        attributes.
      operationId: listRepositories
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/repositories/{repo-public-id}:
    get:
      summary: Get Repository
      description: Get Repository returns information about the selected Repository.
      operationId: getRepository
      parameters:
      - name: repo-public-id
        in: path
        description: The unique ID of the Repository.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/search:
    get:
      summary: Search
      description: Search lets you search Epics and Stories based on desired parameters.
        Since ordering of the results can change over time (due to search ranking
        decay, new Epics and Stories being created), the `next` value from the previous
        response can be used as the path and query string for the next page to ensure
        stable ordering.
      operationId: search
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/Search'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        400:
          description: '**Either:** (1) Schema mismatch **or** (2) Maximum of 1000
            search results exceeded '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxSearchResultsExceededError'
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: Search
  /api/v3/search/epics:
    get:
      summary: Search Epics
      description: Search Epics lets you search Epics based on desired parameters.
        Since ordering of stories can change over time (due to search ranking decay,
        new Epics being created), the `next` value from the previous response can
        be used as the path and query string for the next page to ensure stable ordering.
      operationId: searchEpics
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/Search'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpicSearchResults'
        400:
          description: '**Either:** (1) Schema mismatch **or** (2) Maximum of 1000
            search results exceeded '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxSearchResultsExceededError'
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: Search
  /api/v3/search/stories:
    get:
      summary: Search Stories
      description: Search Stories lets you search Stories based on desired parameters.
        Since ordering of stories can change over time (due to search ranking decay,
        new stories being created), the `next` value from the previous response can
        be used as the path and query string for the next page to ensure stable ordering.
      operationId: searchStories
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/Search'
      #   required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorySearchResults'
        400:
          description: '**Either:** (1) Schema mismatch **or** (2) Maximum of 1000
            search results exceeded '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxSearchResultsExceededError'
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: Search
  /api/v3/stories:
    post:
      summary: Create Story
      description: Create Story is used to add a new story to your Shortcut.
      operationId: createStory
      requestBody:
        description: Request parameters for creating a story.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoryParams'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateStoryParams
  /api/v3/stories/bulk:
    put:
      summary: Update Multiple Stories
      description: Update Multiple Stories allows you to make changes to numerous
        stories at once.
      operationId: updateMultipleStories
      requestBody:
        description: Update multiple stories data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStories'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateStories
    post:
      summary: Create Multiple Stories
      description: Create Multiple Stories allows you to create multiple stories in
        a single request using the same syntax as [Create Story](https://shortcut.com/api/#create-story).
      operationId: createMultipleStories
      requestBody:
        description: Create multiple stories
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStories'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateStories
    delete:
      summary: Delete Multiple Stories
      description: Delete Multiple Stories allows you to delete multiple archived
        stories at once.
      operationId: deleteMultipleStories
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/DeleteStories'
      #   required: true
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: DeleteStories
  /api/v3/stories/search:
    post:
      summary: Search Stories (Old)
      description: Search Stories lets you search Stories based on desired parameters.
      operationId: searchStoriesOld
      requestBody:
        description:  Search stories (old) data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchStories'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorySlim'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: SearchStories
  /api/v3/stories/{story-public-id}:
    get:
      summary: Get Story
      description: Get Story returns information about a chosen Story.
      operationId: getStory
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Story
      description: Update Story can be used to update Story properties.
      operationId: updateStory
      parameters:
      - name: story-public-id
        in: path
        description: The unique identifier of this story.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update story data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStory'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateStory
    delete:
      summary: Delete Story
      description: Delete Story can be used to delete any Story.
      operationId: deleteStory
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/stories/{story-public-id}/comments:
    post:
      summary: Create Story Comment
      description: Create Comment allows you to create a Comment on any Story.
      operationId: createStoryComment
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Comment is in.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Create story comment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoryComment'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateStoryComment
  /api/v3/stories/{story-public-id}/comments/{comment-public-id}:
    get:
      summary: Get Story Comment
      description: Get Comment is used to get Comment information.
      operationId: getStoryComment
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Comment is in.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Story Comment
      description: Update Comment replaces the text of the existing Comment.
      operationId: updateStoryComment
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Comment is in.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update story comment data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoryComment'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryComment'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateStoryComment
    delete:
      summary: Delete Story Comment
      description: Delete a Comment from any story.
      operationId: deleteStoryComment
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Comment is in.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions:
    post:
      summary: Create Story Reaction
      description: Create a reaction to a story comment.
      operationId: createStoryReaction
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Comment is in.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Create story reaction data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrDeleteStoryReaction'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoryReaction'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateOrDeleteStoryReaction
    delete:
      summary: Delete Story Reaction
      description: Delete a reaction from any story comment.
      operationId: deleteStoryReaction
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Comment is in.
        required: true
        schema:
          type: integer
          format: int64
      - name: comment-public-id
        in: path
        description: The ID of the Comment.
        required: true
        schema:
          type: integer
          format: int64
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/CreateOrDeleteStoryReaction'
      #   required: true
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateOrDeleteStoryReaction
  /api/v3/stories/{story-public-id}/history:
    get:
      summary: Story History
      operationId: storyHistory
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/stories/{story-public-id}/tasks:
    post:
      summary: Create Task
      description: Create Task is used to create a new task in a Story.
      operationId: createTask
      parameters:
      - name: story-public-id
        in: path
        description: The ID of the Story that the Task will be in.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Create task data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTask'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateTask
  /api/v3/stories/{story-public-id}/tasks/{task-public-id}:
    get:
      summary: Get Task
      description: Returns information about a chosen Task.
      operationId: getTask
      parameters:
      - name: story-public-id
        in: path
        description: The unique ID of the Story this Task is associated with.
        required: true
        schema:
          type: integer
          format: int64
      - name: task-public-id
        in: path
        description: The unique ID of the Task.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Task
      description: Update Task can be used to update Task properties.
      operationId: updateTask
      parameters:
      - name: story-public-id
        in: path
        description: The unique identifier of the parent Story.
        required: true
        schema:
          type: integer
          format: int64
      - name: task-public-id
        in: path
        description: The unique identifier of the Task you wish to update.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update task data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateTask
    delete:
      summary: Delete Task
      description: Delete Task can be used to delete any previously created Task on
        a Story.
      operationId: deleteTask
      parameters:
      - name: story-public-id
        in: path
        description: The unique ID of the Story this Task is associated with.
        required: true
        schema:
          type: integer
          format: int64
      - name: task-public-id
        in: path
        description: The unique ID of the Task.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/story-links:
    post:
      summary: Create Story Link
      description: |-
        Story Links (called Story Relationships in the UI) allow you create semantic relationships between two stories. The parameters read like an active voice grammatical sentence:  subject -> verb -> object.

        The subject story acts on the object Story; the object story is the direct object of the sentence.

        The subject story "blocks", "duplicates", or "relates to" the object story.  Examples:
        - "story 5 blocks story 6” -- story 6 is now "blocked" until story 5 is moved to a Done workflow state.
        - "story 2 duplicates story 1” -- Story 2 represents the same body of work as Story 1 (and should probably be archived).
        - "story 7 relates to story 3”
      operationId: createStoryLink
      requestBody:
        description: Create story link data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoryLink'
        required: true
      responses:
        201:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryLink'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: CreateStoryLink
  /api/v3/story-links/{story-link-public-id}:
    get:
      summary: Get Story Link
      description: Returns the stories and their relationship for the given Story
        Link.
      operationId: getStoryLink
      parameters:
      - name: story-link-public-id
        in: path
        description: The unique ID of the Story Link.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryLink'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
    put:
      summary: Update Story Link
      description: Updates the stories and/or the relationship for the given Story
        Link.
      operationId: updateStoryLink
      parameters:
      - name: story-link-public-id
        in: path
        description: The unique ID of the Story Link.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update story link data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoryLink'
        required: true
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryLink'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
      x-codegen-request-body-name: UpdateStoryLink
    delete:
      summary: Delete Story Link
      description: Removes the relationship between the stories for the given Story
        Link.
      operationId: deleteStoryLink
      parameters:
      - name: story-link-public-id
        in: path
        description: The unique ID of the Story Link.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/workflows:
    get:
      summary: List Workflows
      description: List Workflows returns a list of all Workflows in the organization.
      operationId: listWorkflows
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workflow'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
  /api/v3/workflows/{workflow-public-id}:
    get:
      summary: Get Workflow
      description: Get Workflow returns information about a chosen Workflow.
      operationId: getWorkflow
      parameters:
      - name: workflow-public-id
        in: path
        description: The ID of the Workflow.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        400:
          description: Schema mismatch
          content: {}
        404:
          description: Resource does not exist
          content: {}
        422:
          description: Unprocessable
          content: {}
components:
  schemas:
    BasicWorkspaceInfo:
      required:
      - estimate_scale
      - url_slug
      type: object
      properties:
        url_slug:
          type: string
        estimate_scale:
          type: array
          items:
            type: integer
            format: int64
    Branch:
      required:
      - created_at
      - deleted
      - entity_type
      - id
      - merged_branch_ids
      - name
      - persistent
      - pull_requests
      - repository_id
      - updated_at
      - url
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        deleted:
          type: boolean
          description: A true/false boolean indicating if the Branch has been deleted.
        name:
          type: string
          description: The name of the Branch.
        persistent:
          type: boolean
          description: A true/false boolean indicating if the Branch is persistent;
            e.g. master.
        updated_at:
          type: string
          description: The time/date the Branch was updated.
          format: date-time
          nullable: true
        pull_requests:
          type: array
          description: An array of PullRequests attached to the Branch (there is usually
            only one).
          items:
            $ref: '#/components/schemas/PullRequest'
        merged_branch_ids:
          type: array
          description: The IDs of the Branches the Branch has been merged into.
          items:
            type: integer
            format: int64
        id:
          type: integer
          description: The unique ID of the Branch.
          format: int64
          nullable: true
        url:
          type: string
          description: The URL of the Branch.
        repository_id:
          type: integer
          description: The ID of the Repository that contains the Branch.
          format: int64
          nullable: true
        created_at:
          type: string
          description: The time/date the Branch was created.
          format: date-time
          nullable: true
      description: Branch refers to a VCS branch. Branches are feature branches associated
        with Shortcut Stories.
    Category:
      required:
      - archived
      - color
      - created_at
      - entity_type
      - external_id
      - id
      - name
      - type
      - updated_at
      type: object
      properties:
        archived:
          type: boolean
          description: A true/false boolean indicating if the Category has been archived.
        entity_type:
          type: string
          description: A string description of this resource.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Category (for example,
            "#ff0000").
          format: css-color
          nullable: true
        name:
          type: string
          description: The name of the Category.
        type:
          type: string
          description: The type of entity this Category is associated with; currently
            Milestone is the only type of Category.
        updated_at:
          type: string
          description: The time/date that the Category was updated.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Category has been imported from another tool, the ID in the other
            tool can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Category.
          format: int64
        created_at:
          type: string
          description: The time/date that the Category was created.
          format: date-time
      description: A Category can be used to associate Milestones.
    Commit:
      required:
      - author_email
      - author_id
      - author_identity
      - created_at
      - entity_type
      - hash
      - id
      - merged_branch_ids
      - message
      - repository_id
      - timestamp
      - updated_at
      - url
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        author_id:
          type: string
          description: The ID of the Member that authored the Commit, if known.
          format: uuid
          nullable: true
        hash:
          type: string
          description: The Commit hash.
        updated_at:
          type: string
          description: The time/date the Commit was updated.
          format: date-time
          nullable: true
        merged_branch_ids:
          type: array
          description: The IDs of the Branches the Commit has been merged into.
          items:
            type: integer
            format: int64
        id:
          type: integer
          description: The unique ID of the Commit.
          format: int64
          nullable: true
        url:
          type: string
          description: The URL of the Commit.
        author_email:
          type: string
          description: The email address of the VCS user that authored the Commit.
        timestamp:
          type: string
          description: The time/date the Commit was pushed.
          format: date-time
        author_identity:
          $ref: '#/components/schemas/Identity'
        repository_id:
          type: integer
          description: The ID of the Repository that contains the Commit.
          format: int64
          nullable: true
        created_at:
          type: string
          description: The time/date the Commit was created.
          format: date-time
        message:
          type: string
          description: The Commit message.
      description: Commit refers to a VCS commit and all associated details.
    CreateCategory:
      required:
      - name
      - type
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The name of the new Category.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Category (for example,
            "#ff0000").
          format: css-color
        external_id:
          minLength: 1
          type: string
          description: This field can be set to another unique ID. In the case that
            the Category has been imported from another tool, the ID in the other
            tool can be indicated here.
        type:
          type: string
          description: The type of entity this Category is associated with; currently
            Milestone is the only type of Category.
          enum:
          - milestone
      x-doc-skip: true
    CreateCategoryParams:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The name of the new Category.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Category (for example,
            "#ff0000").
          format: css-color
        external_id:
          minLength: 1
          type: string
          description: This field can be set to another unique ID. In the case that
            the Category has been imported from another tool, the ID in the other
            tool can be indicated here.
      description: Request parameters for creating a Category with a Milestone.
    CreateCommentComment:
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 100000
          minLength: 1
          type: string
          description: The comment text.
        author_id:
          type: string
          description: The Member ID of the Comment's author. Defaults to the user
            identified by the API token.
          format: uuid
        created_at:
          type: string
          description: Defaults to the time/date the comment is created, but can be
            set to reflect another date.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date the comment is last updated, but
            can be set to reflect another date.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the comment has been imported from another tool, the ID in the other tool
            can be indicated here.
      x-doc-skip: true
    CreateEntityTemplate:
      required:
      - name
      - story_contents
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The name of the new entity template
        author_id:
          type: string
          description: The id of the user creating this template.
          format: uuid
        story_contents:
          $ref: '#/components/schemas/CreateStoryContents'
      description: Request paramaters for creating an entirely new entity template.
    CreateEpic:
      required:
      - name
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The Epic's description.
        labels:
          type: array
          description: An array of Labels attached to the Epic.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        completed_at_override:
          type: string
          description: A manual override for the time/date the Epic was completed.
          format: date-time
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Epic's name.
        planned_start_date:
          type: string
          description: The Epic's planned start date.
          format: date-time
          nullable: true
        state:
          type: string
          description: '`Deprecated` The Epic''s state (to do, in progress, or done);
            will be ignored when `epic_state_id` is set.'
          enum:
          - in progress
          - to do
          - done
        milestone_id:
          type: integer
          description: The ID of the Milestone this Epic is related to.
          format: int64
          nullable: true
        requested_by_id:
          type: string
          description: The ID of the member that requested the epic.
          format: uuid
        epic_state_id:
          type: integer
          description: The ID of the Epic State.
          format: int64
        started_at_override:
          type: string
          description: A manual override for the time/date the Epic was started.
          format: date-time
        group_id:
          type: string
          description: The ID of the group to associate with the epic.
          format: uuid
          nullable: true
        updated_at:
          type: string
          description: Defaults to the time/date it is created but can be set to reflect
            another date.
          format: date-time
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers
            on this new Epic.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Epic.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Epic has been imported from another tool, the ID in the other tool
            can be indicated here.
        deadline:
          type: string
          description: The Epic's deadline.
          format: date-time
          nullable: true
        created_at:
          type: string
          description: Defaults to the time/date it is created but can be set to reflect
            another date.
          format: date-time
      x-doc-skip: true
    CreateEpicComment:
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 100000
          minLength: 1
          type: string
          description: The comment text.
        author_id:
          type: string
          description: The Member ID of the Comment's author. Defaults to the user
            identified by the API token.
          format: uuid
        created_at:
          type: string
          description: Defaults to the time/date the comment is created, but can be
            set to reflect another date.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date the comment is last updated, but
            can be set to reflect another date.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the comment has been imported from another tool, the ID in the other tool
            can be indicated here.
      x-doc-skip: true
    CreateGroup:
      required:
      - mention_name
      - name
      type: object
      properties:
        description:
          type: string
          description: The description of the Group.
        member_ids:
          uniqueItems: true
          type: array
          description: The Member ids to add to this Group.
          items:
            type: string
            format: uuid
        workflow_ids:
          type: array
          description: The Workflow ids to add to the Group.
          items:
            type: integer
            format: int64
        name:
          minLength: 1
          type: string
          description: The name of this Group.
        mention_name:
          minLength: 1
          type: string
          description: The mention name of this Group.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The color you wish to use for the Group in the system.
          format: css-color
        color_key:
          type: string
          description: The color key you wish to use for the Group in the system.
          enum:
          - blue
          - purple
          - midnight-blue
          - orange
          - yellow-green
          - brass
          - gray
          - fuchsia
          - yellow
          - pink
          - sky-blue
          - green
          - red
          - black
          - slate
          - turquoise
        display_icon_id:
          type: string
          description: The Icon id for the avatar of this Group.
          format: uuid
    CreateIteration:
      required:
      - end_date
      - name
      - start_date
      type: object
      properties:
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers.
          items:
            type: string
            format: uuid
        group_ids:
          type: array
          description: An array of UUIDs for any Groups you want to add as Followers.
            Currently, only one Group association is presented in our web UI.
          items:
            type: string
            format: uuid
        labels:
          type: array
          description: An array of Labels attached to the Iteration.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        description:
          maxLength: 100000
          type: string
          description: The description of the Iteration.
        name:
          minLength: 1
          type: string
          description: The name of this Iteration.
        start_date:
          minLength: 1
          type: string
          description: The date this Iteration begins, e.g. 2019-07-01.
        end_date:
          minLength: 1
          type: string
          description: The date this Iteration ends, e.g. 2019-07-01.
    CreateLabelParams:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: The name of the new Label.
        description:
          type: string
          description: The description of the new Label.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Label (for example,
            "#ff0000").
          format: css-color
        external_id:
          minLength: 1
          type: string
          description: This field can be set to another unique ID. In the case that
            the Label has been imported from another tool, the ID in the other tool
            can be indicated here.
      description: Request parameters for creating a Label on a Shortcut Story.
    CreateLinkedFile:
      required:
      - name
      - type
      - url
      type: object
      properties:
        description:
          type: string
          description: The description of the file.
        story_id:
          type: integer
          description: The ID of the linked story.
          format: int64
        name:
          minLength: 1
          type: string
          description: The name of the file.
        thumbnail_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The URL of the thumbnail, if the integration provided it.
        type:
          type: string
          description: The integration type of the file (e.g. google, dropbox, box).
          enum:
          - google
          - url
          - dropbox
          - box
          - onedrive
        size:
          type: integer
          description: The filesize, if the integration provided it.
          format: int64
        uploader_id:
          type: string
          description: The UUID of the member that uploaded the file.
          format: uuid
        content_type:
          type: string
          description: The content type of the image (e.g. txt/plain).
        url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The URL of linked file.
      x-doc-skip: true
    CreateMilestone:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the Milestone.
        description:
          maxLength: 100000
          type: string
          description: The Milestone's description.
        state:
          type: string
          description: The workflow state that the Milestone is in.
          enum:
          - in progress
          - to do
          - done
        started_at_override:
          type: string
          description: A manual override for the time/date the Milestone was started.
          format: date-time
        completed_at_override:
          type: string
          description: A manual override for the time/date the Milestone was completed.
          format: date-time
        categories:
          type: array
          description: An array of IDs of Categories attached to the Milestone.
          items:
            $ref: '#/components/schemas/CreateCategoryParams'
      x-doc-skip: true
    CreateOrDeleteStoryReaction:
      required:
      - emoji
      type: object
      properties:
        emoji:
          type: string
          description: The emoji short-code to add / remove. E.g. `:thumbsup::skin-tone-4:`.
      x-doc-skip: true
    CreateProject:
      required:
      - name
      - team_id
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The Project description.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The color you wish to use for the Project in the system.
          format: css-color
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: The name of the Project.
        start_time:
          type: string
          description: The date at which the Project was started.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date it is created but can be set to reflect
            another date.
          format: date-time
        follower_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Epic.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Project has been imported from another tool, the ID in the other tool
            can be indicated here.
        team_id:
          type: integer
          description: The ID of the team the project belongs to.
          format: int64
        iteration_length:
          type: integer
          description: The number of weeks per iteration in this Project.
          format: int64
        abbreviation:
          type: string
          description: The Project abbreviation used in Story summaries. Should be
            kept to 3 characters at most.
        created_at:
          type: string
          description: Defaults to the time/date it is created but can be set to reflect
            another date.
          format: date-time
      x-doc-skip: true
    CreateStories:
      required:
      - stories
      type: object
      properties:
        stories:
          type: array
          description: An array of stories to be created.
          items:
            $ref: '#/components/schemas/CreateStoryParams'
      x-doc-skip: true
    CreateStoryComment:
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 100000
          type: string
          description: The comment text.
        author_id:
          type: string
          description: The Member ID of the Comment's author. Defaults to the user
            identified by the API token.
          format: uuid
        created_at:
          type: string
          description: Defaults to the time/date the comment is created, but can be
            set to reflect another date.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date the comment is last updated, but
            can be set to reflect another date.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the comment has been imported from another tool, the ID in the other tool
            can be indicated here.
      x-doc-skip: true
    CreateStoryCommentParams:
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 100000
          type: string
          description: The comment text.
        author_id:
          type: string
          description: The Member ID of the Comment's author. Defaults to the user
            identified by the API token.
          format: uuid
        created_at:
          type: string
          description: Defaults to the time/date the comment is created, but can be
            set to reflect another date.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date the comment is last updated, but
            can be set to reflect another date.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the comment has been imported from another tool, the ID in the other tool
            can be indicated here.
      description: Request parameters for creating a Comment on a Shortcut Story.
    CreateStoryContents:
      type: object
      properties:
        description:
          type: string
          description: The description of the story.
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of labels to be populated by the template.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
        linked_files:
          type: array
          description: An array of linked files attached to the story.
          items:
            $ref: '#/components/schemas/LinkedFile'
        file_ids:
          uniqueItems: true
          type: array
          description: An array of the attached file IDs to be populated.
          items:
            type: integer
            format: int64
        name:
          type: string
          description: The name of the story.
        epic_id:
          type: integer
          description: The ID of the epic the to be populated.
          format: int64
          nullable: true
        external_links:
          type: array
          description: An array of external links to be populated.
          items:
            type: string
        iteration_id:
          type: integer
          description: The ID of the iteration the to be populated.
          format: int64
          nullable: true
        tasks:
          type: array
          description: An array of tasks to be populated by the template.
          items:
            $ref: '#/components/schemas/EntityTemplateTask'
        label_ids:
          type: array
          description: An array of label ids attached to the story.
          items:
            type: integer
            format: int64
        group_id:
          type: string
          description: The ID of the group to be populated.
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state the story is currently in.
          format: int64
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        estimate:
          type: integer
          description: The numeric point estimate to be populated.
          format: int64
          nullable: true
        files:
          type: array
          description: An array of files attached to the story.
          items:
            $ref: '#/components/schemas/UploadedFile'
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
        linked_file_ids:
          uniqueItems: true
          type: array
          description: An array of the linked file IDs to be populated.
          items:
            type: integer
            format: int64
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
      description: A map of story attributes this template populates.
    CreateStoryLink:
      required:
      - object_id
      - subject_id
      - verb
      type: object
      properties:
        verb:
          type: string
          description: The type of link.
          enum:
          - blocks
          - duplicates
          - relates to
        subject_id:
          type: integer
          description: The ID of the subject Story.
          format: int64
        object_id:
          type: integer
          description: The ID of the object Story.
          format: int64
      x-doc-skip: true
    CreateStoryLinkParams:
      required:
      - verb
      type: object
      properties:
        subject_id:
          type: integer
          description: The unique ID of the Story defined as subject.
          format: int64
        verb:
          type: string
          description: How the subject Story acts on the object Story. This can be
            "blocks", "duplicates", or "relates to".
          enum:
          - blocks
          - duplicates
          - relates to
        object_id:
          type: integer
          description: The unique ID of the Story defined as object.
          format: int64
      description: Request parameters for creating a Story Link within a Story.
    CreateStoryParams:
      required:
      - name
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The description of the story.
        archived:
          type: boolean
          description: Controls the story's archived state.
        story_links:
          type: array
          description: An array of story links attached to the story.
          items:
            $ref: '#/components/schemas/CreateStoryLinkParams'
        labels:
          type: array
          description: An array of labels attached to the story.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
          enum:
          - feature
          - chore
          - bug
        file_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of files attached to the story.
          items:
            type: integer
            format: int64
        completed_at_override:
          type: string
          description: A manual override for the time/date the Story was completed.
          format: date-time
        name:
          maxLength: 512
          minLength: 1
          type: string
          description: The name of the story.
        comments:
          type: array
          description: An array of comments to add to the story.
          items:
            $ref: '#/components/schemas/CreateStoryCommentParams'
        epic_id:
          type: integer
          description: The ID of the epic the story belongs to.
          format: int64
          nullable: true
        story_template_id:
          type: string
          description: The id of the story template used to create this story, if
            applicable.
          format: uuid
          nullable: true
        external_links:
          type: array
          description: An array of External Links associated with this story.
          items:
            type: string
        requested_by_id:
          type: string
          description: The ID of the member that requested the story.
          format: uuid
        iteration_id:
          type: integer
          description: The ID of the iteration the story belongs to.
          format: int64
          nullable: true
        tasks:
          type: array
          description: An array of tasks connected to the story.
          items:
            $ref: '#/components/schemas/CreateTaskParams'
        started_at_override:
          type: string
          description: A manual override for the time/date the Story was started.
          format: date-time
        group_id:
          type: string
          description: The id of the group to associate with this story.
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state the story will be in.
          format: int64
        updated_at:
          type: string
          description: The time/date the Story was updated.
          format: date-time
        follower_ids:
          uniqueItems: true
          type: array
          description: An array of UUIDs of the followers of this story.
          items:
            type: string
            format: uuid
        owner_ids:
          uniqueItems: true
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Story has been imported from another tool, the ID in the other tool
            can be indicated here.
        estimate:
          type: integer
          description: The numeric point estimate of the story. Can also be null,
            which means unestimated.
          format: int64
          nullable: true
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
          nullable: true
        linked_file_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of linked files attached to the story.
          items:
            type: integer
            format: int64
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
        created_at:
          type: string
          description: The time/date the Story was created.
          format: date-time
      description: Request parameters for creating a story.
    CreateTask:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: The Task description.
        complete:
          type: boolean
          description: True/false boolean indicating whether the Task is completed.
            Defaults to false.
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Task.
          items:
            type: string
            format: uuid
        created_at:
          type: string
          description: Defaults to the time/date the Task is created but can be set
            to reflect another creation time/date.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date the Task is created in Shortcut but
            can be set to reflect another time/date.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Task has been imported from another tool, the ID in the other tool
            can be indicated here.
      x-doc-skip: true
    CreateTaskParams:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: The Task description.
        complete:
          type: boolean
          description: True/false boolean indicating whether the Task is completed.
            Defaults to false.
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Task.
          items:
            type: string
            format: uuid
        created_at:
          type: string
          description: Defaults to the time/date the Task is created but can be set
            to reflect another creation time/date.
          format: date-time
        updated_at:
          type: string
          description: Defaults to the time/date the Task is created in Shortcut but
            can be set to reflect another time/date.
          format: date-time
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Task has been imported from another tool, the ID in the other tool
            can be indicated here.
      description: Request parameters for creating a Task on a Story.
    DeleteStories:
      required:
      - story_ids
      type: object
      properties:
        story_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of Stories to delete.
          items:
            type: integer
            format: int64
      x-doc-skip: true
    EntityTemplate:
      required:
      - author_id
      - created_at
      - entity_type
      - id
      - last_used_at
      - name
      - story_contents
      - updated_at
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        id:
          type: string
          description: The unique identifier for the entity template.
          format: uuid
        created_at:
          type: string
          description: The time/date when the entity template was created.
          format: date-time
        updated_at:
          type: string
          description: The time/date when the entity template was last updated.
          format: date-time
        name:
          type: string
          description: The template's name.
        author_id:
          type: string
          description: The unique ID of the member who created the template.
          format: uuid
        last_used_at:
          type: string
          description: The last time that someone created an entity using this template.
          format: date-time
        story_contents:
          $ref: '#/components/schemas/StoryContents'
      description: An entity template can be used to prefill various fields when creating
        new stories.
    EntityTemplateTask:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: The Task description.
        complete:
          type: boolean
          description: True/false boolean indicating whether the Task is completed.
            Defaults to false.
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Task.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Task has been imported from another tool, the ID in the other tool
            can be indicated here.
      description: Request parameters for specifying how to pre-populate a task through
        a template.
    Epic:
      required:
      - app_url
      - archived
      - comments
      - completed
      - completed_at
      - completed_at_override
      - created_at
      - deadline
      - description
      - entity_type
      - epic_state_id
      - external_id
      - follower_ids
      - group_id
      - group_mention_ids
      - id
      - label_ids
      - labels
      - member_mention_ids
      - mention_ids
      - milestone_id
      - name
      - owner_ids
      - planned_start_date
      - position
      - productboard_id
      - productboard_name
      - productboard_plugin_id
      - productboard_url
      - project_ids
      - requested_by_id
      - started
      - started_at
      - started_at_override
      - state
      - stats
      - stories_without_projects
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Epic.
        description:
          type: string
          description: The Epic's description.
        archived:
          type: boolean
          description: True/false boolean that indicates whether the Epic is archived
            or not.
        started:
          type: boolean
          description: A true/false boolean indicating if the Epic has been started.
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of Labels attached to the Epic.
          items:
            $ref: '#/components/schemas/LabelSlim'
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in the Epic
            description.
          items:
            type: string
            format: uuid
        project_ids:
          type: array
          description: The IDs of Projects related to this Epic.
          items:
            type: integer
            format: int64
        stories_without_projects:
          type: integer
          description: The number of stories in this epic which are not associated
            with a project.
          format: int64
        completed_at_override:
          type: string
          description: A manual override for the time/date the Epic was completed.
          format: date-time
          nullable: true
        productboard_plugin_id:
          type: string
          description: The ID of the associated productboard integration.
          format: uuid
          nullable: true
        started_at:
          type: string
          description: The time/date the Epic was started.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The time/date the Epic was completed.
          format: date-time
          nullable: true
        name:
          type: string
          description: The name of the Epic.
        completed:
          type: boolean
          description: A true/false boolean indicating if the Epic has been completed.
        comments:
          type: array
          description: A nested array of threaded comments.
          items:
            $ref: '#/components/schemas/ThreadedComment'
        productboard_url:
          type: string
          description: The URL of the associated productboard feature.
          nullable: true
        planned_start_date:
          type: string
          description: The Epic's planned start date.
          format: date-time
          nullable: true
        state:
          type: string
          description: '`Deprecated` The workflow state that the Epic is in.'
        milestone_id:
          type: integer
          description: The ID of the Milestone this Epic is related to.
          format: int64
          nullable: true
        requested_by_id:
          type: string
          description: The ID of the Member that requested the epic.
          format: uuid
        epic_state_id:
          type: integer
          description: The ID of the Epic State.
          format: int64
        label_ids:
          type: array
          description: An array of Label ids attached to the Epic.
          items:
            type: integer
            format: int64
        started_at_override:
          type: string
          description: A manual override for the time/date the Epic was started.
          format: date-time
          nullable: true
        group_id:
          type: string
          description: Group ID
          format: uuid
          nullable: true
        updated_at:
          type: string
          description: The time/date the Epic was updated.
          format: date-time
          nullable: true
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in the Epic
            description.
          items:
            type: string
            format: uuid
        productboard_id:
          type: string
          description: The ID of the associated productboard feature.
          format: uuid
          nullable: true
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers
            on this Epic.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Epic.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Epic has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Epic.
          format: int64
        position:
          type: integer
          description: The Epic's relative position in the Epic workflow state.
          format: int64
        productboard_name:
          type: string
          description: The name of the associated productboard feature.
          nullable: true
        deadline:
          type: string
          description: The Epic's deadline.
          format: date-time
          nullable: true
        stats:
          $ref: '#/components/schemas/EpicStats'
        created_at:
          type: string
          description: The time/date the Epic was created.
          format: date-time
          nullable: true
      description: An Epic is a collection of stories that together might make up
        a release, a milestone, or some other large initiative that your organization
        is working on.
    EpicSearchResults:
      required:
      - data
      - next
      - total
      type: object
      properties:
        total:
          type: integer
          description: The total number of matches for the search query. The first
            1000 matches can be paged through via the API.
          format: int64
        data:
          type: array
          description: A list of search results.
          items:
            $ref: '#/components/schemas/Epic'
        next:
          type: string
          description: The URL path and query string for the next page of search results.
          nullable: true
        cursors:
          type: array
          description: Cursors
          items:
            type: string
      description: The results of the Epic search query.
    EpicSlim:
      required:
      - app_url
      - archived
      - completed
      - completed_at
      - completed_at_override
      - created_at
      - deadline
      - entity_type
      - epic_state_id
      - external_id
      - follower_ids
      - group_id
      - group_mention_ids
      - id
      - label_ids
      - labels
      - member_mention_ids
      - mention_ids
      - milestone_id
      - name
      - owner_ids
      - planned_start_date
      - position
      - productboard_id
      - productboard_name
      - productboard_plugin_id
      - productboard_url
      - project_ids
      - requested_by_id
      - started
      - started_at
      - started_at_override
      - state
      - stats
      - stories_without_projects
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Epic.
        description:
          type: string
          description: The Epic's description.
        archived:
          type: boolean
          description: True/false boolean that indicates whether the Epic is archived
            or not.
        started:
          type: boolean
          description: A true/false boolean indicating if the Epic has been started.
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of Labels attached to the Epic.
          items:
            $ref: '#/components/schemas/LabelSlim'
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in the Epic
            description.
          items:
            type: string
            format: uuid
        project_ids:
          type: array
          description: The IDs of Projects related to this Epic.
          items:
            type: integer
            format: int64
        stories_without_projects:
          type: integer
          description: The number of stories in this epic which are not associated
            with a project.
          format: int64
        completed_at_override:
          type: string
          description: A manual override for the time/date the Epic was completed.
          format: date-time
          nullable: true
        productboard_plugin_id:
          type: string
          description: The ID of the associated productboard integration.
          format: uuid
          nullable: true
        started_at:
          type: string
          description: The time/date the Epic was started.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The time/date the Epic was completed.
          format: date-time
          nullable: true
        name:
          type: string
          description: The name of the Epic.
        completed:
          type: boolean
          description: A true/false boolean indicating if the Epic has been completed.
        productboard_url:
          type: string
          description: The URL of the associated productboard feature.
          nullable: true
        planned_start_date:
          type: string
          description: The Epic's planned start date.
          format: date-time
          nullable: true
        state:
          type: string
          description: '`Deprecated` The workflow state that the Epic is in.'
        milestone_id:
          type: integer
          description: The ID of the Milestone this Epic is related to.
          format: int64
          nullable: true
        requested_by_id:
          type: string
          description: The ID of the Member that requested the epic.
          format: uuid
        epic_state_id:
          type: integer
          description: The ID of the Epic State.
          format: int64
        label_ids:
          type: array
          description: An array of Label ids attached to the Epic.
          items:
            type: integer
            format: int64
        started_at_override:
          type: string
          description: A manual override for the time/date the Epic was started.
          format: date-time
          nullable: true
        group_id:
          type: string
          description: Group ID
          format: uuid
          nullable: true
        updated_at:
          type: string
          description: The time/date the Epic was updated.
          format: date-time
          nullable: true
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in the Epic
            description.
          items:
            type: string
            format: uuid
        productboard_id:
          type: string
          description: The ID of the associated productboard feature.
          format: uuid
          nullable: true
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers
            on this Epic.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this new Epic.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Epic has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Epic.
          format: int64
        position:
          type: integer
          description: The Epic's relative position in the Epic workflow state.
          format: int64
        productboard_name:
          type: string
          description: The name of the associated productboard feature.
          nullable: true
        deadline:
          type: string
          description: The Epic's deadline.
          format: date-time
          nullable: true
        stats:
          $ref: '#/components/schemas/EpicStats'
        created_at:
          type: string
          description: The time/date the Epic was created.
          format: date-time
          nullable: true
      description: EpicSlim represents the same resource as an Epic but is more light-weight,
        including all Epic fields except the comments array. The description string
        can be optionally included. Use the [Get Epic](#Get-Epic) endpoint to fetch
        the unabridged payload for an Epic.
    EpicState:
      required:
      - created_at
      - description
      - entity_type
      - id
      - name
      - position
      - type
      - updated_at
      type: object
      properties:
        description:
          type: string
          description: The description of what sort of Epics belong in that Epic State.
        entity_type:
          type: string
          description: A string description of this resource.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color for this Epic State.
          format: css-color
        name:
          type: string
          description: The Epic State's name.
        type:
          type: string
          description: The type of Epic State (Unstarted, Started, or Done)
        updated_at:
          type: string
          description: When the Epic State was last updated.
          format: date-time
        id:
          type: integer
          description: The unique ID of the Epic State.
          format: int64
        position:
          type: integer
          description: The position that the Epic State is in, starting with 0 at
            the left.
          format: int64
        created_at:
          type: string
          description: The time/date the Epic State was created.
          format: date-time
      description: 'Epic State is any of the at least 3 columns. Epic States correspond
        to one of 3 types: Unstarted, Started, or Done.'
    EpicStats:
      required:
      - last_story_update
      - num_points
      - num_points_done
      - num_points_started
      - num_points_unstarted
      - num_related_documents
      - num_stories_done
      - num_stories_started
      - num_stories_total
      - num_stories_unestimated
      - num_stories_unstarted
      type: object
      properties:
        num_points_done:
          type: integer
          description: The total number of completed points in this Epic.
          format: int64
        num_related_documents:
          type: integer
          description: The total number of documents associated with this Epic.
          format: int64
        average_cycle_time:
          type: integer
          description: The average cycle time (in seconds) of completed stories in
            this Epic.
          format: int64
        num_stories_unstarted:
          type: integer
          description: The total number of unstarted Stories in this Epic.
          format: int64
        num_stories_total:
          type: integer
          description: The total number of Stories in this Epic.
          format: int64
        last_story_update:
          type: string
          description: The date of the last update of a Story in this Epic.
          format: date-time
          nullable: true
        num_points_started:
          type: integer
          description: The total number of started points in this Epic.
          format: int64
        num_points_unstarted:
          type: integer
          description: The total number of unstarted points in this Epic.
          format: int64
        num_stories_started:
          type: integer
          description: The total number of started Stories in this Epic.
          format: int64
        num_stories_unestimated:
          type: integer
          description: The total number of Stories with no point estimate.
          format: int64
        average_lead_time:
          type: integer
          description: The average lead time (in seconds) of completed stories in
            this Epic.
          format: int64
        num_points:
          type: integer
          description: The total number of points in this Epic.
          format: int64
        num_stories_done:
          type: integer
          description: The total number of done Stories in this Epic.
          format: int64
      description: A group of calculated values for this Epic.
    EpicWorkflow:
      required:
      - created_at
      - default_epic_state_id
      - entity_type
      - epic_states
      - id
      - updated_at
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        id:
          type: integer
          description: The unique ID of the Epic Workflow.
          format: int64
        created_at:
          type: string
          description: The date the Epic Workflow was created.
          format: date-time
        updated_at:
          type: string
          description: The date the Epic Workflow was updated.
          format: date-time
        default_epic_state_id:
          type: integer
          description: The unique ID of the default Epic State that new Epics are
            assigned by default.
          format: int64
        epic_states:
          type: array
          description: A map of the Epic States in this Epic Workflow.
          items:
            $ref: '#/components/schemas/EpicState'
      description: 'Epic Workflow is the array of defined Epic States. Epic Workflow
        can be queried using the API but must be updated in the Shortcut UI. '
    GetEpicStories:
      type: object
      properties:
        includes_description:
          type: boolean
          description: A true/false boolean indicating whether to return Stories with
            their descriptions.
      x-doc-skip: true
    GetExternalLinkStoriesParams:
      required:
      - external_link
      type: object
      properties:
        external_link:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The external link associated with one or more stories.
    GetIterationStories:
      type: object
      properties:
        includes_description:
          type: boolean
          description: A true/false boolean indicating whether to return Stories with
            their descriptions.
    GetLabelStories:
      type: object
      properties:
        includes_description:
          type: boolean
          description: A true/false boolean indicating whether to return Stories with
            their descriptions.
      x-doc-skip: true
    GetMember:
      type: object
      properties:
        org-public-id:
          type: string
          description: The unique ID of the Organization to limit the lookup to.
          format: uuid
      x-doc-skip: true
    GetProjectStories:
      type: object
      properties:
        includes_description:
          type: boolean
          description: A true/false boolean indicating whether to return Stories with
            their descriptions.
      x-doc-skip: true
    Group:
      required:
      - app_url
      - archived
      - color
      - color_key
      - description
      - display_icon
      - entity_type
      - id
      - member_ids
      - mention_name
      - name
      - num_epics_started
      - num_stories
      - num_stories_started
      - story_workflow_ids
      - workflow_ids
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Group.
        description:
          type: string
          description: The description of the Group.
        archived:
          type: boolean
          description: Whether or not the Group is archived.
        entity_type:
          type: string
          description: A string description of this resource.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Group (for example,
            "#ff0000").
          format: css-color
          nullable: true
        num_stories_started:
          type: integer
          description: The number of stories assigned to the group which are in a
            started workflow state.
          format: int64
        mention_name:
          minLength: 1
          pattern: ^[a-z0-9\-\_\.]+$
          type: string
          description: The mention name of the Group.
        name:
          type: string
          description: The name of the Group.
        color_key:
          type: string
          description: The color key to be displayed with the Group.
          nullable: true
          enum:
          - blue
          - purple
          - midnight-blue
          - orange
          - yellow-green
          - brass
          - gray
          - fuchsia
          - yellow
          - pink
          - sky-blue
          - green
          - red
          - black
          - slate
          - turquoise
        num_stories:
          type: integer
          description: The total number of stories assigned ot the group.
          format: int64
        num_epics_started:
          type: integer
          description: The number of epics assigned to the group which are in the
            started workflow state.
          format: int64
        id:
          type: string
          description: The id of the Group.
          format: uuid
        display_icon:
          $ref: '#/components/schemas/Icon'
        member_ids:
          type: array
          description: The Member IDs contain within the Group.
          items:
            type: string
            format: uuid
        story_workflow_ids:
          type: array
          description: The Workflow IDs which have stories assigned to the group.
          items:
            type: integer
            format: int64
        workflow_ids:
          type: array
          description: The Workflow IDs contained within the Group.
          items:
            type: integer
            format: int64
      description: A Group.
    History:
      required:
      - actions
      - changed_at
      - id
      - version
      type: object
      properties:
        changed_at:
          type: string
          description: The date when the change occurred.
        primary_id:
          type: integer
          description: The ID of the primary entity that has changed, if applicable.
          format: int64
        references:
          type: array
          description: An array of objects affected by the change. Reference objects
            provide basic information for the entities reference in the history actions.
            Some have specific fields, but they always contain an id, entity_type,
            and a name.
          items:
            type: object
            oneOf:
            - $ref: '#/components/schemas/HistoryReferenceBranch'
            - $ref: '#/components/schemas/HistoryReferenceCommit'
            - $ref: '#/components/schemas/HistoryReferenceEpic'
            - $ref: '#/components/schemas/HistoryReferenceGroup'
            - $ref: '#/components/schemas/HistoryReferenceIteration'
            - $ref: '#/components/schemas/HistoryReferenceLabel'
            - $ref: '#/components/schemas/HistoryReferenceProject'
            - $ref: '#/components/schemas/HistoryReferenceStory'
            - $ref: '#/components/schemas/HistoryReferenceStoryTask'
            - $ref: '#/components/schemas/HistoryReferenceWorkflowState'
            - $ref: '#/components/schemas/HistoryReferenceGeneral'
        actions:
          type: array
          description: An array of actions that were performed for the change.
          items:
            type: object
            x-oneOf:
            - $ref: '#/components/schemas/HistoryActionBranchCreate'
            - $ref: '#/components/schemas/HistoryActionBranchMerge'
            - $ref: '#/components/schemas/HistoryActionBranchPush'
            - $ref: '#/components/schemas/HistoryActionLabelCreate'
            - $ref: '#/components/schemas/HistoryActionLabelUpdate'
            - $ref: '#/components/schemas/HistoryActionLabelDelete'
            - $ref: '#/components/schemas/HistoryActionProjectUpdate'
            - $ref: '#/components/schemas/HistoryActionPullRequest'
            - $ref: '#/components/schemas/HistoryActionStoryCreate'
            - $ref: '#/components/schemas/HistoryActionStoryUpdate'
            - $ref: '#/components/schemas/HistoryActionStoryDelete'
            - $ref: '#/components/schemas/HistoryActionStoryCommentCreate'
            - $ref: '#/components/schemas/HistoryActionStoryLinkCreate'
            - $ref: '#/components/schemas/HistoryActionStoryLinkUpdate'
            - $ref: '#/components/schemas/HistoryActionStoryLinkDelete'
            - $ref: '#/components/schemas/HistoryActionTaskCreate'
            - $ref: '#/components/schemas/HistoryActionTaskUpdate'
            - $ref: '#/components/schemas/HistoryActionTaskDelete'
        member_id:
          type: string
          description: The ID of the member who performed the change.
          format: uuid
        external_id:
          type: string
          description: The ID of the webhook that handled the change.
        id:
          type: string
          description: The ID representing the change for the story.
          format: uuid
        version:
          type: string
          description: The version of the change format.
          enum:
          - v1
        webhook_id:
          type: string
          description: The ID of the webhook that handled the change.
          nullable: true
      description: A history item is a group of actions that represent a transactional
        change to a Story.
    HistoryActionBranchCreate:
      required:
      - action
      - entity_type
      - id
      - name
      - url
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        name:
          type: string
          description: The name of the VCS Branch that was pushed
        url:
          type: string
          description: The URL from the provider of the VCS Branch that was pushed
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - create
      description: An action representing a VCS Branch being created.
    HistoryActionBranchMerge:
      required:
      - action
      - entity_type
      - id
      - name
      - url
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        name:
          type: string
          description: The name of the VCS Branch that was pushed
        url:
          type: string
          description: The URL from the provider of the VCS Branch that was pushed
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - merge
      description: An action representing a VCS Branch being merged.
    HistoryActionBranchPush:
      required:
      - action
      - entity_type
      - id
      - name
      - url
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        name:
          type: string
          description: The name of the VCS Branch that was pushed
        url:
          type: string
          description: The URL from the provider of the VCS Branch that was pushed
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - push
      description: An action representing a VCS Branch being pushed.
    HistoryActionLabelCreate:
      required:
      - action
      - app_url
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - create
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Label.
        name:
          type: string
          description: The name of the Label.
      description: An action representing a Label being created.
    HistoryActionLabelDelete:
      required:
      - action
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - delete
        name:
          type: string
          description: The name of the Label.
      description: An action representing a Label being deleted.
    HistoryActionLabelUpdate:
      required:
      - action
      - entity_type
      - id
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - update
      description: An action representing a Label being updated.
    HistoryActionProjectUpdate:
      required:
      - action
      - app_url
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - update
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Project.
        name:
          type: string
          description: The name of the Project.
      description: An action representing a Project being updated.
    HistoryActionPullRequest:
      required:
      - action
      - entity_type
      - id
      - number
      - title
      - url
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - open
          - update
          - reopen
          - close
          - sync
          - comment
        number:
          type: integer
          description: The VCS Repository-specific ID for the Pull Request.
          format: int64
        title:
          type: string
          description: The title of the Pull Request.
        url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The URL from the provider of the VCS Pull Request.
      description: An action representing various operations for a Pull Request.
    HistoryActionStoryCommentCreate:
      required:
      - action
      - app_url
      - author_id
      - entity_type
      - id
      - text
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - create
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Story Comment.
        text:
          type: string
          description: The text of the Story Comment.
        author_id:
          type: string
          description: The Member ID of who created the Story Comment.
          format: uuid
      description: An action representing a Story Comment being created.
    HistoryActionStoryCreate:
      required:
      - action
      - app_url
      - entity_type
      - id
      - name
      - story_type
      type: object
      properties:
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Story.
        description:
          type: string
          description: The description of the Story.
        started:
          type: boolean
          description: Whether or not the Story has been started.
        entity_type:
          type: string
          description: The type of entity referenced.
        task_ids:
          type: array
          description: An array of Task IDs on this Story.
          items:
            type: integer
            format: int64
        story_type:
          type: string
          description: The type of Story; either feature, bug, or chore.
          enum:
          - feature
          - chore
          - bug
        name:
          type: string
          description: The name of the Story.
        completed:
          type: boolean
          description: Whether or not the Story is completed.
        blocker:
          type: boolean
          description: Whether or not the Story is blocking another Story.
        epic_id:
          type: integer
          description: The Epic ID for this Story.
          format: int64
        requested_by_id:
          type: string
          description: The ID of the Member that requested the Story.
          format: uuid
        iteration_id:
          type: integer
          description: The Iteration ID the Story is in.
          format: int64
          nullable: true
        label_ids:
          type: array
          description: An array of Labels IDs attached to the Story.
          items:
            type: integer
            format: int64
        workflow_state_id:
          type: integer
          description: An array of Workflow State IDs attached to the Story.
          format: int64
        object_story_link_ids:
          type: array
          description: An array of Story IDs that are the object of a Story Link relationship.
          items:
            type: integer
            format: int64
        follower_ids:
          type: array
          description: An array of Member IDs for the followers of the Story.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of Member IDs that are the owners of the Story.
          items:
            type: string
            format: uuid
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        estimate:
          type: integer
          description: The estimate (or point value) for the Story.
          format: int64
        subject_story_link_ids:
          type: array
          description: An array of Story IDs that are the subject of a Story Link
            relationship.
          items:
            type: integer
            format: int64
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - create
        blocked:
          type: boolean
          description: Whether or not the Story is blocked by another Story.
        project_id:
          type: integer
          description: The Project ID of the Story is in.
          format: int64
        deadline:
          type: string
          description: The timestamp representing the Story's deadline.
      description: An action representing a Story being created.
    HistoryActionStoryDelete:
      required:
      - action
      - entity_type
      - id
      - name
      - story_type
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - delete
        name:
          type: string
          description: The name of the Story.
        story_type:
          type: string
          description: The type of Story; either feature, bug, or chore.
          enum:
          - feature
          - chore
          - bug
      description: An action representing a Story being deleted.
    HistoryActionStoryLinkCreate:
      required:
      - action
      - entity_type
      - id
      - object_id
      - subject_id
      - verb
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - create
        verb:
          type: string
          description: The verb describing the link's relationship.
          enum:
          - blocks
          - duplicates
          - relates to
        subject_id:
          type: integer
          description: The Story ID of the subject Story.
          format: int64
        object_id:
          type: integer
          description: The Story ID of the object Story.
          format: int64
      description: An action representing a Story Link being created.
    HistoryActionStoryLinkDelete:
      required:
      - action
      - entity_type
      - id
      - object_id
      - subject_id
      - verb
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - delete
        verb:
          type: string
          description: The verb describing the link's relationship.
          enum:
          - blocks
          - duplicates
          - relates to
        subject_id:
          type: integer
          description: The Story ID of the subject Story.
          format: int64
          nullable: true
        object_id:
          type: integer
          description: The Story ID of the object Story.
          format: int64
          nullable: true
      description: An action representing a Story Link being deleted.
    HistoryActionStoryLinkUpdate:
      required:
      - action
      - changes
      - entity_type
      - id
      - object_id
      - subject_id
      - verb
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - update
        verb:
          type: string
          description: The verb describing the link's relationship.
          enum:
          - blocks
          - duplicates
          - relates to
        subject_id:
          type: integer
          description: The Story ID of the subject Story.
          format: int64
        object_id:
          type: integer
          description: The Story ID of the object Story.
          format: int64
        changes:
          $ref: '#/components/schemas/HistoryChangesStoryLink'
      description: An action representing a Story Link being updated.
    HistoryActionStoryUpdate:
      required:
      - action
      - app_url
      - entity_type
      - id
      - name
      - story_type
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - update
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Story.
        changes:
          $ref: '#/components/schemas/HistoryChangesStory'
        name:
          type: string
          description: The name of the Story.
        story_type:
          type: string
          description: The type of Story; either feature, bug, or chore.
          enum:
          - feature
          - chore
          - bug
      description: An action representing a Story being updated.
    HistoryActionTaskCreate:
      required:
      - action
      - complete
      - description
      - entity_type
      - id
      type: object
      properties:
        description:
          type: string
          description: The description of the Task.
        entity_type:
          type: string
          description: The type of entity referenced.
        mention_ids:
          type: array
          description: An array of Member IDs that represent who has been mentioned
            in the Task.
          items:
            type: string
            format: uuid
        group_mention_ids:
          type: array
          description: An array of Groups IDs that represent which have been mentioned
            in the Task.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of Member IDs that represent the Task's owners.
          items:
            type: string
            format: uuid
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - create
        complete:
          type: boolean
          description: Whether or not the Task is complete.
        deadline:
          type: string
          description: A timestamp that represent's the Task's deadline.
      description: An action representing a Task being created.
    HistoryActionTaskDelete:
      required:
      - action
      - description
      - entity_type
      - id
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - delete
        description:
          type: string
          description: The description of the Task being deleted.
      description: An action representing a Task being deleted.
    HistoryActionTaskUpdate:
      required:
      - action
      - changes
      - description
      - entity_type
      - id
      - story_id
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        action:
          type: string
          description: The action of the entity referenced.
          enum:
          - update
        changes:
          $ref: '#/components/schemas/HistoryChangesTask'
        complete:
          type: boolean
          description: Whether or not the Task is complete.
        description:
          type: string
          description: The description of the Task.
        story_id:
          type: integer
          description: The Story ID that contains the Task.
          format: int64
      description: An action representing a Task being updated.
    HistoryChangesStory:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'
        archived:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'
        started:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'
        task_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'
        mention_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'
        story_type:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'
        name:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'
        completed:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'
        blocker:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'
        epic_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
        branch_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'
        commit_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'
        requested_by_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewUuid'
        iteration_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
        label_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'
        workflow_state_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
        object_story_link_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'
        follower_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'
        owner_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'
        estimate:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
        subject_story_link_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesInt'
        blocked:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'
        project_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
        deadline:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'
      description: The changes that have occurred as a result of the action.
    HistoryChangesStoryLink:
      type: object
      properties:
        verb:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'
        object_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
        subject_id:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewInt'
      description: The changes that have occurred as a result of the action.
    HistoryChangesTask:
      type: object
      properties:
        complete:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewBool'
        description:
          $ref: '#/components/schemas/StoryHistoryChangeOldNewStr'
        mention_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'
        owner_ids:
          $ref: '#/components/schemas/StoryHistoryChangeAddsRemovesUuid'
      description: The changes that have occurred as a result of the action.
    HistoryReferenceBranch:
      required:
      - entity_type
      - id
      - name
      - url
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        name:
          type: string
          description: The name of the entity referenced.
        url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The external URL for the Branch.
      description: A reference to a VCS Branch.
    HistoryReferenceCommit:
      required:
      - entity_type
      - id
      - message
      - url
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        message:
          type: string
          description: The message from the Commit.
        url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The external URL for the Branch.
      description: A reference to a VCS Commit.
    HistoryReferenceEpic:
      required:
      - app_url
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Epic.
        name:
          type: string
          description: The name of the entity referenced.
      description: A reference to an Epic.
    HistoryReferenceGeneral:
      required:
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        name:
          type: string
          description: The name of the entity referenced.
      description: A default reference for entity types that don't have extra fields.
    HistoryReferenceGroup:
      required:
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: The ID of the entity referenced.
          format: uuid
        entity_type:
          type: string
          description: The type of entity referenced.
        name:
          type: string
          description: The name of the entity referenced.
      description: A reference to a Group.
    HistoryReferenceIteration:
      required:
      - app_url
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Iteration.
        name:
          type: string
          description: The name of the entity referenced.
      description: A reference to an Iteration.
    HistoryReferenceLabel:
      required:
      - app_url
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Label.
        name:
          type: string
          description: The name of the entity referenced.
      description: A reference to an Label.
    HistoryReferenceProject:
      required:
      - app_url
      - entity_type
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Project.
        name:
          type: string
          description: The name of the entity referenced.
      description: A reference to an Project.
    HistoryReferenceStory:
      required:
      - app_url
      - entity_type
      - id
      - name
      - story_type
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        app_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The application URL of the Story.
        name:
          type: string
          description: The name of the entity referenced.
        story_type:
          type: string
          description: If the referenced entity is a Story, either "bug", "chore",
            or "feature".
          enum:
          - feature
          - chore
          - bug
      description: A reference to a Story.
    HistoryReferenceStoryTask:
      required:
      - description
      - entity_type
      - id
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        description:
          type: string
          description: The description of the Story Task.
      description: A reference to a Story Task.
    HistoryReferenceWorkflowState:
      required:
      - entity_type
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: integer
          description: The ID of the entity referenced.
          format: int64
        entity_type:
          type: string
          description: The type of entity referenced.
        type:
          type: string
          description: Either "unstarted", "started", or "done".
          enum:
          - started
          - unstarted
          - done
        name:
          type: string
          description: The name of the entity referenced.
      description: A references to a Story Workflow State.
    Icon:
      required:
      - created_at
      - entity_type
      - id
      - updated_at
      - url
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        id:
          type: string
          description: The unique ID of the Icon.
          format: uuid
        created_at:
          type: string
          description: The time/date that the Icon was created.
          format: date-time
        updated_at:
          type: string
          description: The time/date that the Icon was updated.
          format: date-time
        url:
          type: string
          description: The URL of the Icon.
      description: Icons are used to attach images to Organizations, Members, and
        Loading screens in the Shortcut web application.
    Identity:
      required:
      - entity_type
      - name
      - type
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        name:
          type: string
          description: This is your login in VCS.
          nullable: true
        type:
          type: string
          description: The type of Identity; currently only type is github.
          nullable: true
      description: The Identity of the VCS user that authored the Commit.
    Iteration:
      required:
      - app_url
      - created_at
      - description
      - end_date
      - entity_type
      - follower_ids
      - group_ids
      - group_mention_ids
      - id
      - label_ids
      - labels
      - member_mention_ids
      - mention_ids
      - name
      - start_date
      - stats
      - status
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Iteration.
        description:
          type: string
          description: The description of the iteration.
        entity_type:
          type: string
          description: A string description of this resource
        labels:
          type: array
          description: An array of labels attached to the iteration.
          items:
            $ref: '#/components/schemas/Label'
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        name:
          type: string
          description: The name of the iteration.
        label_ids:
          type: array
          description: An array of label ids attached to the iteration.
          items:
            type: integer
            format: int64
        updated_at:
          type: string
          description: The instant when this iteration was last updated.
          format: date-time
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        end_date:
          type: string
          description: The date this iteration begins.
          format: date-time
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        group_ids:
          type: array
          description: An array of UUIDs for any Groups you want to add as Followers.
            Currently, only one Group association is presented in our web UI.
          items:
            type: string
            format: uuid
        start_date:
          type: string
          description: The date this iteration begins.
          format: date-time
        status:
          type: string
          description: The status of the iteration. Values are either "unstarted",
            "started", or "done".
        id:
          type: integer
          description: The ID of the iteration.
          format: int64
        stats:
          $ref: '#/components/schemas/IterationStats'
        created_at:
          type: string
          description: The instant when this iteration was created.
          format: date-time
      description: An Iteration is a defined, time-boxed period of development for
        a collection of Stories. See https://help.shortcut.com/hc/en-us/articles/360028953452-Iterations-Overview
        for more information.
    IterationSlim:
      required:
      - app_url
      - created_at
      - end_date
      - entity_type
      - follower_ids
      - group_ids
      - group_mention_ids
      - id
      - label_ids
      - labels
      - member_mention_ids
      - mention_ids
      - name
      - start_date
      - stats
      - status
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Iteration.
        entity_type:
          type: string
          description: A string description of this resource
        labels:
          type: array
          description: An array of labels attached to the iteration.
          items:
            $ref: '#/components/schemas/Label'
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        name:
          type: string
          description: The name of the iteration.
        label_ids:
          type: array
          description: An array of label ids attached to the iteration.
          items:
            type: integer
            format: int64
        updated_at:
          type: string
          description: The instant when this iteration was last updated.
          format: date-time
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        end_date:
          type: string
          description: The date this iteration begins.
          format: date-time
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        group_ids:
          type: array
          description: An array of UUIDs for any Groups you want to add as Followers.
            Currently, only one Group association is presented in our web UI.
          items:
            type: string
            format: uuid
        start_date:
          type: string
          description: The date this iteration begins.
          format: date-time
        status:
          type: string
          description: The status of the iteration. Values are either "unstarted",
            "started", or "done".
        id:
          type: integer
          description: The ID of the iteration.
          format: int64
        stats:
          $ref: '#/components/schemas/IterationStats'
        created_at:
          type: string
          description: The instant when this iteration was created.
          format: date-time
      description: 'IterationSlim represents the same resource as an Iteration, but
        is more light-weight. Use the [Get Iteration](#Get-Iteration) endpoint to
        fetch the unabridged payload for an Iteration. '
    IterationStats:
      required:
      - num_points
      - num_points_done
      - num_points_started
      - num_points_unstarted
      - num_related_documents
      - num_stories_done
      - num_stories_started
      - num_stories_unestimated
      - num_stories_unstarted
      type: object
      properties:
        num_points_done:
          type: integer
          description: The total number of completed points in this Iteration.
          format: int64
        num_related_documents:
          type: integer
          description: The total number of documents related to an Iteration
          format: int64
        average_cycle_time:
          type: integer
          description: The average cycle time (in seconds) of completed stories in
            this Iteration.
          format: int64
        num_stories_unstarted:
          type: integer
          description: The total number of unstarted Stories in this Iteration.
          format: int64
        num_points_started:
          type: integer
          description: The total number of started points in this Iteration.
          format: int64
        num_points_unstarted:
          type: integer
          description: The total number of unstarted points in this Iteration.
          format: int64
        num_stories_started:
          type: integer
          description: The total number of started Stories in this Iteration.
          format: int64
        num_stories_unestimated:
          type: integer
          description: The total number of Stories with no point estimate.
          format: int64
        average_lead_time:
          type: integer
          description: The average lead time (in seconds) of completed stories in
            this Iteration.
          format: int64
        num_points:
          type: integer
          description: The total number of points in this Iteration.
          format: int64
        num_stories_done:
          type: integer
          description: The total number of done Stories in this Iteration.
          format: int64
      description: A group of calculated values for this Iteration.
    Label:
      required:
      - app_url
      - archived
      - color
      - created_at
      - description
      - entity_type
      - external_id
      - id
      - name
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Label.
        description:
          type: string
          description: The description of the Label.
          nullable: true
        archived:
          type: boolean
          description: A true/false boolean indicating if the Label has been archived.
        entity_type:
          type: string
          description: A string description of this resource.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Label (for example,
            "#ff0000").
          format: css-color
          nullable: true
        name:
          type: string
          description: The name of the Label.
        updated_at:
          type: string
          description: The time/date that the Label was updated.
          format: date-time
          nullable: true
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Label has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Label.
          format: int64
        stats:
          $ref: '#/components/schemas/LabelStats'
        created_at:
          type: string
          description: The time/date that the Label was created.
          format: date-time
          nullable: true
      description: A Label can be used to associate and filter Stories and Epics,
        and also create new Workspaces.
    LabelSlim:
      required:
      - app_url
      - archived
      - color
      - created_at
      - description
      - entity_type
      - external_id
      - id
      - name
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Label.
        description:
          type: string
          description: The description of the Label.
          nullable: true
        archived:
          type: boolean
          description: A true/false boolean indicating if the Label has been archived.
        entity_type:
          type: string
          description: A string description of this resource.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Label (for example,
            "#ff0000").
          format: css-color
          nullable: true
        name:
          type: string
          description: The name of the Label.
        updated_at:
          type: string
          description: The time/date that the Label was updated.
          format: date-time
          nullable: true
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Label has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Label.
          format: int64
        created_at:
          type: string
          description: The time/date that the Label was created.
          format: date-time
          nullable: true
      description: A Label can be used to associate and filter Stories and Epics,
        and also create new Workspaces. A slim Label does not include aggregate stats.
        Fetch the Label using the labels endpoint to retrieve them.
    LabelStats:
      required:
      - num_epics
      - num_epics_completed
      - num_epics_in_progress
      - num_epics_total
      - num_epics_unstarted
      - num_points_completed
      - num_points_in_progress
      - num_points_total
      - num_points_unstarted
      - num_related_documents
      - num_stories_completed
      - num_stories_in_progress
      - num_stories_total
      - num_stories_unestimated
      - num_stories_unstarted
      type: object
      properties:
        num_related_documents:
          type: integer
          description: The total number of Documents associated this Label.
          format: int64
        num_epics:
          type: integer
          description: The total number of Epics with this Label.
          format: int64
        num_stories_unstarted:
          type: integer
          description: The total number of stories unstarted Stories with this Label.
          format: int64
        num_stories_total:
          type: integer
          description: The total number of Stories with this Label.
          format: int64
        num_epics_unstarted:
          type: integer
          description: The number of unstarted epics assoicated with this label.
          format: int64
        num_epics_in_progress:
          type: integer
          description: The number of in progress epics assoicated with this label.
          format: int64
        num_points_unstarted:
          type: integer
          description: The total number of unstarted points with this Label.
          format: int64
        num_stories_unestimated:
          type: integer
          description: The total number of Stories with no point estimate with this
            Label.
          format: int64
        num_points_in_progress:
          type: integer
          description: The total number of in-progress points with this Label.
          format: int64
        num_epics_total:
          type: integer
          description: The total number of Epics assoicated with this Label.
          format: int64
        num_stories_completed:
          type: integer
          description: The total number of completed Stories with this Label.
          format: int64
        num_points_completed:
          type: integer
          description: The total number of completed points with this Label.
          format: int64
        num_points_total:
          type: integer
          description: The total number of points with this Label.
          format: int64
        num_stories_in_progress:
          type: integer
          description: The total number of in-progress Stories with this Label.
          format: int64
        num_epics_completed:
          type: integer
          description: The number of completed Epics assoicated with this Label.
          format: int64
      description: A group of calculated values for this Label. This is not included
        if the slim? flag is set to true for the List Labels endpoint.
    LinkedFile:
      required:
      - content_type
      - created_at
      - description
      - entity_type
      - group_mention_ids
      - id
      - member_mention_ids
      - mention_ids
      - name
      - size
      - story_ids
      - thumbnail_url
      - type
      - updated_at
      - uploader_id
      - url
      type: object
      properties:
        description:
          type: string
          description: The description of the file.
          nullable: true
        entity_type:
          type: string
          description: A string description of this resource.
        story_ids:
          type: array
          description: The IDs of the stories this file is attached to.
          items:
            type: integer
            format: int64
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: The members that are mentioned in the description of the file.
          items:
            type: string
            format: uuid
        name:
          type: string
          description: The name of the linked file.
        thumbnail_url:
          type: string
          description: The URL of the file thumbnail, if the integration provided
            it.
          nullable: true
        type:
          type: string
          description: The integration type (e.g. google, dropbox, box).
        size:
          type: integer
          description: The filesize, if the integration provided it.
          format: int64
          nullable: true
        uploader_id:
          type: string
          description: The UUID of the member that uploaded the file.
          format: uuid
        content_type:
          type: string
          description: The content type of the image (e.g. txt/plain).
          nullable: true
        updated_at:
          type: string
          description: The time/date the LinkedFile was updated.
          format: date-time
        group_mention_ids:
          type: array
          description: The groups that are mentioned in the description of the file.
          items:
            type: string
            format: uuid
        id:
          type: integer
          description: The unique identifier for the file.
          format: int64
        url:
          type: string
          description: The URL of the file.
        created_at:
          type: string
          description: The time/date the LinkedFile was created.
          format: date-time
      description: Linked files are stored on a third-party website and linked to
        one or more Stories. Shortcut currently supports linking files from Google
        Drive, Dropbox, Box, and by URL.
    ListEpics:
      type: object
      properties:
        includes_description:
          type: boolean
          description: A true/false boolean indicating whether to return Epics with
            their descriptions.
      x-doc-skip: true
    ListGroupStories:
      type: object
      properties:
        limit:
          type: integer
          description: The maximum number of results to return. (Defaults to 1000,
            max 1000)
          format: int64
        offset:
          type: integer
          description: The offset at which to begin returning results. (Defaults to
            0)
          format: int64
    ListLabels:
      type: object
      properties:
        slim:
          type: boolean
          description: A true/false boolean indicating if the slim versions of the
            Label should be returned.
      x-doc-skip: true
    ListMembers:
      type: object
      properties:
        org-public-id:
          type: string
          description: The unique ID of the Organization to limit the list to.
          format: uuid
      x-doc-skip: true
    MaxSearchResultsExceededError:
      required:
      - error
      - maximum-results
      - message
      type: object
      properties:
        error:
          type: string
          description: The name for this type of error, `maximum-results-exceeded`
          enum:
          - maximum-results-exceeded
        message:
          type: string
          description: 'An explanatory message: "A maximum of 1000 search results
            are supported."'
        maximum-results:
          type: integer
          description: The maximum number of search results supported, `1000`
          format: int64
          enum:
          - 1000
      description: Error returned when total maximum supported results have been reached.
    Member:
      required:
      - created_at
      - created_without_invite
      - disabled
      - entity_type
      - group_ids
      - id
      - profile
      - role
      - state
      - updated_at
      type: object
      properties:
        role:
          type: string
          description: The Member's role in the Shortcut organization.
        entity_type:
          type: string
          description: A string description of this resource.
        disabled:
          type: boolean
          description: True/false boolean indicating whether the Member has been disabled
            within this Organization.
        state:
          type: string
          description: |-
            The user state, one of partial, full, disabled, or imported.  A partial
                       user is disabled, has no means to log in, and is not an import user.  A full
                       user is enabled and has a means to log in.  A disabled user is disabled and has
                       a means to log in.  An import user is disabled, has no means to log in, and is
                       marked as an import user.
          enum:
          - partial
          - full
          - disabled
          - imported
        updated_at:
          type: string
          description: The time/date the Member was last updated.
          format: date-time
          nullable: true
        created_without_invite:
          type: boolean
          description: Whether this member was created as a placeholder entity.
          x-doc-skip: true
        group_ids:
          type: array
          description: The Member's group ids
          items:
            type: string
            format: uuid
        id:
          type: string
          description: The Member's ID in Shortcut.
          format: uuid
        profile:
          $ref: '#/components/schemas/Profile'
        created_at:
          type: string
          description: The time/date the Member was created.
          format: date-time
          nullable: true
        replaced_by:
          type: string
          description: The id of the member that replaces this one when merged.
          format: uuid
          x-doc-skip: true
      description: Details about individual Shortcut user within the Shortcut organization
        that has issued the token.
    MemberInfo:
      required:
      - id
      - mention_name
      - name
      - workspace2
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        mention_name:
          type: string
        workspace2:
          $ref: '#/components/schemas/BasicWorkspaceInfo'
    Milestone:
      required:
      - app_url
      - categories
      - completed
      - completed_at
      - completed_at_override
      - created_at
      - description
      - entity_type
      - id
      - name
      - position
      - started
      - started_at
      - started_at_override
      - state
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Milestone.
        description:
          type: string
          description: The Milestone's description.
        started:
          type: boolean
          description: A true/false boolean indicating if the Milestone has been started.
        entity_type:
          type: string
          description: A string description of this resource.
        completed_at_override:
          type: string
          description: A manual override for the time/date the Milestone was completed.
          format: date-time
          nullable: true
        started_at:
          type: string
          description: The time/date the Milestone was started.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The time/date the Milestone was completed.
          format: date-time
          nullable: true
        name:
          type: string
          description: The name of the Milestone.
        completed:
          type: boolean
          description: A true/false boolean indicating if the Milestone has been completed.
        state:
          type: string
          description: The workflow state that the Milestone is in.
        started_at_override:
          type: string
          description: A manual override for the time/date the Milestone was started.
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: The time/date the Milestone was updated.
          format: date-time
        categories:
          type: array
          description: An array of Categories attached to the Milestone.
          items:
            $ref: '#/components/schemas/Category'
        id:
          type: integer
          description: The unique ID of the Milestone.
          format: int64
        position:
          type: integer
          description: A number representing the position of the Milestone in relation
            to every other Milestone within the Organization.
          format: int64
        stats:
          $ref: '#/components/schemas/MilestoneStats'
        created_at:
          type: string
          description: The time/date the Milestone was created.
          format: date-time
      description: A Milestone is a collection of Epics that represent a release or
        some other large initiative that your organization is working on.
    MilestoneStats:
      required:
      - num_related_documents
      type: object
      properties:
        average_cycle_time:
          type: integer
          description: The average cycle time (in seconds) of completed stories in
            this Milestone.
          format: int64
        average_lead_time:
          type: integer
          description: The average lead time (in seconds) of completed stories in
            this Milestone.
          format: int64
        num_related_documents:
          type: integer
          description: The number of related documents tp this Milestone.
          format: int64
      description: A group of calculated values for this Milestone.
    Profile:
      required:
      - deactivated
      - display_icon
      - email_address
      - entity_type
      - gravatar_hash
      - id
      - mention_name
      - name
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        deactivated:
          type: boolean
          description: A true/false boolean indicating whether the Member has been
            deactivated within Shortcut.
        two_factor_auth_activated:
          type: boolean
          description: If Two Factor Authentication is activated for this User.
        mention_name:
          type: string
          description: The Member's username within the Organization.
        name:
          type: string
          description: The Member's name within the Organization.
          nullable: true
        gravatar_hash:
          type: string
          description: This is the gravatar hash associated with email_address.
          nullable: true
        id:
          type: string
          description: The unique identifier of the profile.
          format: uuid
        display_icon:
          $ref: '#/components/schemas/Icon'
        email_address:
          type: string
          description: The primary email address of the Member with the Organization.
          nullable: true
      description: A group of Member profile details.
    Project:
      required:
      - abbreviation
      - app_url
      - archived
      - color
      - created_at
      - days_to_thermometer
      - description
      - entity_type
      - external_id
      - follower_ids
      - id
      - iteration_length
      - name
      - show_thermometer
      - start_time
      - stats
      - team_id
      - updated_at
      - workflow_id
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Project.
        description:
          type: string
          description: The description of the Project.
          nullable: true
        archived:
          type: boolean
          description: True/false boolean indicating whether the Project is in an
            Archived state.
        entity_type:
          type: string
          description: A string description of this resource.
        days_to_thermometer:
          type: integer
          description: The number of days before the thermometer appears in the Story
            summary.
          format: int64
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The color associated with the Project in the Shortcut member
            interface.
          format: css-color
          nullable: true
        workflow_id:
          type: integer
          description: The ID of the workflow the project belongs to.
          format: int64
        name:
          type: string
          description: The name of the Project
        start_time:
          type: string
          description: The date at which the Project was started.
          format: date-time
        updated_at:
          type: string
          description: The time/date that the Project was last updated.
          format: date-time
          nullable: true
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Project has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Project.
          format: int64
        show_thermometer:
          type: boolean
          description: Configuration to enable or disable thermometers in the Story
            summary.
        team_id:
          type: integer
          description: The ID of the team the project belongs to.
          format: int64
        iteration_length:
          type: integer
          description: The number of weeks per iteration in this Project.
          format: int64
        abbreviation:
          type: string
          description: The Project abbreviation used in Story summaries. Should be
            kept to 3 characters at most.
          nullable: true
        stats:
          $ref: '#/components/schemas/ProjectStats'
        created_at:
          type: string
          description: The time/date that the Project was created.
          format: date-time
          nullable: true
      description: Projects typically map to teams (such as Frontend, Backend, Mobile,
        Devops, etc) but can represent any open-ended product, component, or initiative.
    ProjectStats:
      required:
      - num_points
      - num_related_documents
      - num_stories
      type: object
      properties:
        num_stories:
          type: integer
          description: The total number of stories in this Project.
          format: int64
        num_points:
          type: integer
          description: The total number of points in this Project.
          format: int64
        num_related_documents:
          type: integer
          description: The total number of documents related to this Project
          format: int64
      description: A group of calculated values for this Project.
    PullRequest:
      required:
      - branch_id
      - branch_name
      - closed
      - created_at
      - draft
      - entity_type
      - id
      - merged
      - num_added
      - num_commits
      - num_modified
      - num_removed
      - number
      - repository_id
      - target_branch_id
      - target_branch_name
      - title
      - updated_at
      - url
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        closed:
          type: boolean
          description: True/False boolean indicating whether the VCS pull request
            has been closed.
        merged:
          type: boolean
          description: True/False boolean indicating whether the VCS pull request
            has been merged.
        num_added:
          type: integer
          description: Number of lines added in the pull request, according to VCS.
          format: int64
        branch_id:
          type: integer
          description: The ID of the branch for the particular pull request.
          format: int64
        number:
          type: integer
          description: The pull request's unique number ID in VCS.
          format: int64
        branch_name:
          type: string
          description: The name of the branch for the particular pull request.
        target_branch_name:
          type: string
          description: The name of the target branch for the particular pull request.
        num_commits:
          type: integer
          description: The number of commits on the pull request.
          format: int64
          nullable: true
        title:
          type: string
          description: The title of the pull request.
        updated_at:
          type: string
          description: The time/date the pull request was created.
          format: date-time
        draft:
          type: boolean
          description: True/False boolean indicating whether the VCS pull request
            is in the draft state.
        id:
          type: integer
          description: The unique ID associated with the pull request in Shortcut.
          format: int64
        vcs_labels:
          type: array
          description: An array of PullRequestLabels attached to the PullRequest.
          nullable: true
          items:
            $ref: '#/components/schemas/PullRequestLabel'
        url:
          type: string
          description: The URL for the pull request.
        num_removed:
          type: integer
          description: Number of lines removed in the pull request, according to VCS.
          format: int64
        review_status:
          type: string
          description: The status of the review for the pull request.
        num_modified:
          type: integer
          description: Number of lines modified in the pull request, according to
            VCS.
          format: int64
          nullable: true
        build_status:
          type: string
          description: The status of the Continuous Integration workflow for the pull
            request.
        target_branch_id:
          type: integer
          description: The ID of the target branch for the particular pull request.
          format: int64
        repository_id:
          type: integer
          description: The ID of the repository for the particular pull request.
          format: int64
        created_at:
          type: string
          description: The time/date the pull request was created.
          format: date-time
      description: Corresponds to a VCS Pull Request attached to a Shortcut story.
    PullRequestLabel:
      required:
      - color
      - entity_type
      - id
      - name
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        id:
          type: integer
          description: The unique ID of the VCS Label.
          format: int64
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The color of the VCS label.
          format: css-color
        description:
          type: string
          description: The description of the VCS label.
          nullable: true
        name:
          type: string
          description: The name of the VCS label.
      description: Corresponds to a VCS Label associated with a Pull Request.
    Repository:
      required:
      - created_at
      - entity_type
      - external_id
      - full_name
      - id
      - name
      - type
      - updated_at
      - url
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        name:
          type: string
          description: The shorthand name of the VCS repository.
          nullable: true
        type:
          type: string
          description: The type of Repository. Currently this can only be "github".
        updated_at:
          type: string
          description: The time/date the Repository was updated.
          format: date-time
          nullable: true
        external_id:
          type: string
          description: The VCS unique identifier for the Repository.
          nullable: true
        id:
          type: integer
          description: The ID associated to the VCS repository in Shortcut.
          format: int64
          nullable: true
        url:
          type: string
          description: The URL of the Repository.
          nullable: true
        full_name:
          type: string
          description: The full name of the VCS repository.
          nullable: true
        created_at:
          type: string
          description: The time/date the Repository was created.
          format: date-time
          nullable: true
      description: Repository refers to a VCS repository.
    Search:
      required:
      - query
      type: object
      properties:
        query:
          minLength: 1
          type: string
          description: See our help center article on [search operators](https://help.shortcut.com/hc/en-us/articles/360000046646-Search-Operators)
        page_size:
          type: integer
          description: The number of search results to include in a page. Minimum
            of 1 and maximum of 25.
          format: int64
        next:
          type: string
          description: The next page token.
          x-doc-skip: true
        include:
          type: string
          enum:
          - cursors
          x-doc-skip: true
      x-doc-skip: true
    SearchResults:
      required:
      - epics
      - stories
      type: object
      properties:
        epics:
          $ref: '#/components/schemas/EpicSearchResults'
        stories:
          $ref: '#/components/schemas/StorySearchResults'
      description: The results of the multi-entity search query.
    SearchStories:
      type: object
      properties:
        archived:
          type: boolean
          description: A true/false boolean indicating whether the Story is in archived
            state.
        owner_id:
          type: string
          description: An array of UUIDs for any Users who may be Owners of the Stories.
          format: uuid
          nullable: true
        story_type:
          type: string
          description: The type of Stories that you want returned.
          enum:
          - feature
          - chore
          - bug
        epic_ids:
          uniqueItems: true
          type: array
          description: The Epic IDs that may be associated with the Stories.
          items:
            type: integer
            format: int64
        project_ids:
          uniqueItems: true
          type: array
          description: The IDs for the Projects the Stories may be assigned to.
          items:
            type: integer
            format: int64
        updated_at_end:
          type: string
          description: Stories should have been updated before this date.
          format: date-time
        completed_at_end:
          type: string
          description: Stories should have been completed before this date.
          format: date-time
        workflow_state_types:
          type: array
          description: The type of Workflow State the Stories may be in.
          items:
            type: string
            enum:
            - started
            - unstarted
            - done
        deadline_end:
          type: string
          description: Stories should have a deadline before this date.
          format: date-time
        created_at_start:
          type: string
          description: Stories should have been created after this date.
          format: date-time
        epic_id:
          type: integer
          description: The Epic IDs that may be associated with the Stories.
          format: int64
          nullable: true
        label_name:
          minLength: 1
          type: string
          description: The name of any associated Labels.
        requested_by_id:
          type: string
          description: The UUID of any Users who may have requested the Stories.
          format: uuid
        iteration_id:
          type: integer
          description: The Iteration ID that may be associated with the Stories.
          format: int64
          nullable: true
        label_ids:
          uniqueItems: true
          type: array
          description: The Label IDs that may be associated with the Stories.
          items:
            type: integer
            format: int64
        group_id:
          type: string
          description: The Group ID that is associated with the Stories
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The unique IDs of the specific Workflow States that the Stories
            should be in.
          format: int64
        iteration_ids:
          uniqueItems: true
          type: array
          description: The Iteration IDs that may be associated with the Stories.
          items:
            type: integer
            format: int64
        created_at_end:
          type: string
          description: Stories should have been created before this date.
          format: date-time
        deadline_start:
          type: string
          description: Stories should have a deadline after this date.
          format: date-time
        group_ids:
          uniqueItems: true
          type: array
          description: The Group IDs that are associated with the Stories
          items:
            type: string
            format: uuid
        owner_ids:
          uniqueItems: true
          type: array
          description: An array of UUIDs for any Users who may be Owners of the Stories.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: An ID or URL that references an external resource. Useful during
            imports.
        includes_description:
          type: boolean
          description: Whether to include the story description in the response.
        estimate:
          type: integer
          description: The number of estimate points associate with the Stories.
          format: int64
        project_id:
          type: integer
          description: The IDs for the Projects the Stories may be assigned to.
          format: int64
        completed_at_start:
          type: string
          description: Stories should have been competed after this date.
          format: date-time
        updated_at_start:
          type: string
          description: Stories should have been updated after this date.
          format: date-time
      x-doc-skip: true
    Story:
      required:
      - app_url
      - archived
      - blocked
      - blocker
      - branches
      - comments
      - commits
      - completed
      - completed_at
      - completed_at_override
      - created_at
      - deadline
      - description
      - entity_type
      - epic_id
      - estimate
      - external_id
      - external_links
      - files
      - follower_ids
      - group_id
      - group_mention_ids
      - id
      - iteration_id
      - label_ids
      - labels
      - linked_files
      - member_mention_ids
      - mention_ids
      - moved_at
      - name
      - owner_ids
      - position
      - previous_iteration_ids
      - project_id
      - pull_requests
      - requested_by_id
      - started
      - started_at
      - started_at_override
      - stats
      - story_links
      - story_template_id
      - story_type
      - tasks
      - updated_at
      - workflow_id
      - workflow_state_id
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Story.
        description:
          type: string
          description: The description of the story.
        archived:
          type: boolean
          description: True if the story has been archived or not.
        started:
          type: boolean
          description: A true/false boolean indicating if the Story has been started.
        story_links:
          type: array
          description: An array of story links attached to the Story.
          items:
            $ref: '#/components/schemas/TypedStoryLink'
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of labels attached to the story.
          items:
            $ref: '#/components/schemas/LabelSlim'
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
        linked_files:
          type: array
          description: An array of linked files attached to the story.
          items:
            $ref: '#/components/schemas/LinkedFile'
        workflow_id:
          type: integer
          description: The ID of the workflow the story belongs to.
          format: int64
        completed_at_override:
          type: string
          description: A manual override for the time/date the Story was completed.
          format: date-time
          nullable: true
        started_at:
          type: string
          description: The time/date the Story was started.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The time/date the Story was completed.
          format: date-time
          nullable: true
        name:
          type: string
          description: The name of the story.
        completed:
          type: boolean
          description: A true/false boolean indicating if the Story has been completed.
        comments:
          type: array
          description: An array of comments attached to the story.
          items:
            $ref: '#/components/schemas/StoryComment'
        blocker:
          type: boolean
          description: A true/false boolean indicating if the Story is currently a
            blocker of another story.
        branches:
          type: array
          description: An array of Git branches attached to the story.
          items:
            $ref: '#/components/schemas/Branch'
        epic_id:
          type: integer
          description: The ID of the epic the story belongs to.
          format: int64
          nullable: true
        story_template_id:
          type: string
          description: The ID of the story template used to create this story, or
            null if not created using a template.
          format: uuid
          nullable: true
        external_links:
          type: array
          description: An array of external links (strings) associated with a Story
          items:
            type: string
        previous_iteration_ids:
          type: array
          description: The IDs of the iteration the story belongs to.
          items:
            type: integer
            format: int64
        requested_by_id:
          type: string
          description: The ID of the Member that requested the story.
          format: uuid
        iteration_id:
          type: integer
          description: The ID of the iteration the story belongs to.
          format: int64
          nullable: true
        tasks:
          type: array
          description: An array of tasks connected to the story.
          items:
            $ref: '#/components/schemas/Task'
        label_ids:
          type: array
          description: An array of label ids attached to the story.
          items:
            type: integer
            format: int64
        started_at_override:
          type: string
          description: A manual override for the time/date the Story was started.
          format: date-time
          nullable: true
        group_id:
          type: string
          description: The ID of the group associated with the story.
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state the story is currently in.
          format: int64
        updated_at:
          type: string
          description: The time/date the Story was updated.
          format: date-time
          nullable: true
        pull_requests:
          type: array
          description: An array of Pull/Merge Requests attached to the story.
          items:
            $ref: '#/components/schemas/PullRequest'
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Story has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Story.
          format: int64
        lead_time:
          type: integer
          description: The lead time (in seconds) of this story when complete.
          format: int64
        estimate:
          type: integer
          description: The numeric point estimate of the story. Can also be null,
            which means unestimated.
          format: int64
          nullable: true
        commits:
          type: array
          description: An array of commits attached to the story.
          items:
            $ref: '#/components/schemas/Commit'
        files:
          type: array
          description: An array of files attached to the story.
          items:
            $ref: '#/components/schemas/UploadedFile'
        position:
          type: integer
          description: A number representing the position of the story in relation
            to every other story in the current project.
          format: int64
        blocked:
          type: boolean
          description: A true/false boolean indicating if the Story is currently blocked.
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
          nullable: true
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
        stats:
          $ref: '#/components/schemas/StoryStats'
        cycle_time:
          type: integer
          description: The cycle time (in seconds) of this story when complete.
          format: int64
        created_at:
          type: string
          description: The time/date the Story was created.
          format: date-time
        moved_at:
          type: string
          description: The time/date the Story was last changed workflow-state.
          format: date-time
          nullable: true
      description: Stories are the standard unit of work in Shortcut and represent
        individual features, bugs, and chores.
    StoryComment:
      required:
      - app_url
      - author_id
      - created_at
      - entity_type
      - external_id
      - group_mention_ids
      - id
      - member_mention_ids
      - mention_ids
      - position
      - reactions
      - story_id
      - text
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Comment.
        entity_type:
          type: string
          description: A string description of this resource.
        story_id:
          type: integer
          description: The ID of the Story on which the Comment appears.
          format: int64
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        author_id:
          type: string
          description: The unique ID of the Member who is the Comment's author.
          format: uuid
          nullable: true
        member_mention_ids:
          type: array
          description: The unique IDs of the Member who are mentioned in the Comment.
          items:
            type: string
            format: uuid
        updated_at:
          type: string
          description: The time/date when the Comment was updated.
          format: date-time
          nullable: true
        group_mention_ids:
          type: array
          description: The unique IDs of the Group who are mentioned in the Comment.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Comment has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Comment.
          format: int64
        position:
          type: integer
          description: The Comments numerical position in the list from oldest to
            newest.
          format: int64
        reactions:
          type: array
          description: A set of Reactions to this Comment.
          items:
            $ref: '#/components/schemas/StoryReaction'
          x-doc-skip: true
        created_at:
          type: string
          description: The time/date when the Comment was created.
          format: date-time
        text:
          type: string
          description: The text of the Comment.
      description: A Comment is any note added within the Comment field of a Story.
    StoryContents:
      type: object
      properties:
        description:
          type: string
          description: The description of the story.
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of labels attached to the story.
          items:
            $ref: '#/components/schemas/LabelSlim'
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
        linked_files:
          type: array
          description: An array of linked files attached to the story.
          items:
            $ref: '#/components/schemas/LinkedFile'
        name:
          type: string
          description: The name of the story.
        epic_id:
          type: integer
          description: The ID of the epic the story belongs to.
          format: int64
        external_links:
          type: array
          description: An array of external links connected to the story.
          items:
            type: string
        iteration_id:
          type: integer
          description: The ID of the iteration the story belongs to.
          format: int64
        tasks:
          type: array
          description: An array of tasks connected to the story.
          items:
            $ref: '#/components/schemas/StoryContentsTask'
        label_ids:
          type: array
          description: An array of label ids attached to the story.
          items:
            type: integer
            format: int64
        group_id:
          type: string
          description: The ID of the group to which the story is assigned.
          format: uuid
        workflow_state_id:
          type: integer
          description: The ID of the workflow state the story is currently in.
          format: int64
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        estimate:
          type: integer
          description: The numeric point estimate of the story. Can also be null,
            which means unestimated.
          format: int64
        files:
          type: array
          description: An array of files attached to the story.
          items:
            $ref: '#/components/schemas/UploadedFile'
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
      description: A container entity for the attributes this template should populate.
    StoryContentsTask:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: Full text of the Task.
        position:
          type: integer
          description: The number corresponding to the Task's position within a list
            of Tasks on a Story.
          format: int64
        complete:
          type: boolean
          description: True/false boolean indicating whether the Task has been completed.
        owner_ids:
          type: array
          description: An array of UUIDs of the Owners of this Task.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Task has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
    StoryHistoryChangeAddsRemovesInt:
      type: object
      properties:
        adds:
          type: array
          description: The values that have been added.
          items:
            type: integer
            format: int64
        removes:
          type: array
          description: The values that have been removed
          items:
            type: integer
            format: int64
      description: Task IDs that have been added or removed from the Story.
    StoryHistoryChangeAddsRemovesUuid:
      type: object
      properties:
        adds:
          type: array
          description: The values that have been added.
          items:
            type: string
            format: uuid
        removes:
          type: array
          description: The values that have been removed
          items:
            type: string
            format: uuid
      description: Member IDs that have been added or removed as a owner of the Story.
    StoryHistoryChangeOldNewBool:
      type: object
      properties:
        old:
          type: boolean
          description: The old value.
        new:
          type: boolean
          description: The new value.
      description: True if the Story has archived, otherwise false.
    StoryHistoryChangeOldNewInt:
      type: object
      properties:
        old:
          type: integer
          description: The old value.
          format: int64
        new:
          type: integer
          description: The new value.
          format: int64
      description: The estimate value for the Story
    StoryHistoryChangeOldNewStr:
      type: object
      properties:
        old:
          type: string
          description: The old value.
        new:
          type: string
          description: The new value.
      description: A timestamp that represents the Story's deadline.
    StoryHistoryChangeOldNewUuid:
      type: object
      properties:
        old:
          type: string
          description: The old value.
          format: uuid
        new:
          type: string
          description: The new value.
          format: uuid
      description: The Member ID of the preson who requested the Story.
    StoryLink:
      required:
      - created_at
      - entity_type
      - id
      - object_id
      - subject_id
      - subject_workflow_state_id
      - updated_at
      - verb
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        id:
          type: integer
          description: The unique identifier of the Story Link.
          format: int64
        subject_id:
          type: integer
          description: The ID of the subject Story.
          format: int64
        subject_workflow_state_id:
          type: integer
          description: The workflow state of the "subject" story.
          format: int64
          x-doc-skip: true
        verb:
          type: string
          description: How the subject Story acts on the object Story. This can be
            "blocks", "duplicates", or "relates to".
        object_id:
          type: integer
          description: The ID of the object Story.
          format: int64
        created_at:
          type: string
          description: The time/date when the Story Link was created.
          format: date-time
        updated_at:
          type: string
          description: The time/date when the Story Link was last updated.
          format: date-time
      description: Story links allow you create semantic relationships between two
        stories. Relationship types are relates to, blocks / blocked by, and duplicates
        / is duplicated by. The format is `subject -> link -> object`, or for example
        "story 5 blocks story 6".
    StoryReaction:
      required:
      - emoji
      - permission_ids
      type: object
      properties:
        emoji:
          type: string
          description: Emoji text of the reaction.
        permission_ids:
          type: array
          description: Permissions who have reacted with this.
          items:
            type: string
            format: uuid
      description: Emoji reaction on a comment.
      x-doc-skip: true
    StorySearchResults:
      required:
      - data
      - next
      - total
      type: object
      properties:
        total:
          type: integer
          description: The total number of matches for the search query. The first
            1000 matches can be paged through via the API.
          format: int64
        data:
          type: array
          description: A list of search results.
          items:
            $ref: '#/components/schemas/Story'
        next:
          type: string
          description: The URL path and query string for the next page of search results.
          nullable: true
        cursors:
          type: array
          description: Cursors
          items:
            type: string
      description: The results of the Story search query.
    StorySlim:
      required:
      - app_url
      - archived
      - blocked
      - blocker
      - comment_ids
      - completed
      - completed_at
      - completed_at_override
      - created_at
      - deadline
      - entity_type
      - epic_id
      - estimate
      - external_id
      - external_links
      - file_ids
      - follower_ids
      - group_id
      - group_mention_ids
      - id
      - iteration_id
      - label_ids
      - labels
      - linked_file_ids
      - member_mention_ids
      - mention_ids
      - moved_at
      - name
      - num_tasks_completed
      - owner_ids
      - position
      - previous_iteration_ids
      - project_id
      - requested_by_id
      - started
      - started_at
      - started_at_override
      - stats
      - story_links
      - story_template_id
      - story_type
      - task_ids
      - updated_at
      - workflow_id
      - workflow_state_id
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Story.
        description:
          type: string
          description: The description of the Story.
        archived:
          type: boolean
          description: True if the story has been archived or not.
        started:
          type: boolean
          description: A true/false boolean indicating if the Story has been started.
        story_links:
          type: array
          description: An array of story links attached to the Story.
          items:
            $ref: '#/components/schemas/TypedStoryLink'
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of labels attached to the story.
          items:
            $ref: '#/components/schemas/LabelSlim'
        task_ids:
          type: array
          description: An array of IDs of Tasks attached to the story.
          items:
            type: integer
            format: int64
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
        file_ids:
          type: array
          description: An array of IDs of Files attached to the story.
          items:
            type: integer
            format: int64
        num_tasks_completed:
          type: integer
          description: The number of tasks on the story which are complete.
          format: int64
        workflow_id:
          type: integer
          description: The ID of the workflow the story belongs to.
          format: int64
        completed_at_override:
          type: string
          description: A manual override for the time/date the Story was completed.
          format: date-time
          nullable: true
        started_at:
          type: string
          description: The time/date the Story was started.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The time/date the Story was completed.
          format: date-time
          nullable: true
        name:
          type: string
          description: The name of the story.
        completed:
          type: boolean
          description: A true/false boolean indicating if the Story has been completed.
        blocker:
          type: boolean
          description: A true/false boolean indicating if the Story is currently a
            blocker of another story.
        epic_id:
          type: integer
          description: The ID of the epic the story belongs to.
          format: int64
          nullable: true
        story_template_id:
          type: string
          description: The ID of the story template used to create this story, or
            null if not created using a template.
          format: uuid
          nullable: true
        external_links:
          type: array
          description: An array of external links (strings) associated with a Story
          items:
            type: string
        previous_iteration_ids:
          type: array
          description: The IDs of the iteration the story belongs to.
          items:
            type: integer
            format: int64
        requested_by_id:
          type: string
          description: The ID of the Member that requested the story.
          format: uuid
        iteration_id:
          type: integer
          description: The ID of the iteration the story belongs to.
          format: int64
          nullable: true
        label_ids:
          type: array
          description: An array of label ids attached to the story.
          items:
            type: integer
            format: int64
        started_at_override:
          type: string
          description: A manual override for the time/date the Story was started.
          format: date-time
          nullable: true
        group_id:
          type: string
          description: The ID of the group associated with the story.
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state the story is currently in.
          format: int64
        updated_at:
          type: string
          description: The time/date the Story was updated.
          format: date-time
          nullable: true
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in the Story
            description.
          items:
            type: string
            format: uuid
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Story has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Story.
          format: int64
        lead_time:
          type: integer
          description: The lead time (in seconds) of this story when complete.
          format: int64
        estimate:
          type: integer
          description: The numeric point estimate of the story. Can also be null,
            which means unestimated.
          format: int64
          nullable: true
        position:
          type: integer
          description: A number representing the position of the story in relation
            to every other story in the current project.
          format: int64
        blocked:
          type: boolean
          description: A true/false boolean indicating if the Story is currently blocked.
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
          nullable: true
        linked_file_ids:
          type: array
          description: An array of IDs of LinkedFiles attached to the story.
          items:
            type: integer
            format: int64
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
        stats:
          $ref: '#/components/schemas/StoryStats'
        comment_ids:
          type: array
          description: An array of IDs of Comments attached to the story.
          items:
            type: integer
            format: int64
        cycle_time:
          type: integer
          description: The cycle time (in seconds) of this story when complete.
          format: int64
        created_at:
          type: string
          description: The time/date the Story was created.
          format: date-time
        moved_at:
          type: string
          description: The time/date the Story was last changed workflow-state.
          format: date-time
          nullable: true
      description: StorySlim represents the same resource as a Story, but is more
        light-weight. For certain fields it provides ids rather than full resources
        (e.g., `comment_ids` and `file_ids`) and it also excludes certain aggregate
        values (e.g., `cycle_time`). The `description` field can be optionally included.
        Use the [Get Story](#Get-Story) endpoint to fetch the unabridged payload for
        a Story.
    StoryStats:
      required:
      - num_related_documents
      type: object
      properties:
        num_related_documents:
          type: integer
          description: The number of documents related to this Story.
          format: int64
      description: The stats object for Stories
      x-doc-skip: true
    Task:
      required:
      - complete
      - completed_at
      - created_at
      - description
      - entity_type
      - external_id
      - group_mention_ids
      - id
      - member_mention_ids
      - mention_ids
      - owner_ids
      - position
      - story_id
      - updated_at
      type: object
      properties:
        description:
          type: string
          description: Full text of the Task.
        entity_type:
          type: string
          description: A string description of this resource.
        story_id:
          type: integer
          description: The unique identifier of the parent Story.
          format: int64
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: An array of UUIDs of Members mentioned in this Task.
          items:
            type: string
            format: uuid
        completed_at:
          type: string
          description: The time/date the Task was completed.
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: The time/date the Task was updated.
          format: date-time
          nullable: true
        group_mention_ids:
          type: array
          description: An array of UUIDs of Groups mentioned in this Task.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs of the Owners of this Task.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Task has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Task.
          format: int64
        position:
          type: integer
          description: The number corresponding to the Task's position within a list
            of Tasks on a Story.
          format: int64
        complete:
          type: boolean
          description: True/false boolean indicating whether the Task has been completed.
        created_at:
          type: string
          description: The time/date the Task was created.
          format: date-time
    ThreadedComment:
      required:
      - app_url
      - author_id
      - comments
      - created_at
      - deleted
      - entity_type
      - external_id
      - group_mention_ids
      - id
      - member_mention_ids
      - mention_ids
      - text
      - updated_at
      type: object
      properties:
        app_url:
          type: string
          description: The Shortcut application url for the Comment.
        entity_type:
          type: string
          description: A string description of this resource.
        deleted:
          type: boolean
          description: True/false boolean indicating whether the Comment is deleted.
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        author_id:
          type: string
          description: The unique ID of the Member that authored the Comment.
          format: uuid
        member_mention_ids:
          type: array
          description: An array of Member IDs that have been mentioned in this Comment.
          items:
            type: string
            format: uuid
        comments:
          type: array
          description: A nested array of threaded comments.
          items:
            $ref: '#/components/schemas/ThreadedComment'
        updated_at:
          type: string
          description: The time/date the Comment was updated.
          format: date-time
        group_mention_ids:
          type: array
          description: An array of Group IDs that have been mentioned in this Comment.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the Comment has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID of the Comment.
          format: int64
        created_at:
          type: string
          description: The time/date the Comment was created.
          format: date-time
        text:
          type: string
          description: The text of the Comment.
      description: Comments associated with Epic Discussions.
    TypedStoryLink:
      required:
      - created_at
      - entity_type
      - id
      - object_id
      - subject_id
      - subject_workflow_state_id
      - type
      - updated_at
      - verb
      type: object
      properties:
        entity_type:
          type: string
          description: A string description of this resource.
        object_id:
          type: integer
          description: The ID of the object Story.
          format: int64
        verb:
          type: string
          description: How the subject Story acts on the object Story. This can be
            "blocks", "duplicates", or "relates to".
        type:
          type: string
          description: This indicates whether the Story is the subject or object in
            the Story Link.
        updated_at:
          type: string
          description: The time/date when the Story Link was last updated.
          format: date-time
        id:
          type: integer
          description: The unique identifier of the Story Link.
          format: int64
        subject_id:
          type: integer
          description: The ID of the subject Story.
          format: int64
        subject_workflow_state_id:
          type: integer
          description: The workflow state of the "subject" story.
          format: int64
          x-doc-skip: true
        created_at:
          type: string
          description: The time/date when the Story Link was created.
          format: date-time
      description: 'The type of Story Link. The string can be subject or object. '
    UnusableEntitlementError:
      required:
      - entitlement_tag
      - message
      - reason_tag
      type: object
      properties:
        reason_tag:
          type: string
          description: The tag for violating an entitlement action.
          enum:
          - entitlement-violation
        entitlement_tag:
          maxLength: 63
          minLength: 1
          type: string
          description: Short tag describing the unusable entitlement action taken
            by the user.
        message:
          maxLength: 256
          minLength: 1
          type: string
          description: Message displayed to the user on why their action failed.
      x-doc-skip: true
    UpdateCategory:
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The new name of the Category.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Category (for example,
            "#ff0000").
          format: css-color
          nullable: true
        archived:
          type: boolean
          description: A true/false boolean indicating if the Category has been archived.
      x-doc-skip: true
    UpdateComment:
      required:
      - text
      type: object
      properties:
        text:
          type: string
          description: The updated comment text.
      x-doc-skip: true
    UpdateEntityTemplate:
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The updated template name.
        story_contents:
          $ref: '#/components/schemas/UpdateStoryContents'
      description: |-
        Request parameters for changing either a template's name or any of
          the attributes it is designed to pre-populate.
    UpdateEpic:
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The Epic's description.
        archived:
          type: boolean
          description: A true/false boolean indicating whether the Epic is in archived
            state.
        labels:
          type: array
          description: An array of Labels attached to the Epic.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        completed_at_override:
          type: string
          description: A manual override for the time/date the Epic was completed.
          format: date-time
          nullable: true
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Epic's name.
        planned_start_date:
          type: string
          description: The Epic's planned start date.
          format: date-time
          nullable: true
        state:
          type: string
          description: '`Deprecated` The Epic''s state (to do, in progress, or done);
            will be ignored when `epic_state_id` is set.'
          enum:
          - in progress
          - to do
          - done
        milestone_id:
          type: integer
          description: The ID of the Milestone this Epic is related to.
          format: int64
          nullable: true
        requested_by_id:
          type: string
          description: The ID of the member that requested the epic.
          format: uuid
        epic_state_id:
          type: integer
          description: The ID of the Epic State.
          format: int64
        started_at_override:
          type: string
          description: A manual override for the time/date the Epic was started.
          format: date-time
          nullable: true
        group_id:
          type: string
          description: The ID of the group to associate with the epic.
          format: uuid
          nullable: true
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers
            on this Epic.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs for any members you want to add as Owners
            on this Epic.
          items:
            type: string
            format: uuid
        before_id:
          type: integer
          description: The ID of the Epic we want to move this Epic before.
          format: int64
        after_id:
          type: integer
          description: The ID of the Epic we want to move this Epic after.
          format: int64
        deadline:
          type: string
          description: The Epic's deadline.
          format: date-time
          nullable: true
      x-doc-skip: true
    UpdateFile:
      type: object
      properties:
        description:
          type: string
          description: The description of the file.
        created_at:
          type: string
          description: The time/date that the file was uploaded.
          format: date-time
        updated_at:
          type: string
          description: The time/date that the file was last updated.
          format: date-time
        name:
          maxLength: 1024
          minLength: 1
          type: string
          description: The name of the file.
        uploader_id:
          type: string
          description: The unique ID assigned to the Member who uploaded the file
            to Shortcut.
          format: uuid
        external_id:
          type: string
          description: An additional ID that you may wish to assign to the file.
      x-doc-skip: true
    UpdateGroup:
      type: object
      properties:
        description:
          type: string
          description: The description of this Group.
        archived:
          type: boolean
          description: Whether or not this Group is archived.
          nullable: true
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The color you wish to use for the Group in the system.
          format: css-color
          nullable: true
        display_icon_id:
          type: string
          description: The Icon id for the avatar of this Group.
          format: uuid
          nullable: true
        mention_name:
          minLength: 1
          type: string
          description: The mention name of this Group.
        name:
          minLength: 1
          type: string
          description: The name of this Group.
        color_key:
          type: string
          description: The color key you wish to use for the Group in the system.
          enum:
          - blue
          - purple
          - midnight-blue
          - orange
          - yellow-green
          - brass
          - gray
          - fuchsia
          - yellow
          - pink
          - sky-blue
          - green
          - red
          - black
          - slate
          - turquoise
        member_ids:
          uniqueItems: true
          type: array
          description: The Member ids to add to this Group.
          items:
            type: string
            format: uuid
        workflow_ids:
          type: array
          description: The Workflow ids to add to the Group.
          items:
            type: integer
            format: int64
    UpdateIteration:
      type: object
      properties:
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers.
          items:
            type: string
            format: uuid
        group_ids:
          type: array
          description: An array of UUIDs for any Groups you want to add as Followers.
            Currently, only one Group association is presented in our web UI.
          items:
            type: string
            format: uuid
        labels:
          type: array
          description: An array of Labels attached to the Iteration.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        description:
          maxLength: 100000
          type: string
          description: The description of the Iteration.
        name:
          minLength: 1
          type: string
          description: The name of this Iteration
        start_date:
          minLength: 1
          type: string
          description: The date this Iteration begins, e.g. 2019-07-01
        end_date:
          minLength: 1
          type: string
          description: The date this Iteration ends, e.g. 2019-07-05.
    UpdateLabel:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: The new name of the label.
        description:
          type: string
          description: The new description of the label.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color to be displayed with the Label (for example,
            "#ff0000").
          format: css-color
          nullable: true
        archived:
          type: boolean
          description: A true/false boolean indicating if the Label has been archived.
      x-doc-skip: true
    UpdateLinkedFile:
      type: object
      properties:
        description:
          type: string
          description: The description of the file.
        story_id:
          type: integer
          description: The ID of the linked story.
          format: int64
        name:
          minLength: 1
          type: string
          description: The name of the file.
        thumbnail_url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The URL of the thumbnail, if the integration provided it.
        type:
          type: string
          description: The integration type of the file (e.g. google, dropbox, box).
          enum:
          - google
          - url
          - dropbox
          - box
          - onedrive
        size:
          type: integer
          description: The filesize, if the integration provided it.
          format: int64
        uploader_id:
          type: string
          description: The UUID of the member that uploaded the file.
          format: uuid
        url:
          maxLength: 2048
          pattern: ^https?://.+$
          type: string
          description: The URL of linked file.
      x-doc-skip: true
    UpdateMilestone:
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The Milestone's description.
        completed_at_override:
          type: string
          description: A manual override for the time/date the Milestone was completed.
          format: date-time
          nullable: true
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the Milestone.
        state:
          type: string
          description: The workflow state that the Milestone is in.
          enum:
          - in progress
          - to do
          - done
        started_at_override:
          type: string
          description: A manual override for the time/date the Milestone was started.
          format: date-time
          nullable: true
        categories:
          type: array
          description: An array of IDs of Categories attached to the Milestone.
          items:
            $ref: '#/components/schemas/CreateCategoryParams'
        before_id:
          type: integer
          description: The ID of the Milestone we want to move this Milestone before.
          format: int64
        after_id:
          type: integer
          description: The ID of the Milestone we want to move this Milestone after.
          format: int64
      x-doc-skip: true
    UpdateProject:
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The Project's description.
        archived:
          type: boolean
          description: A true/false boolean indicating whether the Story is in archived
            state.
        days_to_thermometer:
          type: integer
          description: The number of days before the thermometer appears in the Story
            summary.
          format: int64
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The color that represents the Project in the UI.
          format: css-color
        name:
          maxLength: 128
          minLength: 1
          type: string
          description: The Project's name.
        follower_ids:
          type: array
          description: An array of UUIDs for any Members you want to add as Followers.
          items:
            type: string
            format: uuid
        show_thermometer:
          type: boolean
          description: Configuration to enable or disable thermometers in the Story
            summary.
        team_id:
          type: integer
          description: The ID of the team the project belongs to.
          format: int64
        abbreviation:
          type: string
          description: The Project abbreviation used in Story summaries. Should be
            kept to 3 characters at most.
      x-doc-skip: true
    UpdateStories:
      required:
      - story_ids
      type: object
      properties:
        archived:
          type: boolean
          description: If the Stories should be archived or not.
        story_ids:
          uniqueItems: true
          type: array
          description: The Ids of the Stories you wish to update.
          items:
            type: integer
            format: int64
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
          enum:
          - feature
          - chore
          - bug
        move_to:
          type: string
          description: One of "first" or "last". This can be used to move the given
            story to the first or last position in the workflow state.
          enum:
          - last
          - first
        follower_ids_add:
          uniqueItems: true
          type: array
          description: The UUIDs of the new followers to be added.
          items:
            type: string
            format: uuid
        epic_id:
          type: integer
          description: The ID of the epic the story belongs to.
          format: int64
          nullable: true
        external_links:
          type: array
          description: An array of External Links associated with this story.
          items:
            type: string
        follower_ids_remove:
          uniqueItems: true
          type: array
          description: The UUIDs of the followers to be removed.
          items:
            type: string
            format: uuid
        requested_by_id:
          type: string
          description: The ID of the member that requested the story.
          format: uuid
        iteration_id:
          type: integer
          description: The ID of the iteration the story belongs to.
          format: int64
          nullable: true
        labels_add:
          type: array
          description: An array of labels to be added.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        group_id:
          type: string
          description: The Id of the Group the Stories should belong to.
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state to put the stories in.
          format: int64
        before_id:
          type: integer
          description: The ID of the story that the stories are to be moved before.
          format: int64
        estimate:
          type: integer
          description: The numeric point estimate of the story. Can also be null,
            which means unestimated.
          format: int64
          nullable: true
        after_id:
          type: integer
          description: The ID of the story that the stories are to be moved below.
          format: int64
        owner_ids_remove:
          uniqueItems: true
          type: array
          description: The UUIDs of the owners to be removed.
          items:
            type: string
            format: uuid
        project_id:
          type: integer
          description: The ID of the Project the Stories should belong to.
          format: int64
          nullable: true
        labels_remove:
          type: array
          description: An array of labels to be removed.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
        owner_ids_add:
          uniqueItems: true
          type: array
          description: The UUIDs of the new owners to be added.
          items:
            type: string
            format: uuid
      x-doc-skip: true
    UpdateStory:
      type: object
      properties:
        description:
          maxLength: 100000
          type: string
          description: The description of the story.
        archived:
          type: boolean
          description: True if the story is archived, otherwise false.
        labels:
          type: array
          description: An array of labels attached to the story.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        pull_request_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of Pull/Merge Requests attached to the story.
          items:
            type: integer
            format: int64
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
          enum:
          - feature
          - chore
          - bug
        move_to:
          type: string
          description: One of "first" or "last". This can be used to move the given
            story to the first or last position in the workflow state.
          enum:
          - last
          - first
        file_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of files attached to the story.
          items:
            type: integer
            format: int64
        completed_at_override:
          type: string
          description: A manual override for the time/date the Story was completed.
          format: date-time
          nullable: true
        name:
          maxLength: 512
          minLength: 1
          type: string
          description: The title of the story.
        epic_id:
          type: integer
          description: The ID of the epic the story belongs to.
          format: int64
          nullable: true
        external_links:
          type: array
          description: An array of External Links associated with this story.
          items:
            type: string
        branch_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of Branches attached to the story.
          items:
            type: integer
            format: int64
        commit_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of Commits attached to the story.
          items:
            type: integer
            format: int64
        requested_by_id:
          type: string
          description: The ID of the member that requested the story.
          format: uuid
        iteration_id:
          type: integer
          description: The ID of the iteration the story belongs to.
          format: int64
          nullable: true
        started_at_override:
          type: string
          description: A manual override for the time/date the Story was started.
          format: date-time
          nullable: true
        group_id:
          type: string
          description: The ID of the group to associate with this story
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state to put the story in.
          format: int64
        follower_ids:
          uniqueItems: true
          type: array
          description: An array of UUIDs of the followers of this story.
          items:
            type: string
            format: uuid
        owner_ids:
          uniqueItems: true
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        before_id:
          type: integer
          description: The ID of the story we want to move this story before.
          format: int64
        estimate:
          type: integer
          description: The numeric point estimate of the story. Can also be null,
            which means unestimated.
          format: int64
          nullable: true
        after_id:
          type: integer
          description: The ID of the story we want to move this story after.
          format: int64
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
          nullable: true
        linked_file_ids:
          uniqueItems: true
          type: array
          description: An array of IDs of linked files attached to the story.
          items:
            type: integer
            format: int64
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
      x-doc-skip: true
    UpdateStoryComment:
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 100000
          type: string
          description: The updated comment text.
      x-doc-skip: true
    UpdateStoryContents:
      type: object
      properties:
        description:
          type: string
          description: The description of the story.
        entity_type:
          type: string
          description: A string description of this resource.
        labels:
          type: array
          description: An array of labels to be populated by the template.
          items:
            $ref: '#/components/schemas/CreateLabelParams'
        story_type:
          type: string
          description: The type of story (feature, bug, chore).
        linked_files:
          type: array
          description: An array of linked files attached to the story.
          items:
            $ref: '#/components/schemas/LinkedFile'
        file_ids:
          uniqueItems: true
          type: array
          description: An array of the attached file IDs to be populated.
          items:
            type: integer
            format: int64
        name:
          type: string
          description: The name of the story.
        epic_id:
          type: integer
          description: The ID of the epic the to be populated.
          format: int64
          nullable: true
        external_links:
          type: array
          description: An array of external links to be populated.
          items:
            type: string
        iteration_id:
          type: integer
          description: The ID of the iteration the to be populated.
          format: int64
          nullable: true
        tasks:
          type: array
          description: An array of tasks to be populated by the template.
          items:
            $ref: '#/components/schemas/EntityTemplateTask'
        label_ids:
          type: array
          description: An array of label ids attached to the story.
          items:
            type: integer
            format: int64
        group_id:
          type: string
          description: The ID of the group to be populated.
          format: uuid
          nullable: true
        workflow_state_id:
          type: integer
          description: The ID of the workflow state the story is currently in.
          format: int64
        follower_ids:
          type: array
          description: An array of UUIDs for any Members listed as Followers.
          items:
            type: string
            format: uuid
        owner_ids:
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        estimate:
          type: integer
          description: The numeric point estimate to be populated.
          format: int64
          nullable: true
        files:
          type: array
          description: An array of files attached to the story.
          items:
            $ref: '#/components/schemas/UploadedFile'
        project_id:
          type: integer
          description: The ID of the project the story belongs to.
          format: int64
          nullable: true
        linked_file_ids:
          uniqueItems: true
          type: array
          description: An array of the linked file IDs to be populated.
          items:
            type: integer
            format: int64
        deadline:
          type: string
          description: The due date of the story.
          format: date-time
          nullable: true
      description: Updated attributes for the template to populate.
    UpdateStoryLink:
      type: object
      properties:
        verb:
          type: string
          description: The type of link.
          enum:
          - blocks
          - duplicates
          - relates to
        subject_id:
          type: integer
          description: The ID of the subject Story.
          format: int64
        object_id:
          type: integer
          description: The ID of the object Story.
          format: int64
      x-doc-skip: true
    UpdateTask:
      type: object
      properties:
        description:
          type: string
          description: The Task's description.
        owner_ids:
          type: array
          description: An array of UUIDs of the owners of this story.
          items:
            type: string
            format: uuid
        complete:
          type: boolean
          description: A true/false boolean indicating whether the task is complete.
        before_id:
          type: integer
          description: Move task before this task ID.
          format: int64
        after_id:
          type: integer
          description: Move task after this task ID.
          format: int64
      x-doc-skip: true
    UploadedFile:
      required:
      - content_type
      - created_at
      - description
      - entity_type
      - external_id
      - filename
      - group_mention_ids
      - id
      - member_mention_ids
      - mention_ids
      - name
      - size
      - story_ids
      - thumbnail_url
      - updated_at
      - uploader_id
      - url
      type: object
      properties:
        description:
          type: string
          description: The description of the file.
          nullable: true
        entity_type:
          type: string
          description: A string description of this resource.
        story_ids:
          type: array
          description: The unique IDs of the Stories associated with this file.
          items:
            type: integer
            format: int64
        mention_ids:
          type: array
          description: 'Deprecated: use member_mention_ids.'
          items:
            type: string
            format: uuid
        member_mention_ids:
          type: array
          description: The unique IDs of the Members who are mentioned in the file
            description.
          items:
            type: string
            format: uuid
        name:
          type: string
          description: The optional User-specified name of the file.
        thumbnail_url:
          type: string
          description: The url where the thumbnail of the file can be found in Shortcut.
          nullable: true
        size:
          type: integer
          description: The size of the file.
          format: int64
        uploader_id:
          type: string
          description: The unique ID of the Member who uploaded the file.
          format: uuid
        content_type:
          type: string
          description: Free form string corresponding to a text or image file.
        updated_at:
          type: string
          description: The time/date that the file was updated.
          format: date-time
          nullable: true
        filename:
          type: string
          description: The name assigned to the file in Shortcut upon upload.
        group_mention_ids:
          type: array
          description: The unique IDs of the Groups who are mentioned in the file
            description.
          items:
            type: string
            format: uuid
        external_id:
          type: string
          description: This field can be set to another unique ID. In the case that
            the File has been imported from another tool, the ID in the other tool
            can be indicated here.
          nullable: true
        id:
          type: integer
          description: The unique ID for the file.
          format: int64
        url:
          type: string
          description: The URL for the file.
          nullable: true
        created_at:
          type: string
          description: The time/date that the file was created.
          format: date-time
      description: 'An UploadedFile is any document uploaded to your Shortcut Workspace.
        Files attached from a third-party service are different: see the Linked Files
        endpoint.'
    Workflow:
      required:
      - auto_assign_owner
      - created_at
      - default_state_id
      - description
      - entity_type
      - id
      - name
      - project_ids
      - states
      - team_id
      - updated_at
      type: object
      properties:
        description:
          type: string
          description: A description of the workflow.
        entity_type:
          type: string
          description: A string description of this resource.
        project_ids:
          type: array
          description: An array of IDs of projects within the Workflow.
          items:
            type: number
            format: double
        states:
          type: array
          description: A map of the states in this Workflow.
          items:
            $ref: '#/components/schemas/WorkflowState'
        name:
          type: string
          description: The name of the workflow.
        updated_at:
          type: string
          description: The date the Workflow was updated.
          format: date-time
        auto_assign_owner:
          type: boolean
          description: Indicates if an owner is automatically assigned when an unowned
            story is started.
        id:
          type: integer
          description: The unique ID of the Workflow.
          format: int64
        team_id:
          type: integer
          description: The ID of the team the workflow belongs to.
          format: int64
        created_at:
          type: string
          description: The date the Workflow was created.
          format: date-time
        default_state_id:
          type: integer
          description: The unique ID of the default state that new Stories are entered
            into.
          format: int64
      description: 'Workflow is the array of defined Workflow States. Workflow can
        be queried using the API but must be updated in the Shortcut UI. '
    WorkflowState:
      required:
      - created_at
      - description
      - entity_type
      - id
      - name
      - num_stories
      - num_story_templates
      - position
      - type
      - updated_at
      - verb
      type: object
      properties:
        description:
          type: string
          description: The description of what sort of Stories belong in that Workflow
            state.
        entity_type:
          type: string
          description: A string description of this resource.
        color:
          minLength: 1
          pattern: ^#[a-fA-F0-9]{6}$
          type: string
          description: The hex color for this Workflow State.
          format: css-color
        verb:
          type: string
          description: The verb that triggers a move to that Workflow State when making
            VCS commits.
          nullable: true
        name:
          type: string
          description: The Workflow State's name.
        num_stories:
          type: integer
          description: The number of Stories currently in that Workflow State.
          format: int64
        type:
          type: string
          description: The type of Workflow State (Unstarted, Started, or Finished)
        updated_at:
          type: string
          description: When the Workflow State was last updated.
          format: date-time
        id:
          type: integer
          description: The unique ID of the Workflow State.
          format: int64
        num_story_templates:
          type: integer
          description: The number of Story Templates associated with that Workflow
            State.
          format: int64
        position:
          type: integer
          description: The position that the Workflow State is in, starting with 0
            at the left.
          format: int64
        created_at:
          type: string
          description: The time/date the Workflow State was created.
          format: date-time
      description: 'Workflow State is any of the at least 3 columns. Workflow States
        correspond to one of 3 types: Unstarted, Started, or Done.'
  securitySchemes:
    api_token:
      type: apiKey
      name: Shortcut-Token
      in: header
      description: Represents API Key `Shortcut-Token`
