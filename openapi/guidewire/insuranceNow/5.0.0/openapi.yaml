openapi: "3.0.2"
info:
  title: GuideWire InsuranceNow Cloud API
  version: 5.0.0
  description: >
    This OpenAPI specification outlines the interface for the Guidewire InsuranceNow Cloud API version 5.0.0, providing a comprehensive description of available endpoints, operations, parameters, request bodies, and response structures for integrating with the cloud-based insurance platform, InsuranceNow.
    Designed to streamline operations for insurance companies, InsuranceNow offers functionalities including policy management, claims management, and customer engagement. The API enables developers to access and manipulate insurance data, facilitating automation, custom integrations, and workflow enhancements.
    Key features include policy management, claims processing, and customer management.


paths:
  /addresses/countries:
    get:
      operationId: getSupportedCountries
      description: Returns a list of supported countries.
      parameters:
        - in: query
          name: sortType
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          description: Indicates the method used to sort the results by name.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCountry"
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /addresses/countries/{isoCd}:
    get:
      operationId: getCountryByIsoCd
      description: Returns the AddressCountryTemplate bean for the given IsoCd (e.g. US).
      parameters:
        - description: ISO Country code.
          in: path
          name: isoCd
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressCountryTemplate"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /addresses/googlePlacesFill:
    get:
      operationId: fillAddressFromGooglePlaces
      description: Fills an address from a Google Places search. Using the placeId from a Google Places search, an address will be returned that has all of the address components filled. If the placeId is not known, Google Places will be called to search and fill the address components.
      parameters:
        - in: query
          name: addressLine
          schema:
            type: string
          description: The address line to have Google Places search and fill the address components.
        - in: query
          name: placeId
          schema:
            type: string
          description: Place Id from the Google Places search.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
        "404":
          description: Unable to obtain address details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /addresses/isVerifiedRequest:
    post:
      operationId: isAddressVerified
      description: Indicates whether a given address is already verified.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        "200":
          description: Successful response.
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Address is no longer verified.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /addresses/verificationRequest:
    post:
      operationId: verifyAddress
      description: Normalizes, verifies, and provides a more complete address. The verified address may include additional address properties. The response either returns one or more addresses that match the given address, or it will return an error if the address cannot be verified. If more than one address is returned, select an address and then resubmit the API request to perform address verification on the selected address.
      parameters:
        - in: query
          name: addressType
          schema:
            type: string
            enum:
              - Combined
              - Uncombined
            default: Combined
          description: Indicates the requested format of the address after verification. Uncombined returns the street address in components. The default is Combined.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAddress'
      responses:
        "200":
          description: Successful response.
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Address is no longer verified.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications:
    get:
      operationId: getQuotes
      description: Returns a list of quotes or applications.
      parameters:
        - in: query
          name: applicationOrQuoteNumber
          description: Application or quote number.
          schema:
            type: string
        - in: query
          name: continuationId
          description: Indicates the starting offset for the API results when you want to return a specific portion of the full results. You can use this parameter with the limit parameter. For example, the limit on your first API call was 100 and the results populated a list on the page. To request the next page of 100 results, call the API again with continuationId=101 and limit=100.
          schema:
            type: string
        - in: query
          name: createdSinceDate
          description: Select applications where application creation date is equal to or greater than the provided createdSinceDate.
          schema:
            type: string
        - in: query
          name: customerId
          description: Customer ID number.
          schema:
            type: string
        - in: query
          name: includeClosed
          description: Includes closed applications. If true, results will include "Closed" applications. If false (or not provided), results will not include "Closed" applications.
          schema:
            type: boolean
        - in: query
          name: includeDeleted
          description: Includes deleted applications. If true, results will include "Deleted" applications. If false (or not provided), results will not include "Deleted" applications.
          schema:
            type: boolean
        - in: query
          name: limit
          description: The maximum number of results to return.
          schema:
            type: string
        - in: query
          name: optionalFields
          description: Comma-delimited list of optional fields to be included. Currently supports customer and product.
          schema:
            type: string
        - in: query
          name: policyId
          description: Policy ID.
          schema:
            type: string
        - in: query
          name: providerId
          description: Provider code number.
          schema:
            type: string
        - in: query
          name: recentlyViewed
          description: Finds applications recently viewed by the caller/user. If true, results will be restricted to applications recently viewed by the caller/user. If false (or not provided), results will not be restricted to applications recently viewed by the caller/user.
          schema:
            type: boolean
        - in: query
          name: status
          description: Application status (e.g. In Process).
          schema:
            type: string
        - in: query
          name: transactionCd
          description: Transaction code (e.g. New Business) Use where a specific transactionCd(s) is known. Accepts a comma-separated list of values. Ignored when transactionCdGroup contains a value.
          schema:
            type: string
        - in: query
          name: transactionCdGroup
          description: Find applications by transactionCdGroup. Use when a specific transactionCd(s) is not known. Accepts a comma-separated list of values. Valid values are Quote, Cancellation, Renewal, or Other.
          schema:
            type: string
        - in: query
          name: type
          description: Application type. Valid values are Application, QuickQuote, or Quote.
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplication"
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createQuote
      description: Starts a new QuickQuote or Quote. To create a QuickQuote, basicPolicy productVersionIdRef (e.g. Homeowners-1.00.00), providerRef (e.g. 19), and effectiveDt strings are required. To create a Quote, basicPolicy productVersionIdRef, providerRef, and effectiveDt strings, plus one piece of insured information to create a customer, are required.
      parameters:
        - in: query
          name: requestedTypeCd
          description: Starts a quote of the specified type. Valid values are QuickQuote or Quote. If a type is not specified, a QuickQuote will be created if the selected product supports quick quotes and you can perform quick quotes; otherwise, a Quote will be created. If QuickQuote is specified but the selected product does not support quick quotes or you cannot perform quick quotes, then either a 400 or 403 response code will be returned.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote'
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}:
    delete:
      operationId: deleteQuote
      description: Delete the quote or application.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/bindRequest:
    post:
      operationId: convertQuoteToApplication
      description: Converts a quote to an application.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote.
          schema:
            type: string
          required: true
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/convertToQuoteRequest:
    post:
      operationId: convertQuickQuoteToQuote
      description: Converts a QuickQuote to a Quote.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote.
          schema:
            type: string
          required: true
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/documents:
    get:
      operationId: getDocumentsForQuote
      description: Returns a list of documents for a quote or application.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the application.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDocument"
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: addDocumentToQuote
      description: Adds an attachment to a quote or application.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the application.
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/documents/{documentId}:
    delete:
      operationId: deleteAttachment
      description: Deletes an attachment associated with a quote or application. Requires the attachment ref number (e.g. "Attachment-26808155-290885540").
      parameters:
        - in: path
          name: systemId
          description: System identifier of the application.
          schema:
            type: string
          required: true
        - in: path
          name: documentId
          description: The identifier of the document.
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Successful response.
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/documents/{documentId}/content:
    get:
      operationId: downloadAttachment
      description: Downloads a document for a quote or application. Requires the attachment ref number (e.g. "Attachment-26808155-290885540").
      parameters:
        - in: path
          name: systemId
          description: System identifier of the application.
          schema:
            type: string
          required: true
        - in: path
          name: documentId
          description: The identifier of the document.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/drivers:
    get:
      operationId: getDrivers
      description: Returns a list of the drivers or non-drivers of a quote or application.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
        - in: query
          name: continuationId
          schema:
            type: string
          description: Indicates the starting offset for the API results when you want to return a specific portion of the full results.
        - in: query
          name: includeDeleted
          schema:
            type: boolean
          description: Includes deleted drivers/non-drivers. If true, results will include "Deleted" drivers/non-drivers. If false (or not provided), results will not include "Deleted" drivers/non-drivers.
        - in: query
          name: limit
          schema:
            type: string
          description: For pagination -- the maximum number of results to return.
        - in: query
          name: typeCd
          schema:
            type: string
            enum:
              - Driver
              - NonDriver
          description: Filter by type of driver.
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDriver"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDriver
      description: Creates a new driver or non-driver. You must include a partyTypeCd (DriverParty or NonDriverParty). Other details may be required depending on the insurance product being quoted.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /applications/{systemId}/drivers/{driverNumber}:
    get:
      operationId: getDriver
      description: Returns details about a driver or non-driver.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
        - in: path
          name: driverNumber
          description: Driver/non-driver number.
          schema:
            type: integer
            format: int32
          required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: changeDriverDetails
      description: Makes changes to details about a driver/non-driver.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
        - in: path
          name: driverNumber
          description: Driver/non-driver number.
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: replaceDriverDetails
      description: Replaces the details about a driver or non-driver.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
        - in: path
          name: driverNumber
          description: Driver/non-driver number.
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteDriver
      description: Deletes a driver/non-driver.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the quote or application.
          schema:
            type: string
          required: true
        - in: path
          name: driverNumber
          description: Driver/non-driver number.
          schema:
            type: integer
            format: int32
          required: true
      responses:
        "200":
          description: Successful response.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /claims/{systemId}/documents:
    get:
      operationId: getDocumentsForClaim
      description: Returns the list of documents attached to a claim.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the claim.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDocument"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: addAttachmentToClaim
      description: Adds an attachment to a claim.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the claim.
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /claims/{systemId}/notes:
    get:
      operationId: getClaimNotes
      description: Returns a list of notes for a claim.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the claim.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNote"
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: addNoteToClaim
      description: Adds a note to a claim.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the claim.
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteDetail'
      responses:
        "201":
          description: Successful response.
          headers:
            Location:
              schema:
                type: string
              description: Updated resource's location.
        "400":
          description: Error with the submitted request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected internal error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policies:
    get:
      operationId: getPolicies
      description: Returns a list of policies.
      parameters:
        - in: query
          name: continuationId
          description: Indicates the starting list value for the API results when you want to return a specific portion of the full results. You can use this parameter with the limit parameter. For example, if the limit on your first API call was 10 and the results populated a list on the page. To request the next page of 10 results, call the API again with continuationId=11 and limit=10.
          schema:
            type: string
        - in: query
          name: createdSinceDate
          description: Selects policies where policy creation date is equal to or greater than the provided createdSinceDate (e.g. 2020-01-01).
          schema:
            type: string
        - in: query
          name: customerId
          description: Finds policies by customer id (e.g. 212).
          schema:
            type: string
        - in: query
          name: expiredDateAfter
          description: Selects policies where policy expiration date is equal to or lesser than the provided expirationDateBefore (e.g. 2020-01-01).
          schema:
            type: string
        - in: query
          name: includePriorTerms
          description: Includes prior terms.If true, results will include prior terms. If false (or not provided), results will not include prior terms.
          schema:
            type: boolean
        - in: query
          name: limit
          description: Indicates how many results to return.
          schema:
            type: string
        - in: query
          name: optionalFields
          description: Comma-delimited list of optional fields to be included. Currently supports customer and product.
          schema:
            type: string
        - in: query
          name: policyNumber
          description: Finds policies by policyNumber (e.g. HO00000058).
          schema:
            type: string
        - in: query
          name: providerRef
          description: Filters policies by provider identifier (e.g. 28).
          schema:
            type: string
        - in: query
          name: recentlyViewed
          description: Limits policies to those recently viewed by the caller or user. If true, results will be restricted to policies recently viewed by the caller or user. If false (or not provided), results will not be restricted to policies recently viewed by the caller or user.
          schema:
            type: boolean
        - in: query
          name: status
          description: Finds policies by policy status (e.g Active).
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPolicy"
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policies/{systemId}:
    get:
      operationId: getPolicy
      description: Returns the full details of a policy.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the policy.
          schema:
            type: string
          required: true
        - in: query
          name: asOfDate
          description: Returns the policy details from a specified date (e.g. 2021-01-01). If not provided, the current date will be used.
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyDetails"
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updatePolicy
      description: Updates the preferred delivery method and insured email address of the policy. Requires the systemId.
      parameters:
        - in: path
          name: systemId
          description: System identifier of the policy.
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDetails'
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyDetails"
        "400":
          description: Invalid request or response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    ListCountry:
      description: "A structured response that enumerates all countries supported by the system. This can be used to populate selection lists or validate country data in user inputs."
      type: object
      properties:
        countries:
          description: "An array of country objects, each representing a country supported by the system. This list includes both the ISO code and the name of each country."
          items:
            $ref: "#/components/schemas/Country"
          type: array
      required:
        - countries
    Country:
      description: "Contains detailed information about a single country, including its ISO code and the full country name. This schema is crucial for ensuring accurate country representation and selection across the application."
      type: object
      properties:
        isoCd:
          description: "The ISO 3166-1 alpha-2 code of the country, providing a two-letter code that is universally recognized for representing country names."
          type: string
        name:
          description: "The official name of the country as recognized internationally. This name is used for display purposes and in user interfaces."
          type: string
    AddressCountryTemplate:
      description: "Defines the template for constructing and validating addresses within a specific country. This schema includes details like the required fields, address format, and labels for various address components, tailored to the country's postal system."
      type: object
      properties:
        addressLines:
          type: string
          description: "Indicates the number of address lines that are supported or required by the address format of this country."
        addressStateProvinceTemplates:
          $ref: "#/components/schemas/AddressStateProvinceTemplates"
          description: "A reference to the schema defining templates for state or province addresses within this country, accommodating regional variations in address formats."
        cityLabel:
          type: string
          description: "The label used for the city field in address forms, which may vary based on the country's addressing system."
        countryName:
          type: string
          description: "The full name of the country to which this address template applies, ensuring clarity and consistency in international addressing."
        format:
          type: string
          description: "Specifies the format used for addresses in this country, including the order of address components and the separators used between them."
        id:
          type: string
          description: "A unique identifier for the template, typically using the two-letter ISO country code for easy reference."
        postalCodeExamples:
          type: string
          description: "Provides examples of valid postal or zip codes for the country, useful as a guide for users when entering address information."
        postalCodeLabel:
          type: string
          description: "The label used for the postal or zip code field, which may be customized based on the country's postal system terminology."
        postalCodeRegex:
          type: string
          description: "A regular expression pattern used to validate the format of postal or zip codes for addresses in this country, ensuring data accuracy and compliance with local postal standards."
        requiredFields:
          type: string
          description: "A comma-separated list of address fields that are mandatory for this country, allowing for dynamic form validation that adapts to different countries' addressing requirements."
        stateProvLabel:
          type: string
          description: "The label for the state or province field in address forms, accommodating the terminology used in the country's addressing system."
    AddressStateProvinceTemplates:
      description: "Provides a structured format for representing state or province information associated with addresses, facilitating consistency and accuracy in address data across various geographic locations."
      type: object
      properties:
        stateProvinces:
          type: array
          description: "A collection of state or province entities, each conforming to the defined StateProvinces schema, allowing for detailed representation of geographic administrative divisions."
          items:
            $ref: "#/components/schemas/StateProvinces"
    StateProvinces:
      description: "Defines the attributes of a state or province, providing key identifiers and names for use in addressing and location services within the insurance application."
      type: object
      properties:
        id:
          type: string
          description: "The unique identifier or code for the state or province, often used as a standard abbreviation or code in address formats."
        stateProvName:
          type: string
          description: "The full name of the state or province, providing a clear and unambiguous reference for users and systems interacting with address information."
    ListAddress:
      description: "A structured response payload containing an array of addresses. This schema facilitates the return of multiple address records in a single API response, typically used in search or list endpoints where multiple addresses need to be communicated."
      type: object
      properties:
        addresses:
          type: array
          description: "An array of Address objects, each representing detailed information about a specific address. The structure of each Address object is defined by the Address schema."
          items:
            $ref: '#/components/schemas/Address'
    Address:
      description: "Comprehensive details about an address, encapsulating both the physical location attributes and metadata for validation, geocoding, and postal delivery optimization."
      type: object
      properties:
        addition:
          type: string
          description: "Additional detail to further specify the location within complex addresses, such as unit or apartment number."
        additionalLegal:
          type: string
          description: "Any legal descriptors that provide further detail to the address, often used in legal contexts or when precise property identification is necessary."
        addr1:
          type: string
          description: "The primary address line, typically containing the street number and name."
        addr2:
          type: string
          description: "Secondary address line, used for additional location information, such as building or suite number."
        addr3:
          type: string
          description: "Tertiary address line for further detail, less commonly used."
        addr4:
          type: string
          description: "Quaternary address line, utilized in complex addressing scenarios where multiple lines are needed for clarity."
        addrTypeCd:
          type: string
          default: "ContactAddr"
          description: "A code indicating the type of address, such as 'ContactAddr' for a primary contact address."
        addressHash:
          type: string
          description: "A unique hash value representing the address, used for identifying and detecting changes to address data."
        attention:
          type: string
          description: "Designates a specific individual or department at the address for targeted delivery."
        barcodeDigits:
          type: string
          description: "Numeric representation of the postal barcode associated with the address, used for mail sorting and delivery."
        block:
          type: string
          description: "The block number or identifier, relevant in urban planning and real estate contexts."
        carrierRoute:
          type: string
          description: "A postal service designation indicating the specific route for mail delivery, comprising a type and code."
        city:
          type: string
          description: "The city or town associated with the address."
        congressCode:
          type: string
          description: "Identifies the congressional district in which the address is located, relevant for political and demographic purposes."
        county:
          type: string
          description: "The county in which the address resides, providing an additional layer of geographic specificity."
        countyCode:
          type: string
          description: "A specific code assigned to the county, used for administrative and geographic classification."
        dpv:
          type: string
          description: "Delivery Point Validation code, indicating the deliverability status of the address as per postal service validation."
        dpvDesc:
          type: string
          description: "A textual description of the Delivery Point Validation code, offering insights into mail delivery capabilities."
        dpvNotes:
          type: string
          description: "Additional notes from the Delivery Point Validation process, highlighting specific issues or considerations."
        dpvNotesDesc:
          type: string
          description: "Descriptive elaboration on the DPV notes, providing context and explanations for validation outcomes."
        geocodeLevel:
          type: string
          description: "Indicates the precision of geocoding for the address, such as 'street' or 'postal code' level."
        geocodeLevelDescription:
          type: string
          description: "Narrative description of the geocode level, explaining the extent of location accuracy achieved."
        id:
          type: string
          description: "A unique identifier for the address within the system, used for tracking and reference."
        latitude:
          type: string
          description: "The latitude coordinate of the address, resulting from geocoding processes."
        legalDesc:
          type: string
          description: "A legal narrative description of the property associated with the address, used in formal documentation and contracts."
        longitude:
          type: string
          description: "The longitude coordinate of the address, resulting from geocoding processes."
        lot:
          type: string
          description: "Identifies the specific lot within a subdivision or development, relevant in property identification."
        meridian:
          type: string
          description: "Refers to the principal meridian used in surveying and legal descriptions within the region of the address."
        plssCounty:
          type: string
          description: "Indicates the Public Land Survey System (PLSS) county code, relevant in the United States for land division and legal descriptions."
        postDirectional:
          type: string
          description: "A directional suffix in an address, specifying the compass point after the street name, for geographical clarity."
        postalCode:
          type: string
          description: "The ZIP or postal code, crucial for mail sorting, delivery, and regional identification."
        preDirectional:
          type: string
          description: "A directional prefix in an address, specifying the compass point before the street name, enhancing locational accuracy."
        primaryMeridian:
          type: string
          description: "Specifies the primary meridian reference, important in certain legal and surveying contexts."
        primaryNumber:
          type: string
          description: "The number assigned to the building or property within the street, fundamental for address identification."
        primaryNumberSuffix:
          type: string
          description: "A suffix to the primary number, providing additional specificity, such as indicating a range of units."
        range:
          type: string
          description: "Specifies the range for rural or agricultural properties, often used in conjunction with township and section."
        rangeDir:
          type: string
          description: "Directional indicator for the range, providing spatial orientation in rural addressing schemes."
        regionCd:
          type: string
          description: "The full name of the country or major administrative region for the address."
        regionISOCd:
          type: string
          description: "The ISO Alpha-2 country code, standardizing country identification across international systems."
        score:
          type: string
          description: "A numerical score representing the accuracy of the address verification, where higher scores indicate higher confidence levels."
        secondaryDesignator:
          type: string
          description: "Indicates a specific unit or sub-location within a larger complex or building, such as 'Apt' or 'Suite'."
        secondaryNumber:
          type: string
          description: "The specific number or identifier of the unit within a larger building, essential for accurate mail delivery to multi-unit locations."
        section:
          type: string
          description: "Designates a specific section within the Public Land Survey System (PLSS) or a similar land division system, providing additional precision to rural and agricultural property locations."
        stateProvCd:
          type: string
          description: "The code representing the state or province of the address. This may be an abbreviation or a full name, depending on local conventions and requirements."
        streetName:
          type: string
          description: "The name of the street or thoroughfare, excluding numerical or directional prefixes and suffixes, essential for identifying the location within a city or region."
        suffix:
          type: string
          description: "A suffix indicating the type or category of the street or thoroughfare, such as Road, Avenue, Circle, etc., providing additional context to the street name."
        township:
          type: string
          description: "Identifies the township or equivalent jurisdictional division, used primarily in rural addressing to specify location within larger, often unincorporated, areas."
        townshipDir:
          type: string
          description: "Directional indicator associated with the township, aiding in the geographical orientation and precise location of properties within larger rural or unincorporated areas."
        validated:
          type: string
          description: "Indicates the validation status of the address, particularly the accuracy of the township, section, and range components, confirming the address has been verified against official records or databases."
        verificationHash:
          type: string
          description: "A cryptographic hash value generated from the address details. This hash is used to ensure the integrity of the address data and to verify that no changes have occurred since the last validation."
        verificationMsg:
          type: string
          description: "A message summarizing the outcome of the latest address verification attempt, providing insights into any discrepancies, issues, or confirmation of address accuracy."
      required:
        - "id"
        - "addrTypeCd"
        - "addr1"
        - "city"
        - "stateProvCd"
        - "postalCd"
        - "regionCd"
        - "regionISOCd"
        - "verificationHash"
    ListDocument:
      description: "Encapsulates a response structure for API calls that return multiple documents, facilitating easy access to and manipulation of a collection of documents within the system."
      type: object
      properties:
        documentListItems:
          type: array
          description: "An array of Document objects, each representing detailed information about a specific document within the system."
          items:
            $ref: '#/components/schemas/Document'
    Document:
      description: "Detailed metadata and properties associated with a specific document, including access permissions, document type, and identifiers."
      type: object
      properties:
        _links:
          type: array
          description: "Hypermedia links related to the document, providing navigational paths to related data and actions available for the document."
          items:
            $ref: '#/components/schemas/Link'
        addDt:
          type: string
          description: "The date the document was added to the system, typically in ISO 8601 format."
        addTm:
          type: string
          description: "The time the document was added to the system, often complementing the addition date for precise tracking."
        addUser:
          type: string
          description: "Identifier of the user who added the document, useful for audit trails and permissions management."
        canDeleteInd:
          type: boolean
          description: "Indicator of whether the document can be deleted, based on current user permissions and document status."
        canViewInd:
          type: boolean
          description: "Indicator of whether the current user has permissions to view the document, ensuring compliance with access control policies."
        deliveryCd:
          type: string
          description: "Code representing the delivery method or status of the document, such as electronic, mailed, or pending."
        description:
          type: string
          description: "A brief description or summary of the document's content or purpose, aiding in identification and categorization."
        documentTypeCd:
          type: string
          description: "A code categorizing the document by type, such as policy, claim, or identification, for systematic organization."
        filename:
          type: string
          description: "The name of the file as stored within the system, including file extension, facilitating file retrieval and management."
        formCd:
          type: string
          description: "A code identifying the form associated with the document, relevant in contexts where documents are generated from standardized forms."
        itemDescription:
          type: string
          description: "Detailed description of the item or content covered by the document, providing additional context beyond the basic description."
        itemName:
          type: string
          description: "The name or title of the item or subject matter the document pertains to, offering a quick reference to the document's focus."
        name:
          type: string
          description: "The title or name of the document, used as a primary identifier in listings and searches."
        outputNumber:
          type: string
          description: "A unique number or identifier generated during the document's output or creation process, useful for tracking and reference."
        ref:
          type: string
          description: "A general reference field that could be used to link the document to other entities or identifiers within the system."
        templateIdRef:
          type: string
          description: "Reference to the template used for generating the document, linking the document to its source for replication or audit purposes."
        transactionNumber:
          type: string
          description: "A unique identifier for the transaction that resulted in the document's creation or modification, essential for traceability."
        type:
          type: string
          description: "General categorization of the document, possibly overlapping with documentTypeCd but allowing for broader classification."
    Link:
      description: "Represents a hypermedia link, providing navigational capabilities between related resources within the API, akin to links in web pages."
      type: object
      properties:
        href:
          type: string
          description: "The absolute or relative URL pointing to the linked resource, which can be used to directly access or query the target resource."
        rel:
          type: string
          description: "A descriptor that indicates the relationship of the linked resource to the current context, such as 'self', 'next', or specific action-related terms."
    Attachment:
      description: "Encapsulates details about an attachment, including files, metadata, and policies related to the retention and deletion of the attachment."
      type: object
      properties:
        compositeFile:
          type: array
          description: "An array of file identifiers that are to be combined into this single composite attachment, facilitating document management and access."
          items:
            $ref: '#/components/schemas/CompositeFile'
        description:
          type: string
          description: "A user or system-provided description of the attachment, often detailing its content, purpose, or any relevant context."
        eraseInfo:
          $ref: '#/components/schemas/EraseInfo'
          description: "Structured information detailing the conditions, methods, and policies governing the secure erasure of the attachment to comply with data protection standards."
        filename:
          type: string
          description: "The storage path and unique filename under which the attachment is saved on the server, crucial for retrieval and management."
        id:
          type: string
          description: "A unique identifier for the attachment, facilitating tracking, reference, and operations like update or deletion."
        linkReferences:
          type: array
          description: "An array of identifiers for other resources or entities within the system that this attachment is linked to, enhancing data connectivity and context."
          items:
            $ref: '#/components/schemas/LinkReference'
        memo:
          type: string
          description: "Optional user-entered notes or commentary about the attachment, which can include usage notes, revision information, or any other pertinent details."
        purgeInfo:
          type: object
          description: "Contains details regarding the policies and processes for purging the attachment from the system, including timelines, methods, and compliance requirements."
        tags:
          type: array
          description: "A collection of tags associated with the attachment, serving as metadata for categorization, searchability, and organization."
          items:
            $ref: '#/components/schemas/Tag'
        templateId:
          type: string
          description: "Identifies the template from which the attachment was created, if any, linking it to standardized document formats or predefined content structures."
    CompositeFile:
      description: "Represents the details of a composite file, which is typically created by combining multiple files or parts of files into a single file attachment. This schema facilitates the management and assembly of such files."
      type: object
      properties:
        fileName:
          type: string
          description: "Specifies the storage path and the unique filename under which the component file is saved on the server. These files are intended to be combined to form a composite attachment."
        id:
          type: string
          description: "A unique identifier for the composite file component, allowing for precise reference and manipulation within the system."
    LinkReference:
      description: "Encapsulates a reference to a linked resource within the system, providing context and navigational properties to enhance connectivity between different entities or data models."
      type: object
      properties:
        description:
          type: string
          description: "Descriptive text for the link, typically generated based on templates, that explains the nature or purpose of the link in user-readable terms."
        id:
          type: string
          description: "A unique identifier for the link reference, facilitating tracking and management of links within the application."
        idRef:
          type: string
          description: "The reference ID of the target model to which this link points, establishing a clear connection between the link and its associated entity."
        modelName:
          type: string
          description: "The name of the model or entity type that is being linked to, providing clarity on the kind of resource the link references."
        status:
          type: string
          description: "Indicates the current status of the link, such as 'Active' or 'Deleted', reflecting the link's operational state within the system."
        systemIdRef:
          type: string
          description: "The system-wide unique database identifier for the target item of this link reference, used in scenarios where objects from different containers or databases are interconnected."
    Tag:
      description: "Encapsulates metadata in the form of a tag, allowing for the categorization, organization, and easy retrieval of various entities within the system. Tags can be applied to documents, contacts, claims, and more, facilitating efficient data management and searchability."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the tag, ensuring distinctness across the system and enabling precise reference and operations on the tag."
        name:
          type: string
          description: "The human-readable name of the tag, which succinctly describes the attribute, category, or keyword associated with the tag. This name is used for displaying, searching, and organizing entities tagged with this label."
        tagTemplateIdRef:
          type: string
          description: "The reference ID to a predefined tag template from which this tag was created, if applicable. Tag templates facilitate the standardization of tags across the system, ensuring consistency in tagging conventions and metadata application."
    ListDriver:
      description: "Encapsulates a paginated response structure that contains a list of drivers, including relevant metadata to handle continuation of listing if more drivers exist beyond the current response set."
      type: object
      properties:
        continuationId:
          type: string
          description: "A unique identifier that can be used to request subsequent pages of drivers. This value represents the row index from which the next set of results should start, facilitating pagination in client applications."
        drivers:
          description: "An array of Driver objects, each representing detailed information about an individual driver, including personal, contact, and policy-related details."
          $ref: '#/components/schemas/Driver'
    Driver:
      description: "Detailed representation of a driver or potential driver, encompassing personal information, contact details, associated addresses, and other relevant information that pertains to their role and status within insurance policies."
      type: object
      properties:
        _links:
          type: array
          description: "A collection of hypermedia links related to the driver, providing quick access to related resources and actions such as fetching detailed information or initiating workflows."
          items:
            $ref: '#/components/schemas/Link'
        _revision:
          type: string
          description: "A versioning identifier used to manage concurrent updates to the driver resource, ensuring data integrity through optimistic locking mechanisms."
        addresses:
          type: array
          description: "An array of Address objects that detail the driver's associated addresses, including home, mailing, and potentially other types of addresses."
          items:
            $ref: '#/components/schemas/Address'
        driverInfo:
          description: "Structured information specific to the driver's licensing, history, and qualifications, as defined by the DriverPersonalInfo schema."
          $ref: '#/components/schemas/DriverPersonalInfo'
        emailInfo:
          description: "Contact email information for the driver, allowing for electronic communication."
          $ref: '#/components/schemas/EmailInfo'
        eraseInfo:
          description: "Details the conditions and policies under which the driver's information can be erased, in compliance with privacy regulations."
          $ref: '#/components/schemas/EraseInfo'
        futureStatusCd:
          type: string
          description: "A code indicating the anticipated future status of the driver with respect to the policy, such as pending renewal or cancellation."
        id:
          type: string
          description: "A unique identifier for the driver, used to reference and manage driver information within the system."
        issues:
          type: array
          description: "A list of issues or points of concern related to the driver, such as incidents or violations, that may affect insurance considerations."
          items:
            $ref: '#/components/schemas/Issue'
        locationIdRef:
          type: string
          description: "A reference to the geographical location or area associated with the driver, potentially relevant for policies with geographical considerations such as Personal Umbrella policies."
        nameInfo:
          description: "Basic name information for the driver, potentially including legal names, aliases, or preferred names."
          $ref: '#/components/schemas/NameInfo'
        partyTypeCd:
          type: string
          default: "ContactParty"
          description: "A categorization field that identifies the nature of the party's relationship to the policy or entity, with 'ContactParty' denoting direct contact or relation."
        personInfo:
          description: "Comprehensive personal information about the driver, including demographic and identity-related data."
          $ref: '#/components/schemas/PersonInfo'
        phoneInfo:
          type: array
          description: "An array detailing the phone contact information associated with the driver, facilitating various forms of communication."
          items:
            $ref: '#/components/schemas/PhoneInfo'
        questionReplies:
          description: "Responses to questions or inquiries directed at the driver, relevant to underwriting or policy management."
          $ref: '#/components/schemas/QuestionReplies'
        status:
          type: string
          description: "Current status of the driver, indicating their active involvement or any flags such as 'Deleted' for removed records."
        underLyingPartyInfoIdRef:
          type: string
          description: "References detailed party information, linking the driver to additional contextual data or policy-related entities."
        underLyingPolicyIdRef:
          type: string
          description: "A reference to the specific insurance policy ID that this driver is associated with, highlighting the connection to policy structures and coverages."
        yearsOfService:
          type: integer
          description: "Represents the number of years the driver has been associated with the insurance provider or specific policy, possibly impacting considerations such as loyalty discounts or risk assessments."
    DriverPersonalInfo:
      description: "Captures comprehensive personal and professional details about a driver, including driving history, license information, and eligibility for various insurance benefits based on driving qualifications and courses completed."
      type: object
      properties:
        accidentPreventionCourseCompletionDt:
          type: string
          description: "The date the driver completed an accident prevention course, potentially qualifying them for insurance discounts."
        accidentPreventionCourseInd:
          type: boolean
          default: true
          description: "Indicates whether the driver has completed an accredited accident prevention course."
        assignedVehicle:
          type: integer
          description: "The total number of vehicles assigned to the driver within the policy, illustrating the extent of the driver's responsibility."
        attachedVehicleRef:
          type: string
          description: "Reference ID of the vehicle(s) attached to the driver within the policy, establishing a direct association between the driver and specific vehicles."
        dateofHire:
          type: string
          description: "The date on which the driver was officially hired or employed, relevant in contexts where driving is a professional activity."
        defensiveDriverEffectiveDt:
          type: string
          description: "The start date from which the benefits of completing a defensive driving course take effect, often related to policy discounts."
        defensiveDriverExpirationDt:
          type: string
          description: "The expiration date of the defensive driving course benefits, after which renewal may be necessary to maintain associated discounts."
        defensiveDriverInd:
          type: boolean
          default: true
          description: "Indicates successful completion of a defensive driving course by the driver, which may affect insurance premiums or eligibility for certain coverage options."
        driverInfoCd:
          type: string
          default: "ContactDriver"
          description: "A code that categorizes the driver within the system, often used for internal classification and processing."
        driverNumber:
          type: integer
          description: "A unique sequence number assigned to the driver, used for identification and tracking within the insurance policy."
        driverPoints:
          type: array
          description: "A detailed record of points accumulated by the driver, reflecting violations, infractions, or other factors that may impact insurance rates or coverage."
          items:
            $ref: '#/components/schemas/DriverPoint'
        driverStartDt:
          type: string
          description: "The effective date when the driver was added to the policy, used for calculating the duration of coverage and experience."
        driverStatusCd:
          type: string
          description: "The current status of the driver, such as 'Occasional' or 'Principal', indicating their primary role or frequency of vehicle use within the policy."
        driverTrainingCompletionDt:
          type: string
          description: "The date the driver completed a formal training program, which may qualify them for additional benefits or discounts within their insurance policy."
        driverTrainingInd:
          type: boolean
          description: "A flag indicating whether the driver has undergone formal driving training, potentially influencing risk assessments and policy pricing."
        driverTypeCd:
          type: string
          description: "Classifies the driver by type, such as 'Excluded' or 'Underaged', affecting policy terms and coverage limits."
        excludeDriverInd:
          type: string
          description: "Indicates whether the driver is excluded from certain policy coverages or rating considerations, based on underwriting decisions or policy options."
        goodDriverDiscountInd:
          type: boolean
          default: true
          description: "Signals that the driver qualifies for a good driver discount, based on a history of safe driving and adherence to traffic laws."
        goodDriverInd:
          type: boolean
          default: true
          description: "Indicates recognition of the driver as a 'good driver', potentially affecting policy rates and eligibility for specific benefits."
        id:
          type: string
          description: "A unique identifier for the driver's personal information record within the system."
        lengthTimeDriving:
          type: integer
          description: "The total number of years the driver has been actively driving, reflecting experience and potentially influencing risk profiles."
        licenseDt:
          type: string
          description: "The date on which the driver's license was issued, critical for verifying legal driving status and calculating experience."
        licenseNumber:
          type: string
          description: "The official number associated with the driver's license, essential for identity verification and records management."
        licenseStatus:
          type: string
          description: "Current status of the driver's license, such as 'Valid', 'Suspended', or 'Expired', impacting eligibility for insurance."
        licensedStateProvCd:
          type: string
          description: "The code of the state or province that issued the driver's license, indicating the jurisdiction under which the license is valid."
        matureDriverInd:
          type: boolean
          default: true
          description: "Designates the driver as a 'mature driver', possibly qualifying for specific discounts based on age and experience."
        mvrRequestInd:
          type: boolean
          default: true
          description: "Indicates that a Motor Vehicle Report (MVR) has been requested for the driver, a critical step in assessing driving history and risk."
        mvrStatus:
          type: string
          description: "The status of the MVR data report, providing insights into the driver's history and any potential issues or endorsements."
        mvrStatusDt:
          type: string
          description: "The date on which the MVR status was last updated, important for maintaining current and accurate driver records."
        permanentLicenseInd:
          type: boolean
          default: true
          description: "Indicates whether the driver possesses a permanent driving license, as opposed to a provisional or temporary license."
        relationshipToInsuredCd:
          type: string
          description: "Specifies the driver's relationship to the insured party, such as 'Husband', 'Wife', 'Son', 'Daughter', affecting policy structure and coverages."
        requiredProofOfInsuranceInd:
          type: boolean
          default: true
          description: "Signals the requirement for the driver to provide proof of insurance to the state or regulatory body, often linked to vehicle registration processes."
        scholasticCertificationDt:
          type: string
          description: "The date on which the driver qualified for a scholastic achievement discount, typically based on academic performance."
        scholasticDiscountInd:
          type: boolean
          default: true
          description: "Indicates eligibility for a discount based on scholastic achievement, aimed at student drivers who maintain high academic standards."
        statusComments:
          type: string
          description: "Free-form comments that provide additional context or explanations for the driver's status, changes, or specific conditions noted in the record."
        yearLicensed:
          type: string
          description: "The year in which the driver was first licensed, offering a measure of driving experience and history."
        yearsExperience:
          type: string
          description: "The total number of years the driver has held a valid driving license, serving as an indicator of experience and proficiency."
    DriverPoint:
      description: "Details the points associated with a driver, typically as a result of traffic violations or incidents. These points can impact insurance premiums and coverage."
      type: object
      properties:
        comments:
          type: string
          description: "Additional remarks or explanations regarding the specific points or the incident leading to the points."
        convictionDt:
          type: string
          description: "The date on which the conviction was registered, leading to points being added to the driver's record."
        directPortalIncidentId:
          type: string
          description: "A unique identifier for the incident as recorded in the direct portal, linking the points to specific events or violations."
        driverPointsNumber:
          type: integer
          description: "The total number of points assigned to the driver as a result of the recorded incident or conviction."
        expirationDt:
          type: string
          description: "The date when the points are set to expire or be removed from the driver's record, following applicable laws or regulations."
        id:
          type: string
          description: "A unique identifier for the driver point record, allowing for tracking and management within the system."
        ignoreInd:
          type: boolean
          default: true
          description: "Indicator of whether these points should be ignored or not considered in the driver's risk assessment, possibly due to mitigating circumstances."
        infractionCd:
          type: string
          description: "A code representing the specific infraction or violation that resulted in the points being assigned to the driver."
        infractionDt:
          type: string
          description: "The date on which the infraction occurred, crucial for determining the relevance and impact of the points over time."
        pointsChargeable:
          type: integer
          description: "The number of points that are chargeable against the driver, directly affecting insurance assessments and premiums."
        pointsCharged:
          type: integer
          description: "The actual number of points charged to the driver after considerations such as mitigating factors or legal adjustments."
        sourceCd:
          type: string
          description: "The source code identifying where the point data originated from, such as a state DMV or court system, ensuring traceability."
        status:
          type: string
          description: "The current status of the points, such as 'Active', 'Expired', or 'Removed', reflecting the driver's current standing."
        templateId:
          type: string
          description: "Reference to a template used for documenting or processing driver points, facilitating standardized record-keeping."
        typeCd:
          type: string
          description: "A categorization code that classifies the type of points or the nature of the infractions, aiding in analysis and reporting."
    EmailInfo:
      description: "Details an individual's email contact information, including type and preference status, facilitating communication and documentation processes."
      type: object
      properties:
        emailAddr:
          type: string
          description: "The email address itself, providing a means of electronic communication."
        emailTypeCd:
          type: string
          default: "ContactEmail"
          description: "A code identifying the type of email address provided (e.g., personal, work), aiding in its appropriate use and categorization."
        id:
          type: string
          description: "A unique identifier for the email information record, allowing for reference and management within the system."
        preferredInd:
          type: boolean
          default: false
          description: "Indicates whether this email address is the preferred contact method for the individual, prioritizing it among multiple contact options."
    EraseInfo:
      description: "Contains details regarding the erasure of data, including who performed the erasure, when it was done, and the specific item erased, ensuring compliance with data protection and privacy regulations."
      type: object
      properties:
        erasedBy:
          type: string
          description: "Identifier of the user or system process that performed the erasure, providing an audit trail for compliance and review."
        erasedDt:
          type: string
          description: "The date on which the data was erased, recorded in a standard format such as ISO 8601 for consistency and clarity."
        erasedInd:
          type: boolean
          description: "A boolean indicator that confirms whether the data has been successfully erased, providing a clear status update."
        erasedTm:
          type: string
          description: "The specific time at which the data was erased, complementing the date information for precise record-keeping."
        id:
          type: string
          description: "A unique identifier for the erase information record, facilitating tracking and management of erasure actions within the system."
    Issue:
      description: "Defines an issue related to an entity within the system, capturing details such as the type of issue, associated attributes, and descriptive messages to aid in identification and resolution."
      type: object
      properties:
        attributeRefs:
          type: array
          description: "A collection of references to attributes associated with the issue, providing context and details that may aid in issue analysis and resolution."
          items:
            $ref: '#/components/schemas/AttributeRef'
        id:
          type: string
          description: "A unique identifier for the issue, enabling tracking and management within the system."
        msg:
          type: string
          description: "A descriptive message or summary of the issue, offering insight into the nature and potential impact of the problem."
        subTypeCd:
          type: string
          description: "A code further categorizing the issue within its broader type, allowing for more granular classification and handling."
        typeCd:
          type: string
          description: "The primary classification code of the issue, indicating its general category and facilitating appropriate routing and response strategies."
    AttributeRef:
      description: "Encapsulates a reference to a specific attribute within the system, linking issues or other entities to detailed attribute information for clarity and context."
      type: object
      properties:
        attributeId:
          type: string
          description: "The unique identifier of the attribute to which this reference points, establishing a direct link for data retrieval and analysis."
        id:
          type: string
          description: "A unique identifier for the attribute reference itself, ensuring the ability to track and manage these references independently within the system."
    NameInfo:
      description: "Captures comprehensive details about an individual's or entity's name, accommodating various name formats and types to support a wide range of commercial and personal naming conventions."
      type: object
      properties:
        commercialName:
          type: string
          description: "The official commercial name of an entity, used in business contexts and legal documents."
        commercialName2:
          type: string
          description: "An additional commercial name field, allowing for legal aliases or alternative business names."
        dbaIndexName:
          type: string
          description: "Index name under which the business is filed 'Doing Business As' (DBA), facilitating accurate identification and indexing."
        dbaName:
          type: string
          description: "The 'Doing Business As' (DBA) name, representing the trading name under which the business or entity operates publicly, distinct from the legal business name."
        extendedName:
          type: string
          description: "An extended version of the name that may include additional identifiers or descriptive information, enhancing clarity and specificity."
        givenName:
          type: string
          description: "The individual's first name or given name, used in personal identification."
        id:
          type: string
          description: "A unique identifier for the name information record, ensuring trackability and distinct management within the system."
        indexName:
          type: string
          description: "A standardized name format used for indexing, typically following conventions to facilitate sorting and retrieval."
        nameTypeCd:
          type: string
          default: "ContactName"
          description: "A code that categorizes the type of name record, such as 'ContactName', indicating the context or application of the name information."
        otherGivenName:
          type: string
          description: "An additional or middle given name of the individual, providing completeness to personal identification."
        positionCd:
          type: string
          description: "A code representing the individual's position or title within an organization, if applicable, contributing to formal identification and correspondence."
        prefixCd:
          type: string
          description: "A prefix code indicating titles or honorifics preceding the name, such as 'Mr.', 'Dr.', or 'Ms.', contributing to respectful and accurate address."
        shortName:
          type: string
          description: "A shortened or informal version of the name, used for ease of communication or in less formal contexts."
        suffixCd:
          type: string
          description: "A suffix code indicating qualifiers or titles following the name, such as 'Jr.', 'Sr.', or academic credentials, adding to the formal identification of the individual."
        surname:
          type: string
          description: "The individual's last name or family name, essential for personal identification and official documentation."
    PersonInfo:
      description: "Encapsulates a comprehensive set of personal details for an individual, covering demographic information, contact preferences, professional background, and licensing history, facilitating tailored interactions and personalized insurance services."
      type: object
      properties:
        age:
          type: integer
          description: "The current age of the individual, crucial for assessing eligibility and risk factors for certain insurance products."
        ageLicensed:
          type: integer
          description: "The age at which the individual was first licensed to drive, providing insight into driving experience and proficiency."
        bestTimeToContact:
          type: string
          description: "Preferred time for contacting the individual, ensuring communications are made at convenient times, enhancing customer service."
        bestWayToContact:
          type: string
          description: "Preferred method of contact (e.g., email, phone, text), allowing for personalized communication strategies."
        birthDt:
          type: string
          description: "The individual’s date of birth, in a standard format such as ISO 8601, foundational for many aspects of insurance processing and decision-making."
        educationCd:
          type: string
          description: "A code representing the highest level of education attained by the individual, which may influence insurance rates or eligibility for certain benefits."
        employerCd:
          type: string
          description: "A code identifying the individual’s employer, useful in policies where employment status or employer partnerships affect coverage options."
        genderCd:
          type: string
          description: "The individual's gender as officially recorded, relevant in contexts where gender may impact insurance analytics or product offerings."
        id:
          type: string
          description: "A unique identifier for the person's information record, ensuring accurate tracking and updating of personal details within the system."
        maritalStatusCd:
          type: string
          description: "A code indicating the marital status of the individual, which can be a factor in policy rates and coverage options."
        occupationCd:
          type: string
          description: "A code that classifies the individual's occupation, providing risk assessment data and potential eligibility for occupation-based discounts."
        occupationClassCd:
          type: string
          description: "Further classification of the individual’s occupation, offering nuanced insight into professional risks and coverage needs."
        personTypeCd:
          type: string
          default: "ContactPersonal"
          description: "Indicates the context or category of personal information provided, with 'ContactPersonal' denoting a direct, personal contact type."
        positionTitle:
          type: string
          description: "The professional title or role of the individual within their place of employment, relevant for understanding socioeconomic factors and occupational risks."
        yearsLicensed:
          type: integer
          description: "The total number of years the individual has been licensed to drive, a direct measure of driving experience."
    PhoneInfo:
      description: "Details an individual's or entity's phone contact information, including type and preference, to support effective and preferred modes of communication."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the phone information record, allowing for efficient tracking and management within the system."
        phoneName:
          type: string
          description: "A label or name associated with the phone number, such as 'Home' or 'Work', to identify the phone number's context or usage."
        phoneNumber:
          type: string
          description: "The actual phone number, formatted according to local or international standards, facilitating contact."
        phoneTypeCd:
          type: string
          default: "ContactPhone"
          description: "A code that categorizes the type of phone number (e.g., mobile, home, work), aiding in its appropriate use and prioritization."
        preferredInd:
          type: boolean
          default: true
          description: "Indicates whether this phone number is the preferred method of contact, prioritizing it among multiple contact options."
    QuestionReplies:
      description: "Encapsulates responses to a set of predefined questions, typically used in underwriting or claim processes, to gather necessary information in a structured format."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the collection of question and replies, facilitating organization and retrieval."
        questionReply:
          type: array
          description: "An array of responses to specific questions, each containing the question's details and the provided reply, structured according to the QuestionReply schema."
          items:
            $ref: '#/components/schemas/QuestionReply'
        questionSourceMDA:
          type: string
          description: "Metadata or identifier indicating the source or context of the questions, such as a specific underwriting guideline or claim process step."
    QuestionReply:
      description: "Encapsulates both a specific question posed within the system and the corresponding reply, facilitating the structured collection of information for processes such as underwriting or claim assessment."
      type: object
      properties:
        displayDesc:
          type: string
          description: "A descriptive label or prompt for the question, intended to be displayed as part of the question when presented to the user."
        id:
          type: string
          description: "A unique identifier for the question and reply instance, allowing for tracking and referencing within the system."
        name:
          type: string
          description: "The name or key identifying the question, which may be used to map the reply to specific processes or data fields."
        text:
          type: string
          description: "The full text of the question as presented to the user, detailing what information or response is being requested."
        value:
          type: string
          description: "The reply or response provided to the question, stored as a string regardless of the original format or type of the input."
        visibleInd:
          type: boolean
          default: true
          description: "Indicates whether the question is currently set to be visible to the user, allowing for conditional display based on context or previous answers."
    ListApplication:
      description: "Encapsulates a response that includes a list of insurance applications, potentially spanning multiple pages, along with pagination control via a continuation identifier."
      type: object
      properties:
        applicationListItems:
          type: array
          description: "An array of Application objects, each representing an individual insurance application with summary and detailed data."
          items:
            $ref: '#/components/schemas/Application'
        continuationId:
          type: string
          description: "A pagination control identifier that specifies the starting point for the next set of results, used when additional results are available beyond the current response."
    Application:
      description: "Detailed representation of an insurance application, including its status, ownership, associated customer and product information, and permissions regarding user actions."
      type: object
      properties:
        _links:
          type: array
          description: "Hypermedia links related to the application, facilitating navigation to related resources and actions such as editing or inquiry."
          items:
            $ref: '#/components/schemas/Link'
        applicationMini:
          $ref: '#/components/schemas/ApplicationMini'
          description: "A summarized version of the application details, providing key information at a glance without the need for full detail retrieval."
        canEdit:
          type: boolean
          description: "Indicates whether the current user has permissions to edit the application, reflecting access control based on user roles and application status."
        canInquiry:
          type: boolean
          description: "Indicates whether the current user is permitted to make inquiries regarding the application, typically used for customer service and support roles."
        currentOwner:
          type: string
          description: "Identifies the current owner or responsible party for the application, which may be an individual agent or a team within the insurance organization."
        customerInfo:
          $ref: '#/components/schemas/CustomerInfo'
          description: "Contains comprehensive information about the customer associated with the application, including personal and contact details."
        productInfo:
          $ref: '#/components/schemas/ProductInfo'
          description: "Provides detailed information about the insurance product being applied for, including product codes, descriptions, and potentially coverage options."
        ref:
          type: string
          description: "A unique reference identifier for the application, used within the system for tracking, management, and retrieval purposes."
    ApplicationMini:
      description: "Provides a compact overview of an insurance application, summarizing key information and linking to detailed resources for further exploration. This schema is optimized for quick access and overview purposes."
      type: object
      properties:
        _links:
          type: array
          description: "A collection of hypermedia links to related resources, enabling easy navigation to detailed views of the application, policy information, and other associated resources."
          items:
            $ref: '#/components/schemas/Link'
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
          description: "Consolidates detailed information about the application, including status, applicant details, and product specifics, providing a comprehensive snapshot within a condensed format."
        applicationNumber:
          type: string
          description: "The unique identifier assigned to the application, serving as a primary reference for tracking and management throughout the application process."
        auditAccountRef:
          type: string
          description: "A reference identifier linking the application to its associated audit account, facilitating financial tracking and audit processes."
        basicPolicy:
          $ref: '#/components/schemas/BasicPolicy'
          description: "Summarizes the foundational policy information derived from the application, including key policy identifiers, dates, and basic coverage details."
    ApplicationInfo:
      description: "Encapsulates a detailed record of an insurance application's lifecycle within the system, tracking its creation, updates, mailing history, closure, and any related correction or reinstatement transactions."
      type: object
      properties:
        addDt:
          type: string
          format: date
          description: "The date when the application was initially added to the system, marking the start of its lifecycle."
        addTm:
          type: string
          description: "The precise time of day when the application was added to the system, complementing the add date for accurate tracking."
        addUser:
          type: string
          description: "The identifier (e.g., username) of the user who added the application, providing an audit trail for creation actions."
        closeComment:
          type: string
          description: "Any comments or notes regarding the reasons or circumstances surrounding the application's closure."
        closeDt:
          type: string
          format: date
          description: "The date when the application was officially closed, terminating its active processing or consideration within the system."
        closeReasonCd:
          type: string
          description: "A code that categorizes the reason for the application's closure, such as 'withdrawn' or 'issued'."
        closeSubReasonCd:
          type: string
          description: "A more specific code that provides additional detail on the reason for application closure, used for finer categorization."
        closeSubReasonLabel:
          type: string
          description: "The textual description corresponding to the close sub-reason code, offering human-readable insight into the closure reason."
        closeTm:
          type: string
          description: "The exact time of day when the application was closed, providing precise timing alongside the closure date."
        closeUser:
          type: string
          description: "The identifier of the user who performed the closure action, contributing to the audit trail."
        correctedByTransactionNumber:
          type: integer
          format: int64
          description: "If the application was corrected by a subsequent transaction, this is the number of that correcting transaction."
        correctionOfTransactionNumber:
          type: integer
          format: int64
          description: "If this application serves as a correction, this is the original transaction number that it corrects."
        firstMailedDt:
          type: string
          format: date
          description: "The date when the application or associated documents were first mailed to the customer or relevant party."
        id:
          type: string
          description: "A unique identifier for the application information record, ensuring distinct and retrievable records within the system."
        iterationDescription:
          type: string
          description: "A description or identifier for the particular iteration or version of the application, useful in tracking changes over time."
        lastMailedDt:
          type: string
          format: date
          description: "The most recent date on which the application or related documents were mailed out, indicating the latest communication attempt."
        masterQuoteRef:
          type: string
          description: "A reference to the master quote associated with this application, linking application data to quoting details."
        needByDt:
          type: string
          format: date
          description: "The date by which the application processing needs to be completed, often tied to coverage start dates or customer requirements."
        pendForReleaseInd:
          type: boolean
          description: "Indicates if the application is currently on hold, pending release for further processing or decision-making."
        reinstatedByTransactionNumber:
          type: integer
          format: int64
          description: "Identifies the transaction number that led to the reinstatement of this application, if it was previously closed or withdrawn."
        reinstatementOfTransactionNumber:
          type: integer
          format: int64
          description: "For applications that are reinstatements, this is the original transaction number of the application that is being reinstated."
        renewalApplyInd:
          type: boolean
          description: "Flags whether the application is marked for renewal, indicating an ongoing relationship or coverage continuation."
        renewalApplyOfTransactionNumber:
          type: integer
          format: int64
          description: "For renewal applications, this field links to the transaction number of the previous application or policy being renewed."
        submittedDt:
          type: string
          format: date
          description: "The date when the application was formally submitted for review or processing, moving it forward in the underwriting or issuance pipeline."
        updateDt:
          type: string
          format: date
          description: "The date of the last update made to the application, reflecting the most recent changes or progress."
        updateTm:
          type: string
          description: "The time at which the last update to the application was made, providing time-specific tracking of modifications."
        updateUser:
          type: string
          description: "The identifier of the user who made the most recent update to the application, part of the comprehensive audit trail."
    ProductInfo:
      description: "Provides key details about an insurance product, including its identification and descriptive name, facilitating product-specific processing and categorization."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the insurance product, enabling precise reference and retrieval within the system."
        name:
          type: string
          description: "The descriptive name of the product as defined in the Product Master, providing a human-readable identifier that may correspond to marketing or regulatory naming conventions."
    CustomerInfo:
      description: "Captures essential identification and reference information for a customer, supporting customer management, service, and correspondence within the insurance system."
      type: object
      properties:
        customerNumber:
          type: string
          description: "A unique identifier or number assigned to the customer, serving as a primary reference for account management, policy administration, and customer service activities."
        customerRef:
          type: string
          description: "A reference string or identifier that links the customer to external systems, records, or databases, enhancing interoperability and data cohesion."
        id:
          type: string
          description: "The system-generated unique identifier for the customer's record, ensuring the ability to uniquely identify, track, and manage customer information within the system."
        name:
          type: string
          description: "The full name of the customer as registered or recognized within the system, facilitating personalization, correspondence, and customer engagement."
    Quote:
      description: "Encapsulates comprehensive details about a quotation for insurance coverage, including linked resources, policy information, and the status of the quote."
      type: object
      properties:
        _links:
          description: "A collection of hypermedia links to related resources and actions available for the quote, facilitating easy navigation and interaction within the API ecosystem."
          type: array
          items:
            $ref: '#/components/schemas/Link'
        _revision:
          type: string
          description: "A system-generated version identifier for the quote, used to manage updates and ensure data integrity through optimistic concurrency control."
        applicationInfo:
          $ref: '#/components/schemas/ApplicationInfo'
          description: "Contains detailed information about the associated application from which this quote was generated, providing context and linkage between application and quoting processes."
        basicPolicy:
          $ref: '#/components/schemas/BasicPolicy'
          description: "Summarizes key policy information derived from the quote, including identifiers and foundational coverage details."
        contacts:
          description: "A list of contacts associated with the quote, including individuals or entities involved in the policy as insureds, beneficiaries, or other roles."
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        customerRef:
          type: string
          description: "A reference identifier linking the quote to a customer record, enabling correlation between customer details and quotation data."
        description:
          type: string
          description: "A brief description or summary of the quote, providing insights into the coverage scope, purpose, or specific considerations."
        externalStateData:
          type: string
          description: "External system data related to the quote, potentially including state-specific requirements, third-party data, or external identifiers."
        id:
          type: string
          description: "The unique identifier for the quote, facilitating tracking, management, and retrieval within the system."
        insured:
          $ref: '#/components/schemas/Insured'
          description: "Details about the insured entity or individual covered under the policy proposed by this quote, including demographic and contact information."
        lockTaskId:
          type: string
          description: "An identifier for a system task or process that has locked the quote for exclusive access, preventing concurrent modifications."
        policyRef:
          type: string
          description: "A reference identifier linking the quote to a specific policy or policy proposal, establishing a connection between quoting and policy issuance."
        statementAccountRef:
          type: string
          description: "A reference to the statement account associated with this quote, used for billing and financial transactions related to the policy."
        status:
          type: string
          description: "The current status of the quote, indicating its progression through the quoting process, approval state, or any conditions affecting its validity."
        submitterIssues:
          description: "A list of issues or concerns raised by the submitter or system during the quoting process, requiring attention or resolution before proceeding."
          type: array
          items:
            $ref: '#/components/schemas/SubmitterIssue'
        transactionInfo:
          $ref: '#/components/schemas/TransactionInfo'
          description: "Provides transactional details related to the quote, including dates, identifiers, and statuses of relevant transactions."
        vipLevel:
          type: string
          description: "Indicates the VIP level or priority of the quote, which may affect processing speed, service levels, or access to special pricing."
        wcAdditionalInsureds:
          description: "List of additional insured entities for workers' compensation policies, detailing parties other than the primary insured that receive coverage."
          type: array
          items:
            $ref: '#/components/schemas/WCAdditionalInsured'
        wcCoveredStates:
          description: "A list of states in which workers' compensation coverage is included within the policy as proposed by this quote, reflecting multi-state operations and compliance."
          type: array
          items:
            $ref: '#/components/schemas/WCCoveredState'
    BasicPolicy:
      description: "Summarizes foundational information about a policy, including its identification, associated affinity group, and details about its payment plan."
      type: object
      properties:
        affinityGroupCd:
          type: string
          description: "The code representing the affinity group associated with the policy, which may qualify the policyholder for certain benefits or discounts."
        auditPayPlan:
          $ref: '#/components/schemas/AuditPayPlan'
          description: "Details the audit payment plan associated with the policy, including payment schedules and amounts."
        autoDataPrefillInd:
          type: boolean
          description: "Indicator of whether data prefilling is enabled for automatic data capture and form completion."
        branch:
          type: string
          description: "The branch or division of the insurance provider issuing the policy."
        businessSourceCd:
          type: string
          description: "The code indicating the source of business, such as direct, broker, or agent."
        cALineSelectedInd:
          type: boolean
          description: "Indicator of whether commercial auto line coverage is selected in the policy."
        cAPolicyType:
          type: string
          description: "The type of commercial auto policy, detailing specific coverage options selected."
        cCLineSelectedInd:
          type: boolean
          description: "Indicator of whether commercial property coverage is selected."
        cCPolicyType:
          type: string
          description: "The type of commercial property policy, detailing the specific coverage options selected."
        cCSubline:
          type: string
          description: "Subline code for commercial coverage, providing additional detail on the specific nature of the coverage."
        cGLineSelectedInd:
          type: boolean
          description: "Indicator of whether general liability coverage is selected."
        cILineSelectedInd:
          type: boolean
          description: "Indicator of whether commercial inland marine coverage is selected."
        cLLineSelectedInd:
          type: boolean
          description: "Indicator of whether commercial lines coverage is selected, encompassing a range of commercial policies."
        cPLineSelectedInd:
          type: boolean
          description: "Indicator of whether commercial package policy coverage is selected."
        cPPolicyType:
          type: string
          description: "The type of commercial package policy, detailing the specific coverage options selected."
        carrierCd:
          type: string
          description: "The code representing the insurance carrier providing the policy."
        carrierGroupCd:
          type: string
          description: "The code representing the group of insurance carriers, if applicable, under which the policy is issued."
        commCLUERequestInd:
          type: boolean
          description: "Indicator of whether a commercial CLUE (Comprehensive Loss Underwriting Exchange) report has been requested for underwriting purposes."
        comments:
          type: string
          description: "Free-form comments or notes associated with the policy."
        companyProductCd:
          type: string
          description: "The product code of the company, identifying the specific insurance product offered."
        controllingStateCd:
          type: string
          description: "The code of the state that has jurisdiction over the policy, particularly important for multi-state operations."
        dPLineSelectedInd:
          type: boolean
          description: "Indicator of whether dwelling property coverage is selected."
        description:
          type: string
          description: "A brief description of the policy, summarizing the key coverage and policy details."
        directorsAndOfficersLineSelectedInd:
          type: boolean
          description: "Indicator of whether Directors and Officers (D&O) liability coverage is selected."
        displayDescription:
          type: string
          description: "A description of the policy designed for display purposes, often used in customer-facing documents."
        effectiveDt:
          type: string
          format: date
          description: "The effective date of the policy, indicating when coverage begins."
        effectiveTm:
          type: string
          description: "The effective time of the policy, providing precise coverage start time."
        electronicPaymentSource:
          $ref: '#/components/schemas/ElectronicPaymentSource'
          description: "Details regarding the source of electronic payments for the policy."
        employmentAndPracticeLineSelectedInd:
          type: boolean
          description: "Indicator of whether employment practices liability coverage is selected."
        errorsAndOmissionLineSelectedInd:
          type: boolean
          description: "Indicator of whether Errors and Omissions (E&O) coverage is selected."
        expirationDt:
          type: string
          format: date
          description: "The expiration date of the policy, indicating when coverage ends."
        extendedCoverageInd:
          type: boolean
          description: "Indicator of whether the policy includes extended coverage beyond standard terms."
        externalId:
          type: string
          description: "An external identifier for the policy, used for integration with external systems or databases."
        fireLightningInd:
          type: boolean
          description: "Indicator of whether the policy includes coverage for fire and lightning damage."
        gLLineSelectedInd:
          type: boolean
          description: "Indicator of whether general liability coverage is selected."
        id:
          type: string
          description: "The unique identifier for the policy within the system."
        inceptionDt:
          type: string
          format: date
          description: "The inception date of the policy, marking the beginning of coverage, distinct from the effective date in some cases."
        inceptionTm:
          type: string
          description: "The inception time of the policy, providing precise start time of coverage."
        legacyPolicyNumber:
          type: string
          description: "A policy number from a legacy system, maintained for historical or cross-reference purposes."
        llcOwnedDt:
          type: string
          format: date
          description: "The date on which the covered property was transferred to an LLC, if applicable."
        lossSettlementType:
          type: string
          description: "The type of loss settlement provided by the policy, such as actual cash value or replacement cost."
        manualBillingEntitySplitInd:
          type: boolean
          description: "Indicator of whether the billing for the policy is manually split among multiple entities."
        manualReinstateInd:
          type: boolean
          description: "Indicator of whether the policy has been manually reinstated after cancellation or lapse."
        manualReinstateReason:
          type: string
          description: "The reason for manually reinstating the policy, providing context for the action."
        manualRenewalInd:
          type: boolean
          description: "Indicator of whether the policy is manually renewed, as opposed to automatically renewed."
        manualRenewalReason:
          type: string
          description: "The reason for manually renewing the policy, providing context for the renewal decision."
        namedNonOwnedInd:
          type: boolean
          description: "Indicator of whether the policy includes coverage for named non-owned vehicles or properties."
        oldSubTypeCd:
          type: string
          description: "A legacy sub-type code for the policy, maintained for historical or compatibility purposes."
        pLLineSelectedInd:
          type: boolean
          description: "Indicator of whether personal lines coverage is selected, identifying if the policy includes insurance products designed for individuals and families, such as personal auto, homeowners, or personal umbrella coverage."
        payPlanCd:
          type: string
          description: "The code identifying the payment plan associated with the policy, dictating the schedule and method of premium payments."
        paymentDay:
          type: string
          description: "Specifies the day of the month on which recurring payments are due for the policy."
        policySource:
          type: string
          description: "Identifies the origin of the policy, such as an online application, agent submission, or broker referral."
        policyType:
          type: string
          description: "Defines the type of insurance policy, such as auto, homeowners, commercial, etc., categorizing the policy for administrative and product-specific purposes."
        previousCarrierCd:
          type: string
          description: "The code of the insurance carrier that issued the previous policy, used for history tracking and risk assessment."
        previousExpirationDt:
          type: string
          format: date
          description: "The expiration date of the policyholder's previous insurance policy, important for underwriting and continuity of coverage considerations."
        previousPolicyNumber:
          type: string
          description: "The policy number of the policyholder's previous insurance policy, used for reference and transferring information."
        previousPremium:
          type: string
          description: "The premium amount paid for the previous policy period, used for underwriting and pricing analysis."
        productTypeCd:
          type: string
          description: "The code representing the specific insurance product type, facilitating product management and policy administration."
        productVersionIdRef:
          type: string
          description: "A reference to the version ID of the insurance product, ensuring that the policy aligns with the correct product specifications and terms."
        programCd:
          type: string
          description: "The code identifying the insurance program under which the policy is issued, often related to specialized markets or groupings of policies."
        promotionCd:
          type: string
          description: "The code for any promotional offers or discounts applied to the policy, used for marketing and billing purposes."
        providerRef:
          type: string
          description: "A reference identifier for the provider or originator of the policy, such as an agent, broker, or direct application system."
        renewalProviderRef:
          type: string
          description: "A reference identifier for the provider managing the renewal of the policy, which may differ from the original issuing provider."
        renewalSubProducerCd:
          type: string
          description: "The code for the sub-producer responsible for the renewal of the policy, part of the distribution channel management."
        renewalTermCd:
          type: string
          description: "The code representing the term for the policy renewal, dictating the duration and conditions for the renewed coverage period."
        sessionLink:
          type: string
          description: "A URL or identifier linking to the session or transaction where the policy was created or modified, for audit and tracking purposes."
        sicCode:
          type: string
          description: "The Standard Industrial Classification (SIC) code associated with the policyholder's primary business activity, used for underwriting and risk assessment."
        subProducerCd:
          type: string
          description: "The code identifying the sub-producer or agent responsible for the policy, part of the distribution and sales network."
        subTypeCd:
          type: string
          description: "A more specific classification within the overall policy type, providing further detail on the coverage or policy structure."
        transactionCd:
          type: string
          description: "The code representing the type of transaction (e.g., new business, renewal, endorsement) that the policy record is associated with."
        transactionNumber:
          type: integer
          format: int64
          description: "A unique identifier for the transaction involving the policy, used for tracking and auditing purposes."
        transactionStatus:
          type: string
          description: "Indicates the current status of the policy transaction, such as pending, completed, or canceled."
        transactionHistory:
          type: array
          description: "Detailed information on the previous transactions in this policy."
          items:
            $ref: "#/components/schemas/TransactionDetails"
        umbrellaPolicyInfo:
          $ref: '#/components/schemas/UmbrellaPolicyInfo'
          description: "Details of any associated umbrella policy, providing extended liability coverage beyond the primary policy limits."
        underwriterCd:
          type: string
          description: "The code identifying the underwriter responsible for the policy, critical for risk management and policy approval processes."
        underwritingHoldInd:
          type: boolean
          description: "Indicator of whether the policy is currently on hold due to underwriting review, awaiting additional information or decision."
        vandalismMaliciousMischiefInd:
          type: boolean
          description: "Indicator of whether the policy includes coverage for vandalism and malicious mischief, protecting against specific types of property damage."
        wcARDRuleEnabled:
          type: boolean
          description: "Indicator of whether the workers' compensation Average Rate Differential (ARD) rule is enabled, affecting premium calculations."
        wcAnniversaryRatingDay:
          type: string
          description: "The day on which the workers' compensation policy's rating and premium are reassessed annually, important for policy management and pricing."
        wcPremiumDiscountTableTypeCd:
          type: string
          description: "The code for the type of premium discount table applied to the workers' compensation policy, affecting discounts for larger premium volumes."
    UmbrellaPolicyInfo:
      type: object
      description: "Encapsulates detailed information regarding an umbrella insurance policy within the Guidewire InsuranceNow system. This schema is designed to capture and organize key identifiers and attributes of an umbrella policy, facilitating effective policy management, identification, and reference across the platform. It serves as a foundational element for operations such as policy lookup, modification, and integration with related insurance processes, ensuring a coherent and unified approach to managing umbrella policies."
      properties:
        id:
          type: string
          description: "The unique identifier for the umbrella policy, used to uniquely distinguish this policy from others within the system."
        idRef:
          type: string
          description: "A reference identifier that links this umbrella policy to related records or entities within the system, facilitating cross-referencing and data integrity."
        policyNumber:
          type: string
          description: "The policy number assigned to the umbrella policy, serving as a human-readable identifier that is often used in documentation and communications."
    AuditPayPlan:
      description: "Defines the payment plan for a policy as adjusted following an audit, which may result in changes to payment schedules or methods based on the audited information."
      type: object
      properties:
        auditPayPlanCd:
          type: string
          description: "A code representing the specific payment plan determined as a result of the audit, which may differ from the initial payment plan based on actual policy performance or other factors."
        electronicPaymentSource:
          $ref: '#/components/schemas/ElectronicPaymentSource'
          description: "Details the electronic payment source to be used for payments under this audited pay plan, specifying account information and preferences."
        id:
          type: string
          description: "A unique identifier for the audit pay plan record, ensuring the ability to reference and apply the specific plan adjustments post-audit."
        payPlanTemplateIdRef:
          type: string
          description: "References the template from which the audited payment plan was derived, indicating the base plan prior to any adjustments."
        paymentDay:
          type: string
          description: "Indicates the adjusted day of the month for payment due dates under the audited payment plan, which may have been modified from the original schedule."
    TransactionDetails:
      description: "Defines the details of a transaction within the system."
      type: object
      properties:
        applicationRef:
          type: string
          description: "Reference to the application."
        bookDt:
          type: string
          format: date
          description: "Date when the transaction was booked."
        cancelOfTransactionNumber:
          type: integer
          description: "Transaction number associated with the cancellation."
        cancelRequestedByCd:
          type: string
          description: "Code indicating who requested the cancellation."
        cancelTypeCd:
          type: string
          description: "Code indicating the type of cancellation."
        cancelledByTransactionNumber:
          type: integer
          description: "Transaction number associated with the cancellation."
        chargeReinstatementFeeInd:
          type: boolean
          description: "Indicates whether a reinstatement fee was charged."
        checkNumber:
          type: string
          description: "Number associated with the check."
        conversionGroup:
          type: string
          description: "Group associated with conversion."
        conversionJobRef:
          type: string
          description: "Reference to the conversion job."
        conversionTemplateIdRef:
          type: string
          description: "Reference to the conversion template ID."
        correctedByTransactionNumber:
          type: integer
          description: "Transaction number associated with correction."
        correctionOfTransactionNumber:
          type: integer
          description: "Transaction number associated with correction."
        delayInvoiceInd:
          type: boolean
          description: "Indicates whether invoice is delayed."
        holdType:
          type: string
          description: "Type of hold."
        id:
          type: string
          description: "Unique identifier for the transaction."
        inforceChangePremiumAmt:
          type: string
          description: "Amount of change in premium for in-force policy."
        inforcePremiumAmt:
          type: string
          description: "Amount of in-force premium."
        masterTransactionNumber:
          type: integer
          description: "Master transaction number."
        newPolicyEffectiveDt:
          type: string
          format: date
          description: "Effective date of the new policy."
        newPolicyExpirationDt:
          type: string
          format: date
          description: "Expiration date of the new policy."
        outputTypeCd:
          type: string
          description: "Code indicating the type of output."
        paymentAmt:
          type: string
          description: "Amount of payment."
        paymentTypeCd:
          type: string
          description: "Code indicating the type of payment."
        reinstatedByTransactionNumber:
          type: integer
          description: "Transaction number associated with reinstatement."
        reinstatementOfTransactionNumber:
          type: integer
          description: "Transaction number associated with reinstatement."
        releaseHoldReason:
          type: string
          description: "Reason for releasing hold."
        renewalApplyOfTransactionNumber:
          type: integer
          description: "Transaction number associated with renewal application."
        renewalProviderRef:
          type: string
          description: "Reference to renewal provider."
        renewalSubProducerCd:
          type: string
          description: "Code indicating the sub-producer of renewal."
        replacedByTransactionNumber:
          type: integer
          description: "Transaction number associated with replacement."
        replacementOfTransactionNumber:
          type: integer
          description: "Transaction number associated with replacement."
        rewriteToProductVersion:
          type: string
          description: "Version of the product for rewrite."
        sourceCd:
          type: string
          description: "Code indicating the source of transaction."
        submissionNumber:
          type: integer
          description: "Submission number."
        transactionCd:
          type: string
          description: "Code indicating the type of transaction."
        transactionCloseReasons:
          $ref: '#/components/schemas/TransactionCloseReasons'
          description: "Reasons for transaction closure."
        transactionDt:
          type: string
          format: date
          description: "Date of the transaction."
        transactionEffectiveDt:
          type: string
          format: date
          description: "Effective date of the transaction."
        transactionEffectiveTm:
          type: string
          description: "Time when the transaction became effective."
        transactionLongDescription:
          type: string
          description: "Long description of the transaction."
        transactionNumber:
          type: integer
          description: "Transaction number."
        transactionReasons:
          type: array
          items:
            $ref: '#/components/schemas/TransactionReason'
          description: "Reasons associated with the transaction."
        transactionShortDescription:
          type: string
          description: "Short description of the transaction."
        transactionText:
          type: array
          items:
            $ref: '#/components/schemas/TransactionText'
          description: "Text associated with the transaction."
        transactionTm:
          type: string
          description: "Time of the transaction."
        transactionUser:
          type: string
          description: "User associated with the transaction."
        unAppliedByTransactionNumber:
          type: integer
          description: "Transaction number associated with un-application."
        unApplyOfTransactionNumber:
          type: integer
          description: "Transaction number associated with un-application."
        unapplySource:
          type: string
          description: "Source of un-application."
        wcReinstatementCd:
          type: string
          description: "Code indicating the reinstatement of workers compensation."
        wcTotalNetLocationsManualPremiumAmt:
          type: string
          description: "Total net locations manual premium amount for workers compensation."
        wcWaiveCancellationAuditInd:
          type: boolean
          description: "Indicates whether cancellation audit for workers compensation is waived."
        writtenChangePremiumAmt:
          type: string
          description: "Amount of change in premium for written policy."
        writtenFeeAmt:
          type: string
          description: "Fee amount for written policy."
        writtenPremiumAmt:
          type: string
          description: "Premium amount for written policy."
    TransactionCloseReasons:
      description: "Reasons for the closure of a transaction."
      type: object
      properties:
        closeComment:
          type: string
          description: "Comment associated with transaction closure."
        closeReasonCd:
          type: string
          description: "Code indicating the reason for transaction closure."
        closeSubReasonCd:
          type: string
          description: "Code indicating the sub-reason for transaction closure."
        closeSubReasonLabel:
          type: string
          description: "Label associated with the sub-reason for transaction closure."
        id:
          type: string
          description: "Unique identifier for the transaction close reasons."
    TransactionReason:
      description: "Reason associated with a transaction."
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the transaction reason."
        reasonCd:
          type: string
          description: "Code indicating the reason for the transaction."
    TransactionText:
      description: "Defines the structure for transaction text within the system, including its ID, textual content, associated code, and transaction text type."
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the transaction text."
        text:
          type: string
          description: "Text associated with the transaction."
        textCd:
          type: string
          description: "Code associated with the text."
        transactionTextTypeCd:
          type: string
          description: "Code indicating the type of transaction text."
    ElectronicPaymentSource:
      description: "Defines the details of an electronic payment source, such as bank account or credit card information, used for processing payments within the system. It includes both ACH (Automated Clearing House) and credit card payment methods."
      type: object
      properties:
        achBankAccountNumber:
          type: string
          description: "The bank account number for ACH payments, essential for direct bank transfers."
        achBankAccountTypeCd:
          type: string
          description: "A code identifying the type of bank account (e.g., checking, savings) used for ACH payments."
        achBankName:
          type: string
          description: "The name of the bank where the ACH account is held, providing necessary details for payment processing."
        achExceptionMsg:
          type: string
          description: "Message detailing any exceptions or issues encountered during the ACH payment process, useful for troubleshooting and record-keeping."
        achName:
          type: string
          description: "The name associated with the ACH account, typically the account holder's name as it appears on bank records."
        achRoutingNumber:
          type: string
          description: "The routing number for the bank account, a critical component for directing ACH payments to the correct financial institution."
        achStandardEntryClassCd:
          type: string
          description: "A code that categorizes the type of ACH transaction, conforming to standard entry class specifications for payment processing."
        agentTrustInd:
          type: boolean
          description: "Indicates whether the payment source is an agent's trust account, differentiating it from customer-owned accounts."
        carrierCd:
          type: string
          description: "Carrier code associated with the payment, identifying the insurance carrier in cases of payments facilitated by or through carriers."
        creditCardNumber:
          type: string
          description: "The number of the credit card used for payments, sensitive data that must be handled according to PCI compliance standards."
        creditCardTypeCd:
          type: string
          description: "A code indicating the type of credit card (e.g., Visa, MasterCard) used for the payment."
        customerPaymentProfileId:
          type: string
          description: "An identifier for the customer's payment profile, allowing for the reuse of stored payment information in a secure manner."
        customerProfileId:
          type: string
          description: "An identifier linking the electronic payment source to a customer profile, facilitating comprehensive customer payment management."
        eraseInfo:
          $ref: '#/components/schemas/EraseInfo'
          description: "Contains details regarding the policies and procedures for erasing this payment source information, ensuring compliance with data protection laws."
        id:
          type: string
          description: "A unique identifier for the electronic payment source record within the system."
        methodCd:
          type: string
          description: "A code that specifies the payment method (e.g., ACH, credit card), important for directing the payment process accordingly."
        midasId:
          type: string
          description: "An identifier used in MIDAS (Money Inflow/Disbursement Administration System) or similar systems for tracking financial transactions."
        partyInfo:
          $ref: '#/components/schemas/PartyInfo'
          description: "Detailed information about the party responsible for the payment, including contact and identification data."
        paymentServiceAccountId:
          type: string
          description: "An account identifier used by the payment service provider, linking the payment transaction to external payment processing systems."
        reminderDt:
          type: string
          format: date
          description: "A date indicating when a payment reminder should be sent, aiding in timely payment collection and customer notification."
        sourceName:
          type: string
          description: "The name of the payment source, providing a human-readable identifier for the payment method or account."
        sourceTypeCd:
          type: string
          description: "A code identifying the category of payment source (e.g., internal, external, third-party), useful for payment routing and management."
        statusCd:
          type: string
          description: "A code indicating the current status of the payment source, such as active, inactive, or under review, guiding its availability for use."
        action:
          type: string
          description: "Placeholder for any action related to the payment source, such as update or deletion."
        creditCardAuthorizationCd:
          type: string
          description: "Code indicating the status of credit card authorization, such as approved or declined."
        creditCardAuthorizationMessage:
          type: string
          description: "Message providing additional details regarding credit card authorization status or any associated messages."
        creditCardExpirationMonth:
          type: string
          description: "The expiration month of the credit card."
        creditCardExpirationYr:
          type: string
          description: "The expiration year of the credit card."
        creditCardHolderName:
          type: string
          description: "The name of the credit card holder as it appears on the card."
        creditCardSecurityCd:
          type: string
          description: "The security code associated with the credit card, typically found on the back of the card."
    Contact:
      description: "Details a contact entity, capturing essential identification, type, and communication preferences, facilitating targeted and effective interactions."
      type: object
      properties:
        contactTypeCd:
          type: string
          description: "A code that categorizes the contact by their relationship or role, such as 'Agent', 'Insured', or 'Claimant', aiding in context-specific communication and processes."
        id:
          type: string
          description: "A unique identifier for the contact within the system, enabling precise reference and management."
        partyInfo:
          $ref: '#/components/schemas/PartyInfo'
          description: "Comprehensive demographic and identification information for the contact, linking to a structured record of their personal or organizational details."
        preferredDeliveryMethod:
          type: string
          description: "Specifies the contact's preferred method for receiving communications, such as 'Email', 'Paper Mail', or 'SMS', ensuring compliance with their preferences."
        status:
          type: string
          description: "Indicates the current status of the contact within the system, such as 'Active' or 'Inactive', reflecting their availability for communication and transactions."
    Insured:
      description: "Represents an insured entity or individual within the system, encompassing both basic identification and specific insurance-related information."
      type: object
      properties:
        entityTypeCd:
          type: string
          description: "A code that identifies the nature of the insured entity, such as 'Individual', 'Corporation', or 'Partnership', reflecting the structure and legal status of the insured."
        id:
          type: string
          description: "A unique identifier assigned to the insured within the system, facilitating tracking, policy association, and risk assessment."
        indexName:
          type: string
          description: "A standardized name used for indexing and search purposes, often formatted to meet specific regulatory or operational requirements."
        partyInfo:
          type: array
          description: "A list of PartyInfo objects associated with the insured, detailing multiple roles, relationships, or contact points as needed."
          items:
            $ref: '#/components/schemas/PartyInfo'
        preferredDeliveryMethod:
          type: string
          description: "The preferred method of communication or document delivery for the insured, aligning with their convenience and regulatory preferences."
        ratingBureauID:
          type: string
          description: "An identifier used by rating bureaus to classify or rate the insured, relevant in jurisdictions or lines of business where bureau ratings are applicable."
        selfInsured:
          type: boolean
          description: "Indicates whether the insured operates under a self-insurance model, relevant for certain types of coverage and risk management strategies."
        temporaryAddressOverrideInd:
          type: boolean
          description: "A flag that indicates a temporary override of the insured's standard address, useful for short-term billing or communication needs."
        wcNAICS:
          type: string
          description: "The North American Industry Classification System (NAICS) code applicable to the insured's business, used for statistical and risk assessment purposes."
        wcNCCIRiskIdNumber:
          type: string
          description: "A risk identification number assigned by the National Council on Compensation Insurance (NCCI), relevant for workers' compensation insurance."
        wcSIC:
          type: string
          description: "The Standard Industrial Classification (SIC) code for the insured's business, providing an industry-based risk indicator."
        websiteAddress:
          type: string
          description: "The official website address for the insured or their business, offering an additional contact point and information source."
        yearsInBusiness:
          type: integer
          description: "The total number of years the insured has been in operation, reflecting business stability and experience for underwriting and risk assessment."
    SubmitterIssue:
      description: "Encapsulates issues identified by the submitter during the insurance application or quote submission process, including categorization and descriptive messaging."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the submitter issue, facilitating tracking and resolution efforts within the system."
        msg:
          type: string
          description: "A descriptive message detailing the nature of the issue, providing insight into potential concerns or required actions."
        subTypeCd:
          type: string
          description: "A code further specifying the subtype of the issue, offering additional granularity beyond the primary type for more precise categorization."
        typeCd:
          type: string
          description: "The primary classification code for the issue, indicating its general category and aiding in prioritization and resolution strategies."
    TransactionInfo:
      description: "Captures detailed information related to a specific transaction within the policy lifecycle, including cancellations, corrections, payments, and policy term adjustments, among others."
      type: object
      properties:
        cancelOfTransactionNumber:
          type: integer
          description: "Transaction number of a previous transaction that this transaction cancels or nullifies."
        cancelRequestedByCd:
          type: string
          description: "Code identifying who requested the cancellation, providing insight into the source of the transaction."
        cancelTypeCd:
          type: string
          description: "Code categorizing the type of cancellation, aiding in the processing and reporting of cancellations."
        cancelledByTransactionNumber:
          type: integer
          description: "Transaction number of a subsequent transaction that cancels this one, indicating a linkage between transactions within the policy history."
        chargeReinstatementFeeInd:
          type: boolean
          description: "Indicator of whether a reinstatement fee is charged for this transaction, typically associated with policy reinstatements."
        checkNumber:
          type: string
          description: "The number of the check used for payment in this transaction, applicable for transactions involving check payments."
        correctedByTransactionNumber:
          type: integer
          description: "Transaction number of a subsequent transaction that corrects this one, facilitating tracking of corrections through transaction chains."
        correctionOfTransactionNumber:
          type: integer
          description: "Transaction number of a previous transaction that this one corrects, establishing a correction relationship within the transaction history."
        delayInvoiceInd:
          type: boolean
          description: "Indicator that the generation of an invoice for this transaction should be delayed, according to specific processing rules or conditions."
        electronicPaymentSource:
          $ref: '#/components/schemas/ElectronicPaymentSource'
          description: "Details the electronic payment source used for this transaction, providing information on the payment method and account."
        holdType:
          type: string
          description: "Specifies the type of hold placed on a transaction, impacting how the transaction is processed and when it becomes effective."
        id:
          type: string
          description: "A unique identifier for the transaction information record, ensuring distinct management and tracking within the system."
        newPolicyEffectiveDt:
          type: string
          format: date
          description: "The effective date of the policy resulting from this transaction, marking the start of the new or adjusted policy term."
        newPolicyExpirationDt:
          type: string
          format: date
          description: "The expiration date of the policy resulting from this transaction, indicating the end of the current policy term."
        outputTypeCd:
          type: string
          description: "Code that identifies the type of output or document generation triggered by this transaction, such as policy declarations or billing statements."
        paymentAmt:
          type: string
          description: "The amount of payment made or processed in this transaction, relevant for transactions involving financial exchanges."
        paymentTypeCd:
          type: string
          description: "Code that classifies the type of payment made, such as premium payment, reinstatement fee, or other transaction-related payment."
        reapplyOutputSuppressions:
          type: array
          description: "A list of output suppression settings to be reapplied as a result of this transaction, affecting document generation and communication preferences."
          items:
            $ref: '#/components/schemas/ReapplyOutputSuppression'
        reinstatedByTransactionNumber:
          type: integer
          description: "Transaction number of a subsequent transaction that reinstates this one, linking transactions within the context of policy reinstatements."
        reinstatementOfTransactionNumber:
          type: integer
          description: "Transaction number of a previous transaction that this one reinstates, creating a connection within the reinstatement process."
        releaseHoldReason:
          type: string
          description: "The reason provided for releasing any holds associated with this transaction, facilitating administrative processing and documentation."
        renewalApplyOfTransactionNumber:
          type: integer
          description: "Transaction number of a renewal application associated with this transaction, indicating continuity in the policy lifecycle."
        renewalProviderRef:
          type: string
          description: "Reference identifier for the renewal provider or system associated with this transaction, linking to external systems managing renewals."
        renewalSubProducerCd:
          type: string
          description: "Code identifying the sub-producer or agent responsible for the renewal, part of the distribution and sales tracking."
        rewriteToProductVersion:
          type: string
          description: "Specifies the product version to which the policy is being rewritten as a result of this transaction, indicating product updates or changes."
        sourceCd:
          type: string
          description: "Code that identifies the source of the transaction, such as an online portal, agent submission, or system-generated adjustment."
        transactionCd:
          type: string
          description: "A code categorizing the transaction type, facilitating processing, reporting, and historical tracking of policy transactions."
        transactionEffectiveDt:
          type: string
          format: date
          description: "The effective date of the transaction, indicating when the changes or actions associated with the transaction take effect."
        transactionEffectiveTm:
          type: string
          description: "The precise time at which the transaction becomes effective, providing additional specificity beyond the effective date."
        transactionLongDescription:
          type: string
          description: "A detailed description of the transaction, offering insights into its purpose, scope, and impact on the policy or customer."
        transactionNumber:
          type: integer
          description: "A system-assigned sequential number for the transaction, serving as a unique identifier within the policy's transaction history."
        transactionShortDescription:
          type: string
          description: "A brief summary of the transaction, useful for quick reference and overview in listings or summaries."
        wcReinstatementCd:
          type: string
          description: "For workers' compensation policies, a code that indicates the conditions or reasons for reinstatement following cancellation or lapse."
        wcTotalNetLocationsManualPremiumAmt:
          type: string
          description: "In workers' compensation policies, the total premium amount for manually rated locations, reflecting specific risk assessments."
        wcWaiveCancellationAuditInd:
          type: boolean
          description: "Indicates whether the audit requirement at cancellation has been waived for a workers' compensation policy, affecting end-of-term processing."
    ReapplyOutputSuppression:
      description: "Specifies settings for reapplying output suppression rules to a transaction, indicating whether certain communications or document outputs should be included or suppressed based on specific criteria."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the output suppression rule, enabling tracking and management of suppression settings."
        includeInd:
          type: boolean
          description: "Indicates whether the suppression rule should be included in the current transaction, determining if related outputs are generated."
    WCAdditionalInsured:
      description: "Details an additional insured entity or individual on a workers' compensation policy, providing key identification and insurance-related information."
      type: object
      properties:
        entityTypeCd:
          type: string
          example: "Additional Named Insured"
          description: "A code indicating the type of entity the additional insured represents, such as 'Additional Named Insured', categorizing their role within the policy context."
        id:
          type: string
          description: "A unique identifier for the additional insured record, facilitating distinct management and reference within the system."
        indexName:
          type: string
          description: "A standardized name used for indexing and searching purposes, often formatted to meet specific operational or regulatory requirements."
        insuranceScore:
          type: array
          description: "An array of InsuranceScore objects that provide scoring or rating information related to the additional insured, used in underwriting and risk assessment."
          items:
            $ref: '#/components/schemas/InsuranceScore'
        insuredNumber:
          type: integer
          description: "A numerical identifier assigned to the additional insured, useful for tracking and differentiation from other insured entities on the policy."
        linkReference:
          type: array
          description: "A collection of references linking the additional insured to related records or external entities, enhancing data connectivity and context."
          items:
            $ref: '#/components/schemas/LinkReference'
        partyInfo:
          $ref: '#/components/schemas/PartyInfo'
          description: "Comprehensive demographic and identification information for the additional insured, providing a full profile of the entity or individual."
        preferredDeliveryMethod:
          type: string
          description: "Indicates the preferred method for delivering communications or documents to the additional insured, aligning with their convenience and regulatory preferences."
        status:
          type: string
          description: "The current status of the additional insured within the policy, such as 'Active' or 'Inactive', reflecting their involvement and coverage status."
    InsuranceScore:
      description: "Provides details about an insurance score, including the score itself, reasons for the score, and related metadata, which is used in the underwriting and risk assessment processes."
      type: object
      properties:
        id:
          type: string
          description: "A unique identifier for the insurance score record, facilitating tracking and management within the system."
        insuranceScore:
          type: string
          description: "The insurance score, typically a numerical value or rating, derived from various factors and used to assess the risk associated with an insured or applicant."
        insuranceScoreReasons:
          type: array
          description: "A list of reasons contributing to the insurance score, providing insight into factors influencing the score."
          items:
            $ref: '#/components/schemas/InsuranceScoreReason'
        insuranceScoreTypeCd:
          type: string
          description: "A code categorizing the type of insurance score, such as credit-based or claims history, indicating the basis for the scoring."
        overriddenInsuranceScore:
          type: string
          description: "If applicable, the insurance score that overrides the original score, typically resulting from manual review or additional information."
        sourceCd:
          type: string
          description: "A code indicating the source of the insurance score, such as an external credit bureau or an internal scoring system."
        sourceIdRef:
          type: string
          description: "A reference to the specific source record or identifier for the insurance score, linking to detailed source information."
        statusCd:
          type: string
          description: "The current status of the insurance score, such as 'Active' or 'Reviewed', indicating its state within the underwriting process."
    InsuranceScoreReason:
      description: "Describes a specific reason contributing to an insurance score, offering explanations for adjustments or factors affecting the score."
      type: object
      properties:
        description:
          type: string
          description: "A textual description of the reason, explaining its impact or relevance to the insurance score."
        id:
          type: string
          description: "A unique identifier for the insurance score reason, enabling distinct management and reference."
        reasonCd:
          type: string
          description: "A code representing the specific reason affecting the insurance score, used for categorization and analysis."
    PartyInfo:
      description: "Encapsulates comprehensive information about a party involved in the insurance process, including personal, business, and contact details, facilitating holistic management and communication."
      type: object
      properties:
        addresses:
          description: "A list of addresses associated with the party, detailing physical locations for billing, correspondence, or property coverage."
          type: array
          items:
            $ref: '#/components/schemas/Address'
        businessInfo:
          $ref: '#/components/schemas/BusinessInfo'
          description: "Details about the party's business operations, applicable for commercial clients or insureds, including business type and financial information."
        driverInfo:
          $ref: '#/components/schemas/DriverInfo'
          description: "Driving-related information for the party, relevant for policies involving vehicle coverage or where driving history affects eligibility or rates."
        eSignatureInfo:
          $ref: '#/components/schemas/ESignatureInfo'
          description: "Information related to electronic signatures, facilitating document signing and verification processes in a digital context."
        emailInfo:
          $ref: '#/components/schemas/EmailInfo'
          description: "Email contact information for the party, supporting electronic communication preferences and correspondence."
        eraseInfo:
          $ref: '#/components/schemas/EraseInfo'
          description: "Details regarding data erasure requests or actions for the party's information, addressing privacy and regulatory compliance."
        id:
          type: string
          description: "A unique identifier for the party record within the system, ensuring accurate reference and integration across processes."
        locationIdRef:
          type: string
          description: "Reference to a specific location associated with the party, often used for underwriting or claims purposes."
        nameInfo:
          $ref: '#/components/schemas/NameInfo'
          description: "Name information for the party, encompassing formal, commercial, or alternative names used in various contexts."
        partyTypeCd:
          type: string
          description: "A code indicating the type of party (e.g., individual, corporation), aiding in classification and process differentiation."
        personInfo:
          $ref: '#/components/schemas/PersonInfo'
          description: "Personal demographics and identification details for the party, applicable to individual clients or contacts."
        phoneInfo:
          description: "A collection of phone numbers for the party, covering different types, purposes, and preferences."
          type: array
          items:
            $ref: '#/components/schemas/PhoneInfo'
        questionReplies:
          $ref: '#/components/schemas/QuestionReplies'
          description: "Responses to questions posed to the party, relevant for underwriting, claims, or service inquiries."
        status:
          type: string
          description: "The current status of the party within the system, reflecting activity, eligibility, or compliance states."
        taxInfo:
          $ref: '#/components/schemas/TaxInfo'
          description: "Tax-related information for the party, including identification numbers and status, crucial for financial transactions and reporting."
        underLyingPartyInfoIdRef:
          type: string
          description: "A reference to underlying party information, linking related records or entities within the system."
        underLyingPolicyIdRef:
          type: string
          description: "A reference to an underlying policy associated with the party, establishing connections for coverage, claims, or account management."
        yearsOfService:
          type: integer
          description: "The number of years the party has been associated with services or policies within the system, indicating tenure or loyalty."
    BusinessInfo:
      description: "Details the business-related aspects of a party, including financial, operational, and classification information, tailored for commercial insurance contexts."
      type: object
      properties:
        annualPayrollAmt:
          type: string
          description: "The total amount of payroll paid annually by the business, a factor in workers' compensation and liability coverages."
        annualSalesAmt:
          type: string
          description: "The total annual sales or revenue generated by the business, influencing coverage needs and premium calculations."
        businessInfoCd:
          type: string
          description: "A code categorizing the business information record for internal tracking and management."
        businessTypeCd:
          type: string
          description: "A code indicating the type of business, such as corporation, sole proprietorship, or partnership, relevant for underwriting and policy customization."
        id:
          type: string
          description: "A unique identifier for the business information record within the system, facilitating accurate reference and management."
        natureBusinessCd:
          type: string
          description: "A code describing the nature of the business, used for classification and risk assessment purposes."
        natureOfBusiness:
          type: string
          description: "A textual description of the business's primary operations, providing context for underwriting and coverage considerations."
        numberEmployees:
          type: string
          description: "The number of employees working for the business, impacting liability exposures and coverage requirements."
        yearsInBusiness:
          type: string
          description: "The total number of years the business has been operational, indicating stability and experience in its field."
    DriverInfo:
      description: "Captures comprehensive driving-related information for an individual, including licensing details, driving history, and eligibility for discounts based on driving courses and behavior."
      type: object
      properties:
        accidentPreventionCourseCompletionDt:
          type: string
          format: date
          description: "The date the driver completed an accredited accident prevention course, potentially qualifying for insurance discounts."
        accidentPreventionCourseInd:
          type: boolean
          description: "Indicates whether the driver has successfully completed an accident prevention course."
        assignedVehicle:
          type: integer
          description: "The number of vehicles officially assigned to the driver within the policy, indicating responsibility and primary usage."
        attachedVehicleRef:
          type: string
          description: "Reference identifier for the vehicle(s) associated with the driver, linking driver information to specific vehicles covered under the policy."
        dateofHire:
          type: string
          format: date
          description: "The date the driver was hired for employment, applicable when driving is a part of professional duties."
        defensiveDriverEffectiveDt:
          type: string
          format: date
          description: "The start date from which defensive driving course benefits apply, reflecting eligibility for associated discounts."
        defensiveDriverExpirationDt:
          type: string
          format: date
          description: "The expiration date for defensive driving course benefits, after which renewal may be required to maintain discounts."
        defensiveDriverInd:
          type: boolean
          description: "Indicates whether the driver has completed a defensive driving course, affecting insurance premiums and coverage options."
        driverInfoCd:
          type: string
          description: "A code categorizing the type of driver information record, useful for system processing and classification."
        driverPoints:
          type: array
          description: "A list of points accrued by the driver for traffic violations or other infractions, impacting risk assessment and premium calculation."
          items:
            $ref: '#/components/schemas/DriverPoint'
        driverStartDt:
          type: string
          format: date
          description: "The date the driver began driving, relevant for calculating driving experience and insurance eligibility."
        driverStatusCd:
          type: string
          description: "A code indicating the current status of the driver, such as active or suspended, which may influence policy terms and pricing."
        driverTrainingCompletionDt:
          type: string
          format: date
          description: "The date on which the driver completed a formal driver training program, potentially affecting policy discounts."
        driverTrainingInd:
          type: boolean
          description: "Indicates completion of a formal driver training program, qualifying the driver for potential insurance benefits."
        driverTypeCd:
          type: string
          description: "Categorizes the driver by type, such as 'Primary' or 'Occasional', affecting policy coverage and premiums."
        excludeDriverInd:
          type: string
          description: "Specifies whether the driver is excluded from certain coverages within the policy, based on risk assessments or other factors."
        goodDriverDiscountInd:
          type: boolean
          description: "Indicates eligibility for a good driver discount, based on a history of safe driving practices."
        goodDriverInd:
          type: boolean
          description: "Affirms the driver's qualification as a good driver, impacting insurance rates and coverage eligibility."
        id:
          type: string
          description: "A unique identifier for the driver information record, ensuring distinct management within the insurance system."
        lengthTimeDriving:
          type: integer
          description: "The total number of years the individual has been driving, crucial for evaluating driving experience and risk."
        licenseDt:
          type: string
          format: date
          description: "The date on which the driver's license was issued, foundational for legal driving status and insurance underwriting."
        licenseNumber:
          type: string
          description: "The official number associated with the driver's license, essential for identification and record-keeping."
        licenseStatus:
          type: string
          description: "The current status of the driver's license, such as valid, suspended, or expired, directly affecting insurance eligibility."
        licensedStateProvCd:
          type: string
          description: "The code for the state or province that issued the driver's license, indicating jurisdiction and legal authority."
        matureDriverInd:
          type: boolean
          description: "Indicates recognition of the driver as a mature driver, possibly affecting insurance premiums and coverage options."
        mvrRequestInd:
          type: boolean
          description: "Indicates that a Motor Vehicle Report (MVR) has been requested for the driver, a key component in risk assessment and policy pricing."
        mvrStatus:
          type: string
          description: "The status of the driver's MVR, providing insights into driving history, violations, and overall risk profile."
        mvrStatusDt:
          type: string
          format: date
          description: "The date of the last update to the driver's MVR status, important for maintaining current and accurate risk assessments."
        permanentLicenseInd:
          type: boolean
          description: "Specifies whether the driver holds a permanent driving license, as opposed to a provisional or temporary license."
        relationshipToInsuredCd:
          type: string
          description: "Describes the driver's relationship to the insured entity or individual, such as family member or employee, impacting coverage details."
        requiredProofOfInsuranceInd:
          type: boolean
          description: "Indicates whether the driver is required to provide proof of insurance, typically for legal or regulatory compliance."
        scholasticCertificationDt:
          type: string
          format: date
          description: "The date the driver qualified for a discount based on scholastic achievements, relevant for young or student drivers."
        scholasticDiscountInd:
          type: boolean
          description: "Indicates eligibility for a discount based on scholastic performance, encouraging responsible behavior among student drivers."
        statusComments:
          type: string
          description: "Comments related to the driver's status, providing additional context or explanations for status assignments or changes."
        yearLicensed:
          type: string
          description: "The year in which the driver was first licensed, offering a measure of driving experience and proficiency."
        yearsExperience:
          type: integer
          description: "The total number of years the driver has held a license, serving as an indicator of experience and driving history."
    ESignatureInfo:
      description: "Contains information related to electronic signatures, including the type of signature, recipient category, and signing methodology, facilitating digital document execution and verification."
      type: object
      properties:
        eSignatureTypeCd:
          type: string
          description: "A code that identifies the type of electronic signature process or technology used, such as digital signatures or clickwrap agreements."
        id:
          type: string
          description: "A unique identifier for the electronic signature information record, enabling distinct management and tracking within the system."
        recipientCd:
          type: string
          description: "A code categorizing the recipient of the document requiring an electronic signature, such as 'Insured', 'Agent', or 'Third Party'."
        signingType:
          type: string
          description: "Describes the method by which the electronic signature is captured or verified, providing details on the procedural aspects of the signing process."
    TaxInfo:
      description: "Encapsulates tax identification information for an individual or entity, including tax ID numbers, legal entity classification, and documentation status, essential for compliance and financial reporting."
      type: object
      properties:
        fein:
          type: string
          description: "The Federal Employer Identification Number (FEIN) for the entity, used in tax filings and other legal documents as a unique identifier."
        id:
          type: string
          description: "A unique identifier for the tax information record, facilitating accurate tracking and association with parties or accounts."
        legalEntityCd:
          type: string
          description: "A code indicating the legal entity type, such as corporation, partnership, or sole proprietor, relevant for tax classification and compliance."
        received1099Ind:
          type: boolean
          description: "Indicates whether the party has received a Form 1099, used for reporting income from sources other than wages, salaries, and tips."
        receivedW9Ind:
          type: boolean
          description: "Indicates whether a Form W-9 has been received from the party, used to request the taxpayer identification number and certification."
        required1099Ind:
          type: boolean
          description: "Specifies if the issuance of a Form 1099 is required for the party, based on the nature of payments or income received."
        ssn:
          type: string
          description: "The Social Security Number (SSN) for individuals, serving as a primary identification number for tax and other legal purposes."
        taxIdTypeCd:
          type: string
          description: "A code that specifies the type of tax identification number provided, such as SSN or FEIN, indicating the format and nature of the ID."
        taxTypeCd:
          type: string
          description: "A code describing the tax classification of the party, such as 'Individual', 'Corporation', or 'Partnership', impacting tax treatment and obligations."
        withholdingExemptInd:
          type: boolean
          description: "Indicates whether the party is exempt from tax withholding, relevant for processing payments and tax reporting."
    WCCoveredState:
      description: "Details specific workers' compensation coverage options and conditions for a given state, including discounts, deductibles, experience modifications, and other factors influencing the policy's terms and premium calculations."
      type: object
      properties:
        aRDRuleEnabled:
          type: boolean
          description: "Indicates whether the Alternate Risk Distribution (ARD) rule is enabled for this state, affecting risk assessment and premium distribution."
        alcoholDrugFreeCreditInd:
          type: boolean
          description: "Indicates eligibility for a credit based on participation in alcohol and drug-free workplace programs."
        certifiedSafetyHealthProgPct:
          type: string
          description: "The percentage credit applied for participation in certified safety and health programs, encouraging workplace safety initiatives."
        coinsuranceInd:
          type: boolean
          description: "Indicates the presence of a coinsurance arrangement for the covered state, impacting the distribution of risk between insurer and insured."
        contrClassPremAdjCreditPct:
          type: string
          description: "The percentage credit applied based on adjustments to the contractor classification premium, reflecting specific risk profiles and experience."
        deductibleAmt:
          type: string
          description: "The amount of deductible applied to the policy for the covered state, influencing out-of-pocket costs before insurance coverage begins."
        deductibleType:
          type: string
          description: "Specifies the type of deductible, such as 'per claim' or 'aggregate', defining how the deductible applies within the policy terms."
        eLVoluntaryCompensationInd:
          type: boolean
          description: "Indicates whether Employers' Liability Voluntary Compensation is included, extending coverage beyond statutory workers' compensation requirements."
        experienceModificationFactor:
          type: string
          description: "A factor reflecting the insured's historical claims experience relative to the industry average, affecting premium calculations."
        experienceModificationStatus:
          type: string
          description: "Status of the experience modification, such as 'applied' or 'pending', indicating the current application of the experience factor."
        experienceRatingCd:
          type: string
          description: "A code representing the insured's experience rating, categorizing the risk level based on past claims history."
        gLScheduledPremiumMod:
          type: string
          description: "Scheduled premium modification for General Liability, affecting the overall premium calculation based on specific risk adjustments."
        id:
          type: string
          description: "A unique identifier for the workers' compensation coverage record within the specified state."
        index:
          type: integer
          description: "A numerical index used for ordering or categorization within the system, facilitating data organization and retrieval."
        largeDeductibleFactor:
          type: string
          description: "A factor applied in cases of large deductibles, influencing the premium calculation by accounting for the increased self-assumed risk."
        managedCareCreditInd:
          type: boolean
          description: "Indicates the application of a credit for participation in managed care programs, reflecting cost savings from efficient care management."
        noOfContractsForWaiverOfSubrogation:
          type: string
          description: "The number of contracts under which a waiver of subrogation applies, affecting the rights of the insurer to pursue recovery from third parties."
        noncomplianceChargeAmt:
          type: string
          description: "The amount charged for noncompliance with specified conditions or requirements, serving as a penalty or incentive for adherence to policy terms."
        numberOfClaims:
          type: string
          description: "The number of claims filed under the policy for the covered state, providing a measure of risk and loss history."
        order:
          type: integer
          description: "Specifies the order in which this state's coverage details are presented or processed, indicating sequencing within multi-state policies."
        packageFactorInd:
          type: boolean
          description: "Indicates whether package factors, combining multiple coverages or policies, are applied in premium calculations for the state."
        primaryInd:
          type: boolean
          description: "Designates the state as the primary state of coverage, relevant for policies covering multiple jurisdictions."
        productVersionIdRef:
          type: string
          description: "Reference to the product version associated with this coverage, linking state-specific terms to overall policy structure and offerings."
        ratingEffectiveDt:
          type: string
          format: date
          description: "The effective date of the rating and pricing structure applied to the covered state, marking the beginning of the applicable terms."
        ruleStatus:
          type: string
          description: "Indicates the status of regulatory or internal rules applied to the coverage, such as 'active', 'pending', or 'expired'."
        stateCd:
          type: string
          description: "The code representing the state for which the coverage details apply, identifying the jurisdiction covered by the policy terms."
        status:
          type: string
          description: "The current status of the coverage for the specified state, indicating active, inactive, or pending states of the coverage terms."
        totalDiscountedPremiumAmt:
          type: string
          description: "The total premium amount after applying discounts, reflecting cost adjustments based on risk management practices or other criteria."
        totalManualPremiumAmt:
          type: string
          description: "The total premium calculated based on manual rates before application of experience modifications or other adjustments."
        totalStandardPremiumAmt:
          type: string
          description: "The standard premium amount prior to any discounts or modifications, serving as a baseline for subsequent premium calculations."
        totalStateEstimatedPremium:
          type: string
          description: "An estimate of the total premium for the covered state, considering specific state rates, classifications, and coverage requirements."
        totalSubjectPremiumAmt:
          type: string
          description: "The portion of the premium subject to adjustments and modifications, based on covered payroll, classification rates, and experience factors."
        unemploymentNumber:
          type: string
          description: "The unemployment insurance number for the insured within the covered state, relevant for businesses and compliance reporting."
        waiverOfSubrogationFlatInd:
          type: boolean
          description: "Indicates whether a flat waiver of subrogation applies, limiting the insurer's right to recover from third parties causing loss."
        workStudyProgram:
          type: string
          description: "Details about any work-study programs affecting coverage or premium calculations, relevant for educational institutions or employers."
        workfareProgramWeeksNum:
          type: string
          description: "The number of weeks covered under a workfare program, applicable for policies including workfare participants."
    ListNote:
      description: "Encapsulates a response that includes a list of notes associated with a specific entity, such as a policy or claim, providing a structured overview of textual annotations or reminders."
      type: object
      properties:
        noteListItems:
          description: "An array of Note objects, each representing an individual note with details such as content, priority, and status."
          type: array
          items:
            $ref: '#/components/schemas/Note'
    Note:
      description: "Represents a detailed record of a note, capturing contextual comments, priority, and administrative metadata, aiding in communication and documentation processes."
      type: object
      properties:
        addDt:
          type: string
          description: "The date when the note was initially added to the system, providing a temporal context for the information."
        addTm:
          type: string
          description: "The precise time of day when the note was added, complementing the date for accurate chronological tracking."
        addUser:
          type: string
          description: "The identifier of the user who created the note, linking the note to its author for reference or follow-up."
        comments:
          type: string
          description: "Additional comments associated with the note, offering further clarification, instructions, or context."
        description:
          type: string
          description: "A brief description or summary of the note's content, providing an at-a-glance understanding of its purpose or subject matter."
        memo:
          type: string
          description: "A detailed memorandum contained within the note, elaborating on the topic, decision-making process, or action items."
        priorityCd:
          type: string
          description: "A code indicating the note's priority, such as 'High', 'Medium', or 'Low', affecting its visibility and urgency."
        ref:
          type: string
          description: "A reference identifier linking the note to related records or entities, enhancing data connectivity and retrieval."
        status:
          type: string
          description: "The current status of the note, such as 'Active', 'Completed', or 'Cancelled', reflecting its relevance and actionability."
        stickyInd:
          type: boolean
          description: "A boolean indicator specifying whether the note is marked as 'sticky' or particularly important, ensuring prominence in listings or displays."
        templateId:
          type: string
          description: "An identifier for a note template that was used as a basis for this note, standardizing the format and content for specific types of annotations."
    NoteDetail:
      description: "Provides an in-depth view of a note, including its content, priority, and associated metadata, facilitating detailed documentation and tracking within the system."
      type: object
      properties:
        description:
          type: string
          description: "A brief overview or summary of the note's content, providing insight into its purpose and significance."
        eraseInfo:
          $ref: '#/components/schemas/EraseInfo'
          description: "Information related to the erasure of the note, addressing data privacy and compliance requirements."
        id:
          type: string
          description: "A unique identifier assigned to the note, enabling distinct tracking and retrieval within the system."
        linkReferences:
          type: array
          description: "A collection of references linking the note to other related records or documents, enhancing contextual understanding and data integration."
          items:
            $ref: '#/components/schemas/LinkReference'
        memo:
          type: string
          description: "An extended memo or detailed commentary associated with the note, providing additional context, explanations, or action items."
        priorityCd:
          type: string
          description: "A code indicating the note's priority level, such as 'High', 'Medium', or 'Low', guiding attention and response urgency."
        purgeInfo:
          type: object
          description: "Details regarding the conditions and policies for purging the note from the system, ensuring data management compliance."
        showOnAllProducerContainersInd:
          type: boolean
          description: "Indicates whether the note should be visible across all producer containers, ensuring broad visibility when necessary."
        stickyInd:
          type: boolean
          description: "Specifies whether the note is marked as 'sticky' or important, warranting prominent display or special attention."
        tags:
          type: array
          description: "A set of tags categorizing or highlighting aspects of the note, facilitating organization and thematic grouping."
          items:
            $ref: '#/components/schemas/Tag'
        templateId:
          type: string
          description: "Identifier for the template used in creating the note, standardizing format and content for specific types of notes."
    DocumentDetail:
      description: "Outlines detailed information about a document, including its description, associated files, and metadata, supporting comprehensive document management and access."
      type: object
      properties:
        compositeFile:
          type: array
          description: "A collection of files that comprise the document, accommodating multi-part documents or attachments."
          items:
            $ref: '#/components/schemas/CompositeFile'
        description:
          type: string
          description: "A textual summary of the document's content or purpose, aiding in identification and categorization."
        eraseInfo:
          $ref: '#/components/schemas/EraseInfo'
          description: "Information pertaining to the erasure of the document, related to data retention policies and privacy regulations."
        filename:
          type: string
          description: "The name of the file as stored within the system, including extension, facilitating file identification and access."
        id:
          type: string
          description: "A unique identifier for the document, ensuring unambiguous reference across the system."
        linkReferences:
          type: array
          description: "Links connecting the document to related entities or records, promoting interconnectedness and contextual awareness."
          items:
            $ref: '#/components/schemas/LinkReference'
        memo:
          type: string
          description: "An accompanying memo providing further detail or context about the document, enhancing understanding or guiding action."
        purgeInfo:
          type: object
          description: "Details the criteria and processes for purging the document from the system, aligning with data governance practices."
        tags:
          type: array
          description: "Tags applied to the document for categorization, searchability, and thematic association."
          items:
            $ref: '#/components/schemas/Tag'
        templateId:
          type: string
          description: "The identifier of the template utilized for the document, indicating conformity to specific formats or standards."
    ListPolicy:
      description: "Provides a paginated structure for listing policies, facilitating the retrieval of policy information in a segmented manner. This schema supports operations that require the listing of multiple policies, including search results and batch processing views."
      type: object
      properties:
        continuationId:
          description: If more results are available, the ContinuationId should be the row index of the next row
          type: string
        policyListItems:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
          description: "An array of policy items, each containing detailed information about individual policies."
    Policy:
      description: "Represents a comprehensive view of an insurance policy, including customer details, policy specifics, associated contacts, and system references. It's designed to encapsulate all relevant information about a policy, facilitating easy access and management within the system."
      type: object
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: "Hypermedia links associated with the policy item, providing navigational URLs to related resources."
        customerInfo:
          $ref: '#/components/schemas/CustomerInfo'
          description: "Detailed information about the customer associated with the policy."
        policyMini:
          $ref: '#/components/schemas/PolicyMini'
          description: "A condensed version of the policy information, highlighting key details and references."
        productInfo:
          $ref: '#/components/schemas/ProductInfo'
          description: "General information about the product associated with the policy."
        ref:
          type: string
          description: "A general reference identifier for the policy item, usable for cross-referencing or linkage."
    PolicyMini:
      type: object
      description: "Provides a condensed overview of policy information, including key attributes and links for deeper exploration."
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: "A collection of hypermedia links to related resources, facilitating navigation and further actions."
        accountRef:
          type: string
          description: "Reference identifier to the account associated with this policy, linking to account-specific details."
        auditAccountRef:
          type: string
          description: "Reference to the audit account, if applicable, providing a connection to audit-related information and actions."
        basicPolicy:
          $ref: '#/components/schemas/BasicPolicy'
          description: "Summarized information about the policy's basic attributes, including coverage details and policy-specific flags."
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: "An array of contacts related to the policy, detailing individuals or entities associated in various capacities."
        customerRef:
          type: string
          description: "A reference to the customer associated with the policy, enabling linkage to detailed customer information."
        externalSystemInd:
          type: string
          description: "Indicator for the association of the policy with an external system, highlighting integrations or external dependencies."
        iVANSCheck:
          type: string
          description: "Result or status from an IVANS insurance verification process, reflecting verification outcomes."
        id:
          type: string
          description: "Unique identifier for the policy, facilitating identification and retrieval within the system."
        insured:
          $ref: '#/components/schemas/Insured'
          description: "Details regarding the insured party or entity under the policy, outlining coverage and risk information."
        statementAccountRef:
          type: string
          description: "Reference to the statement account related to the policy, used for financial transactions and billing."
        systemId:
          type: string
          description: "System identifier that manages or tracks the policy, indicating the source or platform of policy management."
        version:
          type: string
          description: "Version identifier for the policy information, denoting the format or structure level of the policy data."
        vipLevel:
          type: string
          description: "Indicates the VIP level of the policy or associated customer, used for service prioritization or benefits."
    PolicyDetails:
      description: "Encapsulates detailed information about an individual policy, including identification, related entities, and status indicators. This schema serves as a comprehensive model for policy information, integrating with both internal and external systems for full lifecycle management."
      type: object
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: "Hypermedia links associated with the policy item, providing navigational URLs to related resources."
        _revision:
          type: string
          description: "The revision identifier of the policy, used for tracking changes and ensuring data consistency."
        accountRef:
          type: string
          description: "A reference identifier linking the policy to a specific account in the system."
        auditAccountRef:
          type: string
          description: "Reference identifier for the account associated with any audits related to the policy."
        basicPolicy:
          $ref: '#/components/schemas/BasicPolicy'
          description: "A reference to the basic policy schema, encapsulating core policy details."
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: "A collection of contacts related to the policy, including individuals and entities with various roles."
        customerRef:
          type: string
          description: "A reference identifier for the customer associated with the policy."
        externalSystemInd:
          type: string
          description: "Indicator flag signifying if the policy is synchronized with an external system."
        iVANSCheck:
          type: string
          description: "Status of the IVANS check for the policy, indicating connectivity and data exchange success with the IVANS network."
        id:
          type: string
          description: "The unique identifier of the policy within the system."
        insured:
          $ref: '#/components/schemas/Insured'
          description: "A reference to the schema detailing the insured parties under the policy."
        statementAccountRef:
          type: string
          description: "Reference identifier for the account associated with billing statements for the policy."
        systemId:
          type: string
          description: "An identifier for the policy within the internal or external systems, facilitating cross-reference."
        updateCount:
          type: integer
          description: "A counter indicating the number of times the policy has been updated."
        updateTimestamp:
          type: string
          description: "The timestamp of the last update made to the policy, formatted in ISO 8601."
        updateUser:
          type: string
          description: "Identifier of the user who last updated the policy, used for audit trails and accountability."
        version:
          type: string
          description: "The version number of the policy, used for version control and history tracking."
        vipLevel:
          type: string
          description: "The VIP level assigned to the policy or policyholder, indicating priority or special handling requirements."
        wcAdditionalInsureds:
          description: "List of additional insured entities for workers' compensation policies, detailing parties other than the primary insured that receive coverage."
          type: array
          items:
            $ref: '#/components/schemas/WCAdditionalInsured'
        wcCoveredStates:
          description: "A list of states in which workers' compensation coverage is included within the policy as proposed by this quote, reflecting multi-state operations and compliance."
          type: array
          items:
            $ref: '#/components/schemas/WCCoveredState'
    Error:
      description: "Detailed information about an error."
      type: object
      properties:
        code:
          description: "The HTTP status code."
          type: integer
        message:
          description: "A brief description of the error."
          type: string
        stackTrace:
          description: "Information about the error stack trace."
          type: string
      required:
        - code
        - message
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BasicAuth: []
  - BearerAuth: []
