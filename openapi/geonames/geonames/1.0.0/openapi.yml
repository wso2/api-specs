openapi: 3.0.0
servers:
  - url: http://api.geonames.org/
info:
  x-ballerina-display:
    label: Geonames
    iconPath: "icon.png"
  description:
    This is a generated connector for [Geonames API](https://www.geonames.org/export/JSON-webservices.html) OpenAPI specification. 
    
    Geonames is a geographical database where users can retrieve geo location information.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create a [Geonames account](https://www.geonames.org/login) and obtain tokens by following [this guide](https://www.geonames.org/export/web-services.html). 
  title: Geonames API
  version: 1.0.0
  x-providerName: geonames.org
security:
- apiKey: []
paths:
  /searchJSON: 
    get:
      description: Retrieves the names found for the search term as a XML or JSON document.
      operationId: search
      parameters:
        - in: query
          name: q
          description: The query to search over all attributes of a place.
          schema:
            type: string
        - in: query
          name: name
          description: The place name.
          schema:
            type: string
        - in: query
          name: name_equals
          description: The exact place name.
          schema:
            type: string
        - in: query
          name: name_startsWith
          description: The place name starts with given characters.
          schema:
            type: string
        - in: query
          name: maxRows
          description: The maximal number of rows in the document returned by the service.
          schema:
            type: integer
        - in: query
          name: startRow
          description: The starting row for the result.
          schema:
            type: integer
        - in: query
          name: country
          description: The country codes to filter the results.
          schema:
            type: string
        - in: query
          name: countryBias
          description: The two letter country code to filter the results.
          schema:
            type: string
        - in: query
          name: continentCode
          description: The continent code to filter the results.
          schema:
            type: string
        - in: query
          name: cities
          description: The city population category.
          schema:
            type: integer
        - in: query
          name: operator
          description: The the operator 'AND' searches for all terms in the placename parameter, 
            the operator 'OR' searches for any term, default = AND.
          schema:
            type: string
        - in: query
          name: charset
          description: The encoding used for the document returned.
          schema:
            type: string
        - in: query
          name: searchlang
          description: The search will only consider names in the specified language
          schema:
            type: string
        - in: query
          name: east
          description: The bounding box, only features within the box are returned.
          schema:
            type: number
        - in: query
          name: west
          description: The bounding box, only features within the box are returned.
          schema:
            type: number
        - in: query
          name: north
          description: The bounding box, only features within the box are returned.
          schema:
            type: number
        - in: query
          name: south	
          description: The bounding box, only features within the box are returned.
          schema:
            type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
          description: The names found for the searchterm
  /postalCodeSearchJSON:
    get:
      description: Retrieves a list of postal codes and places for the place name/postal code query.
      operationId: searchPostalCode
      parameters:
        - in: query
          name: postalcode
          description: The query to search over all attributes of a place. Either postal code or place name must be given.
          schema:
            type: string
        - in: query
          name: placeName
          description: Place name. Either postal code or place name must be given.
          schema:
            type: string
        - in: query
          name: postalcode_startsWith
          description: Postal code starts with
          schema:
            type: string
        - in: query
          name: placename_startsWith
          description: Place name starts with
          schema:
            type: string
        - in: query
          name: country
          description: Default is all countries. The country parameter may occur more than once,country=FR,country=GP.
          schema:
            type: string
        - in: query
          name: countryBias
          description: Records from the countryBias are listed first.
          schema:
            type: string
        - in: query
          name: maxRows
          description: The maximal number of rows in the document returned by the service.
          schema:
            type: integer
        - in: query
          name: style
          description: Style
          schema:
            type: string
        - in: query
          name: operator
          description: Operator
          schema:
            type: string
        - in: query
          name: charset
          description: Charset
          schema:
            type: string
        - in: query
          name: isReduced
          description: Is reduced
          schema:
            type: string
        - in: query
          name: east
          description: The east value for bounding box.
          schema:
            type: number
        - in: query
          name: west
          description: The west value for bounding box.
          schema:
            type: number
        - in: query
          name: north
          description: The north value for bounding box.
          schema:
            type: number
        - in: query
          name: south	
          description: The south value for bounding box.
          schema:
            type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostalCodeResponse"
          description:  List of postalcodes and places.
  /timezoneJSON:
    get:
      description: Timezone
      operationId: getTimezone
      parameters:
        - in: query
          name: lat
          description: The latitude to retrieve nearby postal codes.
          schema:
            type: number
          required: true
        - in: query
          name: lng
          description: The longitude to retrieve nearby postal codes.
          schema:
            type: number
          required: true
        - in: query
          name: lang
          description: The language which place name and country name will be returned.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Timezone"
          description:  The timezone at the lat/lng
  /postalCodeLookupJSON:
    get:
      description: Retrieves a list of places for the given postal code.
      operationId: postalCodeLookup
      parameters:
        - in: query
          name: postalcode
          description: Postal code
          schema:
            type: integer
        - in: query
          name: country
          description: Country
          schema:
            type: string
        - in: query
          name: maxRows
          description: The maximal number of rows in the document returned by the service.
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostalCodes"
          description:  The timezone at the lat/lng
  /findNearbyPostalCodesJSON:
    get:
      description: Retrieving a list of postal codes and places for the latitude/longitude query.
      operationId: findNearbyPostalCodes
      parameters:
        - in: query
          name: postalcode
          description: Postal code
          schema:
            type: integer
          required: true
        - in: query
          name: country
          description: Country
          schema:
            type: string
          required: true
        - in: query
          name: radius
          description: Radius
          schema:
            type: integer
        - in: query
          name: maxRows
          description: The maximal number of rows in the document returned by the service.
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostalCodes"
          description:  The timezone at the lat/lng
  /findNearByWeatherJSON:
    get:
      description: Retrieves a weather station with the most recent weather observation.
      operationId: findNearByWeather
      parameters:
        - in: query
          name: lat
          description: The latitude to retrieve nearby postal codes.
          schema:
            type: number
          required: true
        - in: query
          name: lng
          description: The longitude to retrieve nearby postal codes.
          schema:
            type: number
          required: true
        - in: query
          name: radius
          description: Radius
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherObservationResponse"
          description:  The timezone at the lat/lng
  /weatherJSON:
    get:
      description: Retrieves a list of weather stations with the most recent weather observation.
      operationId: listWeatherStations
      parameters:
        - in: query
          name: north
          description: The north value for bounding box.
          schema:
            type: number
          required: true
        - in: query
          name: south
          description: The south value for bounding box.
          schema:
            type: number
          required: true
        - in: query
          name: east
          description: The east value for bounding box.
          schema:
            type: number
          required: true
        - in: query
          name: west
          description: The west value for bounding box.
          schema:
            type: number
          required: true
        - in: query
          name: maxRows
          description: The maximal number of rows in the document returned by the service.
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherResponse"
          description: Returns a list of weather stations with the most recent weather observation
  /earthquakesJSON:
    get:
      description: Retrieves a list of weather stations with the most recent weather observation.
      operationId: listEarthquakes
      parameters:
        - in: query
          name: north
          description: The north value for bounding box
          schema:
            type: number
          required: true
        - in: query
          name: south
          description: The south value for bounding box
          schema:
            type: number
          required: true
        - in: query
          name: east
          description: The east value for bounding box.
          schema:
            type: number
          required: true
        - in: query
          name: west
          description: The west value for bounding box
          schema:
            type: number
          required: true
        - in: query
          name: maxRows
          description: The maximal number of rows in the document returned by the service.
          schema:
            type: integer
        - in: query
          name: minMagnitude
          description: Minimum magnitude
          schema:
            type: number
        - in: query
          name: date
          description: Date
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EarthquakeResponse"
          description: Returns a list of earthquakes, ordered by magnitude
components:
  schemas:
    EarthquakeResponse:
      type: object
      properties:
        earthquakes:
          type: array
          items: 
            $ref: "#/components/schemas/Earthquake"
    Earthquake:
      type: object
      properties:
        datetime:
          type: string
        depth: 
          type: number
        lng: 
          type: number
        src:
          type: string
        eqid:
          type: string
        magnitude:
          type: number
        lat: 
          type: number
    PostalCodes:
      type: object
      properties:
        postalcodes:
          type: array
          items: 
            $ref: "#/components/schemas/PostalCode"
    PostalCode:
      type: object
      properties:
        adminCode1:
          type: string
        adminCode2:
          type: string
        adminCode3:
          type: string
        adminName1: 
          type: string
        adminName2: 
          type: string
        adminName3:
          type: string
        countryCode:
          type: string
        distance: 
          type: string
        lat: 
          type: number
        lng:
          type: number
        placeName:
          type: string
        postalCode:
          type: string
    Timezone:
      type: object
      properties:
        sunrise:
          type: string
        lng:
          type: number
        countryCode:
          type: string
        gmtOffset:
          type: integer
        rawOffset:
          type: integer
        sunset:
          type: string
        timezoneId:
          type: string
        dstOffset:
          type: integer
        countryName:
          type: string
        time:
          type: string
        lat:
          type: number
    PostalCodeResponse:
      type: object
      properties:
        geonames:
          $ref: "#/components/schemas/Geonames"
    SearchResponse:
      type: object
      properties:
        totalResultsCount:
          type: integer
        geonames:
          $ref: "#/components/schemas/Geonames"
    Geonames:
      type: array
      items:
        type: object
        properties:
          ing:
            type: string
          geonameid:
            type: integer
          countrycode:
            type: string
          name:
            type: string
          fclName:
            type: string
          toponymName:
            type: string
          fcodeName:
            type: string
          wikipedia:
            type: string
          lat:
            type: string
          fcl: 
            type: string
          population:
            type: integer
          fcode:
            type: string
    WeatherObservationResponse:
      properties:
        WeatherObservation:
          $ref: "#/components/schemas/WeatherObservation"
    WeatherResponse:
      type: array
      items: 
        $ref: "#/components/schemas/WeatherObservation"
    WeatherObservation:
      type: object
      properties:
        clouds:
          type: string
        cloudsCode:
          type: string
        countrycode:
          type: string
        datetime:
          type: string
        dewPoint:
          type: string
        elevation:
          type: number
        hectoPascAltimeter:
          type: number
        humidity:
          type: number
        ICAO:
          type: string
        lat:
          type: number
        ing:
          type: number
        observation:
          type: string
        seaLevelPressure:
          type: number
        stationName:
          type: string
        temperature:
          type: string
        weatherCondition:
          type: string
        windSpeed:
          type: string
        windDirection:
          type: integer
  securitySchemes:  
    apiKey:
      type: apiKey
      name: username
      in: query
      description: Represents API Key `username`