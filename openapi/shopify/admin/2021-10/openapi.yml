openapi: 3.0.0
info:
  title: Shopify Admin API
  description: |
    This is a generated connector for [Shopify Admin API v2021-10](https://shopify.dev/api/admin-rest) OpenAPI specification.
    The Admin API lets you build apps and integrations that extend and enhance the Shopify admin.
    As the primary way that apps and services interact with Shopify, the Admin API allows you to add your own features to the Shopify user experience. 
    Read and write Shopify store information, including products, inventory, orders, shipping, and more.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
  
    Create a [Shopify account](https://www.shopify.com) and obtain tokens by following [this guide](https://shopify.dev/apps/auth/oauth).
  x-ballerina-display:
    label: Shopify Admin
    iconPath: "icon.png"
  x-marketplace-tags:
    - name: Featured
      description: Featured APIs are hand-picked for display purposes.
  version: "2021-10"
security:
- api_token: []
tags:
  - name: customers
  - name: products
  - name: orders
  - name: fulfillments
  - name: order_risks
  - name: webhooks
paths:
  /admin/api/2021-10/customers.json:
    get:
      summary: "Retrieves a list of customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-2021-10"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.(default: 50, maximum: 250)"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: 
            type: string
          required: false
      tags:
        - "customers"
      responses:
        200:
          description: "List of customers"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CustomerList'
      operationId: "get_customers"
    post:
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-2021-10"
      parameters: []
      requestBody:
        description: The Customer object to be created.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateCustomer'
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      tags:
        - "customers"
      responses:
        200:
          description: "Created customer"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CustomerObject'
      operationId: "create_customer"
  /admin/api/2021-10/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-2021-10"
      parameters:
        - in: "path"
          name: "customer_id"
          description: "Customer ID"
          schema:
            type: string
          required: true
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: 
            type: string
          required: false
      tags:
        - "customers"
      responses:
        200:
          description: "Requested customer"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CustomerObject'
      operationId: "get_customer"
    put:
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-2021-10"
      parameters:
        - in: "path"
          name: "customer_id"
          description: "Customer ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The Customer object to be updated.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateCustomer'
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      tags:
        - "customers"
      responses:
        200:
          description: "Updated customer"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CustomerObject'
      operationId: "update_customer"
    # delete:
    #   summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
    #   description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-2021-10"
    #   parameters:
    #     - in: "path"
    #       name: "customer_id"
    #       description: "Customer ID"
    #       schema:
    #         type: string
    #       required: true
    #   tags:
    #     - "customers"
    #   responses:
    #     200:
    #       description: Status OK
    #   operationId: "delete_customer"    
  /admin/api/2021-10/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-2021-10"
      parameters:
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results. (default: last_order_date DESC)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show. (default: 50, maximum: 250)"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: 
            type: string
          required: false
      tags:
        - "customers"
      responses:
        200:
          description: "List of customers"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CustomerList'
      operationId: "search_customers"  
  /admin/api/2021-10/products.json:
    get:
      summary: "Retrieves a list of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2021-10"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page. (default: 50, maximum: 250)"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status. (default: active) active: Show only active products. archived: Show only archived products. draft: Show only draft products."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status (default: any) published: Show only published products. unpublished: Show only unpublished products. any: Show all products."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: 
            type: string
          required: false
      tags:
        - "products"
      responses:
        200:
          description: "List of products"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductList'
      operationId: "get_products"     
    post:
      summary: "Creates a new product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2021-10"
      parameters: []
      requestBody:
        description: The Product object to be created.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateProduct'
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      tags:
        - "products"
      responses:
        200:
          description: "Created product"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductObject'
      operationId: "create_product"   
  /admin/api/2021-10/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2021-10"
      parameters:
        - in: "path"
          name: "product_id"
          description: "Product ID"
          schema:
            type: string
          required: true
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: 
            type: string
          required: false
      tags:
        - "products"
      responses:
        200:
          description: "Requested product"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductObject'
      operationId: "get_product"
    put:
      summary: "Updates a product and its variants and images."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-2021-10"
      parameters:
        - in: "path"
          name: "product_id"
          description: "Product ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The Product object to be updated.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateProduct'
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      tags:
        - "products"
      responses:
        200:
          description: "Updated product"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductObject'
      operationId: "update_product"
    # delete:
    #   summary: "Deletes a product."
    #   description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2021-10"
    #   parameters:
    #     - in: "path"
    #       name: "product_id"
    #       description: "Product ID"
    #       schema:
    #         type: string
    #       required: true
    #   tags:
    #     - "products"
    #   responses:
    #     200:
    #       description: Status OK
    #   operationId: "delete_product"
  /admin/api/2021-10/products/{product_id}/variants.json:
    get:
      summary: "Retrieves a list of product variants."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/product-variant#[get]/admin/api/2021-10/products/{product_id}/variants.json"
      parameters:
        - in: "path"
          name: "product_id"
          description: "Product ID"
          schema:
            type: string
          required: true
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response"
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: 
            type: string
          required: false
      tags:
        - "products"
      responses:
        200:
          description: "List of product variants"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductVariantList'
      operationId: "get_product_variants"   
    post:
      summary: "Creates a new product variant."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/product-variant#[post]/admin/api/2021-10/products/{product_id}/variants.json"
      parameters: 
        - in: "path"
          name: "product_id"
          description: "Product ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The Product variant object to be created.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateProductVariant'
      tags:
        - "products"
      responses:
        200:
          description: "Created product variant"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductVariantObject'
      operationId: "create_product_variant"   
  /admin/api/2021-10/variants/{variant_id}.json:
    get:
      summary: "Retrieves a single product variant by ID."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/product-variant#[get]/admin/api/2021-10/variants/{variant_id}.json"
      parameters:
        - in: "path"
          name: "variant_id"
          description: "Variant ID"
          schema:
            type: string
          required: true
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response"
          schema: 
            type: string
          required: false
      tags:
        - "products"
      responses:
        200:
          description: "Requested product variant"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductVariantObject'
      operationId: "get_product_variant"
    put:
      summary: "Updates an existing product variant."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/product-variant#[put]/admin/api/2021-10/variants/{variant_id}.json"
      parameters:
        - in: "path"
          name: "variant_id"
          description: "Variant ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The Product variant object to be updated.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateProductVariant'
      tags:
        - "products"
      responses:
        200:
          description: "Updated product variant"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductVariantObject'
      operationId: "update_product_variant"
  # /admin/api/2021-10/products/{product_id}/variants/{variant_id}.json:
  #   delete:
  #     summary: "Deletes a product variant."
  #     description: "https://shopify.dev/api/admin-rest/2021-10/resources/product-variant#[delete]/admin/api/2021-10/products/{product_id}/variants/{variant_id}.json"
  #     parameters:
  #       - in: "path"
  #         name: "product_id"
  #         description: "Product ID"
  #         schema:
  #           type: string
  #         required: true
  #       - in: "path"
  #         name: "variant_id"
  #         description: "variant_id"
  #         schema:
  #           type: string
  #         required: true
  #     tags:
  #       - "products"
  #     responses:
  #       200:
  #         description: Status OK
  #     operationId: "delete_product_variant"
  /admin/api/2021-10/orders.json:
    get:
      summary: "Retrieves a list of orders that meet the specified criteria."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#index-2021-10"
      parameters:
        - in: "query"
          name: "ids"
          description: "Retrieve only orders specified by a comma-separated list of order IDs."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page. (default: 50, maximum: 250)"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "since_id"
          description: "Show orders after the specified ID."
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show orders created at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show orders created at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show orders last updated at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show orders last updated at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show orders imported at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show orders imported at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "attribution_app_id"
          description: "Show orders attributed to a certain app, specified by the app ID. Set as current to show orders for the app currently consuming the API."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "status"
          description: "Filter orders by their status. default: open) open: Show only open orders. closed: Show only closed orders. cancelled: Show only canceled orders. any: Show orders of any status, including archived orders."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "financial_status"
          description: "Filter orders by their financial status. (default: any) authorized: Show only authorized orders pending: Show only pending orders paid: Show only paid orders partially_paid: Show only partially paid orders refunded: Show only refunded orders voided: Show only voided orders partially_refunded: Show only partially refunded orders any: Show orders of any financial status. unpaid: Show authorized and partially paid orders."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "fulfillment_status"
          description: "Filter orders by their fulfillment status. (default: any) shipped: Show orders that have been shipped. Returns orders with fulfillment_status of fulfilled. partial: Show partially shipped orders. unshipped: Show orders that have not yet been shipped. Returns orders with fulfillment_status of null. any: Show orders of any fulfillment status. unfulfilled: Returns orders with fulfillment_status of null or partial."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "fields"
          description: "Retrieve only certain fields, specified by a comma-separated list of fields names."
          schema: 
            type: string
          required: false
      tags:
        - "orders"
      responses:
        200:
          description: "List of orders"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderList'
      operationId: "get_orders"
    post:
      summary: "Creates an order. By default, product inventory is not claimed."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#create-2021-10"
      parameters: []
      requestBody:
        description: The Order object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateOrder'
            examples:
              example1:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order with only a product variant ID"
              example2:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    send_receipt: true
                    send_fulfillment_receipt: true
                    line_items:
                      - variant_id: 457924702
                        quantity: 1
                summary: "Create a simple order, sending an order confirmation and a shipping confirmation to the customer"
              example3:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order without sending an order receipt or a fulfillment receipt"
              example4:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    fulfillments:
                      - location_id: 48752903
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order and fulfill it"
              example5:
                value:
                  order:
                    line_items:
                      - title: "Big Brown Bear Boots"
                        price: 74.99
                        grams: "1300"
                        quantity: 3
                        tax_lines:
                          - price: 13.5
                            rate: 0.06
                            title: "State tax"
                    transactions:
                      - kind: "sale"
                        status: "success"
                        amount: 238.47
                    total_tax: 13.5
                    currency: "EUR"
                summary: "Create a comprehensive order"
              example6:
                value:
                  order:
                    line_items:
                      - title: "Red Leather Coat"
                        price: 129.99
                        grams: "1700"
                        quantity: 1
                      - title: "Blue Suede Shoes"
                        price: 85.95
                        grams: "750"
                        quantity: 1
                        taxable: false
                      - title: "Raspberry Beret"
                        price: 19.99
                        grams: "320"
                        quantity: 2
                    tax_lines:
                      - price: 10.2
                        rate: 0.06
                        title: "State tax"
                      - price: 4.25
                        rate: 0.025
                        title: "County tax"
                    total_tax: 14.45
                summary: "Create an order with tax lines split across taxable line items"
              example7:
                value:
                  order:
                    line_items:
                      - title: "Clicky Keyboard"
                        price: 99.99
                        grams: "600"
                        quantity: 1
                        tax_lines:
                          - price: 1
                            rate: 0.01
                            title: "Keyboard tax"
                    tax_lines:
                      - price: 6
                        rate: 0.06
                        title: "State tax"
                summary: "Creating an order with tax lines both on line items and on the order fails and returns an error"
              example8:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    customer:
                      id: 207119551
                    financial_status: "pending"
                summary: "Create a pending order with an existing customer"
              example9:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    customer:
                      first_name: "Paul"
                      last_name: "Norman"
                      email: "paul.norman@example.com"
                    billing_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "555-555-5555"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    shipping_address:
                      first_name: "Jane"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "777-777-7777"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    email: "jane@example.com"
                    transactions:
                      - kind: "authorization"
                        status: "success"
                        amount: 50
                    financial_status: "partially_paid"
                summary: "Create a partially paid order with a new customer and addresses"
              example10:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    email: "jane@example.com"
                    phone: "18885551234"
                    billing_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "555-555-5555"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    shipping_address:
                      first_name: "Jane"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "777-777-7777"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    transactions:
                      - kind: "sale"
                        status: "success"
                        amount: 50
                    financial_status: "paid"
                    discount_codes:
                      - code: "FAKE30"
                        amount: "9.00"
                        type: "percentage"
                summary: "Create an order and apply a discount"
      tags:
        - "orders"
      responses:
        200:
          description: "Created order"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderObject'
      operationId: "create_order"
  /admin/api/2021-10/orders/{order_id}.json:
    get:
      summary: "Retrieves a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#show-2021-10"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: string
          required: true
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: 
            type: string
          required: false
      tags:
        - "orders"
      responses:
        200:
          description: "Requested order"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderObject'
      operationId: "get_order"
    put:
      summary: "Updates an existing order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#show-2021-10"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The Order object to be updated.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateOrder'
      tags:
        - "orders"
      responses:
        200:
          description: "Updated order"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderObject'
      operationId: "update_order"
  /admin/api/2021-10/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-2021-10"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: "string"
          required: true
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results. (default: 50, maximum: 250)"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema:
            type: string
          required: false
      tags:
        - "fulfillments"
      responses:
        200:
          description: "List of order fulfillments"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderFulfillmentsList'
      operationId: "get_order_fulfillments"
    post:
      summary: "Create a fulfillment for the specified order and line items. The fulfillment's status depends on the line items in the order: If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately. If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked. A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped. If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled. However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled. All line items being fulfilled must have the same fulfillment service. Note If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute. About tracking urls If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields. Note If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-2021-10"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: "string"
          required: true
      requestBody:
        description: The Order fulfillment object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateOrderFulfillment'
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      tags:
        - "fulfillments"
      responses:
        200:
          description: "Created order fulfillment"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderFulfillmentObject'
      operationId: "create_order_fulfillment"
  /admin/api/2021-10/draft_orders.json:
    post:
      summary: "Creates a draft order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/draftorder#create-2021-10"
      parameters:
        - in: "query"
          name: "customer_id"
          description: "Used to load the customer. When a customer is loaded, the customer’s email address is also associated."
          schema:
            type: "string"
          required: false
        - in: "query"
          name: "use_customer_default_address"
          description: "An optional boolean that you can send as part of a draft order object to load customer shipping information. Valid values: true or false."
          schema:
            type: "boolean"
          required: false
      requestBody:
        description: The Draft order object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateDraftOrder'
      tags:
        - "orders"
      responses:
        200:
          description: "Created draft order."
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/DraftOrderObject'
      operationId: "create_draft_order"
  /admin/api/2021-10/orders/{order_id}/transactions.json:
    post:
      summary: "Creates a transaction for an order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/draftorder#create-2021-10"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: "string"
          required: true
        - in: "query"
          name: "source"
          description: "The origin of the transaction. Set to external to create a cash transaction for the associated order."
          schema:
            type: "string"
          required: false
      requestBody:
        description: The Transaction object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateTransaction'
      tags:
        - "orders"
      responses:
        200:
          description: "Created transaction."
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/TransactionObject'
      operationId: "create_transaction_for_order"
  /admin/api/2021-10/orders/{order_id}/refunds.json:
    post:
      summary: "Creates a refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-2021-10"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: "string"
          required: true
      requestBody:
        description: The Refund object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateRefund'
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      tags:
        - "orders"
      responses:
        200:
          description: "Created refund."
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/RefundObject'
      operationId: "create_refund_for_order"
  /admin/api/2021-10/orders/{order_id}/risks.json:
    get:
      summary: "Retrieves a list of all order risks for an order."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/order-risk#get-orders-order-id-risks"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: string
          required: true
      tags:
        - "order_risks"
      responses:
        200:
          description: "List of all order risks for an order"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderRiskList'
      operationId: "get_order_risks"
    post:
      summary: "Creates an order risk for an order."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/order-risk#post-orders-order-id-risks"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The order risk object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateOrderRisk'
      tags:
        - "order_risks"
      responses:
        200:
          description: "Created order risk"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderRiskObject'
      operationId: "create_order_risk"
  /admin/api/2021-10/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/order-risk#get-orders-order-id-risks-risk-id"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: string
          required: true
        - in: "path"
          name: "risk_id"
          description: "Order Risk ID"
          schema:
            type: string
          required: true
      tags:
        - "order_risks"
      responses:
        200:
          description: "Requested order risk"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderRiskObject'
      operationId: "get_order_risk"
    put:
      summary: "Updates an order risk."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/order-risk#put-orders-order-id-risks-risk-id"
      parameters:
        - in: "path"
          name: "order_id"
          description: "Order ID"
          schema:
            type: string
          required: true
        - in: "path"
          name: "risk_id"
          description: "Order Risk ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The order risk object to be updated.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateOrderRisk'
      tags:
        - "order_risks"
      responses:
        200:
          description: "Updated order risk"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/OrderRiskObject'
      operationId: "update_order_risk"
    # delete:
    #   summary: "Deletes an order risk for an order."
    #   description: "https://shopify.dev/api/admin-rest/2021-10/resources/order-risk#delete-orders-order-id-risks-risk-id"
    #   parameters:
    #     - in: "path"
    #       name: "order_id"
    #       description: "Order ID"
    #       schema:
    #         type: string
    #       required: true
    #     - in: "path"
    #       name: "risk_id"
    #       description: "Order Risk ID"
    #       schema:
    #         type: string
    #       required: true
    #   tags:
    #     - "order_risks"
    #   responses:
    #     200:
    #       description: Status OK
    #   operationId: "delete_order_risk"
  /admin/api/2021-10/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/webhook#get-webhooks"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema:
            type: string
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error. (default: 50, maximum: 250)"
          schema: 
            type: integer
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic. For a list of valid values, refer to the topic property (https://shopify.dev/api/admin-rest/2021-10/resources/webhook)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: 
            type: string
          required: false
      tags:
        - "webhooks"
      responses:
        200:
          description: "List of all webhook subscriptions for your shop"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/WebhookList'
      operationId: "get_webhooks"
    post:
      summary: "Create a new webhook subscription by specifying both an address and a topic."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/webhook#post-webhooks"
      parameters: []
      requestBody:
        description: The webhook subscription object to be created. 
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateWebhook'
      tags:
        - "webhooks"
      responses:
        200:
          description: "Created webhook subscription"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/WebhookObject'
      operationId: "create_webhook"
  /admin/api/2021-10/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/webhook#get-webhooks-webhook-id"
      parameters:
        - in: "path"
          name: "webhook_id"
          description: "Webhook ID"
          schema:
            type: string
          required: true
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: 
            type: string
          required: false
      tags:
        - "webhooks"
      responses:
        200:
          description: "Requested webhook subscription"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/WebhookObject'
      operationId: "get_webhook"
    put:
      summary: "Update a webhook subscription's topic or address URIs."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/webhook#put-webhooks-webhook-id"
      parameters:
        - in: "path"
          name: "webhook_id"
          description: "Webhook ID"
          schema:
            type: string
          required: true
      requestBody:
        description: The webhook object to be updated.
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UpdateWebhook'
      tags:
        - "webhooks"
      responses:
        200:
          description: "Updated webhook"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/WebhookObject'
      operationId: "update_webhook"
    # delete:
    #   summary: "Delete a webhook subscription."
    #   description: "https://shopify.dev/api/admin-rest/2021-10/resources/webhook#delete-webhooks-webhook-id"
    #   parameters:
    #     - in: "path"
    #       name: "webhook_id"
    #       description: "Webhook ID"
    #       schema:
    #         type: string
    #       required: true
    #   tags:
    #     - "webhooks"
    #   responses:
    #     200:
    #       description: Status OK
    #   operationId: "delete_webhook"
  /admin/api/2021-10/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions. The results can be filtered by address or by topic."
      description: "https://shopify.dev/api/admin-rest/2021-10/resources/webhook#get-webhooks-count"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema:
            type: string
          required: false
        - in: "query"
          name: "topic"
          description: "The topic of the webhook subscriptions. For a list of valid values, refer to the topic property (https://shopify.dev/api/admin-rest/2021-10/resources/webhook)."
          schema: 
            type: string
          required: false
      tags:
        - "webhooks"
      responses:
        200:
          description: "Requested webhook subscription"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/WebhookCountObject'
      operationId: "get_webhook_count"

components:
  schemas:
    CustomerList:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: A list of customers
      description: A list of customers
    Customer:
      type: object 
      properties:
        accepts_marketing:
          type: boolean
          description: Whether the customer has consented to receive marketing material via email.
        accepts_marketing_updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer consented or objected to receiving marketing material by email. Set this value whenever the customer consents or objects to marketing materials.
        addresses:
          type: array
          items: 
            $ref: '#/components/schemas/Address'
          description: A list of the ten most recently updated addresses for the customer.
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders. 
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer was created.
        first_name:
          type: string
          description: The customer's first name.
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
        default_address:
          $ref: '#/components/schemas/Address'
        id:
          type: integer
          description: A unique identifier for the customer.
        last_name:
          type: string
          description: The customer's last name.
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the name field on the Order resource.
        metafield:
          $ref: '#/components/schemas/Metafield' 
        marketing_opt_in_level:
          type: string
          description: The marketing subscription opt-in level (as described by the M3AAWG best practices guideline) that the customer gave when they consented to receive marketing material by email. If the customer does not accept email marketing, then this property will be set to null.
        multipass_identifier:
          type: string
          description: A unique identifier for the customer that's used with Multipass login.
        note:
          type: string
          description: A note about the customer.
        orders_count:
          type: integer
          description: The number of orders associated with this customer.
        phone:
          type: string
          description: The unique phone number (E.164 format) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world.
        sms_marketing_consent:
          $ref: '#/components/schemas/Sms_marketing_consent' 
        state:
          type: string
          description: The state of the customer's account with a shop. Default value is disabled.
        tags:
          type: string
          description: Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.
        tax_exempt:
          type: boolean
          description: Whether the customer is exempt from paying taxes on their order. If true, then taxes won't be applied to an order at checkout. If false, then taxes will be applied at checkout.
        tax_exemptions:
          type: array
          items:
            type: string
          description: Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only.
        total_spent:
          type: string
          description: The total amount of money that the customer has spent across their order history.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the customer information was last updated.
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
      description: The Customer resource stores information about a shop's customers, such as their contact details, their order history, and whether they've agreed to receive email marketing.
    Address:
      type: object 
      properties:
        address1:
          type: string
          description: The customer's mailing address.
        address2:
          type: string
          description: An additional field for the customer's mailing address.
        city:
          type: string
          description: The customer's city, town, or village.
        company:
          type: string
          description: The customer's company.
        country:
          type: string
          description: The customer's country.
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
        country_name:
          type: string
          description: The customer's normalized country name.
        customer_id:
          type: integer
          description: A unique identifier for the customer.
        default:
          type: boolean
          description: Returns true for each default address.
        first_name:
          type: string
          description: The customer's first name.
        id:
          type: integer
          description: A unique identifier for the address.  
        last_name:
          type: string
          description: The customer's last name.
        name:
          type: string
          description: The customer's first and last names.
        phone:
          type: string
          description: The customer's phone number at this address.
        province:
          type: string
          description: The customer's region name. Typically a province, a state, or a prefecture.
        province_code:
          type: string
          description: The two-letter code for the customer's region.
        zip:
          type: string
          description: The customer's postal code, also known as zip, postcode, Eircode, etc.
      description: Address
    Metafield:
      type: object
      required:
      - key
      - namespace
      - value
      - value_type
      properties:
        key: 
          type: string
          description: An identifier for the metafield (maximum of 30 characters).
        namespace:
          type: string
          description: A container for a set of metadata (maximum of 20 characters). Namespaces help distinguish between metadata that you created and metadata created by another individual with a similar namespace.
        value:
          type: string
          description: Information to be stored as metadata.
        value_type:
          type: string
          description: The value type. Valid values are string and integer.
        description:
          type: string
          description: Additional information about the metafield.
      description: Attaches additional metadata to a shop's resources
    Sms_marketing_consent:
      type: object
      properties:
        state: 
          type: string
          description: The current SMS marketing state for the customer.
        opt_in_level: 
          type: string
          description: The marketing subscription opt-in level, as described by the M3AAWG best practices guidelines, that the customer gave when they consented to receive marketing material by SMS.
        consent_updated_at:
          type: string
          description: The date and time at which the customer consented to receive marketing material by SMS. The customer's consent state reflects the consent record with the most recent last_consent_updated_at date. If no date is provided, then the date and time at which the consent information was sent is used.
        consent_collected_from: 
          type: string
          description: The source for whether the customer has consented to receive marketing material by SMS.
      description: The marketing consent information when the customer consented to receiving marketing material by SMS. The phone property is required to create a customer with SMS consent information and to perform an SMS update on a customer that doesn't have a phone number recorded. The customer must have a unique phone number associated to the record.
    CreateCustomer:
      type: object
      properties: 
        customer:
          $ref: '#/components/schemas/Customer'
      description: The Customer object to be created.
    CustomerObject:
      type: object
      properties: 
        customer:
          $ref: '#/components/schemas/Customer'
      description: The Customer object.
    UpdateCustomer:
      type: object
      properties: 
        customer:
          $ref: '#/components/schemas/Customer'
      description: The Customer object to be updated.
    ProductList:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: A list of products
      description: A list of products
    Product:
      type: object 
      properties:
        id:
          type: integer
          description: An unsigned 64-bit integer that's used as a unique identifier for the product. Each id is unique across the Shopify system. No two products will have the same id, even if they're from different shops.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the product was created.
        handle:
          type: string
          description: A unique human-friendly string for the product. Automatically generated from the product's title. Used by the Liquid templating language to refer to objects.
        body_html:
          type: string
          description: A description of the product. Supports HTML formatting.
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          description: A list of product image objects, each one representing an image associated with the product.
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption'
          description: The custom product properties. For example, Size, Color, and Material. Each product can have up to 3 options and each option value can be up to 255 characters. Product variants are made of up combinations of option values. Options cannot be created without values. To create new options, a variant with an associated option value also needs to be created.
        product_type:
          type: string
          description: A categorization for the product used for filtering and searching products.
        published_at:
          type: string
          description: The date and time (ISO 8601 format) when the product was published. Can be set to null to unpublish the product from the Online Store channel.
        published_scope:
          type: string
          description: Whether the product is published to the Point of Sale channel.
        status:
          type: string
          description: The status of the product. 
        tags:
          type: string
          description: A string of comma-separated tags that are used for filtering and search. A product can have up to 250 tags. Each tag can have up to 255 characters.
        template_suffix:
          type: string
          description: The suffix of the Liquid template used for the product page. If this property is specified, then the product page uses a template called "product.suffix.liquid", where "suffix" is the value of this property. If this property is "" or null, then the product page uses the default template "product.liquid". (default is null)
        title:
          type: string
          description: The name of the product.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the product was last modified. A product's updated_at value can change for different reasons. For example, if an order is placed for a product that has inventory tracking set up, then the inventory adjustment is counted as an update.
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          description: An array of product variants, each representing a different version of the product. The position property is read-only. The position of variants is indicated by the order in which they are listed.
        vendor:
          type: string
          description: The name of the product's vendor.
      description: The Product resource lets you update and create products in a merchant's store.
    ProductImage:
      type: object
      properties:
        created_at:
          type: string
          description: The date and time when the product image was created. The API returns this value in ISO 8601 formatting.
        id:
          type: integer
          description: A unique numeric identifier for the product image.
        position:
          type: integer
          description: The order of the product image in the list. The first product image is at position 1 and is the "main" image for the product.
        product_id:
          type: integer
          description: The id of the product associated with the image.
        variant_ids:
          type: array
          items:
            type: integer
          description: An array of variant ids associated with the image.
        src:
          type: string
          description: Specifies the location of the product image. This parameter supports URL filters that you can use to retrieve modified copies of the image. For example, add _small, to the filename to retrieve a scaled copy of the image at 100 x 100 px (for example, ipod-nano_small.png), or add _2048x2048 to retrieve a copy of the image constrained at 2048 x 2048 px resolution (for example, ipod-nano_2048x2048.png).
        width:
          type: integer
          description: Width dimension of the image which is determined on upload.
        height:
          type: integer
          description: Height dimension of the image which is determined on upload.
        updated_at:
          type: string
          description: The date and time when the product image was last modified. The API returns this value in ISO 8601 format.
      description: Products are easier to sell if customers can see pictures of them, which is why there are product images.
    ProductOption:
      type: object
      properties:
        id:
          type: integer
          description: Product option ID
        name:
          type: string
          description: Product option name
        position:
          type: integer
          description: Product option position
        product_id:
          type: integer
          description: Product option product ID
        values:
          type: array
          items:
            type: string
          description: Product option values  
      description: The custom product properties. For example, Size, Color, and Material. Each product can have up to 3 options and each option value can be up to 255 characters.
    ProductVariantList:
      type: object
      properties:
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          description: A list of product variants
      description: A list of products
    ProductVariant:
      type: object
      properties:
        barcode:
          type: string
          description: The barcode, UPC, or ISBN number for the product.
        compare_at_price:
          type: string
          description: The original price of the item before an adjustment or a sale.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the product variant was created.
        fulfillment_service:
          type: string
          description: The fulfillment service associated with the product variant. Valid values are manual or the handle of a fulfillment service.
        grams:
          type: integer
          description: The weight of the product variant in grams.
        id:
          type: integer
          description: The unique numeric identifier for the product variant.
        image_id:
          type: integer
          description: The unique numeric identifier for a product's image. The image must be associated to the same product as the variant.
        inventory_item_id:
          type: integer
          description: The unique identifier for the inventory item, which is used in the Inventory API to query for inventory information.
        inventory_management:
          type: string
          description: The fulfillment service that tracks the number of items in stock for the product variant.
        inventory_policy:
          type: string
          description: Whether customers are allowed to place an order for the product variant when it's out of stock. 
        inventory_quantity:
          type: integer
          description: An aggregate of inventory across all locations. To adjust inventory at a specific location, use the InventoryLevel resource.
        old_inventory_quantity:
          type: integer
          description: This property is deprecated. Use the InventoryLevel resource instead.
        inventory_quantity_adjustment:
          type: integer
          description: This property is deprecated. Use the InventoryLevel resource instead.
        option:
          $ref: '#/components/schemas/Option'
        presentment_prices:
          $ref: '#/components/schemas/PresentmentPrices' 
        position:
          type: integer
          description: The order of the product variant in the list of product variants. The first position in the list is 1. The position of variants is indicated by the order in which they are listed.
        price:
          type: string
          description: The price of the product variant.
        product_id:
          type: integer
          description: The unique numeric identifier for the product.
        requires_shipping:
          type: boolean
          description: This property is deprecated. Use the `requires_shipping` property on the InventoryItem resource instead.
        sku:
          type: string
          description: A unique identifier for the product variant in the shop. Required in order to connect to a FulfillmentService.
        taxable:
          type: boolean
          description: Whether a tax is charged when the product variant is sold.
        tax_code:
          type: string
          description: This parameter applies only to the stores that have the Avalara AvaTax app installed. Specifies the Avalara tax code for the product variant.
        title:
          type: string
          description: The title of the product variant. The title field is a concatenation of the option1, option2, and option3 fields. You can only update title indirectly using the option fields.
        updated_at:
          type: string
          description: The date and time when the product variant was last modified. Gets returned in ISO 8601 formatting.
        weight:
          type: integer
          description: The weight of the product variant in the unit system specified with weight_unit.
        weight_unit:
          type: string
          description: The unit of measurement that applies to the product variant's weight. If you don't specify a value for weight_unit, then the shop's default unit of measurement is applied. Valid values are g, kg, oz, and lb.
      description: A variant can be added to a Product resource to represent one version of a product with several options. The Product resource will have a variant for every possible combination of its options. Each product can have a maximum of three options and a maximum of 100 variants.
    Option:
      type: object
      properties:
        option1:
          type: string
          description: Option 1
        option2:
          type: string
          description: Option 2
        option3:
          type: string
          description: Option 3
      description: The custom properties that a shop owner uses to define product variants. You can define three options for a product variant are option1, option2, option3. Default value is Default Title. The title field is a concatenation of the option1, option2, and option3 fields. Updating the option fields updates the title field.
    PresentmentPrices:
      type: object
      properties:
        presentment_prices:
          type: array
          items: 
            $ref: '#/components/schemas/Presentment_price'
          description: A list of the variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies.
      description: The variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies. 
    Presentment_price:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        compare_at_price:
          $ref: '#/components/schemas/Price'
      description: The variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies.
    Price:
      type: object
      properties:
        amount:
          type: string
          description: The variant's price or compare-at price in the presentment currency.
        currency_code:
          type: string
          description: The three-letter code (ISO 4217 format) for one of the shop's enabled presentment currencies.
      description: The price object
    CreateProduct:
      type: object
      properties: 
        product:
          $ref: '#/components/schemas/Product'
    ProductObject:
      type: object
      properties: 
        product:
          $ref: '#/components/schemas/Product'
    UpdateProduct:
      type: object
      properties: 
        product:
          $ref: '#/components/schemas/Product'
    CreateProductVariant:
      type: object
      properties: 
        variant:
          $ref: '#/components/schemas/ProductVariant'
    ProductVariantObject:
      type: object
      properties: 
        variant:
          $ref: '#/components/schemas/ProductVariant'
    UpdateProductVariant:
      type: object
      properties: 
        variant:
          $ref: '#/components/schemas/ProductVariant'
    OrderList:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          description: A list of orders
      description: A list of orders
    Order:
      type: object 
      properties:
        app_id:
          type: integer
          description: The ID of the app that created the order.
        billing_address:
          $ref: '#/components/schemas/CustomerAddress'
        browser_ip:
          type: string
          description: The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer consented to receive email updates from the shop.
        cancel_reason:
          type: string
          description: The reason why the order was canceled. 
        cancelled_at:
          type: string
          description: The date and time when the order was canceled. Returns null if the order isn't canceled.
        cart_token:
          type: string
          description: A unique value when referencing the cart that's associated with the order.
        checkout_token:
          type: string
          description: A unique value when referencing the checkout that's associated with the order.
        client_details:
          $ref: '#/components/schemas/ClientDetails'
        closed_at:
          type: string
          description: The date and time (ISO 8601 format) when the order was closed. Returns null if the order isn't closed.
        created_at:
          type: string
          description: The autogenerated date and time (ISO 8601 format) when the order was created in Shopify. The value for this property cannot be changed.
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the shop currency.
        current_total_discounts:
          type: string
          description: The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds.
        current_total_discounts_set:
          $ref: '#/components/schemas/CurrentTotalDiscountsSet'
        current_total_duties_set:
          $ref: '#/components/schemas/CurrentTotalDutiesSet'
        current_total_price:
          type: string
          description: The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.
        current_total_price_set:
          $ref: '#/components/schemas/CurrentTotalPriceSet'
        current_subtotal_price:
          type: string
          description: The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.
        current_subtotal_price_set:
          $ref: '#/components/schemas/CurrentSubtotalPriceSet'
        current_total_tax:
          type: string
          description: The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds.
        current_total_tax_set:
          $ref: '#/components/schemas/CurrentTotalTaxSet'  
        customer:
          $ref: '#/components/schemas/Customer'  
        customer_locale:
          type: string
          description: The two or three-letter language code, optionally followed by a region modifier.
        discount_applications:
          type: array
          description: "An ordered list of stacked discount applications."
          items:
            $ref: '#/components/schemas/DiscountApplication'  
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode' 
          description: A list of discounts applied to the order.
        email:
          type: string
          description: The customer's email address.
        estimated_taxes:
          type: boolean
          description: Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns false when taxes on the order are finalized and aren't subject to any changes.
        financial_status:
          type: string
          description: The status of payments associated with the order. Can only be set when the order is created.
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment' 
          description: An array of fulfillments associated with the order. For more information, see the Fulfillment API.
        fulfillment_status:
          type: string
          description: The order's status in terms of fulfilled line items. 
        gateway:
          type: string
          description: The payment gateway used.
        id:
          type: integer
          description: The ID of the order, used for API purposes. This is different from the order_number property, which is the ID used by the shop owner and customer.'
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/Line_item' 
          description: A list of line item objects, each containing information about an item in the order.
        location_id:
          type: integer
          description: The ID of the physical location where the order was processed. If you need to reference the location against an order, then use the FulfillmentOrder resource.
        name:
          type: string
          description: The order name, generated by combining the order_number property with the order prefix and suffix that are set in the merchant's general settings. This is different from the id property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.
        note:
          type: string
          description: An optional note that a shop owner can attach to the order.
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: Extra information that is added to the order. Appears in the Additional details section of an order details page. Each array entry must contain a hash with name and value keys.
        number:
          type: integer
          description: The order's position in the shop's count of orders. Numbers are sequential and start at 1.
        order_number:
          type: integer
          description: The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001.
        original_total_duties_set:
          $ref: '#/components/schemas/OriginalTotalDutiesSet'
        payment_details:
          type: string
          description: An object containing information about the payment.
        payment_terms:
          $ref: '#/components/schemas/PaymentTerms'
        payment_gateway_names:
          type: array
          items:
            type: string
          description: The list of payment gateways used for the order.
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
        presentment_currency:
          type: string
          description: The presentment currency that was used to display prices to the customer.
        processed_at:
          type: string
          description: The date and time (ISO 8601 format) when an order was processed. This value is the date that appears on your orders and that's used in the analytic reports. If you're importing orders from an app or another platform, then you can set processed_at to a date and time in the past to match when the original order was created.
        processing_method:
          type: string
          description: How the payment was processed. It has the following valid values
        referring_site:
          type: string
          description: The website where the customer clicked a link to the shop.
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
          description: A list of refunds applied to the order. For more information, see the Refund API.
        shipping_address:
          $ref: '#/components/schemas/CustomerAddress'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: An array of objects, each of which details a shipping method used.
        source_name:
          type: string
          description: "Where the order originated. Can be set only during order creation, and is not writeable afterwards. Values for Shopify channels are protected and cannot be assigned by other API clients: web, pos, shopify_draft_order, iphone, and android. Orders created via the API can be assigned any other string of your choice. If unspecified, then new orders are assigned the value of your app's ID."
        subtotal_price:
          type: string
          description: The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.
        subtotal_price_set:
          $ref: '#/components/schemas/SubtotalPriceSet'
        tags:
          type: string
          description: Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: An array of tax line objects, each of which details a tax applicable to the order. When creating an order through the API, tax lines can be specified on the order or the line items but not both. Tax lines specified on the order are split across the taxable line items in the created order.
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal.
        test:
          type: boolean
          description: Whether this is a test order.
        token:
          type: string
          description: A unique value when referencing the order.
        total_discounts:
          type: string
          description: The total discounts applied to the price of the order in the shop currency.
        total_discounts_set:
          $ref: '#/components/schemas/TotalDiscountsSet'
        total_line_items_price:
          type: string
          description: The sum of all line item prices in the shop currency.
        total_line_items_price_set:
          $ref: '#/components/schemas/TotalLineItemsPriceSet'
        total_outstanding:
          type: string
          description: The total outstanding amount of the order in the shop currency.
        total_price:
          type: string
          description: The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.
        total_price_set:
          $ref: '#/components/schemas/TotalPriceSet'
        total_shipping_price_set:
          $ref: '#/components/schemas/TotalShippingPriceSet'
        total_tax:
          type: string
          description: The sum of all the taxes applied to the order in the shop currency. Must be positive.
        total_tax_set:
          $ref: '#/components/schemas/TotalTaxSet'
        total_tip_received:
          type: string
          description: The sum of all the tips in the order in the shop currency.
        total_weight:
          type: number
          description: The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the order was last modified. Filtering orders by updated_at is not an effective method for fetching orders because its value can change when no visible fields of an order have been updated. Use the Webhook and Event APIs to subscribe to order events instead.
        user_id:
          type: integer
          description: The ID of the user logged into Shopify POS who processed the order, if applicable.
        order_status_url:
          type: string
          description: The URL pointing to the order status web page, if applicable.
      description: An order is a customer's request to purchase one or more products from a shop. You can create, retrieve, update, and delete orders using the Order resource.
    CustomerAddress:
      type: object 
      properties:
        address1:
          type: string
          description: The street address of the billing address.
        address2:
          type: string
          description: An optional additional field for the street address of the billing address.
        city:
          type: string
          description: The city, town, or village of the billing address.
        company:
          type: string
          description: The company of the person associated with the billing address.
        country:
          type: string
          description: The name of the country of the billing address.
        country_code:
          type: string
          description: The two-letter code (ISO 3166-1 format) for the country of the billing address.
        first_name:
          type: string
          description: The first name of the person associated with the payment method.
        last_name:
          type: string
          description: The last name of the person associated with the payment method.
        latitude:
          type: string
          description: The latitude of the billing address.
        longitude:
          oneOf:
            - type: float
            - type: string
          description: The longitude of the billing address.
        name:
          type: string
          description: The full name of the person associated with the payment method.
        phone:
          type: string
          description: The phone number at the billing address.
        province:
          type: string
          description: The name of the region (for example, province, state, or prefecture) of the billing address.
        province_code:
          type: string
          description: The two-letter abbreviation of the region of the billing address.         
        zip:
          type: string
          description: The postal code (for example, zip, postcode, or Eircode) of the billing address.
      description: The mailing address associated with the payment method. This address is an optional field that won't be available on orders that do not require a payment method.
    ClientDetails:
      type: object
      properties:
        accept_language:
          type: string
          description: The languages and locales that the browser understands.
        browser_height:
          type: integer
          description: The browser screen height in pixels, if available.
        browser_ip:
          type: string
          description: The browser IP address.
        browser_width:
          type: integer
          description: The browser screen width in pixels, if available.
        session_hash:
          type: string
          description: A hash of the session.
        user_agent:
          type: string
          description: Details of the browsing client, including software and operating versions.
      description: Information about the browser that the customer used when they placed their order
    CurrentTotalDiscountsSet:
      type: object
      properties:
        current_total_discounts_set:
          $ref: '#/components/schemas/Current_total_discounts_set'
      description: "The current total discounts on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    Current_total_discounts_set:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: "The current total discounts on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    CurrentTotalDutiesSet:
      type: object
      properties:
        current_total_duties_set:
          $ref: '#/components/schemas/Current_total_duties_set'
      description: "The current total duties charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    Current_total_duties_set:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: "The current total duties charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    CurrentTotalPriceSet:
      type: object
      properties:
        current_total_price_set:
          $ref: '#/components/schemas/Current_total_price_set'
      description: "The current total price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    Current_total_price_set:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: "The current total price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    CurrentSubtotalPriceSet:
      type: object
      properties:
        current_subtotal_price_set:
          $ref: '#/components/schemas/Current_subtotal_price_set'
      description: "The current subtotal price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    Current_subtotal_price_set:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: "The current subtotal price of the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    CurrentTotalTaxSet:
      type: object
      properties:
        current_total_tax_set:
          $ref: '#/components/schemas/Current_total_tax_set'
      description: "The current total taxes charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    Current_total_tax_set:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: "The current total taxes charged on the order in shop and presentment currencies. The amount values associated with this field reflect order edits, returns, and refunds."
    DiscountApplication:
      type: object
      properties:
        allocation_method:
          type: string
          description: The method by which the discount application value has been allocated to entitled lines. = ['across', 'each', 'one']
        code:
          type: string
          description: The discount code that was used to apply the discount.Available only for discount code applications
        description:
          type: string
          description: The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications 
        target_selection:
          type: string
          description: The lines on the order, of the type defined by target_type, that the discount is allocated over = ['all', 'entitled', 'explicit']
        target_type:
          type: string
          description: The type of line on the order that the discount is applicable on = ['line_item', 'shipping_line']
        title:
          type: string
          description: The title of the discount application, as defined by the merchant. Available only for manual discount applications 
        type:
          type: string
          description: "The discount application type.Valid values:manual The discount was manually applied by the merchant (for example, by using an app or creating a draft order).script: The discount was applied by a Shopify Script.discount_code: The discount was applied by a discount code. = ['discount_code', 'manual', 'script']"
        value:
          type: string
          description: The value of the discount application as a decimal. This represents the intention of the discount application
        value_type:
          type: string
          description: The type of the value = ['percentage', 'fixed_amount']
      description: "Stacked discount application"
    DiscountCode:
      type: object
      properties:
        amount:
          type: string
          description: The value of the discount deducted from the order total. The type field determines how this value is calculated 
        code:
          type: string
          description: The discount code 
        type:
          type: string
          description: "The type of discount. Can be one of: percentage, shipping, fixed_amount (default) = ['fixed_amount', 'percentage', 'shipping']"
      description: Discounts applied to the order
    OrderFulfillmentsList:
      type: object
      properties:
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          description: A list of order fulfillments
      description: A list of order fulfillments
    CreateOrderFulfillment:
      type: object
      properties: 
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
      description: The Order fulfillment object to be created.
    OrderFulfillmentObject:
      type: object
      properties: 
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
      description: The Order fulfillment object.
    Fulfillment:
      type: object
      properties:
        created_at:
          type: string
          description: The date and time when the fulfillment was created. The API returns this value in ISO 8601 format
        id:
          type: integer
          description: The ID for the fulfillment.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: A historical record of each item in the fulfillment.
        location_id:
          type: integer
          description: The unique identifier of the location that the fulfillment should be processed for. To find the ID of the location, use the Location resource.
        name:
          type: string
          description: "The uniquely identifying fulfillment name, consisting of two parts separated by a .. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. #1001.1, #1001.2)."
        notify_customer:
          type: string
          description: Whether the customer should be notified. If set to true, then an email will be sent when the fulfillment is created or updated. For orders that were initially created using the API, the default value is false. For all other orders, the default value is true.
        order_id:
          type: integer
          description: The unique numeric identifier for the order.
        origin_address:
          $ref: '#/components/schemas/Address'
        receipt:
          $ref: '#/components/schemas/Receipt'
        service:
          type: string
          description: The type of service used.
        shipment_status:
          type: string
          description: The current shipment status of the fulfillment.
        status:
          type: string
          description: The status of the fulfillment. 
        tracking_company:
          type: string
          description: The name of the tracking company. 
        tracking_numbers:
          type: array
          items:
            type: string
          description: A list of tracking numbers, provided by the shipping company. 
        tracking_urls:
          type: array
          items:
            type: string
          description: The URLs of tracking pages for the fulfillment.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the fulfillment was last modified.
        variant_inventory_management:
          type: string
          description: The name of the inventory management service.
      description: You can use the Fulfillment resource to view, create, modify, or delete an order's or fulfillment order's fulfillments. A fulfillment order represents a group of one or more items in an order that are to be fulfilled from the same location. A fulfillment represents work that is completed as part of a fulfillment order and can include one or more items. You can use the Fulfillment resource to manage fulfillments for both orders and fulfillment orders.
    LineItem:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the line item within the fulfillment.
        variant_id:
          type: integer
          description: The ID of the product variant being fulfilled.
        title:
          type: string
          description: The title of the product.
        quantity:
          type: integer
          description: The number of items in the fulfillment.
        price:
          type: string
          description: The price of the item.
        grams:
          type: integer
          description: The weight of the item in grams.
        sku:
          type: string
          description: The unique identifier of the item in the fulfillment.
        variant_title:
          type: string
          description: The title of the product variant being fulfilled.
        vendor:
          type: string
          description: The name of the supplier of the item.
        fulfillment_service:
          type: string
          description: The service provider who is doing the fulfillment. 
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment.
        requires_shipping:
          type: boolean
          description: Whether a customer needs to provide a shipping address when placing an order for this product variant.
        taxable:
          type: boolean
          description: Whether the line item is taxable.
        gift_card:
          type: boolean
          description: Whether the line item is a gift card
        name:
          type: string
          description: The name of the product variant.
        variant_inventory_management:
          type: string
          description: The name of the inventory management system.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          description: Any additional properties associated with the line item.
        product_exists:
          type: boolean
          description: Whether the product exists.
        fulfillable_quantity:
          type: integer
          description: The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. 
        total_discount:
          type: string
          description: The total of any discounts applied to the line item.
        fulfillment_status:
          type: string
          description: The status of an order in terms of the line items being fulfilled. Valid values are fulfilled, null, or partial
        fulfillment_line_item_id:
          type: integer
          description: A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items.
        tax_lines:
          type: string
          description: The title, price, and rate of any taxes applied to the line item.
      description: "A historical record of each item in the fulfillment."
    Line_item:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the line item within the fulfillment.
        variant_id:
          type: integer
          description: The ID of the product variant being fulfilled.
        title:
          type: string
          description: The title of the product.
        quantity:
          type: integer
          description: The number of items in the fulfillment.
        price:
          type: string
          description: The price of the item.
        price_set:
          $ref: '#/components/schemas/PriceSet'
        grams:
          type: integer
          description: The weight of the item in grams.
        sku:
          type: string
          description: The unique identifier of the item in the fulfillment.
        variant_title:
          type: string
          description: The title of the product variant being fulfilled.
        vendor:
          type: string
          description: The name of the supplier of the item.
        fulfillment_service:
          type: string
          description: The service provider who is doing the fulfillment. 
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment.
        requires_shipping:
          type: boolean
          description: Whether a customer needs to provide a shipping address when placing an order for this product variant.
        taxable:
          type: boolean
          description: Whether the line item is taxable.
        gift_card:
          type: boolean
          description: Whether the line item is a gift card
        name:
          type: string
          description: The name of the product variant.
        variant_inventory_management:
          type: string
          description: The name of the inventory management system.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          description: Any additional properties associated with the line item.
        product_exists:
          type: boolean
          description: Whether the product exists.
        fulfillable_quantity:
          type: integer
          description: The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. 
        total_discount:
          type: string
          description: The total of any discounts applied to the line item.
        fulfillment_status:
          type: string
          description: The status of an order in terms of the line items being fulfilled. Valid values are fulfilled, null, or partial
        fulfillment_line_item_id:
          type: integer
          description: A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items.
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: A list of tax line objects, each of which details a tax applied to the item. 
        tip_payment_gateway:
          type: string
          description: The payment gateway used to tender the tip, such as shopify_payments. Present only on tips
        tip_payment_method:
          type: string
          description: The payment method used to tender the tip, such as Visa. Present only on tips.
        total_discount_set:
          $ref: '#/components/schemas/TotalDiscountSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocations'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. 
        origin_location:
          $ref: '#/components/schemas/Address'
      description: "A historical record of each item in the fulfillment."
    Property:
      type: object
      properties:
        name:
          type: string
          description: "Property name"
        value:
          type: string
          description: "Property value"
      description: Properties
    Receipt:
      type: object
      properties:
        testcase:
          type: boolean
          description: Whether the fulfillment was a testcase.
        authorization:
          type: string
          description: The authorization code. 
      description: A text field that provides information about the receipt
    PriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The price of the line item in shop and presentment currencies.
    TotalDiscountSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total amount allocated to the line item in the presentment currency. Instead of using this field, Shopify recommends using discount_allocations, which provides the same information.
    DiscountAllocations:
      type: object
      properties:
        amount:
          type: string
          description: The discount amount allocated to the line in the shop currency.
        discount_application_index:
          type: integer
          description: The index of the associated discount application in the order's  
        amount_set:
          $ref: '#/components/schemas/AmountSet'
      description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. 
    AmountSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The discount amount allocated to the line item in shop and presentment currencies.
    NoteAttribute:
      type: object
      properties:
        name:
          type: string
          description: Name
        value:
          type: string
          description: Value
      description: Extra information that is added to the order. Appears in the Additional details section of an order details page. Each array entry must contain a hash with name and value keys.
    OriginalTotalDutiesSet:
      type: object
      properties:
        original_total_duties_set:
          $ref: '#/components/schemas/Original_total_duties_set'
      description: The original total duties charged on the order in shop and presentment currencies.
    Original_total_duties_set:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The original total duties charged on the order in shop and presentment currencies.
    PaymentTerms:
      type: object
      properties:
        amount:
          type: integer
          description: The amount that is owed according to the payment terms.
        currency:
          type: string
          description: The presentment currency for the payment.
        payment_terms_name:
          type: string
          description: The name of the selected payment terms template for the order.
        payment_terms_type:
          type: string
          description: The type of selected payment terms template for the order.
        due_in_days:
          type: integer
          description: The number of days between the invoice date and due date that is defined in the selected payment terms template.
        payment_schedules:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSchedule'
          description: An array of schedules associated to the payment terms.
      description: The terms and conditions under which a payment should be processed.
    PaymentSchedule:
      type: object
      properties:
        amount:
          type: integer
          description: The amount that is owed according to the payment terms.
        currency:
          type: string
          description: The presentment currency for the payment.
        issued_at:
          type: string
          description: The date and time when the payment terms were initiated.
        due_at:
          type: string
          description: The date and time when the payment is due. Calculated based on issued_at and due_in_days or a customized fixed date if the type is fixed.
        completed_at:
          type: string
          description: The date and time when the purchase is completed. Returns null initially and updates when the payment is captured.
        expected_payment_method:
          type: string
          description: The name of the payment method gateway.
      description: Schedule associated to the payment terms
    CreateRefund:
      type: object
      properties: 
        refund:
          $ref: '#/components/schemas/RefundRequest'
      description: The Refund object to be created.
    RefundObject:
      type: object
      properties: 
        refund:
          $ref: '#/components/schemas/Refund'
      description: The Refund object.
    Refund:
      type: object
      properties:
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the refund was created.
        id:
          type: integer
          description: The unique identifier for the refund.
        note:
          type: string
          description: An optional note attached to a refund.
        order_adjustments:
          type: array
          items:
            $ref: '#/components/schemas/OrderAdjustment'
          description: A list of order adjustments attached to the refund. Order adjustments are generated to account for refunded shipping costs and differences between calculated and actual refund amounts. 
        processed_at:
          type: string
          description: The date and time (ISO 8601 format) when the refund was imported. This value can be set to a date in the past when importing from other systems. If no value is provided, then it will be auto-generated as the current time in Shopify. Public apps need to be granted permission by Shopify to import orders with the processed_at timestamp set to a value earlier the created_at timestamp. Private apps can't be granted permission by Shopify.
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItem'
          description: A list of refunded line items.
        # transactions:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Transaction'
        #   description: A list of refunded line items.
        user_id:
          type: integer
          description: The unique identifier of the user who performed the refund.
      description: Schedule associated to the payment terms
    RefundRequest:
      type: object
      properties:
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the currency used for the refund.
        discrepancy_reason:
          type: string
          description: An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values are restock, damage, customer, and other.
        note:
          type: string
          description: An optional note attached to a refund.
        notify:
          type: boolean
          description: Whether to send a refund notification to the customer.
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/Refund_Line_Item_Object'
          description: A list of line item IDs, quantities to refund, and restock instructions.
        shipping:
          $ref: '#/components/schemas/Shipping'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: A list of transactions to process as refunds.
      description: Schedule associated to the payment terms
    OrderAdjustment:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the order adjustment.
        order_id:
          type: integer
          description: The unique identifier for the order that the order adjustment is associated with.
        refund_id:
          type: integer
          description: The unique identifier for the refund that the order adjustment is associated with.
        amount:
          oneOf:
            - type: integer
            - type: string
          description: The value of the discrepancy between the calculated refund and the actual refund. If the kind property's value is shipping_refund, then amount returns the value of shipping charges refunded to the customer.
        tax_amount:
          type: string
          description: The taxes that are added to amount, such as applicable shipping taxes added to a shipping refund.
        kind:
          type: string
          description: The order adjustment type. Valid values are shipping_refund and refund_discrepancy.
        reason:
          type: string
          description: The reason for the order adjustment. To set this value, include discrepancy_reason when you create a refund.
      description: Order adjustment attached to the refund.
    RefundLineItem:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the line item in the refund.
        # line_item:
        #   $ref: '#/components/schemas/LineItem'
        line_item_id:
          type: integer
          description: The ID of the related line item in the order.
        quantity:
          type: integer
          description: The quantity of the associated line item that was returned.
        restock_type:
          type: string
          description: How this refund line item affects inventory levels.
        location_id:
          type: integer
          description: The unique identifier of the location where the items will be restocked. Required when restock_type has the value return or cancel.
        subtotal:
          type: number
          description: The subtotal of the refund line item.
        total_tax:
          type: number
          description: The total tax on the refund line item.
      description: Refunded line item
    ShippingLine:
      type: object
      properties:
        code:
          type: string
          description: A reference to the shipping method.
        discounted_price:
          type: string
          description: The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts.
        discounted_price_set:
          $ref: '#/components/schemas/DiscountedPriceSet'
        price:
          type: string
          description: The price of this shipping method in the shop currency. Can't be negative.
        price_set:
          $ref: '#/components/schemas/PriceSet'
        source:
          type: string
          description: The source of the shipping method.
        title:
          type: string
          description: The title of the shipping method.
        # tax_lines:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Tax_Line'
        #   description: A list of tax line objects, each of which details a tax applicable to this shipping line.
        carrier_identifier:
          type: string
          description: A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service. 
        requested_fulfillment_service_id:
          type: string
          description: A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; null otherwise. 
      description: An object, which details a shipping method used.
    DiscountedPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied.
    SubtotalPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The subtotal of the order in shop and presentment currencies after discounts but before shipping, duties, taxes, and tips.
    TaxLine:
      type: object
      properties:
        price: 
          type: string
          description: The amount of tax to be charged in the shop currency.
        rate: 
          type: number
          description: The rate of tax to be applied.
        title: 
          type: string
          description: The name of the tax.
        channel_liable: 
          type: boolean
          description: Whether the channel that submitted the tax line is liable for remitting. A value of null indicates unknown liability for the tax line.
      description: Tax line object, which details a tax applicable to the order.
    TotalDiscountsSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total discounts applied to the price of the order in shop and presentment currencies.
    TotalLineItemsPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total of all line item prices in shop and presentment currencies.
    TotalPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total price of the order in shop and presentment currencies.
    TotalShippingPriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total shipping price of the order, excluding discounts and returns, in shop and presentment currencies. If taxes_included is set to true, then total_shipping_price_set includes taxes.
    TotalTaxSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      description: The total tax applied to the order in shop and presentment currencies.
    CreateOrder:
      type: object
      properties: 
        order:
          $ref: '#/components/schemas/Order'
      description: The Order object to be created.
    OrderObject:
      type: object
      properties: 
        order:
          $ref: '#/components/schemas/Order'
    UpdateOrder:
      type: object
      properties: 
        order:
          $ref: '#/components/schemas/Order'
      description: The Order object to be updated.
    CreateDraftOrder:
      type: object
      properties: 
        draft_order:
          $ref: '#/components/schemas/DraftOrder'
      description: The Draft order object to be created.
    DraftOrderObject:
      type: object
      properties: 
        draft_order:
          $ref: '#/components/schemas/DraftOrder'
      description: The Draft order object.
    DraftOrder:
      type: object 
      properties:
        id:
          type: integer
          description: The ID of the draft order.
        order_id:
          $ref: '#/components/schemas/DraftOrderID'
        name:
          type: string
          description: Name of the draft order.
        customer:
          $ref: '#/components/schemas/Customer'  
        shipping_address:
          $ref: '#/components/schemas/CustomerAddress'
        billing_address:
          $ref: '#/components/schemas/CustomerAddress'
        note:
          type: string
          description: The text of an optional note that a shop owner can attach to the draft order.
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: Extra information that is added to the order. Appears in the Additional details section of an order details page. Each array entry must contain a hash with name and value keys.
        email:
          type: string
          description: The customer's email address.
        currency:
          type: string
          description: The three letter code (ISO 4217 format) for the currency used for the payment.
        invoice_sent_at:
          type: string
          description: The date and time (ISO 8601 format) when the invoice was emailed to the customer.
        invoice_url:
          type: string
          description: The URL for the invoice.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/Line_item' 
          description: Product variant line item or custom line item associated to the draft order. Each draft order must include at least one line_item.
        payment_terms:
          $ref: '#/components/schemas/PaymentTerms'
        shipping_line:
          $ref: '#/components/schemas/DraftOrderShippingLine'
        tags:
          type: string
          description: A comma-seperated list of additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length. For example, tags are "tag1","tag2","tag3".
        tax_exempt:
          type: boolean
          description: Whether taxes are exempt for the draft order. If set to false, then Shopify refers to the taxable field for each line_item. If a customer is applied to the draft order, then Shopify uses the customer's tax_exempt field instead.
        tax_exemptions:
          type: array
          items:
            type: string
          description: Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only.
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: An array of tax line objects, each of which details a tax applicable to the order. When creating an order through the API, tax lines can be specified on the order or the line items but not both. Tax lines specified on the order are split across the taxable line items in the created order.
        applied_discount:
          $ref: '#/components/schemas/AppliedDiscount'
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal. Valid values are true or false.
        total_tax:
          type: string
          description: The sum of all the taxes applied to the order.
        subtotal_price:
          type: string
          description: The price of the order before shipping and taxes.
        total_price:
          type: string
          description: The sum of all the prices of all the items in the order, taxes and discounts included.
        completed_at:
          type: string
          description: The date and time (ISO 8601 format) when the order is created and the draft order is completed.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the order was created in Shopify.
        updated_at:
          type: string
          description: The date and time (ISO 8601 format) when the order was last modified.
        status:
          type: string
          description: The status of a draft order as it transitions into an order. When a draft order is created it is set to open status. The invoice can then be sent to the customer, and status changes to invoice_sent. The draft order can then be paid, set to pending, or paid by credit card. In each case, the draft order is set to completed and an order is created. After a draft order is set to completed the only further modifications that can be made are adding tags or metafields.
      description: An order is a customer's request to purchase one or more products from a shop. You can create, retrieve, update, and delete orders using the Order resource.
    DraftOrderID:
      type: object 
      properties:
        id:
          type: integer
          description: The ID of the order that 's created and associated with the draft order after the draft order is completed.
      description: The ID of the order that 's created and associated with the draft order after the draft order is completed.
    DraftOrderShippingLine:
      type: object
      properties:
        # custom:
        #   type: string
        #   description: Whether this is a regular shipping line or custom shipping line.
        handle:
          type: string
          description: The handle of the shipping rate which was selected and applied. Required for regular shipping lines.
        title:
          type: string
          description: The title of the shipping method. Required for custom shipping lines. (maximum 255 characters)
        price:
          type: number
          description: The price of the shipping method. Required for custom shipping lines.
      description: A shipping_line object, which details the shipping method used.
    AppliedDiscount:
      type: object
      properties:
        title:
          type: string
          description: Title of the discount.
        description:
          type: string
          description: Reason for the discount.
        value:
          type: string
          description: The value of the discount. If the type of discount is fixed_amount, then it corresponds to a fixed dollar amount. If the type is percentage, then it corresponds to percentage.
        value_type:
          type: string
          description: The type of discount. Valid values are percentage, fixed_amount.
        amount:
          type: string
          description: The applied amount of the discount, based on the setting of value_type. For more information, see Applying discounts.
      description: The discount applied to the line item or the draft order object. Each draft order object can have one applied_discount object and each draft order line item can have its own applied_discount.
    CreateTransaction:
      type: object
      properties: 
        transaction:
          $ref: '#/components/schemas/Transaction'
      description: The Transaction object to be created.
    TransactionObject:
      type: object
      properties: 
        transaction:
          $ref: '#/components/schemas/Transaction'
      description: The Transaction object.
    Transaction:
      type: object
      properties:
        amount:
          type: string
          description: The amount of money included in the transaction. If you don't provide a value for `amount`, then it defaults to the total cost of the order (even if a previous transaction has been made towards it).
        authorization:
          type: string
          description: The authorization code associated with the transaction.
        authorization_expires_at:
          type: string
          description: The date and time (ISO 8601 format) when the Shopify Payments authorization expires.
        created_at:
          type: string
          description: The date and time (ISO 8601 format) when the transaction was created.
        currency:
          type: string
          description: The three-letter code (ISO 4217 format) for the currency used for the payment.
        device_id:
          type: integer
          description: The ID for the device.
        error_code:
          type: string
          description: A standardized error code, independent of the payment provider. 
        extended_authorization_attributes:
          $ref: '#/components/schemas/ExtendedAuthorizationAttributes'
        gateway:
          type: string
          description: The name of the gateway the transaction was issued through. A list of gateways can be found on Shopify's payment gateways page.
        id:
          type: integer
          description: The ID for the transaction.
        kind:
          type: string
          description: The transaction's type. 
        location_id:
          $ref: '#/components/schemas/LocationID'
        message:
          type: string
          description: A string generated by the payment provider with additional information about why the transaction succeeded or failed.
        order_id:
          type: integer
          description: The ID for the order that the transaction is associated with.
        payment_details:
          $ref: '#/components/schemas/PaymentDetails'
        parent_id:
          type: integer
          description: The ID of an associated transaction. 
        payments_refund_attributes:
          $ref: '#/components/schemas/PaymentsRefundAttributes'
        processed_at:
          type: string
          description: The date and time (ISO 8601 format) when a transaction was processed. This value is the date that's used in the analytic reports. By default, it matches the created_at value. If you're importing transactions from an app or another platform, then you can set processed_at to a date and time in the past to match when the original transaction was processed.
        # receipt:
        #   $ref: '#/components/schemas/Receipt'
        source_name:
          type: string
          description: The origin of the transaction. This is set by Shopify and can't be overridden. Example values are web, pos, iphone, and android.
        status:
          type: string
          description: The status of the transaction. Valid values are pending, failure, success, and error.
        test:
          type: boolean
          description: Whether the transaction is a test transaction.
        user_id:
          type: integer
          description: The ID for the user who was logged into the Shopify POS device when the order was processed, if applicable.
        currency_exchange_adjustment:
          $ref: '#/components/schemas/CurrencyExchangeAdjustment'    
      description: "Transactions are created for every order that results in an exchange of money. There are five types of transactions. (Authorization: An amount reserved against the cardholder's funding source. Money does not change hands until the authorization is captured, Sale: An authorization and capture performed together in a single step, Capture: A transfer of the money that was reserved during the authorization stage, Void: A cancellation of a pending authorization or capture, Refund: A partial or full return of captured funds to the cardholder. A refund can happen only after a capture is processed.)"
    ExtendedAuthorizationAttributes:
      type: object
      properties:
        standard_authorization_expires_at:
          type: string
          description: The date and time (ISO 8601 format) when the standard authorization period expires. After expiry, an extended authorization fee is applied upon capturing the payment.
        extended_authorization_expires_at:
          type: string
          description: The date and time (ISO 8601 format) when the extended authorization period expires. After expiry, the merchant can't capture the payment.
      description: The attributes associated with a Shopify Payments extended authorization period. 
    LocationID:
      type: object 
      properties:
        id:
          type: integer
          description: The ID of the physical location where the transaction was processed.
      description: The ID of the physical location where the transaction was processed.
    PaymentDetails:
      type: object 
      properties:
        credit_card_bin:
          type: string
          description: The issuer identification number (IIN), formerly known as bank identification number (BIN) of the customer's credit card. This is made up of the first few digits of the credit card number.
        avs_result_code:
          type: string
          description: The response code from the address verification system. The code is always a single letter.
        cvv_result_code:
          type: string
          description: The response code from the credit card company indicating whether the customer entered the card security code, or card verification value, correctly. The code is a single letter or empty string.
        credit_card_number:
          type: string
          description: The customer's credit card number, with most of the leading digits redacted.
        credit_card_company:
          type: string
          description: The name of the company that issued the customer's credit card.
      description: Information about the credit card used for this transaction.
    PaymentsRefundAttributes:
      type: object 
      properties:
        status:
          type: string
          description: The current status of the refund. Valid values are pending, failure, success, and error.
        acquirer_reference_number:
          type: string
          description: A unique number associated with the transaction that can be used to track the refund. This property has a value only for transactions completed with Visa or Mastercard.
      description: The attributes associated with a Shopify Payments refund. 
    CurrencyExchangeAdjustment:
      type: object 
      properties:
        ID:
          type: string
          description: The ID of the adjustment.
        adjustment:
          type: string
          description: The difference between the amounts on the associated transaction and the parent transaction.
        original_amount:
          type: string
          description: The amount of the parent transaction in the shop currency.
        final_amount:
          type: string
          description: The amount of the associated transaction in the shop currency.
        currency:
          type: string
          description: The shop currency.
      description: An adjustment on the transaction showing the amount lost or gained due to fluctuations in the currency exchange rate. Requires the header X-Shopify-Api-Features = include-currency-exchange-adjustments.
    Refund_Line_Item_Object:
      type: object
      properties:
        quantity:
          type: integer
          description: The quantity to refund.
        location_id:
          type: integer
          description: The ID of the location where the items should be restocked. This is required when the value of restock_type is return or cancel. If the item is not already stocked at the location, then the item is connected to the location. An error is returned when the item is connected to a fulfillment service location and a different location is provided.
        line_item_id:
          type: integer
          description: The ID of a line item to refund.
        restock_type:
          type: string
          description: How this refund line item affects inventory levels. Valid values are no_restock, cancel, and return.
      description: Line item IDs, quantities to refund, and restock instructions.
    Shipping:
      type: object
      properties:
        amount:
          type: number
          description: Set a specific amount to refund for shipping. Takes precedence over full_refund.
        full_refund:
          type: boolean
          description: Whether to refund all remaining shipping.
      description: Specify how much shipping to refund.
    OrderRiskList:
      type: object
      properties:
        risks:
          type: array
          items:
            $ref: '#/components/schemas/OrderRisk'
          description: A list of order risks
      description: The object representation of a list of order risks
    OrderRisk:
      type: object 
      properties:
        cause_cancel:
          type: boolean
          description: Whether this order risk is severe enough to force the cancellation of the order. If true, then this order risk is included in the Order canceled message that's shown on the details page of the canceled order.
        checkout_id:
          type: integer
          description: The ID of the checkout that the order risk belongs to.
        display:
          type: boolean
          description: Whether the order risk is displayed on the order details page in the Shopify admin. If false, then this order risk is ignored when Shopify determines your app's overall risk level for the order.
        id:
          type: integer
          description: A unique numeric identifier for the order risk.
        merchant_message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if display is set to true.
        message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if display is set to true.
        order_id:
          type: integer
          description: The ID of the order that the order risk belongs to.
        recommendation:
          type: string
          enum:
            - cancel
            - investigate
            - accept
          description: The recommended action given to the merchant. Valid values are, 
            `cancel` - There is a high level of risk that this order is fraudulent. The merchant should cancel the order. 
            `investigate` - There is a medium level of risk that this order is fraudulent. The merchant should investigate the order.
            `accept` - There is a low level of risk that this order is fraudulent. The order risk found no indication of fraud.
        score:
          type: string
          description: A number between 0 and 1 that's assigned to the order. The closer the score is to 1, the more likely it is that the order is fraudulent. 
        source:
          type: string
          description: The source of the order risk.
      description: The order risk for an order.
    OrderRiskObject:
      type: object
      properties: 
        risk:
          $ref: '#/components/schemas/OrderRisk'
      description: The order risk object for an order.
    CreateOrderRisk:
      type: object
      properties: 
        risk:
          $ref: '#/components/schemas/OrderRisk'
      description: The order risk object to be created.
    UpdateOrderRisk:
      type: object
      properties: 
        risk:
          $ref: '#/components/schemas/OrderRisk'
      description: The order risk object to be updated.
    WebhookList:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
          description: A list of webhook subscriptions
      description: The object representation of a list of webhook subscriptions.
    Webhook:
      type: object 
      properties:
        address:
          type: string
          description: Destination URI to which the webhook subscription should send the POST request when an event occurs.
        api_version:
          type: string
          description: The Admin API version that Shopify uses to serialize webhook events. This value is inherited from the app that created the webhook subscription.
        created_at:
          type: string
          description: Date and time when the webhook subscription was created. The API returns this value in ISO 8601 format.
        fields:
          type: array
          items:
            type: string
          description: An optional array of top-level resource fields that should be serialized and sent in the POST request. If absent, all fields will be sent.
        format:
          type: string
          description: Format in which the webhook subscription should send the data. Valid values are JSON and XML. Defaults to JSON.
        id:
          type: integer
          description: Unique numeric identifier for the webhook subscription.
        metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any metafields that should be included with each webhook.
        private_metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any private metafields that should be included with each webhook.
        topic:
          type: string
          description: Event that triggers the webhook. Valid values are app/uninstalled, bulk_operations/finish, carts/create, carts/update, checkouts/create, checkouts/delete, checkouts/update, collection_listings/add, collection_listings/remove, collection_listings/update, collections/create, collections/delete, collections/update, customer_groups/create, customer_groups/delete, customer_groups/update, customer_payment_methods/create, customer_payment_methods/revoke, customer_payment_methods/update, customers/create, customers/delete, customers/disable, customers/enable, customers/update, customers_marketing_consent/update, disputes/create, disputes/update, domains/create, domains/destroy, domains/update, draft_orders/create, draft_orders/delete, draft_orders/update, fulfillment_events/create, fulfillment_events/delete, fulfillments/create, fulfillments/update, inventory_items/create, inventory_items/delete, inventory_items/update, inventory_levels/connect, inventory_levels/disconnect, inventory_levels/update, locales/create, locales/update, locations/create, locations/delete, locations/update, order_transactions/create, orders/cancelled, orders/create, orders/delete, orders/edited, orders/fulfilled, orders/paid, orders/partially_fulfilled, orders/updated, product_listings/add, product_listings/remove, product_listings/update, products/create, products/delete, products/update, profiles/create, profiles/delete, profiles/update, refunds/create, selling_plan_groups/create, selling_plan_groups/delete, selling_plan_groups/update, shop/update, subscription_billing_attempts/challenged, subscription_billing_attempts/failure, subscription_billing_attempts/success, subscription_contracts/create, subscription_contracts/update, tender_transactions/create, themes/create, themes/delete, themes/publish, themes/update 
        updated_at:
          type: string
          description: Date and time when the webhook subscription was updated. The API returns this value in ISO 8601 format.
      description: The webhook resource.
    WebhookObject:
      type: object
      properties: 
        webhook:
          $ref: '#/components/schemas/Webhook'
      description: The webhook object.
    CreateWebhook:
      type: object
      properties: 
        webhook:
          $ref: '#/components/schemas/Webhook'
      description: The webhook object to be created.
    UpdateWebhook:
      type: object
      properties: 
        webhook:
          $ref: '#/components/schemas/Webhook'
      description: The webhook object to be updated.
    WebhookCountObject:
      type: object
      properties: 
        count:
          type: integer
          description: Webhook subscription count. 
      description: The webhook subscription count object.

  securitySchemes:
    api_token:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
      description: Represents API Key `X-Shopify-Access-Token`
